{
  "version": 3,
  "sources": ["../../../../node_modules/retry/lib/retry_operation.js", "../../../../node_modules/retry/lib/retry.js", "../../../../node_modules/p-retry/index.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/max.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/nil.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/regex.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/validate.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/parse.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/stringify.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/rng.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v1.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v1ToV6.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v35.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/md5.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v3.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/native.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v4.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/sha1.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v5.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v6.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v6ToV1.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/v7.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/version.js", "../../../../node_modules/@langchain/core/node_modules/uuid/dist/index.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/max.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/nil.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/regex.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/validate.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/parse.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/stringify.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/rng.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v1.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v1ToV6.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v35.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/md5.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v3.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/native.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v4.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/sha1.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v5.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v6.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v6ToV1.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/v7.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/version.js", "../../../../node_modules/langsmith/node_modules/uuid/dist/index.js", "../../../../node_modules/eventemitter3/index.js", "../../../../node_modules/p-finally/index.js", "../../../../node_modules/p-timeout/index.js", "../../../../node_modules/p-queue/dist/lower-bound.js", "../../../../node_modules/p-queue/dist/priority-queue.js", "../../../../node_modules/p-queue/dist/index.js", "../../../../node_modules/semver/internal/constants.js", "../../../../node_modules/semver/internal/debug.js", "../../../../node_modules/semver/internal/re.js", "../../../../node_modules/semver/internal/parse-options.js", "../../../../node_modules/semver/internal/identifiers.js", "../../../../node_modules/semver/classes/semver.js", "../../../../node_modules/semver/functions/parse.js", "../../../../node_modules/semver/functions/valid.js", "../../../../node_modules/semver/functions/clean.js", "../../../../node_modules/semver/functions/inc.js", "../../../../node_modules/semver/functions/diff.js", "../../../../node_modules/semver/functions/major.js", "../../../../node_modules/semver/functions/minor.js", "../../../../node_modules/semver/functions/patch.js", "../../../../node_modules/semver/functions/prerelease.js", "../../../../node_modules/semver/functions/compare.js", "../../../../node_modules/semver/functions/rcompare.js", "../../../../node_modules/semver/functions/compare-loose.js", "../../../../node_modules/semver/functions/compare-build.js", "../../../../node_modules/semver/functions/sort.js", "../../../../node_modules/semver/functions/rsort.js", "../../../../node_modules/semver/functions/gt.js", "../../../../node_modules/semver/functions/lt.js", "../../../../node_modules/semver/functions/eq.js", "../../../../node_modules/semver/functions/neq.js", "../../../../node_modules/semver/functions/gte.js", "../../../../node_modules/semver/functions/lte.js", "../../../../node_modules/semver/functions/cmp.js", "../../../../node_modules/semver/functions/coerce.js", "../../../../node_modules/semver/internal/lrucache.js", "../../../../node_modules/semver/classes/range.js", "../../../../node_modules/semver/classes/comparator.js", "../../../../node_modules/semver/functions/satisfies.js", "../../../../node_modules/semver/ranges/to-comparators.js", "../../../../node_modules/semver/ranges/max-satisfying.js", "../../../../node_modules/semver/ranges/min-satisfying.js", "../../../../node_modules/semver/ranges/min-version.js", "../../../../node_modules/semver/ranges/valid.js", "../../../../node_modules/semver/ranges/outside.js", "../../../../node_modules/semver/ranges/gtr.js", "../../../../node_modules/semver/ranges/ltr.js", "../../../../node_modules/semver/ranges/intersects.js", "../../../../node_modules/semver/ranges/simplify.js", "../../../../node_modules/semver/ranges/subset.js", "../../../../node_modules/semver/index.js", "../../../../node_modules/decamelize/index.js", "../../../../node_modules/camelcase/index.js", "../../../../node_modules/@langchain/core/node_modules/ansi-styles/index.js", "../../../../node_modules/base64-js/index.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/utils.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/exception.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers/each.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers/if.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers/log.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers/with.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/helpers.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/decorators.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/logger.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/base.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/safe-string.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/runtime.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/no-conflict.js", "../../../../node_modules/handlebars/dist/cjs/handlebars.runtime.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/base.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/base64.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/base64-vlq.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/util.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/array-set.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/mapping-list.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/source-map-generator.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/binary-search.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/quick-sort.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/source-map-consumer.js", "../../../../node_modules/handlebars/node_modules/source-map/lib/source-node.js", "../../../../node_modules/handlebars/node_modules/source-map/source-map.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js", "../../../../node_modules/handlebars/dist/cjs/handlebars.js", "../../../../node_modules/handlebars/dist/cjs/handlebars/compiler/printer.js", "../../../../node_modules/handlebars/lib/index.js", "../../../../node_modules/unique-names-generator/dist/index.js", "../../../../node_modules/picocolors/picocolors.js", "../../../../node_modules/randombytes/index.js", "../../../../node_modules/create-hash/index.js", "../../../../node_modules/create-hmac/index.js", "../../../../node_modules/pbkdf2/lib/precondition.js", "../../../../node_modules/pbkdf2/lib/default-encoding.js", "../../../../node_modules/safe-buffer/index.js", "../../../../node_modules/isarray/index.js", "../../../../node_modules/es-errors/type.js", "../../../../node_modules/es-object-atoms/index.js", "../../../../node_modules/es-errors/index.js", "../../../../node_modules/es-errors/eval.js", "../../../../node_modules/es-errors/range.js", "../../../../node_modules/es-errors/ref.js", "../../../../node_modules/es-errors/syntax.js", "../../../../node_modules/es-errors/uri.js", "../../../../node_modules/math-intrinsics/abs.js", "../../../../node_modules/math-intrinsics/floor.js", "../../../../node_modules/math-intrinsics/max.js", "../../../../node_modules/math-intrinsics/min.js", "../../../../node_modules/math-intrinsics/pow.js", "../../../../node_modules/math-intrinsics/round.js", "../../../../node_modules/math-intrinsics/isNaN.js", "../../../../node_modules/math-intrinsics/sign.js", "../../../../node_modules/gopd/gOPD.js", "../../../../node_modules/gopd/index.js", "../../../../node_modules/es-define-property/index.js", "../../../../node_modules/has-symbols/shams.js", "../../../../node_modules/has-symbols/index.js", "../../../../node_modules/get-proto/Reflect.getPrototypeOf.js", "../../../../node_modules/get-proto/Object.getPrototypeOf.js", "../../../../node_modules/function-bind/implementation.js", "../../../../node_modules/function-bind/index.js", "../../../../node_modules/call-bind-apply-helpers/functionCall.js", "../../../../node_modules/call-bind-apply-helpers/functionApply.js", "../../../../node_modules/call-bind-apply-helpers/reflectApply.js", "../../../../node_modules/call-bind-apply-helpers/actualApply.js", "../../../../node_modules/call-bind-apply-helpers/index.js", "../../../../node_modules/dunder-proto/get.js", "../../../../node_modules/get-proto/index.js", "../../../../node_modules/hasown/index.js", "../../../../node_modules/get-intrinsic/index.js", "../../../../node_modules/call-bound/index.js", "../../../../node_modules/is-callable/index.js", "../../../../node_modules/for-each/index.js", "../../../../node_modules/possible-typed-array-names/index.js", "../../../../node_modules/available-typed-arrays/index.js", "../../../../node_modules/define-data-property/index.js", "../../../../node_modules/has-property-descriptors/index.js", "../../../../node_modules/set-function-length/index.js", "../../../../node_modules/call-bind-apply-helpers/applyBind.js", "../../../../node_modules/call-bind/index.js", "../../../../node_modules/has-tostringtag/shams.js", "../../../../node_modules/which-typed-array/index.js", "../../../../node_modules/is-typed-array/index.js", "../../../../node_modules/typed-array-buffer/index.js", "../../../../node_modules/to-buffer/index.js", "../../../../node_modules/pbkdf2/lib/to-buffer.js", "../../../../node_modules/pbkdf2/lib/sync.js", "../../../../node_modules/pbkdf2/lib/async.js", "../../../../node_modules/pbkdf2/index.js", "../../../../node_modules/browserify-cipher/index.js", "../../../../node_modules/diffie-hellman/index.js", "../../../../node_modules/browserify-sign/index.js", "../../../../node_modules/bn.js/lib/bn.js", "../../../../node_modules/minimalistic-assert/index.js", "../../../../node_modules/minimalistic-crypto-utils/lib/utils.js", "../../../../node_modules/elliptic/lib/elliptic/utils.js", "../../../../node_modules/brorand/index.js", "../../../../node_modules/elliptic/lib/elliptic/curve/base.js", "../../../../node_modules/inherits/inherits_browser.js", "../../../../node_modules/inherits/inherits.js", "../../../../node_modules/elliptic/lib/elliptic/curve/short.js", "../../../../node_modules/elliptic/lib/elliptic/curve/mont.js", "../../../../node_modules/elliptic/lib/elliptic/curve/edwards.js", "../../../../node_modules/elliptic/lib/elliptic/curve/index.js", "../../../../node_modules/hash.js/lib/hash/utils.js", "../../../../node_modules/hash.js/lib/hash/common.js", "../../../../node_modules/hash.js/lib/hash/sha/common.js", "../../../../node_modules/hash.js/lib/hash/sha/1.js", "../../../../node_modules/hash.js/lib/hash/sha/256.js", "../../../../node_modules/hash.js/lib/hash/sha/224.js", "../../../../node_modules/hash.js/lib/hash/sha/512.js", "../../../../node_modules/hash.js/lib/hash/sha/384.js", "../../../../node_modules/hash.js/lib/hash/sha.js", "../../../../node_modules/hash.js/lib/hash/ripemd.js", "../../../../node_modules/hash.js/lib/hash/hmac.js", "../../../../node_modules/hash.js/lib/hash.js", "../../../../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js", "../../../../node_modules/elliptic/lib/elliptic/curves.js", "../../../../node_modules/hmac-drbg/lib/hmac-drbg.js", "../../../../node_modules/elliptic/lib/elliptic/ec/key.js", "../../../../node_modules/elliptic/lib/elliptic/ec/signature.js", "../../../../node_modules/elliptic/lib/elliptic/ec/index.js", "../../../../node_modules/elliptic/lib/elliptic/eddsa/key.js", "../../../../node_modules/elliptic/lib/elliptic/eddsa/signature.js", "../../../../node_modules/elliptic/lib/elliptic/eddsa/index.js", "../../../../node_modules/elliptic/lib/elliptic.js", "../../../../node_modules/create-ecdh/browser.js", "../../../../node_modules/create-ecdh/index.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/api.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/reporter.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/buffer.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/node.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/index.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/constants/der.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/constants/index.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/decoders/der.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/decoders/pem.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/decoders/index.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/encoders/der.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/encoders/pem.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/encoders/index.js", "../../../../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1.js", "../../../../node_modules/parse-asn1/certificate.js", "../../../../node_modules/parse-asn1/asn1.js", "../../../../node_modules/hash-base/index.js", "../../../../node_modules/md5.js/index.js", "../../../../node_modules/evp_bytestokey/index.js", "../../../../node_modules/browserify-aes/index.js", "../../../../node_modules/parse-asn1/fixProc.js", "../../../../node_modules/parse-asn1/index.js", "../../../../node_modules/public-encrypt/mgf.js", "../../../../node_modules/public-encrypt/xor.js", "../../../../node_modules/public-encrypt/withPublic.js", "../../../../node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js", "../../../../node_modules/browserify-rsa/index.js", "../../../../node_modules/public-encrypt/publicEncrypt.js", "../../../../node_modules/public-encrypt/privateDecrypt.js", "../../../../node_modules/public-encrypt/browser.js", "../../../../node_modules/public-encrypt/index.js", "../../../../node_modules/randomfill/browser.js", "../../../../node_modules/randomfill/index.js", "../../../../node_modules/crypto-browserify/index.js", "../../src/types/primitives.ts", "../../src/types/memory.ts", "../../src/types/knowledge.ts", "../../src/types/environment.ts", "../../src/types/agent.ts", "../../src/types/components.ts", "../../src/types/service.ts", "../../src/types/model.ts", "../../src/types/database.ts", "../../src/types/events.ts", "../../src/types/tee.ts", "../../src/types/token.ts", "../../src/types/messaging.ts", "../../src/types/wallet.ts", "../../src/types/lp.ts", "../../src/types/pdf.ts", "../../src/types/video.ts", "../../src/types/browser.ts", "../../src/types/transcription.ts", "../../src/types/web-search.ts", "../../src/types/email.ts", "../../src/types/message.ts", "../../src/types/post.ts", "../../../../node_modules/@langchain/core/dist/documents/document.js", "../../../../node_modules/@langchain/core/dist/runnables/base.js", "../../../../node_modules/@langchain/core/node_modules/uuid/wrapper.mjs", "../../../../node_modules/langsmith/dist/singletons/traceable.js", "../../../../node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js", "../../../../node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js", "../../../../node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js", "../../../../node_modules/@langchain/core/dist/utils/fast-json-patch/index.js", "../../../../node_modules/langsmith/node_modules/uuid/wrapper.mjs", "../../../../node_modules/langsmith/dist/experimental/otel/constants.js", "../../../../node_modules/langsmith/dist/singletons/fetch.js", "../../../../node_modules/langsmith/dist/utils/project.js", "../../../../node_modules/langsmith/dist/index.js", "../../../../node_modules/langsmith/dist/utils/env.js", "../../../../node_modules/langsmith/dist/singletons/otel.js", "../../../../node_modules/langsmith/dist/experimental/otel/translator.js", "../../../../node_modules/langsmith/dist/utils/async_caller.js", "../../../../node_modules/langsmith/dist/utils/messages.js", "../../../../node_modules/langsmith/dist/utils/_uuid.js", "../../../../node_modules/langsmith/dist/utils/warn.js", "../../../../node_modules/langsmith/dist/utils/prompts.js", "../../../../node_modules/langsmith/dist/utils/error.js", "../../../../node_modules/langsmith/dist/utils/fast-safe-stringify/index.js", "../../../../node_modules/langsmith/dist/client.js", "../../../../node_modules/langsmith/dist/env.js", "../../../../node_modules/langsmith/dist/singletons/constants.js", "../../../../node_modules/langsmith/dist/run_trees.js", "../../../../node_modules/@langchain/core/dist/load/map_keys.js", "../../../../node_modules/@langchain/core/dist/load/serializable.js", "../../../../node_modules/@langchain/core/dist/utils/env.js", "../../../../node_modules/@langchain/core/dist/callbacks/base.js", "../../../../node_modules/@langchain/core/dist/tracers/base.js", "../../../../node_modules/@langchain/core/dist/tracers/console.js", "../../../../node_modules/@langchain/core/dist/tools/utils.js", "../../../../node_modules/@langchain/core/dist/utils/json.js", "../../../../node_modules/@langchain/core/dist/messages/content_blocks.js", "../../../../node_modules/@langchain/core/dist/messages/base.js", "../../../../node_modules/@langchain/core/dist/messages/ai.js", "../../../../node_modules/@langchain/core/dist/messages/utils.js", "../../../../node_modules/@langchain/core/dist/singletons/tracer.js", "../../../../node_modules/@langchain/core/dist/tracers/tracer_langchain.js", "../../../../node_modules/@langchain/core/dist/singletons/callbacks.js", "../../../../node_modules/@langchain/core/dist/singletons/async_local_storage/globals.js", "../../../../node_modules/@langchain/core/dist/utils/callbacks.js", "../../../../node_modules/@langchain/core/dist/singletons/async_local_storage/context.js", "../../../../node_modules/@langchain/core/dist/callbacks/manager.js", "../../../../node_modules/@langchain/core/dist/singletons/async_local_storage/index.js", "../../../../node_modules/@langchain/core/dist/runnables/config.js", "../../../../node_modules/@langchain/core/dist/utils/signal.js", "../../../../node_modules/@langchain/core/dist/utils/stream.js", "../../../../node_modules/@langchain/core/dist/tracers/log_stream.js", "../../../../node_modules/@langchain/core/dist/outputs.js", "../../../../node_modules/@langchain/core/dist/tracers/event_stream.js", "../../../../node_modules/@langchain/core/dist/utils/async_caller.js", "../../../../node_modules/@langchain/core/dist/tracers/root_listener.js", "../../../../node_modules/@langchain/core/dist/runnables/utils.js", "../../../../node_modules/@langchain/core/dist/runnables/graph_mermaid.js", "../../../../node_modules/@langchain/core/dist/utils/json_schema.js", "../../../../node_modules/zod-to-json-schema/dist/esm/Options.js", "../../../../node_modules/zod-to-json-schema/dist/esm/Refs.js", "../../../../node_modules/zod-to-json-schema/dist/esm/errorMessages.js", "../../../../node_modules/zod-to-json-schema/dist/esm/getRelativePath.js", "../../../../node_modules/zod-to-json-schema/dist/esm/selectParser.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/any.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/array.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/branded.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/catch.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/date.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/default.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/effects.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/enum.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/literal.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/record.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/string.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/map.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/never.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/null.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/union.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/number.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/object.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/optional.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/promise.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/set.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js", "../../../../node_modules/zod-to-json-schema/dist/esm/parseDef.js", "../../../../node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js", "../../../../node_modules/@langchain/core/dist/utils/types/zod.js", "../../../../node_modules/@langchain/core/dist/runnables/graph.js", "../../../../node_modules/@langchain/core/dist/runnables/wrappers.js", "../../../../node_modules/@langchain/core/dist/runnables/iter.js", "../../../../node_modules/@langchain/core/dist/documents/transformers.js", "../../../../node_modules/js-tiktoken/dist/chunk-VL2OQCWN.js", "../../../../node_modules/@langchain/textsplitters/dist/text_splitter.js", "../../src/utils.ts", "../../src/utils/environment.ts", "../../../../node_modules/adze/dist/tools.js", "../../../../node_modules/adze/dist/adze-global.js", "../../../../node_modules/adze/dist/functions/global.js", "../../../../node_modules/adze/dist/functions/type-guards.js", "../../../../node_modules/adze/dist/functions/data.js", "../../../../node_modules/adze/dist/functions/picocolors-loader.js", "../../../../node_modules/adze/dist/functions/util.js", "../../../../node_modules/adze/dist/functions/filters.js", "../../../../node_modules/adze/dist/functions/formatters.js", "../../../../node_modules/adze/node_modules/@ungap/structured-clone/esm/types.js", "../../../../node_modules/adze/node_modules/@ungap/structured-clone/esm/deserialize.js", "../../../../node_modules/adze/node_modules/@ungap/structured-clone/esm/serialize.js", "../../../../node_modules/adze/node_modules/@ungap/structured-clone/esm/index.js", "../../../../node_modules/adze/dist/functions/seal.js", "../../../../node_modules/adze/dist/functions/time.js", "../../../../node_modules/adze/dist/formatters/formatter.js", "../../../../node_modules/adze/dist/formatters/common/common.js", "../../../../node_modules/adze/dist/formatters/common/index.js", "../../../../node_modules/adze/dist/formatters/json/type-guards.js", "../../../../node_modules/adze/dist/formatters/json/json.js", "../../../../node_modules/adze/dist/formatters/json/index.js", "../../../../node_modules/adze/dist/formatters/pretty/pretty.js", "../../../../node_modules/adze/dist/formatters/pretty/index.js", "../../../../node_modules/adze/dist/formatters/standard/standard.js", "../../../../node_modules/adze/dist/constants.js", "../../../../node_modules/adze/dist/configuration.js", "../../../../node_modules/adze/dist/log.js", "../../../../node_modules/adze/dist/middleware.js", "../../../../node_modules/adze/dist/_types/styles.js", "../../../../node_modules/adze/dist/index.js", "../../src/logger.ts", "../../src/schemas/character.ts", "../../src/utils/buffer.ts", "../../src/utils/server-health.ts", "../../src/utils/paths.ts", "../../src/actions.ts", "../../src/database.ts", "../../src/prompts.ts", "../../src/roles.ts", "../../../../node_modules/uuid/dist/esm/stringify.js", "../../../../node_modules/uuid/dist/esm/rng.js", "../../../../node_modules/uuid/dist/esm/native.js", "../../../../node_modules/uuid/dist/esm/v4.js", "../../src/search.ts", "../../src/runtime.ts", "../../src/settings.ts", "../../src/services.ts", "../../src/entities.ts", "../../src/index.node.ts"],
  "sourcesContent": [
    "function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n",
    "var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n",
    "'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = 'ffffffff-ffff-ffff-ffff-ffffffffffff';",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = '00000000-0000-0000-0000-000000000000';",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\nvar _default = exports.default = validate;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  let v;\n  const arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nvar _default = exports.default = parse;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nvar _default = exports.default = stringify;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _nodeCrypto.default.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\nlet _clockseq;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node;\n  let clockseq = options.clockseq;\n\n  // v1 only: Use cached `node` and `clockseq` values\n  if (!options._v6) {\n    if (!node) {\n      node = _nodeId;\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq;\n    }\n  }\n\n  // Handle cases where we need entropy.  We do this lazily to minimize issues\n  // related to insufficient system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    // Randomize node\n    if (node == null) {\n      node = [seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n\n      // v1 only: cache node value for reuse\n      if (!_nodeId && !options._v6) {\n        // per RFC4122 4.5: Set MAC multicast bit (v1 only)\n        node[0] |= 0x01; // Set multicast bit\n\n        _nodeId = node;\n      }\n    }\n\n    // Randomize clockseq\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      if (_clockseq === undefined && !options._v6) {\n        _clockseq = clockseq;\n      }\n    }\n  }\n\n  // v1 & v6 timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so time is\n  // handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v1;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v1ToV6;\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert a v1 UUID to a v6 UUID\n *\n * @param {string|Uint8Array} uuid - The v1 UUID to convert to v6\n * @returns {string|Uint8Array} The v6 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nfunction v1ToV6(uuid) {\n  const v1Bytes = typeof uuid === 'string' ? (0, _parse.default)(uuid) : uuid;\n  const v6Bytes = _v1ToV6(v1Bytes);\n  return typeof uuid === 'string' ? (0, _stringify.unsafeStringify)(v6Bytes) : v6Bytes;\n}\n\n// Do the field transformation needed for v1 -> v6\nfunction _v1ToV6(v1Bytes, randomize = false) {\n  return Uint8Array.of((v1Bytes[6] & 0x0f) << 4 | v1Bytes[7] >> 4 & 0x0f, (v1Bytes[7] & 0x0f) << 4 | (v1Bytes[4] & 0xf0) >> 4, (v1Bytes[4] & 0x0f) << 4 | (v1Bytes[5] & 0xf0) >> 4, (v1Bytes[5] & 0x0f) << 4 | (v1Bytes[0] & 0xf0) >> 4, (v1Bytes[0] & 0x0f) << 4 | (v1Bytes[1] & 0xf0) >> 4, (v1Bytes[1] & 0x0f) << 4 | (v1Bytes[2] & 0xf0) >> 4, 0x60 | v1Bytes[2] & 0x0f, v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\nvar _stringify = require(\"./stringify.js\");\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nconst DNS = exports.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nconst URL = exports.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return (0, _stringify.unsafeStringify)(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return _nodeCrypto.default.createHash('md5').update(bytes).digest();\n}\nvar _default = exports.default = md5;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = exports.default = v3;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar _default = exports.default = {\n  randomUUID: _nodeCrypto.default.randomUUID\n};",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _native = _interopRequireDefault(require(\"./native.js\"));\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || _rng.default)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return (0, _stringify.unsafeStringify)(rnds);\n}\nvar _default = exports.default = v4;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return _nodeCrypto.default.createHash('sha1').update(bytes).digest();\n}\nvar _default = exports.default = sha1;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = exports.default = v5;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v6;\nvar _stringify = require(\"./stringify.js\");\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\nvar _v1ToV = _interopRequireDefault(require(\"./v1ToV6.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n *\n * @param {object} options\n * @param {Uint8Array=} buf\n * @param {number=} offset\n * @returns\n */\nfunction v6(options = {}, buf, offset = 0) {\n  // v6 is v1 with different field layout, so we start with a v1 UUID, albeit\n  // with slightly different behavior around how the clock_seq and node fields\n  // are randomized, which is why we call v1 with _v6: true.\n  let bytes = (0, _v.default)({\n    ...options,\n    _v6: true\n  }, new Uint8Array(16));\n\n  // Reorder the fields to v6 layout.\n  bytes = (0, _v1ToV.default)(bytes);\n\n  // Return as a byte array if requested\n  if (buf) {\n    for (let i = 0; i < 16; i++) {\n      buf[offset + i] = bytes[i];\n    }\n    return buf;\n  }\n  return (0, _stringify.unsafeStringify)(bytes);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v6ToV1;\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert a v6 UUID to a v1 UUID\n *\n * @param {string|Uint8Array} uuid - The v6 UUID to convert to v6\n * @returns {string|Uint8Array} The v1 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nfunction v6ToV1(uuid) {\n  const v6Bytes = typeof uuid === 'string' ? (0, _parse.default)(uuid) : uuid;\n  const v1Bytes = _v6ToV1(v6Bytes);\n  return typeof uuid === 'string' ? (0, _stringify.unsafeStringify)(v1Bytes) : v1Bytes;\n}\n\n// Do the field transformation needed for v6 -> v1\nfunction _v6ToV1(v6Bytes) {\n  return Uint8Array.of((v6Bytes[3] & 0x0f) << 4 | v6Bytes[4] >> 4 & 0x0f, (v6Bytes[4] & 0x0f) << 4 | (v6Bytes[5] & 0xf0) >> 4, (v6Bytes[5] & 0x0f) << 4 | v6Bytes[6] & 0x0f, v6Bytes[7], (v6Bytes[1] & 0x0f) << 4 | (v6Bytes[2] & 0xf0) >> 4, (v6Bytes[2] & 0x0f) << 4 | (v6Bytes[3] & 0xf0) >> 4, 0x10 | (v6Bytes[0] & 0xf0) >> 4, (v6Bytes[0] & 0x0f) << 4 | (v6Bytes[1] & 0xf0) >> 4, v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * UUID V7 - Unix Epoch time-based UUID\n *\n * The IETF has published RFC9562, introducing 3 new UUID versions (6,7,8). This\n * implementation of V7 is based on the accepted, though not yet approved,\n * revisions.\n *\n * RFC 9562:https://www.rfc-editor.org/rfc/rfc9562.html Universally Unique\n * IDentifiers (UUIDs)\n\n *\n * Sample V7 value:\n * https://www.rfc-editor.org/rfc/rfc9562.html#name-example-of-a-uuidv7-value\n *\n * Monotonic Bit Layout: RFC rfc9562.6.2 Method 1, Dedicated Counter Bits ref:\n *     https://www.rfc-editor.org/rfc/rfc9562.html#section-6.2-5.1\n *\n *   0                   1                   2                   3 0 1 2 3 4 5 6\n *   7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                          unix_ts_ms                           |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |          unix_ts_ms           |  ver  |        seq_hi         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |var|               seq_low               |        rand         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                             rand                              |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *\n * seq is a 31 bit serialized counter; comprised of 12 bit seq_hi and 19 bit\n * seq_low, and randomly initialized upon timestamp change. 31 bit counter size\n * was selected as any bitwise operations in node are done as _signed_ 32 bit\n * ints. we exclude the sign bit.\n */\n\nlet _seqLow = null;\nlet _seqHigh = null;\nlet _msecs = 0;\nfunction v7(options, buf, offset) {\n  options = options || {};\n\n  // initialize buffer and pointer\n  let i = buf && offset || 0;\n  const b = buf || new Uint8Array(16);\n\n  // rnds is Uint8Array(16) filled with random bytes\n  const rnds = options.random || (options.rng || _rng.default)();\n\n  // milliseconds since unix epoch, 1970-01-01 00:00\n  const msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // seq is user provided 31 bit counter\n  let seq = options.seq !== undefined ? options.seq : null;\n\n  // initialize local seq high/low parts\n  let seqHigh = _seqHigh;\n  let seqLow = _seqLow;\n\n  // check if clock has advanced and user has not provided msecs\n  if (msecs > _msecs && options.msecs === undefined) {\n    _msecs = msecs;\n\n    // unless user provided seq, reset seq parts\n    if (seq !== null) {\n      seqHigh = null;\n      seqLow = null;\n    }\n  }\n\n  // if we have a user provided seq\n  if (seq !== null) {\n    // trim provided seq to 31 bits of value, avoiding overflow\n    if (seq > 0x7fffffff) {\n      seq = 0x7fffffff;\n    }\n\n    // split provided seq into high/low parts\n    seqHigh = seq >>> 19 & 0xfff;\n    seqLow = seq & 0x7ffff;\n  }\n\n  // randomly initialize seq\n  if (seqHigh === null || seqLow === null) {\n    seqHigh = rnds[6] & 0x7f;\n    seqHigh = seqHigh << 8 | rnds[7];\n    seqLow = rnds[8] & 0x3f; // pad for var\n    seqLow = seqLow << 8 | rnds[9];\n    seqLow = seqLow << 5 | rnds[10] >>> 3;\n  }\n\n  // increment seq if within msecs window\n  if (msecs + 10000 > _msecs && seq === null) {\n    if (++seqLow > 0x7ffff) {\n      seqLow = 0;\n      if (++seqHigh > 0xfff) {\n        seqHigh = 0;\n\n        // increment internal _msecs. this allows us to continue incrementing\n        // while staying monotonic. Note, once we hit 10k milliseconds beyond system\n        // clock, we will reset breaking monotonicity (after (2^31)*10000 generations)\n        _msecs++;\n      }\n    }\n  } else {\n    // resetting; we have advanced more than\n    // 10k milliseconds beyond system clock\n    _msecs = msecs;\n  }\n  _seqHigh = seqHigh;\n  _seqLow = seqLow;\n\n  // [bytes 0-5] 48 bits of local timestamp\n  b[i++] = _msecs / 0x10000000000 & 0xff;\n  b[i++] = _msecs / 0x100000000 & 0xff;\n  b[i++] = _msecs / 0x1000000 & 0xff;\n  b[i++] = _msecs / 0x10000 & 0xff;\n  b[i++] = _msecs / 0x100 & 0xff;\n  b[i++] = _msecs & 0xff;\n\n  // [byte 6] - set 4 bits of version (7) with first 4 bits seq_hi\n  b[i++] = seqHigh >>> 4 & 0x0f | 0x70;\n\n  // [byte 7] remaining 8 bits of seq_hi\n  b[i++] = seqHigh & 0xff;\n\n  // [byte 8] - variant (2 bits), first 6 bits seq_low\n  b[i++] = seqLow >>> 13 & 0x3f | 0x80;\n\n  // [byte 9] 8 bits seq_low\n  b[i++] = seqLow >>> 5 & 0xff;\n\n  // [byte 10] remaining 5 bits seq_low, 3 bits random\n  b[i++] = seqLow << 3 & 0xff | rnds[10] & 0x07;\n\n  // [bytes 11-15] always random\n  b[i++] = rnds[11];\n  b[i++] = rnds[12];\n  b[i++] = rnds[13];\n  b[i++] = rnds[14];\n  b[i++] = rnds[15];\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v7;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  return parseInt(uuid.slice(14, 15), 16);\n}\nvar _default = exports.default = version;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MAX\", {\n  enumerable: true,\n  get: function () {\n    return _max.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v1ToV6\", {\n  enumerable: true,\n  get: function () {\n    return _v1ToV.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"v6\", {\n  enumerable: true,\n  get: function () {\n    return _v5.default;\n  }\n});\nObject.defineProperty(exports, \"v6ToV1\", {\n  enumerable: true,\n  get: function () {\n    return _v6ToV.default;\n  }\n});\nObject.defineProperty(exports, \"v7\", {\n  enumerable: true,\n  get: function () {\n    return _v6.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nvar _max = _interopRequireDefault(require(\"./max.js\"));\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\nvar _v1ToV = _interopRequireDefault(require(\"./v1ToV6.js\"));\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\nvar _v5 = _interopRequireDefault(require(\"./v6.js\"));\nvar _v6ToV = _interopRequireDefault(require(\"./v6ToV1.js\"));\nvar _v6 = _interopRequireDefault(require(\"./v7.js\"));\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nvar _version = _interopRequireDefault(require(\"./version.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = 'ffffffff-ffff-ffff-ffff-ffffffffffff';",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = '00000000-0000-0000-0000-000000000000';",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\nvar _default = exports.default = validate;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  let v;\n  const arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nvar _default = exports.default = parse;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nvar _default = exports.default = stringify;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _nodeCrypto.default.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\nlet _clockseq;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node;\n  let clockseq = options.clockseq;\n\n  // v1 only: Use cached `node` and `clockseq` values\n  if (!options._v6) {\n    if (!node) {\n      node = _nodeId;\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq;\n    }\n  }\n\n  // Handle cases where we need entropy.  We do this lazily to minimize issues\n  // related to insufficient system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    // Randomize node\n    if (node == null) {\n      node = [seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n\n      // v1 only: cache node value for reuse\n      if (!_nodeId && !options._v6) {\n        // per RFC4122 4.5: Set MAC multicast bit (v1 only)\n        node[0] |= 0x01; // Set multicast bit\n\n        _nodeId = node;\n      }\n    }\n\n    // Randomize clockseq\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      if (_clockseq === undefined && !options._v6) {\n        _clockseq = clockseq;\n      }\n    }\n  }\n\n  // v1 & v6 timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so time is\n  // handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v1;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v1ToV6;\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert a v1 UUID to a v6 UUID\n *\n * @param {string|Uint8Array} uuid - The v1 UUID to convert to v6\n * @returns {string|Uint8Array} The v6 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nfunction v1ToV6(uuid) {\n  const v1Bytes = typeof uuid === 'string' ? (0, _parse.default)(uuid) : uuid;\n  const v6Bytes = _v1ToV6(v1Bytes);\n  return typeof uuid === 'string' ? (0, _stringify.unsafeStringify)(v6Bytes) : v6Bytes;\n}\n\n// Do the field transformation needed for v1 -> v6\nfunction _v1ToV6(v1Bytes, randomize = false) {\n  return Uint8Array.of((v1Bytes[6] & 0x0f) << 4 | v1Bytes[7] >> 4 & 0x0f, (v1Bytes[7] & 0x0f) << 4 | (v1Bytes[4] & 0xf0) >> 4, (v1Bytes[4] & 0x0f) << 4 | (v1Bytes[5] & 0xf0) >> 4, (v1Bytes[5] & 0x0f) << 4 | (v1Bytes[0] & 0xf0) >> 4, (v1Bytes[0] & 0x0f) << 4 | (v1Bytes[1] & 0xf0) >> 4, (v1Bytes[1] & 0x0f) << 4 | (v1Bytes[2] & 0xf0) >> 4, 0x60 | v1Bytes[2] & 0x0f, v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\nvar _stringify = require(\"./stringify.js\");\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nconst DNS = exports.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nconst URL = exports.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return (0, _stringify.unsafeStringify)(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return _nodeCrypto.default.createHash('md5').update(bytes).digest();\n}\nvar _default = exports.default = md5;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = exports.default = v3;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar _default = exports.default = {\n  randomUUID: _nodeCrypto.default.randomUUID\n};",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _native = _interopRequireDefault(require(\"./native.js\"));\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || _rng.default)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return (0, _stringify.unsafeStringify)(rnds);\n}\nvar _default = exports.default = v4;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nodeCrypto = _interopRequireDefault(require(\"node:crypto\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return _nodeCrypto.default.createHash('sha1').update(bytes).digest();\n}\nvar _default = exports.default = sha1;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = exports.default = v5;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v6;\nvar _stringify = require(\"./stringify.js\");\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\nvar _v1ToV = _interopRequireDefault(require(\"./v1ToV6.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n *\n * @param {object} options\n * @param {Uint8Array=} buf\n * @param {number=} offset\n * @returns\n */\nfunction v6(options = {}, buf, offset = 0) {\n  // v6 is v1 with different field layout, so we start with a v1 UUID, albeit\n  // with slightly different behavior around how the clock_seq and node fields\n  // are randomized, which is why we call v1 with _v6: true.\n  let bytes = (0, _v.default)({\n    ...options,\n    _v6: true\n  }, new Uint8Array(16));\n\n  // Reorder the fields to v6 layout.\n  bytes = (0, _v1ToV.default)(bytes);\n\n  // Return as a byte array if requested\n  if (buf) {\n    for (let i = 0; i < 16; i++) {\n      buf[offset + i] = bytes[i];\n    }\n    return buf;\n  }\n  return (0, _stringify.unsafeStringify)(bytes);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = v6ToV1;\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Convert a v6 UUID to a v1 UUID\n *\n * @param {string|Uint8Array} uuid - The v6 UUID to convert to v6\n * @returns {string|Uint8Array} The v1 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nfunction v6ToV1(uuid) {\n  const v6Bytes = typeof uuid === 'string' ? (0, _parse.default)(uuid) : uuid;\n  const v1Bytes = _v6ToV1(v6Bytes);\n  return typeof uuid === 'string' ? (0, _stringify.unsafeStringify)(v1Bytes) : v1Bytes;\n}\n\n// Do the field transformation needed for v6 -> v1\nfunction _v6ToV1(v6Bytes) {\n  return Uint8Array.of((v6Bytes[3] & 0x0f) << 4 | v6Bytes[4] >> 4 & 0x0f, (v6Bytes[4] & 0x0f) << 4 | (v6Bytes[5] & 0xf0) >> 4, (v6Bytes[5] & 0x0f) << 4 | v6Bytes[6] & 0x0f, v6Bytes[7], (v6Bytes[1] & 0x0f) << 4 | (v6Bytes[2] & 0xf0) >> 4, (v6Bytes[2] & 0x0f) << 4 | (v6Bytes[3] & 0xf0) >> 4, 0x10 | (v6Bytes[0] & 0xf0) >> 4, (v6Bytes[0] & 0x0f) << 4 | (v6Bytes[1] & 0xf0) >> 4, v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);\n}",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\nvar _stringify = require(\"./stringify.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * UUID V7 - Unix Epoch time-based UUID\n *\n * The IETF has published RFC9562, introducing 3 new UUID versions (6,7,8). This\n * implementation of V7 is based on the accepted, though not yet approved,\n * revisions.\n *\n * RFC 9562:https://www.rfc-editor.org/rfc/rfc9562.html Universally Unique\n * IDentifiers (UUIDs)\n\n *\n * Sample V7 value:\n * https://www.rfc-editor.org/rfc/rfc9562.html#name-example-of-a-uuidv7-value\n *\n * Monotonic Bit Layout: RFC rfc9562.6.2 Method 1, Dedicated Counter Bits ref:\n *     https://www.rfc-editor.org/rfc/rfc9562.html#section-6.2-5.1\n *\n *   0                   1                   2                   3 0 1 2 3 4 5 6\n *   7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                          unix_ts_ms                           |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |          unix_ts_ms           |  ver  |        seq_hi         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |var|               seq_low               |        rand         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                             rand                              |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *\n * seq is a 31 bit serialized counter; comprised of 12 bit seq_hi and 19 bit\n * seq_low, and randomly initialized upon timestamp change. 31 bit counter size\n * was selected as any bitwise operations in node are done as _signed_ 32 bit\n * ints. we exclude the sign bit.\n */\n\nlet _seqLow = null;\nlet _seqHigh = null;\nlet _msecs = 0;\nfunction v7(options, buf, offset) {\n  options = options || {};\n\n  // initialize buffer and pointer\n  let i = buf && offset || 0;\n  const b = buf || new Uint8Array(16);\n\n  // rnds is Uint8Array(16) filled with random bytes\n  const rnds = options.random || (options.rng || _rng.default)();\n\n  // milliseconds since unix epoch, 1970-01-01 00:00\n  const msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // seq is user provided 31 bit counter\n  let seq = options.seq !== undefined ? options.seq : null;\n\n  // initialize local seq high/low parts\n  let seqHigh = _seqHigh;\n  let seqLow = _seqLow;\n\n  // check if clock has advanced and user has not provided msecs\n  if (msecs > _msecs && options.msecs === undefined) {\n    _msecs = msecs;\n\n    // unless user provided seq, reset seq parts\n    if (seq !== null) {\n      seqHigh = null;\n      seqLow = null;\n    }\n  }\n\n  // if we have a user provided seq\n  if (seq !== null) {\n    // trim provided seq to 31 bits of value, avoiding overflow\n    if (seq > 0x7fffffff) {\n      seq = 0x7fffffff;\n    }\n\n    // split provided seq into high/low parts\n    seqHigh = seq >>> 19 & 0xfff;\n    seqLow = seq & 0x7ffff;\n  }\n\n  // randomly initialize seq\n  if (seqHigh === null || seqLow === null) {\n    seqHigh = rnds[6] & 0x7f;\n    seqHigh = seqHigh << 8 | rnds[7];\n    seqLow = rnds[8] & 0x3f; // pad for var\n    seqLow = seqLow << 8 | rnds[9];\n    seqLow = seqLow << 5 | rnds[10] >>> 3;\n  }\n\n  // increment seq if within msecs window\n  if (msecs + 10000 > _msecs && seq === null) {\n    if (++seqLow > 0x7ffff) {\n      seqLow = 0;\n      if (++seqHigh > 0xfff) {\n        seqHigh = 0;\n\n        // increment internal _msecs. this allows us to continue incrementing\n        // while staying monotonic. Note, once we hit 10k milliseconds beyond system\n        // clock, we will reset breaking monotonicity (after (2^31)*10000 generations)\n        _msecs++;\n      }\n    }\n  } else {\n    // resetting; we have advanced more than\n    // 10k milliseconds beyond system clock\n    _msecs = msecs;\n  }\n  _seqHigh = seqHigh;\n  _seqLow = seqLow;\n\n  // [bytes 0-5] 48 bits of local timestamp\n  b[i++] = _msecs / 0x10000000000 & 0xff;\n  b[i++] = _msecs / 0x100000000 & 0xff;\n  b[i++] = _msecs / 0x1000000 & 0xff;\n  b[i++] = _msecs / 0x10000 & 0xff;\n  b[i++] = _msecs / 0x100 & 0xff;\n  b[i++] = _msecs & 0xff;\n\n  // [byte 6] - set 4 bits of version (7) with first 4 bits seq_hi\n  b[i++] = seqHigh >>> 4 & 0x0f | 0x70;\n\n  // [byte 7] remaining 8 bits of seq_hi\n  b[i++] = seqHigh & 0xff;\n\n  // [byte 8] - variant (2 bits), first 6 bits seq_low\n  b[i++] = seqLow >>> 13 & 0x3f | 0x80;\n\n  // [byte 9] 8 bits seq_low\n  b[i++] = seqLow >>> 5 & 0xff;\n\n  // [byte 10] remaining 5 bits seq_low, 3 bits random\n  b[i++] = seqLow << 3 & 0xff | rnds[10] & 0x07;\n\n  // [bytes 11-15] always random\n  b[i++] = rnds[11];\n  b[i++] = rnds[12];\n  b[i++] = rnds[13];\n  b[i++] = rnds[14];\n  b[i++] = rnds[15];\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\nvar _default = exports.default = v7;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  return parseInt(uuid.slice(14, 15), 16);\n}\nvar _default = exports.default = version;",
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MAX\", {\n  enumerable: true,\n  get: function () {\n    return _max.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v1ToV6\", {\n  enumerable: true,\n  get: function () {\n    return _v1ToV.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"v6\", {\n  enumerable: true,\n  get: function () {\n    return _v5.default;\n  }\n});\nObject.defineProperty(exports, \"v6ToV1\", {\n  enumerable: true,\n  get: function () {\n    return _v6ToV.default;\n  }\n});\nObject.defineProperty(exports, \"v7\", {\n  enumerable: true,\n  get: function () {\n    return _v6.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nvar _max = _interopRequireDefault(require(\"./max.js\"));\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\nvar _v1ToV = _interopRequireDefault(require(\"./v1ToV6.js\"));\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\nvar _v5 = _interopRequireDefault(require(\"./v6.js\"));\nvar _v6ToV = _interopRequireDefault(require(\"./v6ToV1.js\"));\nvar _v6 = _interopRequireDefault(require(\"./v7.js\"));\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\nvar _version = _interopRequireDefault(require(\"./version.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }",
    "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n",
    "'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n",
    "'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports.default = lowerBound;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lower_bound_1 = require(\"./lower-bound\");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports.default = PriorityQueue;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventEmitter = require(\"eventemitter3\");\nconst p_timeout_1 = require(\"p-timeout\");\nconst priority_queue_1 = require(\"./priority-queue\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports.default = PQueue;\n",
    "'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n",
    "'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n",
    "'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n",
    "'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n",
    "'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n",
    "'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n",
    "'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n",
    "'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n",
    "'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n",
    "'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n",
    "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n",
    "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n",
    "'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n",
    "'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n",
    "'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n",
    "'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n",
    "'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n",
    "'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n",
    "'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n",
    "'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n",
    "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n",
    "'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n",
    "'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n",
    "'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n",
    "'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n",
    "'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n",
    "'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n",
    "'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n",
    "'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n",
    "'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n",
    "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.extend = extend;\nexports.indexOf = indexOf;\nexports.escapeExpression = escapeExpression;\nexports.isEmpty = isEmpty;\nexports.createFrame = createFrame;\nexports.blockParams = blockParams;\nexports.appendContextPath = appendContextPath;\nvar escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nvar badChars = /[&<>\"'`=]/g,\n    possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nfunction extend(obj /* , ...source */) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nvar toString = Object.prototype.toString;\n\nexports.toString = toString;\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  exports.isFunction = isFunction = function (value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nexports.isFunction = isFunction;\n\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nvar isArray = Array.isArray || function (value) {\n  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n};\n\nexports.isArray = isArray;\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\n\nfunction indexOf(array, value) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nfunction isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction createFrame(object) {\n  var frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nfunction blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nfunction appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFNLE1BQU0sR0FBRztBQUNiLEtBQUcsRUFBRSxPQUFPO0FBQ1osS0FBRyxFQUFFLE1BQU07QUFDWCxLQUFHLEVBQUUsTUFBTTtBQUNYLEtBQUcsRUFBRSxRQUFRO0FBQ2IsS0FBRyxFQUFFLFFBQVE7QUFDYixLQUFHLEVBQUUsUUFBUTtBQUNiLEtBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQzs7QUFFRixJQUFNLFFBQVEsR0FBRyxZQUFZO0lBQzNCLFFBQVEsR0FBRyxXQUFXLENBQUM7O0FBRXpCLFNBQVMsVUFBVSxDQUFDLEdBQUcsRUFBRTtBQUN2QixTQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUNwQjs7QUFFTSxTQUFTLE1BQU0sQ0FBQyxHQUFHLG9CQUFvQjtBQUM1QyxPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN6QyxTQUFLLElBQUksR0FBRyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QixVQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7QUFDM0QsV0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUM5QjtLQUNGO0dBQ0Y7O0FBRUQsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQzs7Ozs7O0FBS2hELElBQUksVUFBVSxHQUFHLG9CQUFTLEtBQUssRUFBRTtBQUMvQixTQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztDQUNwQyxDQUFDOzs7QUFHRixJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNuQixVQU9PLFVBQVUsR0FQakIsVUFBVSxHQUFHLFVBQVMsS0FBSyxFQUFFO0FBQzNCLFdBQ0UsT0FBTyxLQUFLLEtBQUssVUFBVSxJQUMzQixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLG1CQUFtQixDQUM1QztHQUNILENBQUM7Q0FDSDtRQUNRLFVBQVUsR0FBVixVQUFVOzs7OztBQUlaLElBQU0sT0FBTyxHQUNsQixLQUFLLENBQUMsT0FBTyxJQUNiLFVBQVMsS0FBSyxFQUFFO0FBQ2QsU0FBTyxLQUFLLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxHQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGdCQUFnQixHQUN6QyxLQUFLLENBQUM7Q0FDWCxDQUFDOzs7OztBQUdHLFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7QUFDcEMsT0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNoRCxRQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7QUFDdEIsYUFBTyxDQUFDLENBQUM7S0FDVjtHQUNGO0FBQ0QsU0FBTyxDQUFDLENBQUMsQ0FBQztDQUNYOztBQUVNLFNBQVMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO0FBQ3ZDLE1BQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFOztBQUU5QixRQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFO0FBQzNCLGFBQU8sTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ3hCLE1BQU0sSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO0FBQ3pCLGFBQU8sRUFBRSxDQUFDO0tBQ1gsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2xCLGFBQU8sTUFBTSxHQUFHLEVBQUUsQ0FBQztLQUNwQjs7Ozs7QUFLRCxVQUFNLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQztHQUN0Qjs7QUFFRCxNQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUMxQixXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsU0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztDQUM3Qzs7QUFFTSxTQUFTLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDN0IsTUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFdBQU8sSUFBSSxDQUFDO0dBQ2IsTUFBTSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtBQUMvQyxXQUFPLElBQUksQ0FBQztHQUNiLE1BQU07QUFDTCxXQUFPLEtBQUssQ0FBQztHQUNkO0NBQ0Y7O0FBRU0sU0FBUyxXQUFXLENBQUMsTUFBTSxFQUFFO0FBQ2xDLE1BQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDL0IsT0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDdkIsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFTSxTQUFTLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0FBQ3ZDLFFBQU0sQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0FBQ2xCLFNBQU8sTUFBTSxDQUFDO0NBQ2Y7O0FBRU0sU0FBUyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFO0FBQ2pELFNBQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUEsR0FBSSxFQUFFLENBQUM7Q0FDcEQiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlc2NhcGUgPSB7XG4gICcmJzogJyZhbXA7JyxcbiAgJzwnOiAnJmx0OycsXG4gICc+JzogJyZndDsnLFxuICAnXCInOiAnJnF1b3Q7JyxcbiAgXCInXCI6ICcmI3gyNzsnLFxuICAnYCc6ICcmI3g2MDsnLFxuICAnPSc6ICcmI3gzRDsnXG59O1xuXG5jb25zdCBiYWRDaGFycyA9IC9bJjw+XCInYD1dL2csXG4gIHBvc3NpYmxlID0gL1smPD5cIidgPV0vO1xuXG5mdW5jdGlvbiBlc2NhcGVDaGFyKGNocikge1xuICByZXR1cm4gZXNjYXBlW2Nocl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmQob2JqIC8qICwgLi4uc291cmNlICovKSB7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQga2V5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSBhcmd1bWVudHNbaV1ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnQgbGV0IHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLy8gU291cmNlZCBmcm9tIGxvZGFzaFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL2xvZGFzaC9ibG9iL21hc3Rlci9MSUNFTlNFLnR4dFxuLyogZXNsaW50LWRpc2FibGUgZnVuYy1zdHlsZSAqL1xubGV0IGlzRnVuY3Rpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufTtcbi8vIGZhbGxiYWNrIGZvciBvbGRlciB2ZXJzaW9ucyBvZiBDaHJvbWUgYW5kIFNhZmFyaVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlmIChpc0Z1bmN0aW9uKC94LykpIHtcbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSdcbiAgICApO1xuICB9O1xufVxuZXhwb3J0IHsgaXNGdW5jdGlvbiB9O1xuLyogZXNsaW50LWVuYWJsZSBmdW5jLXN0eWxlICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3QgaXNBcnJheSA9XG4gIEFycmF5LmlzQXJyYXkgfHxcbiAgZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0J1xuICAgICAgPyB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgQXJyYXldJ1xuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuLy8gT2xkZXIgSUUgdmVyc2lvbnMgZG8gbm90IGRpcmVjdGx5IHN1cHBvcnQgaW5kZXhPZiBzbyB3ZSBtdXN0IGltcGxlbWVudCBvdXIgb3duLCBzYWRseS5cbmV4cG9ydCBmdW5jdGlvbiBpbmRleE9mKGFycmF5LCB2YWx1ZSkge1xuICBmb3IgKGxldCBpID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoYXJyYXlbaV0gPT09IHZhbHVlKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlRXhwcmVzc2lvbihzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgZXNjYXBlIFNhZmVTdHJpbmdzLCBzaW5jZSB0aGV5J3JlIGFscmVhZHkgc2FmZVxuICAgIGlmIChzdHJpbmcgJiYgc3RyaW5nLnRvSFRNTCkge1xuICAgICAgcmV0dXJuIHN0cmluZy50b0hUTUwoKTtcbiAgICB9IGVsc2UgaWYgKHN0cmluZyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIGlmICghc3RyaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nICsgJyc7XG4gICAgfVxuXG4gICAgLy8gRm9yY2UgYSBzdHJpbmcgY29udmVyc2lvbiBhcyB0aGlzIHdpbGwgYmUgZG9uZSBieSB0aGUgYXBwZW5kIHJlZ2FyZGxlc3MgYW5kXG4gICAgLy8gdGhlIHJlZ2V4IHRlc3Qgd2lsbCBkbyB0aGlzIHRyYW5zcGFyZW50bHkgYmVoaW5kIHRoZSBzY2VuZXMsIGNhdXNpbmcgaXNzdWVzIGlmXG4gICAgLy8gYW4gb2JqZWN0J3MgdG8gc3RyaW5nIGhhcyBlc2NhcGVkIGNoYXJhY3RlcnMgaW4gaXQuXG4gICAgc3RyaW5nID0gJycgKyBzdHJpbmc7XG4gIH1cblxuICBpZiAoIXBvc3NpYmxlLnRlc3Qoc3RyaW5nKSkge1xuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKGJhZENoYXJzLCBlc2NhcGVDaGFyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHkodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRnJhbWUob2JqZWN0KSB7XG4gIGxldCBmcmFtZSA9IGV4dGVuZCh7fSwgb2JqZWN0KTtcbiAgZnJhbWUuX3BhcmVudCA9IG9iamVjdDtcbiAgcmV0dXJuIGZyYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmxvY2tQYXJhbXMocGFyYW1zLCBpZHMpIHtcbiAgcGFyYW1zLnBhdGggPSBpZHM7XG4gIHJldHVybiBwYXJhbXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmRDb250ZXh0UGF0aChjb250ZXh0UGF0aCwgaWQpIHtcbiAgcmV0dXJuIChjb250ZXh0UGF0aCA/IGNvbnRleHRQYXRoICsgJy4nIDogJycpICsgaWQ7XG59XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\nvar errorProps = ['description', 'fileName', 'lineNumber', 'endLineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var loc = node && node.loc,\n      line = undefined,\n      endLineNumber = undefined,\n      column = undefined,\n      endColumn = undefined;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexports['default'] = Exception;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFNLFVBQVUsR0FBRyxDQUNqQixhQUFhLEVBQ2IsVUFBVSxFQUNWLFlBQVksRUFDWixlQUFlLEVBQ2YsU0FBUyxFQUNULE1BQU0sRUFDTixRQUFRLEVBQ1IsT0FBTyxDQUNSLENBQUM7O0FBRUYsU0FBUyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRTtBQUNoQyxNQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUc7TUFDeEIsSUFBSSxZQUFBO01BQ0osYUFBYSxZQUFBO01BQ2IsTUFBTSxZQUFBO01BQ04sU0FBUyxZQUFBLENBQUM7O0FBRVosTUFBSSxHQUFHLEVBQUU7QUFDUCxRQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7QUFDdEIsaUJBQWEsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztBQUM3QixVQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7QUFDMUIsYUFBUyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDOztBQUUzQixXQUFPLElBQUksS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsTUFBTSxDQUFDO0dBQ3hDOztBQUVELE1BQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7OztBQUcxRCxPQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRTtBQUNoRCxRQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0dBQzlDOzs7QUFHRCxNQUFJLEtBQUssQ0FBQyxpQkFBaUIsRUFBRTtBQUMzQixTQUFLLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQzFDOztBQUVELE1BQUk7QUFDRixRQUFJLEdBQUcsRUFBRTtBQUNQLFVBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFVBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDOzs7O0FBSW5DLFVBQUksTUFBTSxDQUFDLGNBQWMsRUFBRTtBQUN6QixjQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUU7QUFDcEMsZUFBSyxFQUFFLE1BQU07QUFDYixvQkFBVSxFQUFFLElBQUk7U0FDakIsQ0FBQyxDQUFDO0FBQ0gsY0FBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3ZDLGVBQUssRUFBRSxTQUFTO0FBQ2hCLG9CQUFVLEVBQUUsSUFBSTtTQUNqQixDQUFDLENBQUM7T0FDSixNQUFNO0FBQ0wsWUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDckIsWUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7T0FDNUI7S0FDRjtHQUNGLENBQUMsT0FBTyxHQUFHLEVBQUU7O0dBRWI7Q0FDRjs7QUFFRCxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7O3FCQUVuQixTQUFTIiwiZmlsZSI6ImV4Y2VwdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVycm9yUHJvcHMgPSBbXG4gICdkZXNjcmlwdGlvbicsXG4gICdmaWxlTmFtZScsXG4gICdsaW5lTnVtYmVyJyxcbiAgJ2VuZExpbmVOdW1iZXInLFxuICAnbWVzc2FnZScsXG4gICduYW1lJyxcbiAgJ251bWJlcicsXG4gICdzdGFjaydcbl07XG5cbmZ1bmN0aW9uIEV4Y2VwdGlvbihtZXNzYWdlLCBub2RlKSB7XG4gIGxldCBsb2MgPSBub2RlICYmIG5vZGUubG9jLFxuICAgIGxpbmUsXG4gICAgZW5kTGluZU51bWJlcixcbiAgICBjb2x1bW4sXG4gICAgZW5kQ29sdW1uO1xuXG4gIGlmIChsb2MpIHtcbiAgICBsaW5lID0gbG9jLnN0YXJ0LmxpbmU7XG4gICAgZW5kTGluZU51bWJlciA9IGxvYy5lbmQubGluZTtcbiAgICBjb2x1bW4gPSBsb2Muc3RhcnQuY29sdW1uO1xuICAgIGVuZENvbHVtbiA9IGxvYy5lbmQuY29sdW1uO1xuXG4gICAgbWVzc2FnZSArPSAnIC0gJyArIGxpbmUgKyAnOicgKyBjb2x1bW47XG4gIH1cblxuICBsZXQgdG1wID0gRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgbWVzc2FnZSk7XG5cbiAgLy8gVW5mb3J0dW5hdGVseSBlcnJvcnMgYXJlIG5vdCBlbnVtZXJhYmxlIGluIENocm9tZSAoYXQgbGVhc3QpLCBzbyBgZm9yIHByb3AgaW4gdG1wYCBkb2Vzbid0IHdvcmsuXG4gIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IGVycm9yUHJvcHMubGVuZ3RoOyBpZHgrKykge1xuICAgIHRoaXNbZXJyb3JQcm9wc1tpZHhdXSA9IHRtcFtlcnJvclByb3BzW2lkeF1dO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgaWYgKGxvYykge1xuICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZTtcbiAgICAgIHRoaXMuZW5kTGluZU51bWJlciA9IGVuZExpbmVOdW1iZXI7XG5cbiAgICAgIC8vIFdvcmsgYXJvdW5kIGlzc3VlIHVuZGVyIHNhZmFyaSB3aGVyZSB3ZSBjYW4ndCBkaXJlY3RseSBzZXQgdGhlIGNvbHVtbiB2YWx1ZVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdjb2x1bW4nLCB7XG4gICAgICAgICAgdmFsdWU6IGNvbHVtbixcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2VuZENvbHVtbicsIHtcbiAgICAgICAgICB2YWx1ZTogZW5kQ29sdW1uLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgdGhpcy5lbmRDb2x1bW4gPSBlbmRDb2x1bW47XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChub3ApIHtcbiAgICAvKiBJZ25vcmUgaWYgdGhlIGJyb3dzZXIgaXMgdmVyeSBwYXJ0aWN1bGFyICovXG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnQgZGVmYXVsdCBFeGNlcHRpb247XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerHelper('blockHelperMissing', function (context, options) {\n    var inverse = options.inverse,\n        fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (_utils.isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        var data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBd0QsVUFBVTs7cUJBRW5ELFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3ZFLFFBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPO1FBQzNCLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVsQixRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsYUFBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakIsTUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtBQUMvQyxhQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QixNQUFNLElBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUMzQixVQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3RCLFlBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUNmLGlCQUFPLENBQUMsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCOztBQUVELGVBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO09BQ2hELE1BQU07QUFDTCxlQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztPQUN0QjtLQUNGLE1BQU07QUFDTCxVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLElBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDckMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFDakIsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQ2IsQ0FBQztBQUNGLGVBQU8sR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQztPQUMxQjs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDN0I7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJibG9jay1oZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwcGVuZENvbnRleHRQYXRoLCBjcmVhdGVGcmFtZSwgaXNBcnJheSB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2Jsb2NrSGVscGVyTWlzc2luZycsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBsZXQgaW52ZXJzZSA9IG9wdGlvbnMuaW52ZXJzZSxcbiAgICAgIGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmIChjb250ZXh0ID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZm4odGhpcyk7XG4gICAgfSBlbHNlIGlmIChjb250ZXh0ID09PSBmYWxzZSB8fCBjb250ZXh0ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgaWYgKGNvbnRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAob3B0aW9ucy5pZHMpIHtcbiAgICAgICAgICBvcHRpb25zLmlkcyA9IFtvcHRpb25zLm5hbWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnMuZWFjaChjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGxldCBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLm5hbWVcbiAgICAgICAgKTtcbiAgICAgICAgb3B0aW9ucyA9IHsgZGF0YTogZGF0YSB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwgb3B0aW9ucyk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('../utils');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('each', function (context, options) {\n    if (!options) {\n      throw new _exception2['default']('Must pass iterator to #each');\n    }\n\n    var fn = options.fn,\n        inverse = options.inverse,\n        i = 0,\n        ret = '',\n        data = undefined,\n        contextPath = undefined;\n\n    if (options.data && options.ids) {\n      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = _utils.createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret = ret + fn(context[field], {\n        data: data,\n        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])\n      });\n    }\n\n    if (context && typeof context === 'object') {\n      if (_utils.isArray(context)) {\n        for (var j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (typeof Symbol === 'function' && context[Symbol.iterator]) {\n        var newContext = [];\n        var iterator = context[Symbol.iterator]();\n        for (var it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (var j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        (function () {\n          var priorKey = undefined;\n\n          Object.keys(context).forEach(function (key) {\n            // We're running the iterations one step out of sync so we can detect\n            // the last iteration without have to scan the object twice and create\n            // an itermediate keys array.\n            if (priorKey !== undefined) {\n              execIteration(priorKey, i - 1);\n            }\n            priorKey = key;\n            i++;\n          });\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1, true);\n          }\n        })();\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvZWFjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLENBQUMsT0FBTyxFQUFFO0FBQ1osWUFBTSwyQkFBYyw2QkFBNkIsQ0FBQyxDQUFDO0tBQ3BEOztBQUVELFFBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTztRQUN6QixDQUFDLEdBQUcsQ0FBQztRQUNMLEdBQUcsR0FBRyxFQUFFO1FBQ1IsSUFBSSxZQUFBO1FBQ0osV0FBVyxZQUFBLENBQUM7O0FBRWQsUUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7QUFDL0IsaUJBQVcsR0FDVCx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztLQUNyRTs7QUFFRCxRQUFJLGtCQUFXLE9BQU8sQ0FBQyxFQUFFO0FBQ3ZCLGFBQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCOztBQUVELFFBQUksT0FBTyxDQUFDLElBQUksRUFBRTtBQUNoQixVQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2xDOztBQUVELGFBQVMsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO0FBQ3pDLFVBQUksSUFBSSxFQUFFO0FBQ1IsWUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7QUFDakIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7QUFDbkIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFlBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQzs7QUFFbkIsWUFBSSxXQUFXLEVBQUU7QUFDZixjQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDeEM7T0FDRjs7QUFFRCxTQUFHLEdBQ0QsR0FBRyxHQUNILEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUNYLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUN2QixDQUFDLFdBQVcsR0FBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQzVCO09BQ0YsQ0FBQyxDQUFDO0tBQ047O0FBRUQsUUFBSSxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0FBQzFDLFVBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNwQixhQUFLLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN2QyxjQUFJLENBQUMsSUFBSSxPQUFPLEVBQUU7QUFDaEIseUJBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1dBQy9DO1NBQ0Y7T0FDRixNQUFNLElBQUksT0FBTyxNQUFNLEtBQUssVUFBVSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUU7QUFDbkUsWUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLFlBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztBQUM1QyxhQUFLLElBQUksRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRTtBQUM3RCxvQkFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0I7QUFDRCxlQUFPLEdBQUcsVUFBVSxDQUFDO0FBQ3JCLGFBQUssSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3ZDLHVCQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMvQztPQUNGLE1BQU07O0FBQ0wsY0FBSSxRQUFRLFlBQUEsQ0FBQzs7QUFFYixnQkFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHLEVBQUk7Ozs7QUFJbEMsZ0JBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQiwyQkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDaEM7QUFDRCxvQkFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLGFBQUMsRUFBRSxDQUFDO1dBQ0wsQ0FBQyxDQUFDO0FBQ0gsY0FBSSxRQUFRLEtBQUssU0FBUyxFQUFFO0FBQzFCLHlCQUFhLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7V0FDdEM7O09BQ0Y7S0FDRjs7QUFFRCxRQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDWCxTQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3JCOztBQUVELFdBQU8sR0FBRyxDQUFDO0dBQ1osQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoiZWFjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFwcGVuZENvbnRleHRQYXRoLFxuICBibG9ja1BhcmFtcyxcbiAgY3JlYXRlRnJhbWUsXG4gIGlzQXJyYXksXG4gIGlzRnVuY3Rpb25cbn0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuLi9leGNlcHRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignZWFjaCcsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ011c3QgcGFzcyBpdGVyYXRvciB0byAjZWFjaCcpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm4sXG4gICAgICBpbnZlcnNlID0gb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgaSA9IDAsXG4gICAgICByZXQgPSAnJyxcbiAgICAgIGRhdGEsXG4gICAgICBjb250ZXh0UGF0aDtcblxuICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgIGNvbnRleHRQYXRoID1cbiAgICAgICAgYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSkgKyAnLic7XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb24oY29udGV4dCkpIHtcbiAgICAgIGNvbnRleHQgPSBjb250ZXh0LmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgICAgZGF0YSA9IGNyZWF0ZUZyYW1lKG9wdGlvbnMuZGF0YSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZXhlY0l0ZXJhdGlvbihmaWVsZCwgaW5kZXgsIGxhc3QpIHtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGRhdGEua2V5ID0gZmllbGQ7XG4gICAgICAgIGRhdGEuaW5kZXggPSBpbmRleDtcbiAgICAgICAgZGF0YS5maXJzdCA9IGluZGV4ID09PSAwO1xuICAgICAgICBkYXRhLmxhc3QgPSAhIWxhc3Q7XG5cbiAgICAgICAgaWYgKGNvbnRleHRQYXRoKSB7XG4gICAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGNvbnRleHRQYXRoICsgZmllbGQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0ID1cbiAgICAgICAgcmV0ICtcbiAgICAgICAgZm4oY29udGV4dFtmaWVsZF0sIHtcbiAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhcbiAgICAgICAgICAgIFtjb250ZXh0W2ZpZWxkXSwgZmllbGRdLFxuICAgICAgICAgICAgW2NvbnRleHRQYXRoICsgZmllbGQsIG51bGxdXG4gICAgICAgICAgKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoY29udGV4dCAmJiB0eXBlb2YgY29udGV4dCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChpc0FycmF5KGNvbnRleHQpKSB7XG4gICAgICAgIGZvciAobGV0IGogPSBjb250ZXh0Lmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgICAgICAgIGlmIChpIGluIGNvbnRleHQpIHtcbiAgICAgICAgICAgIGV4ZWNJdGVyYXRpb24oaSwgaSwgaSA9PT0gY29udGV4dC5sZW5ndGggLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBjb250ZXh0W1N5bWJvbC5pdGVyYXRvcl0pIHtcbiAgICAgICAgY29uc3QgbmV3Q29udGV4dCA9IFtdO1xuICAgICAgICBjb25zdCBpdGVyYXRvciA9IGNvbnRleHRbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgICAgICBmb3IgKGxldCBpdCA9IGl0ZXJhdG9yLm5leHQoKTsgIWl0LmRvbmU7IGl0ID0gaXRlcmF0b3IubmV4dCgpKSB7XG4gICAgICAgICAgbmV3Q29udGV4dC5wdXNoKGl0LnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0ID0gbmV3Q29udGV4dDtcbiAgICAgICAgZm9yIChsZXQgaiA9IGNvbnRleHQubGVuZ3RoOyBpIDwgajsgaSsrKSB7XG4gICAgICAgICAgZXhlY0l0ZXJhdGlvbihpLCBpLCBpID09PSBjb250ZXh0Lmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgcHJpb3JLZXk7XG5cbiAgICAgICAgT2JqZWN0LmtleXMoY29udGV4dCkuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICAgIC8vIFdlJ3JlIHJ1bm5pbmcgdGhlIGl0ZXJhdGlvbnMgb25lIHN0ZXAgb3V0IG9mIHN5bmMgc28gd2UgY2FuIGRldGVjdFxuICAgICAgICAgIC8vIHRoZSBsYXN0IGl0ZXJhdGlvbiB3aXRob3V0IGhhdmUgdG8gc2NhbiB0aGUgb2JqZWN0IHR3aWNlIGFuZCBjcmVhdGVcbiAgICAgICAgICAvLyBhbiBpdGVybWVkaWF0ZSBrZXlzIGFycmF5LlxuICAgICAgICAgIGlmIChwcmlvcktleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHByaW9yS2V5ID0ga2V5O1xuICAgICAgICAgIGkrKztcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChwcmlvcktleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgZXhlY0l0ZXJhdGlvbihwcmlvcktleSwgaSAtIDEsIHRydWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGkgPT09IDApIHtcbiAgICAgIHJldCA9IGludmVyc2UodGhpcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJldDtcbiAgfSk7XG59XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('helperMissing', function () /* [args, ]options */{\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new _exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozt5QkFBc0IsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLEVBQUUsaUNBQWdDO0FBQ3ZFLFFBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7O0FBRTFCLGFBQU8sU0FBUyxDQUFDO0tBQ2xCLE1BQU07O0FBRUwsWUFBTSwyQkFDSixtQkFBbUIsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUNqRSxDQUFDO0tBQ0g7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJoZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbigvKiBbYXJncywgXW9wdGlvbnMgKi8pIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gQSBtaXNzaW5nIGZpZWxkIGluIGEge3tmb299fSBjb25zdHJ1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oXG4gICAgICAgICdNaXNzaW5nIGhlbHBlcjogXCInICsgYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXS5uYW1lICsgJ1wiJ1xuICAgICAgKTtcbiAgICB9XG4gIH0pO1xufVxuIl19\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('../utils');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('if', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#if requires exactly one argument');\n    }\n    if (_utils.isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaWYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztxQkFBb0MsVUFBVTs7eUJBQ3hCLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVMsV0FBVyxFQUFFLE9BQU8sRUFBRTtBQUMzRCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMsbUNBQW1DLENBQUMsQ0FBQztLQUMxRDtBQUNELFFBQUksa0JBQVcsV0FBVyxDQUFDLEVBQUU7QUFDM0IsaUJBQVcsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3RDOzs7OztBQUtELFFBQUksQUFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxJQUFLLGVBQVEsV0FBVyxDQUFDLEVBQUU7QUFDdkUsYUFBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekI7R0FDRixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxXQUFXLEVBQUUsT0FBTyxFQUFFO0FBQy9ELFFBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7QUFDekIsWUFBTSwyQkFBYyx1Q0FBdUMsQ0FBQyxDQUFDO0tBQzlEO0FBQ0QsV0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3BELFFBQUUsRUFBRSxPQUFPLENBQUMsT0FBTztBQUNuQixhQUFPLEVBQUUsT0FBTyxDQUFDLEVBQUU7QUFDbkIsVUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJO0tBQ25CLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNFbXB0eSwgaXNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2lmJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjaWYgcmVxdWlyZXMgZXhhY3RseSBvbmUgYXJndW1lbnQnKTtcbiAgICB9XG4gICAgaWYgKGlzRnVuY3Rpb24oY29uZGl0aW9uYWwpKSB7XG4gICAgICBjb25kaXRpb25hbCA9IGNvbmRpdGlvbmFsLmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgLy8gRGVmYXVsdCBiZWhhdmlvciBpcyB0byByZW5kZXIgdGhlIHBvc2l0aXZlIHBhdGggaWYgdGhlIHZhbHVlIGlzIHRydXRoeSBhbmQgbm90IGVtcHR5LlxuICAgIC8vIFRoZSBgaW5jbHVkZVplcm9gIG9wdGlvbiBtYXkgYmUgc2V0IHRvIHRyZWF0IHRoZSBjb25kdGlvbmFsIGFzIHB1cmVseSBub3QgZW1wdHkgYmFzZWQgb24gdGhlXG4gICAgLy8gYmVoYXZpb3Igb2YgaXNFbXB0eS4gRWZmZWN0aXZlbHkgdGhpcyBkZXRlcm1pbmVzIGlmIDAgaXMgaGFuZGxlZCBieSB0aGUgcG9zaXRpdmUgcGF0aCBvciBuZWdhdGl2ZS5cbiAgICBpZiAoKCFvcHRpb25zLmhhc2guaW5jbHVkZVplcm8gJiYgIWNvbmRpdGlvbmFsKSB8fCBpc0VtcHR5KGNvbmRpdGlvbmFsKSkge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuZm4odGhpcyk7XG4gICAgfVxuICB9KTtcblxuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcigndW5sZXNzJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjdW5sZXNzIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIHJldHVybiBpbnN0YW5jZS5oZWxwZXJzWydpZiddLmNhbGwodGhpcywgY29uZGl0aW9uYWwsIHtcbiAgICAgIGZuOiBvcHRpb25zLmludmVyc2UsXG4gICAgICBpbnZlcnNlOiBvcHRpb25zLmZuLFxuICAgICAgaGFzaDogb3B0aW9ucy5oYXNoXG4gICAgfSk7XG4gIH0pO1xufVxuIl19\n",
    "'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (instance) {\n  instance.registerHelper('log', function () /* message, options */{\n    var args = [undefined],\n        options = arguments[arguments.length - 1];\n    for (var i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    var level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log.apply(instance, args);\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsa0NBQWlDO0FBQzlELFFBQUksSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ3BCLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM1QyxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDN0MsVUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6Qjs7QUFFRCxRQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDZCxRQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtBQUM5QixXQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FDNUIsTUFBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO0FBQ3JELFdBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUM1QjtBQUNELFFBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRWhCLFlBQVEsQ0FBQyxHQUFHLE1BQUEsQ0FBWixRQUFRLEVBQVEsSUFBSSxDQUFDLENBQUM7R0FDdkIsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uKC8qIG1lc3NhZ2UsIG9wdGlvbnMgKi8pIHtcbiAgICBsZXQgYXJncyA9IFt1bmRlZmluZWRdLFxuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoIC0gMV07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2ldKTtcbiAgICB9XG5cbiAgICBsZXQgbGV2ZWwgPSAxO1xuICAgIGlmIChvcHRpb25zLmhhc2gubGV2ZWwgIT0gbnVsbCkge1xuICAgICAgbGV2ZWwgPSBvcHRpb25zLmhhc2gubGV2ZWw7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5kYXRhLmxldmVsICE9IG51bGwpIHtcbiAgICAgIGxldmVsID0gb3B0aW9ucy5kYXRhLmxldmVsO1xuICAgIH1cbiAgICBhcmdzWzBdID0gbGV2ZWw7XG5cbiAgICBpbnN0YW5jZS5sb2coLi4uYXJncyk7XG4gIH0pO1xufVxuIl19\n",
    "'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (instance) {\n  instance.registerHelper('lookup', function (obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9va3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxHQUFHLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtBQUM5RCxRQUFJLENBQUMsR0FBRyxFQUFFOztBQUVSLGFBQU8sR0FBRyxDQUFDO0tBQ1o7QUFDRCxXQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0dBQzNDLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6Imxvb2t1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdsb29rdXAnLCBmdW5jdGlvbihvYmosIGZpZWxkLCBvcHRpb25zKSB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgIC8vIE5vdGUgZm9yIDUuMDogQ2hhbmdlIHRvIFwib2JqID09IG51bGxcIiBpbiA1LjBcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zLmxvb2t1cFByb3BlcnR5KG9iaiwgZmllbGQpO1xuICB9KTtcbn1cbiJdfQ==\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('../utils');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('with', function (context, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#with requires exactly one argument');\n    }\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    var fn = options.fn;\n\n    if (!_utils.isEmpty(context)) {\n      var data = options.data;\n      if (options.data && options.ids) {\n        data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: _utils.blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvd2l0aC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMscUNBQXFDLENBQUMsQ0FBQztLQUM1RDtBQUNELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFDdkIsYUFBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7O0FBRUQsUUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQzs7QUFFcEIsUUFBSSxDQUFDLGVBQVEsT0FBTyxDQUFDLEVBQUU7QUFDckIsVUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztBQUN4QixVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLFlBQUksQ0FBQyxXQUFXLEdBQUcseUJBQ2pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUNmLENBQUM7T0FDSDs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUFZLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO09BQ2hFLENBQUMsQ0FBQztLQUNKLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJ3aXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYXBwZW5kQ29udGV4dFBhdGgsXG4gIGJsb2NrUGFyYW1zLFxuICBjcmVhdGVGcmFtZSxcbiAgaXNFbXB0eSxcbiAgaXNGdW5jdGlvblxufSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4uL2V4Y2VwdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCd3aXRoJywgZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoICE9IDIpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJyN3aXRoIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIGlmIChpc0Z1bmN0aW9uKGNvbnRleHQpKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm47XG5cbiAgICBpZiAoIWlzRW1wdHkoY29udGV4dCkpIHtcbiAgICAgIGxldCBkYXRhID0gb3B0aW9ucy5kYXRhO1xuICAgICAgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmlkcykge1xuICAgICAgICBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLmlkc1swXVxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwge1xuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBibG9ja1BhcmFtczogYmxvY2tQYXJhbXMoW2NvbnRleHRdLCBbZGF0YSAmJiBkYXRhLmNvbnRleHRQYXRoXSlcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.registerDefaultHelpers = registerDefaultHelpers;\nexports.moveHelperToHooks = moveHelperToHooks;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _helpersBlockHelperMissing = require('./helpers/block-helper-missing');\n\nvar _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);\n\nvar _helpersEach = require('./helpers/each');\n\nvar _helpersEach2 = _interopRequireDefault(_helpersEach);\n\nvar _helpersHelperMissing = require('./helpers/helper-missing');\n\nvar _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);\n\nvar _helpersIf = require('./helpers/if');\n\nvar _helpersIf2 = _interopRequireDefault(_helpersIf);\n\nvar _helpersLog = require('./helpers/log');\n\nvar _helpersLog2 = _interopRequireDefault(_helpersLog);\n\nvar _helpersLookup = require('./helpers/lookup');\n\nvar _helpersLookup2 = _interopRequireDefault(_helpersLookup);\n\nvar _helpersWith = require('./helpers/with');\n\nvar _helpersWith2 = _interopRequireDefault(_helpersWith);\n\nfunction registerDefaultHelpers(instance) {\n  _helpersBlockHelperMissing2['default'](instance);\n  _helpersEach2['default'](instance);\n  _helpersHelperMissing2['default'](instance);\n  _helpersIf2['default'](instance);\n  _helpersLog2['default'](instance);\n  _helpersLookup2['default'](instance);\n  _helpersWith2['default'](instance);\n}\n\nfunction moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3lDQUF1QyxnQ0FBZ0M7Ozs7MkJBQzlDLGdCQUFnQjs7OztvQ0FDUCwwQkFBMEI7Ozs7eUJBQ3JDLGNBQWM7Ozs7MEJBQ2IsZUFBZTs7Ozs2QkFDWixrQkFBa0I7Ozs7MkJBQ3BCLGdCQUFnQjs7OztBQUVsQyxTQUFTLHNCQUFzQixDQUFDLFFBQVEsRUFBRTtBQUMvQyx5Q0FBMkIsUUFBUSxDQUFDLENBQUM7QUFDckMsMkJBQWEsUUFBUSxDQUFDLENBQUM7QUFDdkIsb0NBQXNCLFFBQVEsQ0FBQyxDQUFDO0FBQ2hDLHlCQUFXLFFBQVEsQ0FBQyxDQUFDO0FBQ3JCLDBCQUFZLFFBQVEsQ0FBQyxDQUFDO0FBQ3RCLDZCQUFlLFFBQVEsQ0FBQyxDQUFDO0FBQ3pCLDJCQUFhLFFBQVEsQ0FBQyxDQUFDO0NBQ3hCOztBQUVNLFNBQVMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUU7QUFDbEUsTUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQ2hDLFlBQVEsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUMxRCxRQUFJLENBQUMsVUFBVSxFQUFFO0FBQ2YsYUFBTyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ3JDO0dBQ0Y7Q0FDRiIsImZpbGUiOiJoZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVyQmxvY2tIZWxwZXJNaXNzaW5nIGZyb20gJy4vaGVscGVycy9ibG9jay1oZWxwZXItbWlzc2luZyc7XG5pbXBvcnQgcmVnaXN0ZXJFYWNoIGZyb20gJy4vaGVscGVycy9lYWNoJztcbmltcG9ydCByZWdpc3RlckhlbHBlck1pc3NpbmcgZnJvbSAnLi9oZWxwZXJzL2hlbHBlci1taXNzaW5nJztcbmltcG9ydCByZWdpc3RlcklmIGZyb20gJy4vaGVscGVycy9pZic7XG5pbXBvcnQgcmVnaXN0ZXJMb2cgZnJvbSAnLi9oZWxwZXJzL2xvZyc7XG5pbXBvcnQgcmVnaXN0ZXJMb29rdXAgZnJvbSAnLi9oZWxwZXJzL2xvb2t1cCc7XG5pbXBvcnQgcmVnaXN0ZXJXaXRoIGZyb20gJy4vaGVscGVycy93aXRoJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMoaW5zdGFuY2UpIHtcbiAgcmVnaXN0ZXJCbG9ja0hlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlckVhY2goaW5zdGFuY2UpO1xuICByZWdpc3RlckhlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlcklmKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJMb2coaW5zdGFuY2UpO1xuICByZWdpc3Rlckxvb2t1cChpbnN0YW5jZSk7XG4gIHJlZ2lzdGVyV2l0aChpbnN0YW5jZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlSGVscGVyVG9Ib29rcyhpbnN0YW5jZSwgaGVscGVyTmFtZSwga2VlcEhlbHBlcikge1xuICBpZiAoaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXSkge1xuICAgIGluc3RhbmNlLmhvb2tzW2hlbHBlck5hbWVdID0gaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXTtcbiAgICBpZiAoIWtlZXBIZWxwZXIpIHtcbiAgICAgIGRlbGV0ZSBpbnN0YW5jZS5oZWxwZXJzW2hlbHBlck5hbWVdO1xuICAgIH1cbiAgfVxufVxuIl19\n",
    "'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerDecorator('inline', function (fn, props, container, options) {\n    var ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function (context, options) {\n        // Create a new partials stack frame prior to exec.\n        var original = container.partials;\n        container.partials = _utils.extend({}, original, props.partials);\n        var ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMvaW5saW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQXVCLFVBQVU7O3FCQUVsQixVQUFTLFFBQVEsRUFBRTtBQUNoQyxVQUFRLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO0FBQzNFLFFBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUNiLFFBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO0FBQ25CLFdBQUssQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQ3BCLFNBQUcsR0FBRyxVQUFTLE9BQU8sRUFBRSxPQUFPLEVBQUU7O0FBRS9CLFlBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDbEMsaUJBQVMsQ0FBQyxRQUFRLEdBQUcsY0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxRCxZQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLGlCQUFTLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM5QixlQUFPLEdBQUcsQ0FBQztPQUNaLENBQUM7S0FDSDs7QUFFRCxTQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUU3QyxXQUFPLEdBQUcsQ0FBQztHQUNaLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlubGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJEZWNvcmF0b3IoJ2lubGluZScsIGZ1bmN0aW9uKGZuLCBwcm9wcywgY29udGFpbmVyLCBvcHRpb25zKSB7XG4gICAgbGV0IHJldCA9IGZuO1xuICAgIGlmICghcHJvcHMucGFydGlhbHMpIHtcbiAgICAgIHByb3BzLnBhcnRpYWxzID0ge307XG4gICAgICByZXQgPSBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBwYXJ0aWFscyBzdGFjayBmcmFtZSBwcmlvciB0byBleGVjLlxuICAgICAgICBsZXQgb3JpZ2luYWwgPSBjb250YWluZXIucGFydGlhbHM7XG4gICAgICAgIGNvbnRhaW5lci5wYXJ0aWFscyA9IGV4dGVuZCh7fSwgb3JpZ2luYWwsIHByb3BzLnBhcnRpYWxzKTtcbiAgICAgICAgbGV0IHJldCA9IGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgICAgICBjb250YWluZXIucGFydGlhbHMgPSBvcmlnaW5hbDtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcHJvcHMucGFydGlhbHNbb3B0aW9ucy5hcmdzWzBdXSA9IG9wdGlvbnMuZm47XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.registerDefaultDecorators = registerDefaultDecorators;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decoratorsInline = require('./decorators/inline');\n\nvar _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);\n\nfunction registerDefaultDecorators(instance) {\n  _decoratorsInline2['default'](instance);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Z0NBQTJCLHFCQUFxQjs7OztBQUV6QyxTQUFTLHlCQUF5QixDQUFDLFFBQVEsRUFBRTtBQUNsRCxnQ0FBZSxRQUFRLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJkZWNvcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVySW5saW5lIGZyb20gJy4vZGVjb3JhdG9ycy9pbmxpbmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyhpbnN0YW5jZSkge1xuICByZWdpc3RlcklubGluZShpbnN0YW5jZSk7XG59XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('./utils');\n\nvar logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function lookupLevel(level) {\n    if (typeof level === 'string') {\n      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function log(level) {\n    level = logger.lookupLevel(level);\n\n    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n      var method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n\n      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        message[_key - 1] = arguments[_key];\n      }\n\n      console[method].apply(console, message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexports['default'] = logger;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2xvZ2dlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUF3QixTQUFTOztBQUVqQyxJQUFJLE1BQU0sR0FBRztBQUNYLFdBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQztBQUM3QyxPQUFLLEVBQUUsTUFBTTs7O0FBR2IsYUFBVyxFQUFFLHFCQUFTLEtBQUssRUFBRTtBQUMzQixRQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtBQUM3QixVQUFJLFFBQVEsR0FBRyxlQUFRLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDOUQsVUFBSSxRQUFRLElBQUksQ0FBQyxFQUFFO0FBQ2pCLGFBQUssR0FBRyxRQUFRLENBQUM7T0FDbEIsTUFBTTtBQUNMLGFBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO09BQzdCO0tBQ0Y7O0FBRUQsV0FBTyxLQUFLLENBQUM7R0FDZDs7O0FBR0QsS0FBRyxFQUFFLGFBQVMsS0FBSyxFQUFjO0FBQy9CLFNBQUssR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVsQyxRQUNFLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFDOUIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxFQUN6QztBQUNBLFVBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRXJDLFVBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7QUFDcEIsY0FBTSxHQUFHLEtBQUssQ0FBQztPQUNoQjs7d0NBWG1CLE9BQU87QUFBUCxlQUFPOzs7QUFZM0IsYUFBTyxDQUFDLE1BQU0sT0FBQyxDQUFmLE9BQU8sRUFBWSxPQUFPLENBQUMsQ0FBQztLQUM3QjtHQUNGO0NBQ0YsQ0FBQzs7cUJBRWEsTUFBTSIsImZpbGUiOiJsb2dnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmRleE9mIH0gZnJvbSAnLi91dGlscyc7XG5cbmxldCBsb2dnZXIgPSB7XG4gIG1ldGhvZE1hcDogWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InXSxcbiAgbGV2ZWw6ICdpbmZvJyxcblxuICAvLyBNYXBzIGEgZ2l2ZW4gbGV2ZWwgdmFsdWUgdG8gdGhlIGBtZXRob2RNYXBgIGluZGV4ZXMgYWJvdmUuXG4gIGxvb2t1cExldmVsOiBmdW5jdGlvbihsZXZlbCkge1xuICAgIGlmICh0eXBlb2YgbGV2ZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgbGV2ZWxNYXAgPSBpbmRleE9mKGxvZ2dlci5tZXRob2RNYXAsIGxldmVsLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKGxldmVsTWFwID49IDApIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbE1hcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldmVsID0gcGFyc2VJbnQobGV2ZWwsIDEwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbGV2ZWw7XG4gIH0sXG5cbiAgLy8gQ2FuIGJlIG92ZXJyaWRkZW4gaW4gdGhlIGhvc3QgZW52aXJvbm1lbnRcbiAgbG9nOiBmdW5jdGlvbihsZXZlbCwgLi4ubWVzc2FnZSkge1xuICAgIGxldmVsID0gbG9nZ2VyLmxvb2t1cExldmVsKGxldmVsKTtcblxuICAgIGlmIChcbiAgICAgIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgbG9nZ2VyLmxvb2t1cExldmVsKGxvZ2dlci5sZXZlbCkgPD0gbGV2ZWxcbiAgICApIHtcbiAgICAgIGxldCBtZXRob2QgPSBsb2dnZXIubWV0aG9kTWFwW2xldmVsXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBpZiAoIWNvbnNvbGVbbWV0aG9kXSkge1xuICAgICAgICBtZXRob2QgPSAnbG9nJztcbiAgICAgIH1cbiAgICAgIGNvbnNvbGVbbWV0aG9kXSguLi5tZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBsb2dnZXI7XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.createNewLookupObject = createNewLookupObject;\n\nvar _utils = require('../utils');\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\n\nfunction createNewLookupObject() {\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  return _utils.extend.apply(undefined, [Object.create(null)].concat(sources));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL2NyZWF0ZS1uZXctbG9va3VwLW9iamVjdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztxQkFBdUIsVUFBVTs7Ozs7Ozs7O0FBUTFCLFNBQVMscUJBQXFCLEdBQWE7b0NBQVQsT0FBTztBQUFQLFdBQU87OztBQUM5QyxTQUFPLGdDQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQUssT0FBTyxFQUFDLENBQUM7Q0FDaEQiLCJmaWxlIjoiY3JlYXRlLW5ldy1sb29rdXAtb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBvYmplY3Qgd2l0aCBcIm51bGxcIi1wcm90b3R5cGUgdG8gYXZvaWQgdHJ1dGh5IHJlc3VsdHMgb24gcHJvdG90eXBlIHByb3BlcnRpZXMuXG4gKiBUaGUgcmVzdWx0aW5nIG9iamVjdCBjYW4gYmUgdXNlZCB3aXRoIFwib2JqZWN0W3Byb3BlcnR5XVwiIHRvIGNoZWNrIGlmIGEgcHJvcGVydHkgZXhpc3RzXG4gKiBAcGFyYW0gey4uLm9iamVjdH0gc291cmNlcyBhIHZhcmFyZ3MgcGFyYW1ldGVyIG9mIHNvdXJjZSBvYmplY3RzIHRoYXQgd2lsbCBiZSBtZXJnZWRcbiAqIEByZXR1cm5zIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdMb29rdXBPYmplY3QoLi4uc291cmNlcykge1xuICByZXR1cm4gZXh0ZW5kKE9iamVjdC5jcmVhdGUobnVsbCksIC4uLnNvdXJjZXMpO1xufVxuIl19\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.createProtoAccessControl = createProtoAccessControl;\nexports.resultIsAllowed = resultIsAllowed;\nexports.resetLoggedProperties = resetLoggedProperties;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _createNewLookupObject = require('./create-new-lookup-object');\n\nvar _logger = require('../logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar loggedProperties = Object.create(null);\n\nfunction createProtoAccessControl(runtimeOptions) {\n  var defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  var defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultPropertyWhiteList, runtimeOptions.allowedProtoProperties),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultMethodWhiteList, runtimeOptions.allowedProtoMethods),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nfunction resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    _logger2['default'].log('error', 'Handlebars: Access has been denied to resolve the property \"' + propertyName + '\" because it is not an \"own property\" of its parent.\\n' + 'You can add a runtime option to disable the check or this warning:\\n' + 'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details');\n  }\n}\n\nfunction resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(function (propertyName) {\n    delete loggedProperties[propertyName];\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3Byb3RvLWFjY2Vzcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O3FDQUFzQyw0QkFBNEI7O3NCQUMvQyxXQUFXOzs7O0FBRTlCLElBQU0sZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFdEMsU0FBUyx3QkFBd0IsQ0FBQyxjQUFjLEVBQUU7QUFDdkQsTUFBSSxzQkFBc0IsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pELHdCQUFzQixDQUFDLGFBQWEsQ0FBQyxHQUFHLEtBQUssQ0FBQztBQUM5Qyx3QkFBc0IsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLEtBQUssQ0FBQztBQUNuRCx3QkFBc0IsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLEtBQUssQ0FBQztBQUNuRCx3QkFBc0IsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLEtBQUssQ0FBQzs7QUFFbkQsTUFBSSx3QkFBd0IsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUVuRCwwQkFBd0IsQ0FBQyxXQUFXLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRTlDLFNBQU87QUFDTCxjQUFVLEVBQUU7QUFDVixlQUFTLEVBQUUsNkNBQ1Qsd0JBQXdCLEVBQ3hCLGNBQWMsQ0FBQyxzQkFBc0IsQ0FDdEM7QUFDRCxrQkFBWSxFQUFFLGNBQWMsQ0FBQyw2QkFBNkI7S0FDM0Q7QUFDRCxXQUFPLEVBQUU7QUFDUCxlQUFTLEVBQUUsNkNBQ1Qsc0JBQXNCLEVBQ3RCLGNBQWMsQ0FBQyxtQkFBbUIsQ0FDbkM7QUFDRCxrQkFBWSxFQUFFLGNBQWMsQ0FBQywwQkFBMEI7S0FDeEQ7R0FDRixDQUFDO0NBQ0g7O0FBRU0sU0FBUyxlQUFlLENBQUMsTUFBTSxFQUFFLGtCQUFrQixFQUFFLFlBQVksRUFBRTtBQUN4RSxNQUFJLE9BQU8sTUFBTSxLQUFLLFVBQVUsRUFBRTtBQUNoQyxXQUFPLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7R0FDakUsTUFBTTtBQUNMLFdBQU8sY0FBYyxDQUFDLGtCQUFrQixDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztHQUNwRTtDQUNGOztBQUVELFNBQVMsY0FBYyxDQUFDLHlCQUF5QixFQUFFLFlBQVksRUFBRTtBQUMvRCxNQUFJLHlCQUF5QixDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsS0FBSyxTQUFTLEVBQUU7QUFDbkUsV0FBTyx5QkFBeUIsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEtBQUssSUFBSSxDQUFDO0dBQ25FO0FBQ0QsTUFBSSx5QkFBeUIsQ0FBQyxZQUFZLEtBQUssU0FBUyxFQUFFO0FBQ3hELFdBQU8seUJBQXlCLENBQUMsWUFBWSxDQUFDO0dBQy9DO0FBQ0QsZ0NBQThCLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDN0MsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFRCxTQUFTLDhCQUE4QixDQUFDLFlBQVksRUFBRTtBQUNwRCxNQUFJLGdCQUFnQixDQUFDLFlBQVksQ0FBQyxLQUFLLElBQUksRUFBRTtBQUMzQyxvQkFBZ0IsQ0FBQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7QUFDdEMsd0JBQU8sR0FBRyxDQUNSLE9BQU8sRUFDUCxpRUFBK0QsWUFBWSxvSUFDSCxvSEFDMkMsQ0FDcEgsQ0FBQztHQUNIO0NBQ0Y7O0FBRU0sU0FBUyxxQkFBcUIsR0FBRztBQUN0QyxRQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUEsWUFBWSxFQUFJO0FBQ3BELFdBQU8sZ0JBQWdCLENBQUMsWUFBWSxDQUFDLENBQUM7R0FDdkMsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoicHJvdG8tYWNjZXNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTmV3TG9va3VwT2JqZWN0IH0gZnJvbSAnLi9jcmVhdGUtbmV3LWxvb2t1cC1vYmplY3QnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuLi9sb2dnZXInO1xuXG5jb25zdCBsb2dnZWRQcm9wZXJ0aWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByb3RvQWNjZXNzQ29udHJvbChydW50aW1lT3B0aW9ucykge1xuICBsZXQgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3RbJ2NvbnN0cnVjdG9yJ10gPSBmYWxzZTtcbiAgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdFsnX19kZWZpbmVHZXR0ZXJfXyddID0gZmFsc2U7XG4gIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3RbJ19fZGVmaW5lU2V0dGVyX18nXSA9IGZhbHNlO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0WydfX2xvb2t1cEdldHRlcl9fJ10gPSBmYWxzZTtcblxuICBsZXQgZGVmYXVsdFByb3BlcnR5V2hpdGVMaXN0ID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvXG4gIGRlZmF1bHRQcm9wZXJ0eVdoaXRlTGlzdFsnX19wcm90b19fJ10gPSBmYWxzZTtcblxuICByZXR1cm4ge1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHdoaXRlbGlzdDogY3JlYXRlTmV3TG9va3VwT2JqZWN0KFxuICAgICAgICBkZWZhdWx0UHJvcGVydHlXaGl0ZUxpc3QsXG4gICAgICAgIHJ1bnRpbWVPcHRpb25zLmFsbG93ZWRQcm90b1Byb3BlcnRpZXNcbiAgICAgICksXG4gICAgICBkZWZhdWx0VmFsdWU6IHJ1bnRpbWVPcHRpb25zLmFsbG93UHJvdG9Qcm9wZXJ0aWVzQnlEZWZhdWx0XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICB3aGl0ZWxpc3Q6IGNyZWF0ZU5ld0xvb2t1cE9iamVjdChcbiAgICAgICAgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdCxcbiAgICAgICAgcnVudGltZU9wdGlvbnMuYWxsb3dlZFByb3RvTWV0aG9kc1xuICAgICAgKSxcbiAgICAgIGRlZmF1bHRWYWx1ZTogcnVudGltZU9wdGlvbnMuYWxsb3dQcm90b01ldGhvZHNCeURlZmF1bHRcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXN1bHRJc0FsbG93ZWQocmVzdWx0LCBwcm90b0FjY2Vzc0NvbnRyb2wsIHByb3BlcnR5TmFtZSkge1xuICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBjaGVja1doaXRlTGlzdChwcm90b0FjY2Vzc0NvbnRyb2wubWV0aG9kcywgcHJvcGVydHlOYW1lKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gY2hlY2tXaGl0ZUxpc3QocHJvdG9BY2Nlc3NDb250cm9sLnByb3BlcnRpZXMsIHByb3BlcnR5TmFtZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tXaGl0ZUxpc3QocHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZSwgcHJvcGVydHlOYW1lKSB7XG4gIGlmIChwcm90b0FjY2Vzc0NvbnRyb2xGb3JUeXBlLndoaXRlbGlzdFtwcm9wZXJ0eU5hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gcHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS53aGl0ZWxpc3RbcHJvcGVydHlOYW1lXSA9PT0gdHJ1ZTtcbiAgfVxuICBpZiAocHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS5kZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBwcm90b0FjY2Vzc0NvbnRyb2xGb3JUeXBlLmRlZmF1bHRWYWx1ZTtcbiAgfVxuICBsb2dVbmV4cGVjZWRQcm9wZXJ0eUFjY2Vzc09uY2UocHJvcGVydHlOYW1lKTtcbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBsb2dVbmV4cGVjZWRQcm9wZXJ0eUFjY2Vzc09uY2UocHJvcGVydHlOYW1lKSB7XG4gIGlmIChsb2dnZWRQcm9wZXJ0aWVzW3Byb3BlcnR5TmFtZV0gIT09IHRydWUpIHtcbiAgICBsb2dnZWRQcm9wZXJ0aWVzW3Byb3BlcnR5TmFtZV0gPSB0cnVlO1xuICAgIGxvZ2dlci5sb2coXG4gICAgICAnZXJyb3InLFxuICAgICAgYEhhbmRsZWJhcnM6IEFjY2VzcyBoYXMgYmVlbiBkZW5pZWQgdG8gcmVzb2x2ZSB0aGUgcHJvcGVydHkgXCIke3Byb3BlcnR5TmFtZX1cIiBiZWNhdXNlIGl0IGlzIG5vdCBhbiBcIm93biBwcm9wZXJ0eVwiIG9mIGl0cyBwYXJlbnQuXFxuYCArXG4gICAgICAgIGBZb3UgY2FuIGFkZCBhIHJ1bnRpbWUgb3B0aW9uIHRvIGRpc2FibGUgdGhlIGNoZWNrIG9yIHRoaXMgd2FybmluZzpcXG5gICtcbiAgICAgICAgYFNlZSBodHRwczovL2hhbmRsZWJhcnNqcy5jb20vYXBpLXJlZmVyZW5jZS9ydW50aW1lLW9wdGlvbnMuaHRtbCNvcHRpb25zLXRvLWNvbnRyb2wtcHJvdG90eXBlLWFjY2VzcyBmb3IgZGV0YWlsc2BcbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNldExvZ2dlZFByb3BlcnRpZXMoKSB7XG4gIE9iamVjdC5rZXlzKGxvZ2dlZFByb3BlcnRpZXMpLmZvckVhY2gocHJvcGVydHlOYW1lID0+IHtcbiAgICBkZWxldGUgbG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdO1xuICB9KTtcbn1cbiJdfQ==\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('./utils');\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _helpers = require('./helpers');\n\nvar _decorators = require('./decorators');\n\nvar _logger = require('./logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _internalProtoAccess = require('./internal/proto-access');\n\nvar VERSION = '4.7.8';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 8;\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  _helpers.registerDefaultHelpers(this);\n  _decorators.registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: _logger2['default'],\n  log: _logger2['default'].log,\n\n  registerHelper: function registerHelper(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple helpers');\n      }\n      _utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function registerPartial(name, partial) {\n    if (_utils.toString.call(name) === objectType) {\n      _utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function registerDecorator(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple decorators');\n      }\n      _utils.extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function unregisterDecorator(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {\n    _internalProtoAccess.resetLoggedProperties();\n  }\n};\n\nvar log = _logger2['default'].log;\n\nexports.log = log;\nexports.createFrame = _utils.createFrame;\nexports.logger = _logger2['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7cUJBQThDLFNBQVM7O3lCQUNqQyxhQUFhOzs7O3VCQUNJLFdBQVc7OzBCQUNSLGNBQWM7O3NCQUNyQyxVQUFVOzs7O21DQUNTLHlCQUF5Qjs7QUFFeEQsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDOztBQUN4QixJQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBQzs7QUFDNUIsSUFBTSxpQ0FBaUMsR0FBRyxDQUFDLENBQUM7OztBQUU1QyxJQUFNLGdCQUFnQixHQUFHO0FBQzlCLEdBQUMsRUFBRSxhQUFhO0FBQ2hCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxVQUFVO0FBQ2IsR0FBQyxFQUFFLGtCQUFrQjtBQUNyQixHQUFDLEVBQUUsaUJBQWlCO0FBQ3BCLEdBQUMsRUFBRSxpQkFBaUI7QUFDcEIsR0FBQyxFQUFFLFVBQVU7Q0FDZCxDQUFDOzs7QUFFRixJQUFNLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQzs7QUFFOUIsU0FBUyxxQkFBcUIsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRTtBQUNuRSxNQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7QUFDN0IsTUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLElBQUksRUFBRSxDQUFDO0FBQy9CLE1BQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxJQUFJLEVBQUUsQ0FBQzs7QUFFbkMsa0NBQXVCLElBQUksQ0FBQyxDQUFDO0FBQzdCLHdDQUEwQixJQUFJLENBQUMsQ0FBQztDQUNqQzs7QUFFRCxxQkFBcUIsQ0FBQyxTQUFTLEdBQUc7QUFDaEMsYUFBVyxFQUFFLHFCQUFxQjs7QUFFbEMsUUFBTSxxQkFBUTtBQUNkLEtBQUcsRUFBRSxvQkFBTyxHQUFHOztBQUVmLGdCQUFjLEVBQUUsd0JBQVMsSUFBSSxFQUFFLEVBQUUsRUFBRTtBQUNqQyxRQUFJLGdCQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7QUFDdEMsVUFBSSxFQUFFLEVBQUU7QUFDTixjQUFNLDJCQUFjLHlDQUF5QyxDQUFDLENBQUM7T0FDaEU7QUFDRCxvQkFBTyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzVCLE1BQU07QUFDTCxVQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUN6QjtHQUNGO0FBQ0Qsa0JBQWdCLEVBQUUsMEJBQVMsSUFBSSxFQUFFO0FBQy9CLFdBQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUMzQjs7QUFFRCxpQkFBZSxFQUFFLHlCQUFTLElBQUksRUFBRSxPQUFPLEVBQUU7QUFDdkMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLG9CQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDN0IsTUFBTTtBQUNMLFVBQUksT0FBTyxPQUFPLEtBQUssV0FBVyxFQUFFO0FBQ2xDLGNBQU0seUVBQ3dDLElBQUksb0JBQ2pELENBQUM7T0FDSDtBQUNELFVBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDO0tBQy9CO0dBQ0Y7QUFDRCxtQkFBaUIsRUFBRSwyQkFBUyxJQUFJLEVBQUU7QUFDaEMsV0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQzVCOztBQUVELG1CQUFpQixFQUFFLDJCQUFTLElBQUksRUFBRSxFQUFFLEVBQUU7QUFDcEMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLFVBQUksRUFBRSxFQUFFO0FBQ04sY0FBTSwyQkFBYyw0Q0FBNEMsQ0FBQyxDQUFDO09BQ25FO0FBQ0Qsb0JBQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMvQixNQUFNO0FBQ0wsVUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDNUI7R0FDRjtBQUNELHFCQUFtQixFQUFFLDZCQUFTLElBQUksRUFBRTtBQUNsQyxXQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDOUI7Ozs7O0FBS0QsNkJBQTJCLEVBQUEsdUNBQUc7QUFDNUIsZ0RBQXVCLENBQUM7R0FDekI7Q0FDRixDQUFDOztBQUVLLElBQUksR0FBRyxHQUFHLG9CQUFPLEdBQUcsQ0FBQzs7O1FBRW5CLFdBQVc7UUFBRSxNQUFNIiwiZmlsZSI6ImJhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVGcmFtZSwgZXh0ZW5kLCB0b1N0cmluZyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuL2V4Y2VwdGlvbic7XG5pbXBvcnQgeyByZWdpc3RlckRlZmF1bHRIZWxwZXJzIH0gZnJvbSAnLi9oZWxwZXJzJztcbmltcG9ydCB7IHJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnMgfSBmcm9tICcuL2RlY29yYXRvcnMnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgeyByZXNldExvZ2dlZFByb3BlcnRpZXMgfSBmcm9tICcuL2ludGVybmFsL3Byb3RvLWFjY2Vzcyc7XG5cbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzQuNy44JztcbmV4cG9ydCBjb25zdCBDT01QSUxFUl9SRVZJU0lPTiA9IDg7XG5leHBvcnQgY29uc3QgTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OID0gNztcblxuZXhwb3J0IGNvbnN0IFJFVklTSU9OX0NIQU5HRVMgPSB7XG4gIDE6ICc8PSAxLjAucmMuMicsIC8vIDEuMC5yYy4yIGlzIGFjdHVhbGx5IHJldjIgYnV0IGRvZXNuJ3QgcmVwb3J0IGl0XG4gIDI6ICc9PSAxLjAuMC1yYy4zJyxcbiAgMzogJz09IDEuMC4wLXJjLjQnLFxuICA0OiAnPT0gMS54LngnLFxuICA1OiAnPT0gMi4wLjAtYWxwaGEueCcsXG4gIDY6ICc+PSAyLjAuMC1iZXRhLjEnLFxuICA3OiAnPj0gNC4wLjAgPDQuMy4wJyxcbiAgODogJz49IDQuMy4wJ1xufTtcblxuY29uc3Qgb2JqZWN0VHlwZSA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG5leHBvcnQgZnVuY3Rpb24gSGFuZGxlYmFyc0Vudmlyb25tZW50KGhlbHBlcnMsIHBhcnRpYWxzLCBkZWNvcmF0b3JzKSB7XG4gIHRoaXMuaGVscGVycyA9IGhlbHBlcnMgfHwge307XG4gIHRoaXMucGFydGlhbHMgPSBwYXJ0aWFscyB8fCB7fTtcbiAgdGhpcy5kZWNvcmF0b3JzID0gZGVjb3JhdG9ycyB8fCB7fTtcblxuICByZWdpc3RlckRlZmF1bHRIZWxwZXJzKHRoaXMpO1xuICByZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzKHRoaXMpO1xufVxuXG5IYW5kbGViYXJzRW52aXJvbm1lbnQucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogSGFuZGxlYmFyc0Vudmlyb25tZW50LFxuXG4gIGxvZ2dlcjogbG9nZ2VyLFxuICBsb2c6IGxvZ2dlci5sb2csXG5cbiAgcmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUsIGZuKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIGlmIChmbikge1xuICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGhlbHBlcnMnKTtcbiAgICAgIH1cbiAgICAgIGV4dGVuZCh0aGlzLmhlbHBlcnMsIG5hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhlbHBlcnNbbmFtZV0gPSBmbjtcbiAgICB9XG4gIH0sXG4gIHVucmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5oZWxwZXJzW25hbWVdO1xuICB9LFxuXG4gIHJlZ2lzdGVyUGFydGlhbDogZnVuY3Rpb24obmFtZSwgcGFydGlhbCkge1xuICAgIGlmICh0b1N0cmluZy5jYWxsKG5hbWUpID09PSBvYmplY3RUeXBlKSB7XG4gICAgICBleHRlbmQodGhpcy5wYXJ0aWFscywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlb2YgcGFydGlhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihcbiAgICAgICAgICBgQXR0ZW1wdGluZyB0byByZWdpc3RlciBhIHBhcnRpYWwgY2FsbGVkIFwiJHtuYW1lfVwiIGFzIHVuZGVmaW5lZGBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucGFydGlhbHNbbmFtZV0gPSBwYXJ0aWFsO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlclBhcnRpYWw6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5wYXJ0aWFsc1tuYW1lXTtcbiAgfSxcblxuICByZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSwgZm4pIHtcbiAgICBpZiAodG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ0FyZyBub3Qgc3VwcG9ydGVkIHdpdGggbXVsdGlwbGUgZGVjb3JhdG9ycycpO1xuICAgICAgfVxuICAgICAgZXh0ZW5kKHRoaXMuZGVjb3JhdG9ycywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGVjb3JhdG9yc1tuYW1lXSA9IGZuO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLmRlY29yYXRvcnNbbmFtZV07XG4gIH0sXG4gIC8qKlxuICAgKiBSZXNldCB0aGUgbWVtb3J5IG9mIGlsbGVnYWwgcHJvcGVydHkgYWNjZXNzZXMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBsb2dnZWQuXG4gICAqIEBkZXByZWNhdGVkIHNob3VsZCBvbmx5IGJlIHVzZWQgaW4gaGFuZGxlYmFycyB0ZXN0LWNhc2VzXG4gICAqL1xuICByZXNldExvZ2dlZFByb3BlcnR5QWNjZXNzZXMoKSB7XG4gICAgcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCk7XG4gIH1cbn07XG5cbmV4cG9ydCBsZXQgbG9nID0gbG9nZ2VyLmxvZztcblxuZXhwb3J0IHsgY3JlYXRlRnJhbWUsIGxvZ2dlciB9O1xuIl19\n",
    "// Build out our basic SafeString type\n'use strict';\n\nexports.__esModule = true;\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n  return '' + this.string;\n};\n\nexports['default'] = SafeString;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUU7QUFDMUIsTUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7Q0FDdEI7O0FBRUQsVUFBVSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsWUFBVztBQUN2RSxTQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0NBQ3pCLENBQUM7O3FCQUVhLFVBQVUiLCJmaWxlIjoic2FmZS1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCdWlsZCBvdXQgb3VyIGJhc2ljIFNhZmVTdHJpbmcgdHlwZVxuZnVuY3Rpb24gU2FmZVN0cmluZyhzdHJpbmcpIHtcbiAgdGhpcy5zdHJpbmcgPSBzdHJpbmc7XG59XG5cblNhZmVTdHJpbmcucHJvdG90eXBlLnRvU3RyaW5nID0gU2FmZVN0cmluZy5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FmZVN0cmluZztcbiJdfQ==\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.wrapHelper = wrapHelper;\n\nfunction wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  var wrapper = function wrapper() /* dynamic arguments */{\n    var options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3dyYXBIZWxwZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUUsa0JBQWtCLEVBQUU7QUFDckQsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7OztBQUdoQyxXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsTUFBSSxPQUFPLEdBQUcsU0FBVixPQUFPLDBCQUFxQztBQUM5QyxRQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNoRCxhQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM5RCxXQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQ3RDLENBQUM7QUFDRixTQUFPLE9BQU8sQ0FBQztDQUNoQiIsImZpbGUiOiJ3cmFwSGVscGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHdyYXBIZWxwZXIoaGVscGVyLCB0cmFuc2Zvcm1PcHRpb25zRm4pIHtcbiAgaWYgKHR5cGVvZiBoZWxwZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBub3QgaGFwcGVuLCBidXQgYXBwYXJlbnRseSBpdCBkb2VzIGluIGh0dHBzOi8vZ2l0aHViLmNvbS93eWNhdHMvaGFuZGxlYmFycy5qcy9pc3N1ZXMvMTYzOVxuICAgIC8vIFdlIHRyeSB0byBtYWtlIHRoZSB3cmFwcGVyIGxlYXN0LWludmFzaXZlIGJ5IG5vdCB3cmFwcGluZyBpdCwgaWYgdGhlIGhlbHBlciBpcyBub3QgYSBmdW5jdGlvbi5cbiAgICByZXR1cm4gaGVscGVyO1xuICB9XG4gIGxldCB3cmFwcGVyID0gZnVuY3Rpb24oLyogZHluYW1pYyBhcmd1bWVudHMgKi8pIHtcbiAgICBjb25zdCBvcHRpb25zID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdID0gdHJhbnNmb3JtT3B0aW9uc0ZuKG9wdGlvbnMpO1xuICAgIHJldHVybiBoZWxwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbiAgcmV0dXJuIHdyYXBwZXI7XG59XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _utils = require('./utils');\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _base = require('./base');\n\nvar _helpers = require('./helpers');\n\nvar _internalWrapHelper = require('./internal/wrapHelper');\n\nvar _internalProtoAccess = require('./internal/proto-access');\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = _base.COMPILER_REVISION;\n\n  if (compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= _base.COMPILER_REVISION) {\n    return;\n  }\n\n  if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {\n    var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n        compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n    throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n  }\n}\n\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _exception2['default']('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    var extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    var result = env.VM.invokePartial.call(this, partial, context, extendedOptions);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  var container = {\n    strict: function strict(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function lookupProperty(parent, propertyName) {\n      var result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (_internalProtoAccess.resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n      for (var i = 0; i < len; i++) {\n        var result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function fn(i) {\n      var ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function mergeIfNeeded(param, common) {\n      var obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    var depths = undefined,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function (options) {\n    if (!options.partial) {\n      var mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(options.partials, env.partials);\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend({}, env.decorators, options.decorators);\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(options);\n\n      var keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n      _helpers.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      _helpers.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _exception2['default']('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new _exception2['default']('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var currentDepths = depths;\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nfunction invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  var currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  var partialBlock = undefined;\n  if (options.fn && options.fn !== noop) {\n    (function () {\n      options.data = _base.createFrame(options.data);\n      // Wrapper function to get access to currentPartialBlock from the closure\n      var fn = options.fn;\n      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        // Restore the partial-block from the closure for the execution of the block\n        // i.e. the part inside the block of the partial call.\n        options.data = _base.createFrame(options.data);\n        options.data['partial-block'] = currentPartialBlock;\n        return fn(context, options);\n      };\n      if (fn.partials) {\n        options.partials = Utils.extend({}, options.partials, fn.partials);\n      }\n    })();\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nfunction noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _base.createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    var props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(function (helperName) {\n    var helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  var lookupProperty = container.lookupProperty;\n  return _internalWrapHelper.wrapHelper(helper, function (options) {\n    return Utils.extend({ lookupProperty: lookupProperty }, options);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3J1bnRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7cUJBQXVCLFNBQVM7O0lBQXBCLEtBQUs7O3lCQUNLLGFBQWE7Ozs7b0JBTTVCLFFBQVE7O3VCQUNtQixXQUFXOztrQ0FDbEIsdUJBQXVCOzttQ0FJM0MseUJBQXlCOztBQUV6QixTQUFTLGFBQWEsQ0FBQyxZQUFZLEVBQUU7QUFDMUMsTUFBTSxnQkFBZ0IsR0FBRyxBQUFDLFlBQVksSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUssQ0FBQztNQUM3RCxlQUFlLDBCQUFvQixDQUFDOztBQUV0QyxNQUNFLGdCQUFnQiwyQ0FBcUMsSUFDckQsZ0JBQWdCLDJCQUFxQixFQUNyQztBQUNBLFdBQU87R0FDUjs7QUFFRCxNQUFJLGdCQUFnQiwwQ0FBb0MsRUFBRTtBQUN4RCxRQUFNLGVBQWUsR0FBRyx1QkFBaUIsZUFBZSxDQUFDO1FBQ3ZELGdCQUFnQixHQUFHLHVCQUFpQixnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3hELFVBQU0sMkJBQ0oseUZBQXlGLEdBQ3ZGLHFEQUFxRCxHQUNyRCxlQUFlLEdBQ2YsbURBQW1ELEdBQ25ELGdCQUFnQixHQUNoQixJQUFJLENBQ1AsQ0FBQztHQUNILE1BQU07O0FBRUwsVUFBTSwyQkFDSix3RkFBd0YsR0FDdEYsaURBQWlELEdBQ2pELFlBQVksQ0FBQyxDQUFDLENBQUMsR0FDZixJQUFJLENBQ1AsQ0FBQztHQUNIO0NBQ0Y7O0FBRU0sU0FBUyxRQUFRLENBQUMsWUFBWSxFQUFFLEdBQUcsRUFBRTs7QUFFMUMsTUFBSSxDQUFDLEdBQUcsRUFBRTtBQUNSLFVBQU0sMkJBQWMsbUNBQW1DLENBQUMsQ0FBQztHQUMxRDtBQUNELE1BQUksQ0FBQyxZQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFO0FBQ3ZDLFVBQU0sMkJBQWMsMkJBQTJCLEdBQUcsT0FBTyxZQUFZLENBQUMsQ0FBQztH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QUFDbkMsV0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsY0FBYyxFQUFkLGNBQWMsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0dBQ2xELENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6InJ1bnRpbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBVdGlscyBmcm9tICcuL3V0aWxzJztcbmltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi9leGNlcHRpb24nO1xuaW1wb3J0IHtcbiAgQ09NUElMRVJfUkVWSVNJT04sXG4gIGNyZWF0ZUZyYW1lLFxuICBMQVNUX0NPTVBBVElCTEVfQ09NUElMRVJfUkVWSVNJT04sXG4gIFJFVklTSU9OX0NIQU5HRVNcbn0gZnJvbSAnLi9iYXNlJztcbmltcG9ydCB7IG1vdmVIZWxwZXJUb0hvb2tzIH0gZnJvbSAnLi9oZWxwZXJzJztcbmltcG9ydCB7IHdyYXBIZWxwZXIgfSBmcm9tICcuL2ludGVybmFsL3dyYXBIZWxwZXInO1xuaW1wb3J0IHtcbiAgY3JlYXRlUHJvdG9BY2Nlc3NDb250cm9sLFxuICByZXN1bHRJc0FsbG93ZWRcbn0gZnJvbSAnLi9pbnRlcm5hbC9wcm90by1hY2Nlc3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tSZXZpc2lvbihjb21waWxlckluZm8pIHtcbiAgY29uc3QgY29tcGlsZXJSZXZpc2lvbiA9IChjb21waWxlckluZm8gJiYgY29tcGlsZXJJbmZvWzBdKSB8fCAxLFxuICAgIGN1cnJlbnRSZXZpc2lvbiA9IENPTVBJTEVSX1JFVklTSU9OO1xuXG4gIGlmIChcbiAgICBjb21waWxlclJldmlzaW9uID49IExBU1RfQ09NUEFUSUJMRV9DT01QSUxFUl9SRVZJU0lPTiAmJlxuICAgIGNvbXBpbGVyUmV2aXNpb24gPD0gQ09NUElMRVJfUkVWSVNJT05cbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGNvbXBpbGVyUmV2aXNpb24gPCBMQVNUX0NPTVBBVElCTEVfQ09NUElMRVJfUkVWSVNJT04pIHtcbiAgICBjb25zdCBydW50aW1lVmVyc2lvbnMgPSBSRVZJU0lPTl9DSEFOR0VTW2N1cnJlbnRSZXZpc2lvbl0sXG4gICAgICBjb21waWxlclZlcnNpb25zID0gUkVWSVNJT05fQ0hBTkdFU1tjb21waWxlclJldmlzaW9uXTtcbiAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKFxuICAgICAgJ1RlbXBsYXRlIHdhcyBwcmVjb21waWxlZCB3aXRoIGFuIG9sZGVyIHZlcnNpb24gb2YgSGFuZGxlYmFycyB0aGFuIHRoZSBjdXJyZW50IHJ1bnRpbWUuICcgK1xuICAgICAgICAnUGxlYXNlIHVwZGF0ZSB5b3VyIHByZWNvbXBpbGVyIHRvIGEgbmV3ZXIgdmVyc2lvbiAoJyArXG4gICAgICAgIHJ1bnRpbWVWZXJzaW9ucyArXG4gICAgICAgICcpIG9yIGRvd25ncmFkZSB5b3VyIHJ1bnRpbWUgdG8gYW4gb2xkZXIgdmVyc2lvbiAoJyArXG4gICAgICAgIGNvbXBpbGVyVmVyc2lvbnMgK1xuICAgICAgICAnKS4nXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBVc2UgdGhlIGVtYmVkZGVkIHZlcnNpb24gaW5mbyBzaW5jZSB0aGUgcnVudGltZSBkb2Vzbid0IGtub3cgYWJvdXQgdGhpcyByZXZpc2lvbiB5ZXRcbiAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKFxuICAgICAgJ1RlbXBsYXRlIHdhcyBwcmVjb21waWxlZCB3aXRoIGEgbmV3ZXIgdmVyc2lvbiBvZiBIYW5kbGViYXJzIHRoYW4gdGhlIGN1cnJlbnQgcnVudGltZS4gJyArXG4gICAgICAgICdQbGVhc2UgdXBkYXRlIHlvdXIgcnVudGltZSB0byBhIG5ld2VyIHZlcnNpb24gKCcgK1xuICAgICAgICBjb21waWxlckluZm9bMV0gK1xuICAgICAgICAnKS4nXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdGVtcGxhdGUodGVtcGxhdGVTcGVjLCBlbnYpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgaWYgKCFlbnYpIHtcbiAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdObyBlbnZpcm9ubWVudCBwYXNzZWQgdG8gdGVtcGxhdGUnKTtcbiAgfVxuICBpZiAoIXRlbXBsYXRlU3BlYyB8fCAhdGVtcGxhdGVTcGVjLm1haW4pIHtcbiAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdVbmtub3duIHRlbXBsYXRlIG9iamVjdDogJyArIHR5cGVvZiB0ZW1wbGF0ZVNwZWMpO1xuICB9XG5cbiAgdGVtcGxhdGVTcGVjLm1haW4uZGVjb3JhdG9yID0gdGVtcGxhdGVTcGVjLm1haW5fZDtcblxuICAvLyBOb3RlOiBVc2luZyBlbnYuVk0gcmVmZXJlbmNlcyByYXRoZXIgdGhhbiBsb2NhbCB2YXIgcmVmZXJlbmNlcyB0aHJvdWdob3V0IHRoaXMgc2VjdGlvbiB0byBhbGxvd1xuICAvLyBmb3IgZXh0ZXJuYWwgdXNlcnMgdG8gb3ZlcnJpZGUgdGhlc2UgYXMgcHNldWRvLXN1cHBvcnRlZCBBUElzLlxuICBlbnYuVk0uY2hlY2tSZXZpc2lvbih0ZW1wbGF0ZVNwZWMuY29tcGlsZXIpO1xuXG4gIC8vIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGZvciBwcmVjb21waWxlZCB0ZW1wbGF0ZXMgd2l0aCBjb21waWxlci12ZXJzaW9uIDcgKDw0LjMuMClcbiAgY29uc3QgdGVtcGxhdGVXYXNQcmVjb21waWxlZFdpdGhDb21waWxlclY3ID1cbiAgICB0ZW1wbGF0ZVNwZWMuY29tcGlsZXIgJiYgdGVtcGxhdGVTcGVjLmNvbXBpbGVyWzBdID09PSA3O1xuXG4gIGZ1bmN0aW9uIGludm9rZVBhcnRpYWxXcmFwcGVyKHBhcnRpYWwsIGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgICBjb250ZXh0ID0gVXRpbHMuZXh0ZW5kKHt9LCBjb250ZXh0LCBvcHRpb25zLmhhc2gpO1xuICAgICAgaWYgKG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIG9wdGlvbnMuaWRzWzBdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcGFydGlhbCA9IGVudi5WTS5yZXNvbHZlUGFydGlhbC5jYWxsKHRoaXMsIHBhcnRpYWwsIGNvbnRleHQsIG9wdGlvbnMpO1xuXG4gICAgbGV0IGV4dGVuZGVkT3B0aW9ucyA9IFV0aWxzLmV4dGVuZCh7fSwgb3B0aW9ucywge1xuICAgICAgaG9va3M6IHRoaXMuaG9va3MsXG4gICAgICBwcm90b0FjY2Vzc0NvbnRyb2w6IHRoaXMucHJvdG9BY2Nlc3NDb250cm9sXG4gICAgfSk7XG5cbiAgICBsZXQgcmVzdWx0ID0gZW52LlZNLmludm9rZVBhcnRpYWwuY2FsbChcbiAgICAgIHRoaXMsXG4gICAgICBwYXJ0aWFsLFxuICAgICAgY29udGV4dCxcbiAgICAgIGV4dGVuZGVkT3B0aW9uc1xuICAgICk7XG5cbiAgICBpZiAocmVzdWx0ID09IG51bGwgJiYgZW52LmNvbXBpbGUpIHtcbiAgICAgIG9wdGlvbnMucGFydGlhbHNbb3B0aW9ucy5uYW1lXSA9IGVudi5jb21waWxlKFxuICAgICAgICBwYXJ0aWFsLFxuICAgICAgICB0ZW1wbGF0ZVNwZWMuY29tcGlsZXJPcHRpb25zLFxuICAgICAgICBlbnZcbiAgICAgICk7XG4gICAgICByZXN1bHQgPSBvcHRpb25zLnBhcnRpYWxzW29wdGlvbnMubmFtZV0oY29udGV4dCwgZXh0ZW5kZWRPcHRpb25zKTtcbiAgICB9XG4gICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICBpZiAob3B0aW9ucy5pbmRlbnQpIHtcbiAgICAgICAgbGV0IGxpbmVzID0gcmVzdWx0LnNwbGl0KCdcXG4nKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5lcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICBpZiAoIWxpbmVzW2ldICYmIGkgKyAxID09PSBsKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsaW5lc1tpXSA9IG9wdGlvbnMuaW5kZW50ICsgbGluZXNbaV07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gbGluZXMuam9pbignXFxuJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKFxuICAgICAgICAnVGhlIHBhcnRpYWwgJyArXG4gICAgICAgICAgb3B0aW9ucy5uYW1lICtcbiAgICAgICAgICAnIGNvdWxkIG5vdCBiZSBjb21waWxlZCB3aGVuIHJ1bm5pbmcgaW4gcnVudGltZS1vbmx5IG1vZGUnXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8vIEp1c3QgYWRkIHdhdGVyXG4gIGxldCBjb250YWluZXIgPSB7XG4gICAgc3RyaWN0OiBmdW5jdGlvbihvYmosIG5hbWUsIGxvYykge1xuICAgICAgaWYgKCFvYmogfHwgIShuYW1lIGluIG9iaikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbignXCInICsgbmFtZSArICdcIiBub3QgZGVmaW5lZCBpbiAnICsgb2JqLCB7XG4gICAgICAgICAgbG9jOiBsb2NcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGFpbmVyLmxvb2t1cFByb3BlcnR5KG9iaiwgbmFtZSk7XG4gICAgfSxcbiAgICBsb29rdXBQcm9wZXJ0eTogZnVuY3Rpb24ocGFyZW50LCBwcm9wZXJ0eU5hbWUpIHtcbiAgICAgIGxldCByZXN1bHQgPSBwYXJlbnRbcHJvcGVydHlOYW1lXTtcbiAgICAgIGlmIChyZXN1bHQgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwYXJlbnQsIHByb3BlcnR5TmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cblxuICAgICAgaWYgKHJlc3VsdElzQWxsb3dlZChyZXN1bHQsIGNvbnRhaW5lci5wcm90b0FjY2Vzc0NvbnRyb2wsIHByb3BlcnR5TmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgICBsb29rdXA6IGZ1bmN0aW9uKGRlcHRocywgbmFtZSkge1xuICAgICAgY29uc3QgbGVuID0gZGVwdGhzLmxlbmd0aDtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGRlcHRoc1tpXSAmJiBjb250YWluZXIubG9va3VwUHJvcGVydHkoZGVwdGhzW2ldLCBuYW1lKTtcbiAgICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIGRlcHRoc1tpXVtuYW1lXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgbGFtYmRhOiBmdW5jdGlvbihjdXJyZW50LCBjb250ZXh0KSB7XG4gICAgICByZXR1cm4gdHlwZW9mIGN1cnJlbnQgPT09ICdmdW5jdGlvbicgPyBjdXJyZW50LmNhbGwoY29udGV4dCkgOiBjdXJyZW50O1xuICAgIH0sXG5cbiAgICBlc2NhcGVFeHByZXNzaW9uOiBVdGlscy5lc2NhcGVFeHByZXNzaW9uLFxuICAgIGludm9rZVBhcnRpYWw6IGludm9rZVBhcnRpYWxXcmFwcGVyLFxuXG4gICAgZm46IGZ1bmN0aW9uKGkpIHtcbiAgICAgIGxldCByZXQgPSB0ZW1wbGF0ZVNwZWNbaV07XG4gICAgICByZXQuZGVjb3JhdG9yID0gdGVtcGxhdGVTcGVjW2kgKyAnX2QnXTtcbiAgICAgIHJldHVybiByZXQ7XG4gICAgfSxcblxuICAgIHByb2dyYW1zOiBbXSxcbiAgICBwcm9ncmFtOiBmdW5jdGlvbihpLCBkYXRhLCBkZWNsYXJlZEJsb2NrUGFyYW1zLCBibG9ja1BhcmFtcywgZGVwdGhzKSB7XG4gICAgICBsZXQgcHJvZ3JhbVdyYXBwZXIgPSB0aGlzLnByb2dyYW1zW2ldLFxuICAgICAgICBmbiA9IHRoaXMuZm4oaSk7XG4gICAgICBpZiAoZGF0YSB8fCBkZXB0aHMgfHwgYmxvY2tQYXJhbXMgfHwgZGVjbGFyZWRCbG9ja1BhcmFtcykge1xuICAgICAgICBwcm9ncmFtV3JhcHBlciA9IHdyYXBQcm9ncmFtKFxuICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgaSxcbiAgICAgICAgICBmbixcbiAgICAgICAgICBkYXRhLFxuICAgICAgICAgIGRlY2xhcmVkQmxvY2tQYXJhbXMsXG4gICAgICAgICAgYmxvY2tQYXJhbXMsXG4gICAgICAgICAgZGVwdGhzXG4gICAgICAgICk7XG4gICAgICB9IGVsc2UgaWYgKCFwcm9ncmFtV3JhcHBlcikge1xuICAgICAgICBwcm9ncmFtV3JhcHBlciA9IHRoaXMucHJvZ3JhbXNbaV0gPSB3cmFwUHJvZ3JhbSh0aGlzLCBpLCBmbik7XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJvZ3JhbVdyYXBwZXI7XG4gICAgfSxcblxuICAgIGRhdGE6IGZ1bmN0aW9uKHZhbHVlLCBkZXB0aCkge1xuICAgICAgd2hpbGUgKHZhbHVlICYmIGRlcHRoLS0pIHtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5fcGFyZW50O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgbWVyZ2VJZk5lZWRlZDogZnVuY3Rpb24ocGFyYW0sIGNvbW1vbikge1xuICAgICAgbGV0IG9iaiA9IHBhcmFtIHx8IGNvbW1vbjtcblxuICAgICAgaWYgKHBhcmFtICYmIGNvbW1vbiAmJiBwYXJhbSAhPT0gY29tbW9uKSB7XG4gICAgICAgIG9iaiA9IFV0aWxzLmV4dGVuZCh7fSwgY29tbW9uLCBwYXJhbSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvYmo7XG4gICAgfSxcbiAgICAvLyBBbiBlbXB0eSBvYmplY3QgdG8gdXNlIGFzIHJlcGxhY2VtZW50IGZvciBudWxsLWNvbnRleHRzXG4gICAgbnVsbENvbnRleHQ6IE9iamVjdC5zZWFsKHt9KSxcblxuICAgIG5vb3A6IGVudi5WTS5ub29wLFxuICAgIGNvbXBpbGVySW5mbzogdGVtcGxhdGVTcGVjLmNvbXBpbGVyXG4gIH07XG5cbiAgZnVuY3Rpb24gcmV0KGNvbnRleHQsIG9wdGlvbnMgPSB7fSkge1xuICAgIGxldCBkYXRhID0gb3B0aW9ucy5kYXRhO1xuXG4gICAgcmV0Ll9zZXR1cChvcHRpb25zKTtcbiAgICBpZiAoIW9wdGlvbnMucGFydGlhbCAmJiB0ZW1wbGF0ZVNwZWMudXNlRGF0YSkge1xuICAgICAgZGF0YSA9IGluaXREYXRhKGNvbnRleHQsIGRhdGEpO1xuICAgIH1cbiAgICBsZXQgZGVwdGhzLFxuICAgICAgYmxvY2tQYXJhbXMgPSB0ZW1wbGF0ZVNwZWMudXNlQmxvY2tQYXJhbXMgPyBbXSA6IHVuZGVmaW5lZDtcbiAgICBpZiAodGVtcGxhdGVTcGVjLnVzZURlcHRocykge1xuICAgICAgaWYgKG9wdGlvbnMuZGVwdGhzKSB7XG4gICAgICAgIGRlcHRocyA9XG4gICAgICAgICAgY29udGV4dCAhPSBvcHRpb25zLmRlcHRoc1swXVxuICAgICAgICAgICAgPyBbY29udGV4dF0uY29uY2F0KG9wdGlvbnMuZGVwdGhzKVxuICAgICAgICAgICAgOiBvcHRpb25zLmRlcHRocztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlcHRocyA9IFtjb250ZXh0XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtYWluKGNvbnRleHQgLyosIG9wdGlvbnMqLykge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgJycgK1xuICAgICAgICB0ZW1wbGF0ZVNwZWMubWFpbihcbiAgICAgICAgICBjb250YWluZXIsXG4gICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICBjb250YWluZXIuaGVscGVycyxcbiAgICAgICAgICBjb250YWluZXIucGFydGlhbHMsXG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBibG9ja1BhcmFtcyxcbiAgICAgICAgICBkZXB0aHNcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBtYWluID0gZXhlY3V0ZURlY29yYXRvcnMoXG4gICAgICB0ZW1wbGF0ZVNwZWMubWFpbixcbiAgICAgIG1haW4sXG4gICAgICBjb250YWluZXIsXG4gICAgICBvcHRpb25zLmRlcHRocyB8fCBbXSxcbiAgICAgIGRhdGEsXG4gICAgICBibG9ja1BhcmFtc1xuICAgICk7XG4gICAgcmV0dXJuIG1haW4oY29udGV4dCwgb3B0aW9ucyk7XG4gIH1cblxuICByZXQuaXNUb3AgPSB0cnVlO1xuXG4gIHJldC5fc2V0dXAgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgaWYgKCFvcHRpb25zLnBhcnRpYWwpIHtcbiAgICAgIGxldCBtZXJnZWRIZWxwZXJzID0gVXRpbHMuZXh0ZW5kKHt9LCBlbnYuaGVscGVycywgb3B0aW9ucy5oZWxwZXJzKTtcbiAgICAgIHdyYXBIZWxwZXJzVG9QYXNzTG9va3VwUHJvcGVydHkobWVyZ2VkSGVscGVycywgY29udGFpbmVyKTtcbiAgICAgIGNvbnRhaW5lci5oZWxwZXJzID0gbWVyZ2VkSGVscGVycztcblxuICAgICAgaWYgKHRlbXBsYXRlU3BlYy51c2VQYXJ0aWFsKSB7XG4gICAgICAgIC8vIFVzZSBtZXJnZUlmTmVlZGVkIGhlcmUgdG8gcHJldmVudCBjb21waWxpbmcgZ2xvYmFsIHBhcnRpYWxzIG11bHRpcGxlIHRpbWVzXG4gICAgICAgIGNvbnRhaW5lci5wYXJ0aWFscyA9IGNvbnRhaW5lci5tZXJnZUlmTmVlZGVkKFxuICAgICAgICAgIG9wdGlvbnMucGFydGlhbHMsXG4gICAgICAgICAgZW52LnBhcnRpYWxzXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAodGVtcGxhdGVTcGVjLnVzZVBhcnRpYWwgfHwgdGVtcGxhdGVTcGVjLnVzZURlY29yYXRvcnMpIHtcbiAgICAgICAgY29udGFpbmVyLmRlY29yYXRvcnMgPSBVdGlscy5leHRlbmQoXG4gICAgICAgICAge30sXG4gICAgICAgICAgZW52LmRlY29yYXRvcnMsXG4gICAgICAgICAgb3B0aW9ucy5kZWNvcmF0b3JzXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRhaW5lci5ob29rcyA9IHt9O1xuICAgICAgY29udGFpbmVyLnByb3RvQWNjZXNzQ29udHJvbCA9IGNyZWF0ZVByb3RvQWNjZXNzQ29udHJvbChvcHRpb25zKTtcblxuICAgICAgbGV0IGtlZXBIZWxwZXJJbkhlbHBlcnMgPVxuICAgICAgICBvcHRpb25zLmFsbG93Q2FsbHNUb0hlbHBlck1pc3NpbmcgfHxcbiAgICAgICAgdGVtcGxhdGVXYXNQcmVjb21waWxlZFdpdGhDb21waWxlclY3O1xuICAgICAgbW92ZUhlbHBlclRvSG9va3MoY29udGFpbmVyLCAnaGVscGVyTWlzc2luZycsIGtlZXBIZWxwZXJJbkhlbHBlcnMpO1xuICAgICAgbW92ZUhlbHBlclRvSG9va3MoY29udGFpbmVyLCAnYmxvY2tIZWxwZXJNaXNzaW5nJywga2VlcEhlbHBlckluSGVscGVycyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnRhaW5lci5wcm90b0FjY2Vzc0NvbnRyb2wgPSBvcHRpb25zLnByb3RvQWNjZXNzQ29udHJvbDsgLy8gaW50ZXJuYWwgb3B0aW9uXG4gICAgICBjb250YWluZXIuaGVscGVycyA9IG9wdGlvbnMuaGVscGVycztcbiAgICAgIGNvbnRhaW5lci5wYXJ0aWFscyA9IG9wdGlvbnMucGFydGlhbHM7XG4gICAgICBjb250YWluZXIuZGVjb3JhdG9ycyA9IG9wdGlvbnMuZGVjb3JhdG9ycztcbiAgICAgIGNvbnRhaW5lci5ob29rcyA9IG9wdGlvbnMuaG9va3M7XG4gICAgfVxuICB9O1xuXG4gIHJldC5fY2hpbGQgPSBmdW5jdGlvbihpLCBkYXRhLCBibG9ja1BhcmFtcywgZGVwdGhzKSB7XG4gICAgaWYgKHRlbXBsYXRlU3BlYy51c2VCbG9ja1BhcmFtcyAmJiAhYmxvY2tQYXJhbXMpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ211c3QgcGFzcyBibG9jayBwYXJhbXMnKTtcbiAgICB9XG4gICAgaWYgKHRlbXBsYXRlU3BlYy51c2VEZXB0aHMgJiYgIWRlcHRocykge1xuICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbignbXVzdCBwYXNzIHBhcmVudCBkZXB0aHMnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gd3JhcFByb2dyYW0oXG4gICAgICBjb250YWluZXIsXG4gICAgICBpLFxuICAgICAgdGVtcGxhdGVTcGVjW2ldLFxuICAgICAgZGF0YSxcbiAgICAgIDAsXG4gICAgICBibG9ja1BhcmFtcyxcbiAgICAgIGRlcHRoc1xuICAgICk7XG4gIH07XG4gIHJldHVybiByZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwUHJvZ3JhbShcbiAgY29udGFpbmVyLFxuICBpLFxuICBmbixcbiAgZGF0YSxcbiAgZGVjbGFyZWRCbG9ja1BhcmFtcyxcbiAgYmxvY2tQYXJhbXMsXG4gIGRlcHRoc1xuKSB7XG4gIGZ1bmN0aW9uIHByb2coY29udGV4dCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgbGV0IGN1cnJlbnREZXB0aHMgPSBkZXB0aHM7XG4gICAgaWYgKFxuICAgICAgZGVwdGhzICYmXG4gICAgICBjb250ZXh0ICE9IGRlcHRoc1swXSAmJlxuICAgICAgIShjb250ZXh0ID09PSBjb250YWluZXIubnVsbENvbnRleHQgJiYgZGVwdGhzWzBdID09PSBudWxsKVxuICAgICkge1xuICAgICAgY3VycmVudERlcHRocyA9IFtjb250ZXh0XS5jb25jYXQoZGVwdGhzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZm4oXG4gICAgICBjb250YWluZXIsXG4gICAgICBjb250ZXh0LFxuICAgICAgY29udGFpbmVyLmhlbHBlcnMsXG4gICAgICBjb250YWluZXIucGFydGlhbHMsXG4gICAgICBvcHRpb25zLmRhdGEgfHwgZGF0YSxcbiAgICAgIGJsb2NrUGFyYW1zICYmIFtvcHRpb25zLmJsb2NrUGFyYW1zXS5jb25jYXQoYmxvY2tQYXJhbXMpLFxuICAgICAgY3VycmVudERlcHRoc1xuICAgICk7XG4gIH1cblxuICBwcm9nID0gZXhlY3V0ZURlY29yYXRvcnMoZm4sIHByb2csIGNvbnRhaW5lciwgZGVwdGhzLCBkYXRhLCBibG9ja1BhcmFtcyk7XG5cbiAgcHJvZy5wcm9ncmFtID0gaTtcbiAgcHJvZy5kZXB0aCA9IGRlcHRocyA/IGRlcHRocy5sZW5ndGggOiAwO1xuICBwcm9nLmJsb2NrUGFyYW1zID0gZGVjbGFyZWRCbG9ja1BhcmFtcyB8fCAwO1xuICByZXR1cm4gcHJvZztcbn1cblxuLyoqXG4gKiBUaGlzIGlzIGN1cnJlbnRseSBwYXJ0IG9mIHRoZSBvZmZpY2lhbCBBUEksIHRoZXJlZm9yZSBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzIHNob3VsZCBub3QgYmUgY2hhbmdlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVQYXJ0aWFsKHBhcnRpYWwsIGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgaWYgKCFwYXJ0aWFsKSB7XG4gICAgaWYgKG9wdGlvbnMubmFtZSA9PT0gJ0BwYXJ0aWFsLWJsb2NrJykge1xuICAgICAgcGFydGlhbCA9IG9wdGlvbnMuZGF0YVsncGFydGlhbC1ibG9jayddO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYXJ0aWFsID0gb3B0aW9ucy5wYXJ0aWFsc1tvcHRpb25zLm5hbWVdO1xuICAgIH1cbiAgfSBlbHNlIGlmICghcGFydGlhbC5jYWxsICYmICFvcHRpb25zLm5hbWUpIHtcbiAgICAvLyBUaGlzIGlzIGEgZHluYW1pYyBwYXJ0aWFsIHRoYXQgcmV0dXJuZWQgYSBzdHJpbmdcbiAgICBvcHRpb25zLm5hbWUgPSBwYXJ0aWFsO1xuICAgIHBhcnRpYWwgPSBvcHRpb25zLnBhcnRpYWxzW3BhcnRpYWxdO1xuICB9XG4gIHJldHVybiBwYXJ0aWFsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52b2tlUGFydGlhbChwYXJ0aWFsLCBjb250ZXh0LCBvcHRpb25zKSB7XG4gIC8vIFVzZSB0aGUgY3VycmVudCBjbG9zdXJlIGNvbnRleHQgdG8gc2F2ZSB0aGUgcGFydGlhbC1ibG9jayBpZiB0aGlzIHBhcnRpYWxcbiAgY29uc3QgY3VycmVudFBhcnRpYWxCbG9jayA9IG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmRhdGFbJ3BhcnRpYWwtYmxvY2snXTtcbiAgb3B0aW9ucy5wYXJ0aWFsID0gdHJ1ZTtcbiAgaWYgKG9wdGlvbnMuaWRzKSB7XG4gICAgb3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoID0gb3B0aW9ucy5pZHNbMF0gfHwgb3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoO1xuICB9XG5cbiAgbGV0IHBhcnRpYWxCbG9jaztcbiAgaWYgKG9wdGlvbnMuZm4gJiYgb3B0aW9ucy5mbiAhPT0gbm9vcCkge1xuICAgIG9wdGlvbnMuZGF0YSA9IGNyZWF0ZUZyYW1lKG9wdGlvbnMuZGF0YSk7XG4gICAgLy8gV3JhcHBlciBmdW5jdGlvbiB0byBnZXQgYWNjZXNzIHRvIGN1cnJlbnRQYXJ0aWFsQmxvY2sgZnJvbSB0aGUgY2xvc3VyZVxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm47XG4gICAgcGFydGlhbEJsb2NrID0gb3B0aW9ucy5kYXRhWydwYXJ0aWFsLWJsb2NrJ10gPSBmdW5jdGlvbiBwYXJ0aWFsQmxvY2tXcmFwcGVyKFxuICAgICAgY29udGV4dCxcbiAgICAgIG9wdGlvbnMgPSB7fVxuICAgICkge1xuICAgICAgLy8gUmVzdG9yZSB0aGUgcGFydGlhbC1ibG9jayBmcm9tIHRoZSBjbG9zdXJlIGZvciB0aGUgZXhlY3V0aW9uIG9mIHRoZSBibG9ja1xuICAgICAgLy8gaS5lLiB0aGUgcGFydCBpbnNpZGUgdGhlIGJsb2NrIG9mIHRoZSBwYXJ0aWFsIGNhbGwuXG4gICAgICBvcHRpb25zLmRhdGEgPSBjcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgICAgb3B0aW9ucy5kYXRhWydwYXJ0aWFsLWJsb2NrJ10gPSBjdXJyZW50UGFydGlhbEJsb2NrO1xuICAgICAgcmV0dXJuIGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgIH07XG4gICAgaWYgKGZuLnBhcnRpYWxzKSB7XG4gICAgICBvcHRpb25zLnBhcnRpYWxzID0gVXRpbHMuZXh0ZW5kKHt9LCBvcHRpb25zLnBhcnRpYWxzLCBmbi5wYXJ0aWFscyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHBhcnRpYWwgPT09IHVuZGVmaW5lZCAmJiBwYXJ0aWFsQmxvY2spIHtcbiAgICBwYXJ0aWFsID0gcGFydGlhbEJsb2NrO1xuICB9XG5cbiAgaWYgKHBhcnRpYWwgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ1RoZSBwYXJ0aWFsICcgKyBvcHRpb25zLm5hbWUgKyAnIGNvdWxkIG5vdCBiZSBmb3VuZCcpO1xuICB9IGVsc2UgaWYgKHBhcnRpYWwgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgIHJldHVybiBwYXJ0aWFsKGNvbnRleHQsIG9wdGlvbnMpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBub29wKCkge1xuICByZXR1cm4gJyc7XG59XG5cbmZ1bmN0aW9uIGluaXREYXRhKGNvbnRleHQsIGRhdGEpIHtcbiAgaWYgKCFkYXRhIHx8ICEoJ3Jvb3QnIGluIGRhdGEpKSB7XG4gICAgZGF0YSA9IGRhdGEgPyBjcmVhdGVGcmFtZShkYXRhKSA6IHt9O1xuICAgIGRhdGEucm9vdCA9IGNvbnRleHQ7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59XG5cbmZ1bmN0aW9uIGV4ZWN1dGVEZWNvcmF0b3JzKGZuLCBwcm9nLCBjb250YWluZXIsIGRlcHRocywgZGF0YSwgYmxvY2tQYXJhbXMpIHtcbiAgaWYgKGZuLmRlY29yYXRvcikge1xuICAgIGxldCBwcm9wcyA9IHt9O1xuICAgIHByb2cgPSBmbi5kZWNvcmF0b3IoXG4gICAgICBwcm9nLFxuICAgICAgcHJvcHMsXG4gICAgICBjb250YWluZXIsXG4gICAgICBkZXB0aHMgJiYgZGVwdGhzWzBdLFxuICAgICAgZGF0YSxcbiAgICAgIGJsb2NrUGFyYW1zLFxuICAgICAgZGVwdGhzXG4gICAgKTtcbiAgICBVdGlscy5leHRlbmQocHJvZywgcHJvcHMpO1xuICB9XG4gIHJldHVybiBwcm9nO1xufVxuXG5mdW5jdGlvbiB3cmFwSGVscGVyc1RvUGFzc0xvb2t1cFByb3BlcnR5KG1lcmdlZEhlbHBlcnMsIGNvbnRhaW5lcikge1xuICBPYmplY3Qua2V5cyhtZXJnZWRIZWxwZXJzKS5mb3JFYWNoKGhlbHBlck5hbWUgPT4ge1xuICAgIGxldCBoZWxwZXIgPSBtZXJnZWRIZWxwZXJzW2hlbHBlck5hbWVdO1xuICAgIG1lcmdlZEhlbHBlcnNbaGVscGVyTmFtZV0gPSBwYXNzTG9va3VwUHJvcGVydHlPcHRpb24oaGVscGVyLCBjb250YWluZXIpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gcGFzc0xvb2t1cFByb3BlcnR5T3B0aW9uKGhlbHBlciwgY29udGFpbmVyKSB7XG4gIGNvbnN0IGxvb2t1cFByb3BlcnR5ID0gY29udGFpbmVyLmxvb2t1cFByb3BlcnR5O1xuICByZXR1cm4gd3JhcEhlbHBlcihoZWxwZXIsIG9wdGlvbnMgPT4ge1xuICAgIHJldHVybiBVdGlscy5leHRlbmQoeyBsb29rdXBQcm9wZXJ0eSB9LCBvcHRpb25zKTtcbiAgfSk7XG59XG4iXX0=\n",
    "/* global globalThis */\n'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (Handlebars) {\n  /* istanbul ignore next */\n  // https://mathiasbynens.be/notes/globalthis\n  (function () {\n    if (typeof globalThis === 'object') return;\n    Object.prototype.__defineGetter__('__magic__', function () {\n      return this;\n    });\n    __magic__.globalThis = __magic__; // eslint-disable-line no-undef\n    delete Object.prototype.__magic__;\n  })();\n\n  var $Handlebars = globalThis.Handlebars;\n\n  /* istanbul ignore next */\n  Handlebars.noConflict = function () {\n    if (globalThis.Handlebars === Handlebars) {\n      globalThis.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3FCQUNlLFVBQVMsVUFBVSxFQUFFOzs7QUFHbEMsR0FBQyxZQUFXO0FBQ1YsUUFBSSxPQUFPLFVBQVUsS0FBSyxRQUFRLEVBQUUsT0FBTztBQUMzQyxVQUFNLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxZQUFXO0FBQ3hELGFBQU8sSUFBSSxDQUFDO0tBQ2IsQ0FBQyxDQUFDO0FBQ0gsYUFBUyxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7QUFDakMsV0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQztHQUNuQyxDQUFBLEVBQUcsQ0FBQzs7QUFFTCxNQUFNLFdBQVcsR0FBRyxVQUFVLENBQUMsVUFBVSxDQUFDOzs7QUFHMUMsWUFBVSxDQUFDLFVBQVUsR0FBRyxZQUFXO0FBQ2pDLFFBQUksVUFBVSxDQUFDLFVBQVUsS0FBSyxVQUFVLEVBQUU7QUFDeEMsZ0JBQVUsQ0FBQyxVQUFVLEdBQUcsV0FBVyxDQUFDO0tBQ3JDO0FBQ0QsV0FBTyxVQUFVLENBQUM7R0FDbkIsQ0FBQztDQUNIIiwiZmlsZSI6Im5vLWNvbmZsaWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIGdsb2JhbFRoaXMgKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKEhhbmRsZWJhcnMpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgLy8gaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2dsb2JhbHRoaXNcbiAgKGZ1bmN0aW9uKCkge1xuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybjtcbiAgICBPYmplY3QucHJvdG90eXBlLl9fZGVmaW5lR2V0dGVyX18oJ19fbWFnaWNfXycsIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSk7XG4gICAgX19tYWdpY19fLmdsb2JhbFRoaXMgPSBfX21hZ2ljX187IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiAgICBkZWxldGUgT2JqZWN0LnByb3RvdHlwZS5fX21hZ2ljX187XG4gIH0pKCk7XG5cbiAgY29uc3QgJEhhbmRsZWJhcnMgPSBnbG9iYWxUaGlzLkhhbmRsZWJhcnM7XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgSGFuZGxlYmFycy5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKGdsb2JhbFRoaXMuSGFuZGxlYmFycyA9PT0gSGFuZGxlYmFycykge1xuICAgICAgZ2xvYmFsVGhpcy5IYW5kbGViYXJzID0gJEhhbmRsZWJhcnM7XG4gICAgfVxuICAgIHJldHVybiBIYW5kbGViYXJzO1xuICB9O1xufVxuIl19\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _handlebarsBase = require('./handlebars/base');\n\nvar base = _interopRequireWildcard(_handlebarsBase);\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\n\nvar _handlebarsSafeString = require('./handlebars/safe-string');\n\nvar _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);\n\nvar _handlebarsException = require('./handlebars/exception');\n\nvar _handlebarsException2 = _interopRequireDefault(_handlebarsException);\n\nvar _handlebarsUtils = require('./handlebars/utils');\n\nvar Utils = _interopRequireWildcard(_handlebarsUtils);\n\nvar _handlebarsRuntime = require('./handlebars/runtime');\n\nvar runtime = _interopRequireWildcard(_handlebarsRuntime);\n\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  var hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = _handlebarsSafeString2['default'];\n  hb.Exception = _handlebarsException2['default'];\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function (spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst['default'] = inst;\n\nexports['default'] = inst;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLnJ1bnRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OEJBQXNCLG1CQUFtQjs7SUFBN0IsSUFBSTs7Ozs7b0NBSU8sMEJBQTBCOzs7O21DQUMzQix3QkFBd0I7Ozs7K0JBQ3ZCLG9CQUFvQjs7SUFBL0IsS0FBSzs7aUNBQ1Esc0JBQXNCOztJQUFuQyxPQUFPOztvQ0FFSSwwQkFBMEI7Ozs7O0FBR2pELFNBQVMsTUFBTSxHQUFHO0FBQ2hCLE1BQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O0FBRTFDLE9BQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZCLElBQUUsQ0FBQyxVQUFVLG9DQUFhLENBQUM7QUFDM0IsSUFBRSxDQUFDLFNBQVMsbUNBQVksQ0FBQztBQUN6QixJQUFFLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUNqQixJQUFFLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDOztBQUU3QyxJQUFFLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztBQUNoQixJQUFFLENBQUMsUUFBUSxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQzNCLFdBQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7R0FDbkMsQ0FBQzs7QUFFRixTQUFPLEVBQUUsQ0FBQztDQUNYOztBQUVELElBQUksSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDO0FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztBQUVyQixrQ0FBVyxJQUFJLENBQUMsQ0FBQzs7QUFFakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQzs7cUJBRVIsSUFBSSIsImZpbGUiOiJoYW5kbGViYXJzLnJ1bnRpbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlIGZyb20gJy4vaGFuZGxlYmFycy9iYXNlJztcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcbmltcG9ydCBTYWZlU3RyaW5nIGZyb20gJy4vaGFuZGxlYmFycy9zYWZlLXN0cmluZyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4vaGFuZGxlYmFycy9leGNlcHRpb24nO1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi9oYW5kbGViYXJzL3V0aWxzJztcbmltcG9ydCAqIGFzIHJ1bnRpbWUgZnJvbSAnLi9oYW5kbGViYXJzL3J1bnRpbWUnO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgbGV0IGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IFNhZmVTdHJpbmc7XG4gIGhiLkV4Y2VwdGlvbiA9IEV4Y2VwdGlvbjtcbiAgaGIuVXRpbHMgPSBVdGlscztcbiAgaGIuZXNjYXBlRXhwcmVzc2lvbiA9IFV0aWxzLmVzY2FwZUV4cHJlc3Npb247XG5cbiAgaGIuVk0gPSBydW50aW1lO1xuICBoYi50ZW1wbGF0ZSA9IGZ1bmN0aW9uKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG5sZXQgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbm5vQ29uZmxpY3QoaW5zdCk7XG5cbmluc3RbJ2RlZmF1bHQnXSA9IGluc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3Q7XG4iXX0=\n",
    "'use strict';\n\nexports.__esModule = true;\nvar AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function helperExpression(node) {\n      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);\n    },\n\n    scopedId: function scopedId(path) {\n      return (/^\\.|this\\b/.test(path.original)\n      );\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function simpleId(path) {\n      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexports['default'] = AST;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2FzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFJLEdBQUcsR0FBRzs7QUFFUixTQUFPLEVBQUU7Ozs7QUFJUCxvQkFBZ0IsRUFBRSwwQkFBUyxJQUFJLEVBQUU7QUFDL0IsYUFDRSxJQUFJLENBQUMsSUFBSSxLQUFLLGVBQWUsSUFDNUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLG1CQUFtQixJQUNqQyxJQUFJLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFBLElBQzlCLENBQUMsRUFBRSxBQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUssSUFBSSxDQUFDLElBQUksQ0FBQSxBQUFDLEFBQUMsQ0FDdkQ7S0FDSDs7QUFFRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQU8sYUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQUM7S0FDekM7Ozs7QUFJRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUNyRTtLQUNIO0dBQ0Y7Q0FDRixDQUFDOzs7O3FCQUlhLEdBQUciLCJmaWxlIjoiYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IEFTVCA9IHtcbiAgLy8gUHVibGljIEFQSSB1c2VkIHRvIGV2YWx1YXRlIGRlcml2ZWQgYXR0cmlidXRlcyByZWdhcmRpbmcgQVNUIG5vZGVzXG4gIGhlbHBlcnM6IHtcbiAgICAvLyBhIG11c3RhY2hlIGlzIGRlZmluaXRlbHkgYSBoZWxwZXIgaWY6XG4gICAgLy8gKiBpdCBpcyBhbiBlbGlnaWJsZSBoZWxwZXIsIGFuZFxuICAgIC8vICogaXQgaGFzIGF0IGxlYXN0IG9uZSBwYXJhbWV0ZXIgb3IgaGFzaCBzZWdtZW50XG4gICAgaGVscGVyRXhwcmVzc2lvbjogZnVuY3Rpb24obm9kZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgbm9kZS50eXBlID09PSAnU3ViRXhwcmVzc2lvbicgfHxcbiAgICAgICAgKChub2RlLnR5cGUgPT09ICdNdXN0YWNoZVN0YXRlbWVudCcgfHxcbiAgICAgICAgICBub2RlLnR5cGUgPT09ICdCbG9ja1N0YXRlbWVudCcpICYmXG4gICAgICAgICAgISEoKG5vZGUucGFyYW1zICYmIG5vZGUucGFyYW1zLmxlbmd0aCkgfHwgbm9kZS5oYXNoKSlcbiAgICAgICk7XG4gICAgfSxcblxuICAgIHNjb3BlZElkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gL15cXC58dGhpc1xcYi8udGVzdChwYXRoLm9yaWdpbmFsKTtcbiAgICB9LFxuXG4gICAgLy8gYW4gSUQgaXMgc2ltcGxlIGlmIGl0IG9ubHkgaGFzIG9uZSBwYXJ0LCBhbmQgdGhhdCBwYXJ0IGlzIG5vdFxuICAgIC8vIGAuLmAgb3IgYHRoaXNgLlxuICAgIHNpbXBsZUlkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBwYXRoLnBhcnRzLmxlbmd0aCA9PT0gMSAmJiAhQVNULmhlbHBlcnMuc2NvcGVkSWQocGF0aCkgJiYgIXBhdGguZGVwdGhcbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBNdXN0IGJlIGV4cG9ydGVkIGFzIGFuIG9iamVjdCByYXRoZXIgdGhhbiB0aGUgcm9vdCBvZiB0aGUgbW9kdWxlIGFzIHRoZSBqaXNvbiBsZXhlclxuLy8gbXVzdCBtb2RpZnkgdGhlIG9iamVjdCB0byBvcGVyYXRlIHByb3Blcmx5LlxuZXhwb3J0IGRlZmF1bHQgQVNUO1xuIl19\n",
    "// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\n\"use strict\";\n\nexports.__esModule = true;\nvar handlebars = (function () {\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"root\": 3, \"program\": 4, \"EOF\": 5, \"program_repetition0\": 6, \"statement\": 7, \"mustache\": 8, \"block\": 9, \"rawBlock\": 10, \"partial\": 11, \"partialBlock\": 12, \"content\": 13, \"COMMENT\": 14, \"CONTENT\": 15, \"openRawBlock\": 16, \"rawBlock_repetition0\": 17, \"END_RAW_BLOCK\": 18, \"OPEN_RAW_BLOCK\": 19, \"helperName\": 20, \"openRawBlock_repetition0\": 21, \"openRawBlock_option0\": 22, \"CLOSE_RAW_BLOCK\": 23, \"openBlock\": 24, \"block_option0\": 25, \"closeBlock\": 26, \"openInverse\": 27, \"block_option1\": 28, \"OPEN_BLOCK\": 29, \"openBlock_repetition0\": 30, \"openBlock_option0\": 31, \"openBlock_option1\": 32, \"CLOSE\": 33, \"OPEN_INVERSE\": 34, \"openInverse_repetition0\": 35, \"openInverse_option0\": 36, \"openInverse_option1\": 37, \"openInverseChain\": 38, \"OPEN_INVERSE_CHAIN\": 39, \"openInverseChain_repetition0\": 40, \"openInverseChain_option0\": 41, \"openInverseChain_option1\": 42, \"inverseAndProgram\": 43, \"INVERSE\": 44, \"inverseChain\": 45, \"inverseChain_option0\": 46, \"OPEN_ENDBLOCK\": 47, \"OPEN\": 48, \"mustache_repetition0\": 49, \"mustache_option0\": 50, \"OPEN_UNESCAPED\": 51, \"mustache_repetition1\": 52, \"mustache_option1\": 53, \"CLOSE_UNESCAPED\": 54, \"OPEN_PARTIAL\": 55, \"partialName\": 56, \"partial_repetition0\": 57, \"partial_option0\": 58, \"openPartialBlock\": 59, \"OPEN_PARTIAL_BLOCK\": 60, \"openPartialBlock_repetition0\": 61, \"openPartialBlock_option0\": 62, \"param\": 63, \"sexpr\": 64, \"OPEN_SEXPR\": 65, \"sexpr_repetition0\": 66, \"sexpr_option0\": 67, \"CLOSE_SEXPR\": 68, \"hash\": 69, \"hash_repetition_plus0\": 70, \"hashSegment\": 71, \"ID\": 72, \"EQUALS\": 73, \"blockParams\": 74, \"OPEN_BLOCK_PARAMS\": 75, \"blockParams_repetition_plus0\": 76, \"CLOSE_BLOCK_PARAMS\": 77, \"path\": 78, \"dataName\": 79, \"STRING\": 80, \"NUMBER\": 81, \"BOOLEAN\": 82, \"UNDEFINED\": 83, \"NULL\": 84, \"DATA\": 85, \"pathSegments\": 86, \"SEP\": 87, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 5: \"EOF\", 14: \"COMMENT\", 15: \"CONTENT\", 18: \"END_RAW_BLOCK\", 19: \"OPEN_RAW_BLOCK\", 23: \"CLOSE_RAW_BLOCK\", 29: \"OPEN_BLOCK\", 33: \"CLOSE\", 34: \"OPEN_INVERSE\", 39: \"OPEN_INVERSE_CHAIN\", 44: \"INVERSE\", 47: \"OPEN_ENDBLOCK\", 48: \"OPEN\", 51: \"OPEN_UNESCAPED\", 54: \"CLOSE_UNESCAPED\", 55: \"OPEN_PARTIAL\", 60: \"OPEN_PARTIAL_BLOCK\", 65: \"OPEN_SEXPR\", 68: \"CLOSE_SEXPR\", 72: \"ID\", 73: \"EQUALS\", 75: \"OPEN_BLOCK_PARAMS\", 77: \"CLOSE_BLOCK_PARAMS\", 80: \"STRING\", 81: \"NUMBER\", 82: \"BOOLEAN\", 83: \"UNDEFINED\", 84: \"NULL\", 85: \"DATA\", 87: \"SEP\" },\n        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 0], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    return $$[$0 - 1];\n                    break;\n                case 2:\n                    this.$ = yy.prepareProgram($$[$0]);\n                    break;\n                case 3:\n                    this.$ = $$[$0];\n                    break;\n                case 4:\n                    this.$ = $$[$0];\n                    break;\n                case 5:\n                    this.$ = $$[$0];\n                    break;\n                case 6:\n                    this.$ = $$[$0];\n                    break;\n                case 7:\n                    this.$ = $$[$0];\n                    break;\n                case 8:\n                    this.$ = $$[$0];\n                    break;\n                case 9:\n                    this.$ = {\n                        type: 'CommentStatement',\n                        value: yy.stripComment($$[$0]),\n                        strip: yy.stripFlags($$[$0], $$[$0]),\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 10:\n                    this.$ = {\n                        type: 'ContentStatement',\n                        original: $$[$0],\n                        value: $$[$0],\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 11:\n                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n                    break;\n                case 12:\n                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };\n                    break;\n                case 13:\n                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);\n                    break;\n                case 14:\n                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);\n                    break;\n                case 15:\n                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 16:\n                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 17:\n                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 18:\n                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };\n                    break;\n                case 19:\n                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),\n                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);\n                    program.chained = true;\n\n                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };\n\n                    break;\n                case 20:\n                    this.$ = $$[$0];\n                    break;\n                case 21:\n                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };\n                    break;\n                case 22:\n                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n                    break;\n                case 23:\n                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n                    break;\n                case 24:\n                    this.$ = {\n                        type: 'PartialStatement',\n                        name: $$[$0 - 3],\n                        params: $$[$0 - 2],\n                        hash: $$[$0 - 1],\n                        indent: '',\n                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 25:\n                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n                    break;\n                case 26:\n                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };\n                    break;\n                case 27:\n                    this.$ = $$[$0];\n                    break;\n                case 28:\n                    this.$ = $$[$0];\n                    break;\n                case 29:\n                    this.$ = {\n                        type: 'SubExpression',\n                        path: $$[$0 - 3],\n                        params: $$[$0 - 2],\n                        hash: $$[$0 - 1],\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 30:\n                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 31:\n                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 32:\n                    this.$ = yy.id($$[$0 - 1]);\n                    break;\n                case 33:\n                    this.$ = $$[$0];\n                    break;\n                case 34:\n                    this.$ = $$[$0];\n                    break;\n                case 35:\n                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 36:\n                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };\n                    break;\n                case 37:\n                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };\n                    break;\n                case 38:\n                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };\n                    break;\n                case 39:\n                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };\n                    break;\n                case 40:\n                    this.$ = $$[$0];\n                    break;\n                case 41:\n                    this.$ = $$[$0];\n                    break;\n                case 42:\n                    this.$ = yy.preparePath(true, $$[$0], this._$);\n                    break;\n                case 43:\n                    this.$ = yy.preparePath(false, $$[$0], this._$);\n                    break;\n                case 44:\n                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];\n                    break;\n                case 45:\n                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];\n                    break;\n                case 46:\n                    this.$ = [];\n                    break;\n                case 47:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 48:\n                    this.$ = [];\n                    break;\n                case 49:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 50:\n                    this.$ = [];\n                    break;\n                case 51:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 58:\n                    this.$ = [];\n                    break;\n                case 59:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 64:\n                    this.$ = [];\n                    break;\n                case 65:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 70:\n                    this.$ = [];\n                    break;\n                case 71:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 78:\n                    this.$ = [];\n                    break;\n                case 79:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 82:\n                    this.$ = [];\n                    break;\n                case 83:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 86:\n                    this.$ = [];\n                    break;\n                case 87:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 90:\n                    this.$ = [];\n                    break;\n                case 91:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 94:\n                    this.$ = [];\n                    break;\n                case 95:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 98:\n                    this.$ = [$$[$0]];\n                    break;\n                case 99:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 100:\n                    this.$ = [$$[$0]];\n                    break;\n                case 101:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 15: [2, 48], 17: 39, 18: [2, 48] }, { 20: 41, 56: 40, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 44, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 45, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 41, 56: 48, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 49, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 50] }, { 72: [1, 35], 86: 51 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 52, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 53, 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 54, 47: [2, 54] }, { 28: 59, 43: 60, 44: [1, 58], 47: [2, 56] }, { 13: 62, 15: [1, 20], 18: [1, 61] }, { 33: [2, 86], 57: 63, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 64, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 65, 47: [1, 66] }, { 30: 67, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 68, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 69, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 70, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 74, 33: [2, 80], 50: 71, 63: 72, 64: 75, 65: [1, 43], 69: 73, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 79] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 50] }, { 20: 74, 53: 80, 54: [2, 84], 63: 81, 64: 75, 65: [1, 43], 69: 82, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 83, 47: [1, 66] }, { 47: [2, 55] }, { 4: 84, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 85, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 86, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 87, 47: [1, 66] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 74, 33: [2, 88], 58: 88, 63: 89, 64: 75, 65: [1, 43], 69: 90, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 91, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 92, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 31: 93, 33: [2, 60], 63: 94, 64: 75, 65: [1, 43], 69: 95, 70: 76, 71: 77, 72: [1, 78], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 66], 36: 96, 63: 97, 64: 75, 65: [1, 43], 69: 98, 70: 76, 71: 77, 72: [1, 78], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 22: 99, 23: [2, 52], 63: 100, 64: 75, 65: [1, 43], 69: 101, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 92], 62: 102, 63: 103, 64: 75, 65: [1, 43], 69: 104, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 105] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 106, 72: [1, 107], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 108], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 109] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 111, 46: 110, 47: [2, 76] }, { 33: [2, 70], 40: 112, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 113] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 74, 63: 115, 64: 75, 65: [1, 43], 67: 114, 68: [2, 96], 69: 116, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 117] }, { 32: 118, 33: [2, 62], 74: 119, 75: [1, 120] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 121, 74: 122, 75: [1, 120] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 123] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 124] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 108] }, { 20: 74, 63: 125, 64: 75, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 74, 33: [2, 72], 41: 126, 63: 127, 64: 75, 65: [1, 43], 69: 128, 70: 76, 71: 77, 72: [1, 78], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 129] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 130] }, { 33: [2, 63] }, { 72: [1, 132], 76: 131 }, { 33: [1, 133] }, { 33: [2, 69] }, { 15: [2, 12], 18: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 134, 74: 135, 75: [1, 120] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 137], 77: [1, 136] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 138] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],\n        defaultActions: { 4: [2, 1], 54: [2, 55], 56: [2, 20], 60: [2, 57], 73: [2, 81], 82: [2, 85], 86: [2, 18], 90: [2, 89], 101: [2, 53], 104: [2, 93], 110: [2, 19], 111: [2, 77], 116: [2, 97], 119: [2, 63], 122: [2, 69], 135: [2, 75], 136: [2, 32] },\n        parseError: function parseError(str, hash) {\n            throw new Error(str);\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = \"\",\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            this.lexer.setInput(input);\n            this.lexer.yy = this.yy;\n            this.yy.lexer = this.lexer;\n            this.yy.parser = this;\n            if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n            var yyloc = this.lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = this.lexer.options && this.lexer.options.ranges;\n            if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            function lex() {\n                var token;\n                token = self.lexer.lex() || 1;\n                if (typeof token !== \"number\") {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            }\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == \"undefined\") {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n                    var errStr = \"\";\n                    if (!recovering) {\n                        expected = [];\n                        for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n                        }\n                        if (this.lexer.showPosition) {\n                            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                        } else {\n                            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                        }\n                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });\n                    }\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(this.lexer.yytext);\n                        lstack.push(this.lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = this.lexer.yyleng;\n                            yytext = this.lexer.yytext;\n                            yylineno = this.lexer.yylineno;\n                            yyloc = this.lexer.yylloc;\n                            if (recovering > 0) recovering--;\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n                        if (typeof r !== \"undefined\") {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        }\n    };\n    /* Jison generated lexer */\n    var lexer = (function () {\n        var lexer = { EOF: 1,\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n            setInput: function setInput(input) {\n                this._input = input;\n                this._more = this._less = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };\n                if (this.options.ranges) this.yylloc.range = [0, 0];\n                this.offset = 0;\n                return this;\n            },\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) this.yylloc.range[1]++;\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) this.yylineno -= lines.length - 1;\n                var r = this.yylloc.range;\n\n                this.yylloc = { first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                return this;\n            },\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) this.done = true;\n\n                var token, match, tempMatch, index, col, lines;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (!this.options.flex) break;\n                    }\n                }\n                if (match) {\n                    lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                    if (lines) this.yylineno += lines.length;\n                    this.yylloc = { first_line: this.yylloc.last_line,\n                        last_line: this.yylineno + 1,\n                        first_column: this.yylloc.last_column,\n                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length };\n                    this.yytext += match[0];\n                    this.match += match[0];\n                    this.matches = match;\n                    this.yyleng = this.yytext.length;\n                    if (this.options.ranges) {\n                        this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                    }\n                    this._more = false;\n                    this._input = this._input.slice(match[0].length);\n                    this.matched += match[0];\n                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n                    if (this.done && this._input) this.done = false;\n                    if (token) return token;else return;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), { text: \"\", token: null, line: this.yylineno });\n                }\n            },\n            lex: function lex() {\n                var r = this.next();\n                if (typeof r !== 'undefined') {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n            popState: function popState() {\n                return this.conditionStack.pop();\n            },\n            _currentRules: function _currentRules() {\n                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n            },\n            topState: function topState() {\n                return this.conditionStack[this.conditionStack.length - 2];\n            },\n            pushState: function begin(condition) {\n                this.begin(condition);\n            } };\n        lexer.options = {};\n        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\n            function strip(start, end) {\n                return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n            }\n\n            var YYSTATE = YY_START;\n            switch ($avoiding_name_collisions) {\n                case 0:\n                    if (yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                        strip(0, 1);\n                        this.begin(\"mu\");\n                    } else if (yy_.yytext.slice(-1) === \"\\\\\") {\n                        strip(0, 1);\n                        this.begin(\"emu\");\n                    } else {\n                        this.begin(\"mu\");\n                    }\n                    if (yy_.yytext) return 15;\n\n                    break;\n                case 1:\n                    return 15;\n                    break;\n                case 2:\n                    this.popState();\n                    return 15;\n\n                    break;\n                case 3:\n                    this.begin('raw');return 15;\n                    break;\n                case 4:\n                    this.popState();\n                    // Should be using `this.topState()` below, but it currently\n                    // returns the second top instead of the first top. Opened an\n                    // issue about it at https://github.com/zaach/jison/issues/291\n                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {\n                        return 15;\n                    } else {\n                        strip(5, 9);\n                        return 'END_RAW_BLOCK';\n                    }\n\n                    break;\n                case 5:\n                    return 15;\n                    break;\n                case 6:\n                    this.popState();\n                    return 14;\n\n                    break;\n                case 7:\n                    return 65;\n                    break;\n                case 8:\n                    return 68;\n                    break;\n                case 9:\n                    return 19;\n                    break;\n                case 10:\n                    this.popState();\n                    this.begin('raw');\n                    return 23;\n\n                    break;\n                case 11:\n                    return 55;\n                    break;\n                case 12:\n                    return 60;\n                    break;\n                case 13:\n                    return 29;\n                    break;\n                case 14:\n                    return 47;\n                    break;\n                case 15:\n                    this.popState();return 44;\n                    break;\n                case 16:\n                    this.popState();return 44;\n                    break;\n                case 17:\n                    return 34;\n                    break;\n                case 18:\n                    return 39;\n                    break;\n                case 19:\n                    return 51;\n                    break;\n                case 20:\n                    return 48;\n                    break;\n                case 21:\n                    this.unput(yy_.yytext);\n                    this.popState();\n                    this.begin('com');\n\n                    break;\n                case 22:\n                    this.popState();\n                    return 14;\n\n                    break;\n                case 23:\n                    return 48;\n                    break;\n                case 24:\n                    return 73;\n                    break;\n                case 25:\n                    return 72;\n                    break;\n                case 26:\n                    return 72;\n                    break;\n                case 27:\n                    return 87;\n                    break;\n                case 28:\n                    // ignore whitespace\n                    break;\n                case 29:\n                    this.popState();return 54;\n                    break;\n                case 30:\n                    this.popState();return 33;\n                    break;\n                case 31:\n                    yy_.yytext = strip(1, 2).replace(/\\\\\"/g, '\"');return 80;\n                    break;\n                case 32:\n                    yy_.yytext = strip(1, 2).replace(/\\\\'/g, \"'\");return 80;\n                    break;\n                case 33:\n                    return 85;\n                    break;\n                case 34:\n                    return 82;\n                    break;\n                case 35:\n                    return 82;\n                    break;\n                case 36:\n                    return 83;\n                    break;\n                case 37:\n                    return 84;\n                    break;\n                case 38:\n                    return 81;\n                    break;\n                case 39:\n                    return 75;\n                    break;\n                case 40:\n                    return 77;\n                    break;\n                case 41:\n                    return 72;\n                    break;\n                case 42:\n                    yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g, '$1');return 72;\n                    break;\n                case 43:\n                    return 'INVALID';\n                    break;\n                case 44:\n                    return 5;\n                    break;\n            }\n        };\n        lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/, /^(?:[^\\x00]+)/, /^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/, /^(?:\\{\\{\\{\\{(?=[^/]))/, /^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/, /^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/, /^(?:[\\s\\S]*?--(~)?\\}\\})/, /^(?:\\()/, /^(?:\\))/, /^(?:\\{\\{\\{\\{)/, /^(?:\\}\\}\\}\\})/, /^(?:\\{\\{(~)?>)/, /^(?:\\{\\{(~)?#>)/, /^(?:\\{\\{(~)?#\\*?)/, /^(?:\\{\\{(~)?\\/)/, /^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\^)/, /^(?:\\{\\{(~)?\\s*else\\b)/, /^(?:\\{\\{(~)?\\{)/, /^(?:\\{\\{(~)?&)/, /^(?:\\{\\{(~)?!--)/, /^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/, /^(?:\\{\\{(~)?\\*?)/, /^(?:=)/, /^(?:\\.\\.)/, /^(?:\\.(?=([=~}\\s\\/.)|])))/, /^(?:[\\/.])/, /^(?:\\s+)/, /^(?:\\}(~)?\\}\\})/, /^(?:(~)?\\}\\})/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\\s)])))/, /^(?:false(?=([~}\\s)])))/, /^(?:undefined(?=([~}\\s)])))/, /^(?:null(?=([~}\\s)])))/, /^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/, /^(?:as\\s+\\|)/, /^(?:\\|)/, /^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/, /^(?:\\[(\\\\\\]|[^\\]])*\\])/, /^(?:.)/, /^(?:$)/];\n        lexer.conditions = { \"mu\": { \"rules\": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": false }, \"emu\": { \"rules\": [2], \"inclusive\": false }, \"com\": { \"rules\": [6], \"inclusive\": false }, \"raw\": { \"rules\": [3, 4, 5], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 44], \"inclusive\": true } };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();exports[\"default\"] = handlebars;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function acceptKey(node, name) {\n    var value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new _exception2['default']('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function acceptRequired(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new _exception2['default'](node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function acceptArray(array) {\n    for (var i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function accept(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new _exception2['default']('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    var ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function Program(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function PartialBlockStatement(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function ContentStatement() /* content */{},\n  CommentStatement: function CommentStatement() /* comment */{},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function PathExpression() /* path */{},\n\n  StringLiteral: function StringLiteral() /* string */{},\n  NumberLiteral: function NumberLiteral() /* number */{},\n  BooleanLiteral: function BooleanLiteral() /* bool */{},\n  UndefinedLiteral: function UndefinedLiteral() /* literal */{},\n  NullLiteral: function NullLiteral() /* literal */{},\n\n  Hash: function Hash(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function HashPair(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexports['default'] = Visitor;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _visitor = require('./visitor');\n\nvar _visitor2 = _interopRequireDefault(_visitor);\n\nfunction WhitespaceControl() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  this.options = options;\n}\nWhitespaceControl.prototype = new _visitor2['default']();\n\nWhitespaceControl.prototype.Program = function (program) {\n  var doStandalone = !this.options.ignoreStandalone;\n\n  var isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  var body = program.body;\n  for (var i = 0, l = body.length; i < l; i++) {\n    var current = body[i],\n        strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n        _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n        openStandalone = strip.openStandalone && _isPrevWhitespace,\n        closeStandalone = strip.closeStandalone && _isNextWhitespace,\n        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  var program = block.program || block.inverse,\n      inverse = block.program && block.inverse,\n      firstInverse = inverse,\n      lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  var strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    var inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {\n  /* istanbul ignore next */\n  var strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  var prev = body[i - 1],\n      sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(prev.original);\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  var next = body[i + 1],\n      sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(next.original);\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  var current = body[i == null ? 0 : i + 1];\n  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {\n    return;\n  }\n\n  var original = current.value;\n  current.value = current.value.replace(multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/, '');\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  var current = body[i == null ? body.length - 1 : i - 1];\n  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  var original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexports['default'] = WhitespaceControl;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.SourceLocation = SourceLocation;\nexports.id = id;\nexports.stripFlags = stripFlags;\nexports.stripComment = stripComment;\nexports.preparePath = preparePath;\nexports.prepareMustache = prepareMustache;\nexports.prepareRawBlock = prepareRawBlock;\nexports.prepareBlock = prepareBlock;\nexports.prepareProgram = prepareProgram;\nexports.preparePartialBlock = preparePartialBlock;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    var errorNode = { loc: open.path.loc };\n\n    throw new _exception2['default'](open.path.original + \" doesn't match \" + close, errorNode);\n  }\n}\n\nfunction SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nfunction id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nfunction stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nfunction stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nfunction preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  var original = data ? '@' : '',\n      dig = [],\n      depth = 0;\n\n  for (var i = 0, l = parts.length; i < l; i++) {\n    var part = parts[i].part,\n\n    // If we have [] syntax then we do not treat path references as operators,\n    // i.e. foo.[this] resolves to approximately context.foo['this']\n    isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data: data,\n    depth: depth,\n    parts: dig,\n    original: original,\n    loc: loc\n  };\n}\n\nfunction prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  var escapeFlag = open.charAt(3) || open.charAt(2),\n      escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  var decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path: path,\n    params: params,\n    hash: hash,\n    escaped: escaped,\n    strip: strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nfunction prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  var program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program: program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nfunction prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  var decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  var inverse = undefined,\n      inverseStrip = undefined;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program: program,\n    inverse: inverse,\n    openStrip: openBlock.strip,\n    inverseStrip: inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nfunction prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    var firstLoc = statements[0].loc,\n        lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nfunction preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program: program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "'use strict';\n\nexports.__esModule = true;\nexports.parseWithoutProcessing = parseWithoutProcessing;\nexports.parse = parse;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _whitespaceControl = require('./whitespace-control');\n\nvar _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);\n\nvar _helpers = require('./helpers');\n\nvar Helpers = _interopRequireWildcard(_helpers);\n\nvar _utils = require('../utils');\n\nexports.parser = _parser2['default'];\n\nvar yy = {};\n_utils.extend(yy, Helpers);\n\nfunction parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  _parser2['default'].yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function (locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  var ast = _parser2['default'].parse(input);\n\n  return ast;\n}\n\nfunction parse(input, options) {\n  var ast = parseWithoutProcessing(input, options);\n  var strip = new _whitespaceControl2['default'](options);\n\n  return strip.accept(ast);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztzQkFBbUIsVUFBVTs7OztpQ0FDQyxzQkFBc0I7Ozs7dUJBQzNCLFdBQVc7O0lBQXhCLE9BQU87O3FCQUNJLFVBQVU7O1FBRXhCLE1BQU07O0FBRWYsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQ1osY0FBTyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7O0FBRWIsU0FBUyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFOztBQUVyRCxNQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO0FBQzVCLFdBQU8sS0FBSyxDQUFDO0dBQ2Q7O0FBRUQsc0JBQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7O0FBR2YsSUFBRSxDQUFDLE9BQU8sR0FBRyxVQUFTLE9BQU8sRUFBRTtBQUM3QixXQUFPLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNuRSxDQUFDOztBQUVGLE1BQUksR0FBRyxHQUFHLG9CQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFOUIsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxTQUFTLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLE1BQUksR0FBRyxHQUFHLHNCQUFzQixDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNqRCxNQUFJLEtBQUssR0FBRyxtQ0FBc0IsT0FBTyxDQUFDLENBQUM7O0FBRTNDLFNBQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJiYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhcnNlciBmcm9tICcuL3BhcnNlcic7XG5pbXBvcnQgV2hpdGVzcGFjZUNvbnRyb2wgZnJvbSAnLi93aGl0ZXNwYWNlLWNvbnRyb2wnO1xuaW1wb3J0ICogYXMgSGVscGVycyBmcm9tICcuL2hlbHBlcnMnO1xuaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgeyBwYXJzZXIgfTtcblxubGV0IHl5ID0ge307XG5leHRlbmQoeXksIEhlbHBlcnMpO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VXaXRob3V0UHJvY2Vzc2luZyhpbnB1dCwgb3B0aW9ucykge1xuICAvLyBKdXN0IHJldHVybiBpZiBhbiBhbHJlYWR5LWNvbXBpbGVkIEFTVCB3YXMgcGFzc2VkIGluLlxuICBpZiAoaW5wdXQudHlwZSA9PT0gJ1Byb2dyYW0nKSB7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG5cbiAgcGFyc2VyLnl5ID0geXk7XG5cbiAgLy8gQWx0ZXJpbmcgdGhlIHNoYXJlZCBvYmplY3QgaGVyZSwgYnV0IHRoaXMgaXMgb2sgYXMgcGFyc2VyIGlzIGEgc3luYyBvcGVyYXRpb25cbiAgeXkubG9jSW5mbyA9IGZ1bmN0aW9uKGxvY0luZm8pIHtcbiAgICByZXR1cm4gbmV3IHl5LlNvdXJjZUxvY2F0aW9uKG9wdGlvbnMgJiYgb3B0aW9ucy5zcmNOYW1lLCBsb2NJbmZvKTtcbiAgfTtcblxuICBsZXQgYXN0ID0gcGFyc2VyLnBhcnNlKGlucHV0KTtcblxuICByZXR1cm4gYXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgbGV0IGFzdCA9IHBhcnNlV2l0aG91dFByb2Nlc3NpbmcoaW5wdXQsIG9wdGlvbnMpO1xuICBsZXQgc3RyaXAgPSBuZXcgV2hpdGVzcGFjZUNvbnRyb2wob3B0aW9ucyk7XG5cbiAgcmV0dXJuIHN0cmlwLmFjY2VwdChhc3QpO1xufVxuIl19\n",
    "/* eslint-disable new-cap */\n\n'use strict';\n\nexports.__esModule = true;\nexports.Compiler = Compiler;\nexports.precompile = precompile;\nexports.compile = compile;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _utils = require('../utils');\n\nvar _ast = require('./ast');\n\nvar _ast2 = _interopRequireDefault(_ast);\n\nvar slice = [].slice;\n\nfunction Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function equals(other) {\n    var len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (var i = 0; i < len; i++) {\n      var opcode = this.opcodes[i],\n          otherOpcode = other.opcodes[i];\n      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (var i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function compile(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = _utils.extend(Object.create(null), {\n      helperMissing: true,\n      blockHelperMissing: true,\n      each: true,\n      'if': true,\n      unless: true,\n      'with': true,\n      log: true,\n      lookup: true\n    }, options.knownHelpers);\n\n    return this.accept(program);\n  },\n\n  compileProgram: function compileProgram(program) {\n    var childCompiler = new this.compiler(),\n        // eslint-disable-line new-cap\n    result = childCompiler.compile(program, this.options),\n        guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function accept(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new _exception2['default']('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    var ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function Program(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    var body = program.body,\n        bodyLength = body.length;\n    for (var i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function BlockStatement(block) {\n    transformLiteralToPath(block);\n\n    var program = block.program,\n        inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    var type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock: function DecoratorBlock(decorator) {\n    var program = decorator.program && this.compileProgram(decorator.program);\n    var params = this.setupFullMustacheParams(decorator, program, undefined),\n        path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function PartialStatement(partial) {\n    this.usePartial = true;\n\n    var program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    var params = partial.params;\n    if (params.length > 1) {\n      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    var partialName = partial.name.original,\n        isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    var indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function PartialBlockStatement(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function MustacheStatement(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator: function Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function ContentStatement(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function CommentStatement() {},\n\n  SubExpression: function SubExpression(sexpr) {\n    transformLiteralToPath(sexpr);\n    var type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {\n    var path = sexpr.path,\n        name = path.parts[0],\n        isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function simpleSexpr(sexpr) {\n    var path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function helperSexpr(sexpr, program, inverse) {\n    var params = this.setupFullMustacheParams(sexpr, program, inverse),\n        path = sexpr.path,\n        name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));\n    }\n  },\n\n  PathExpression: function PathExpression(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    var name = path.parts[0],\n        scoped = _ast2['default'].helpers.scopedId(path),\n        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);\n    }\n  },\n\n  StringLiteral: function StringLiteral(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function NumberLiteral(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function BooleanLiteral(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function UndefinedLiteral() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function NullLiteral() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function Hash(hash) {\n    var pairs = hash.pairs,\n        i = 0,\n        l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function opcode(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function addDepth(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function classifySexpr(sexpr) {\n    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);\n\n    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    var isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      var _name = sexpr.path.parts[0],\n          options = this.options;\n      if (options.knownHelpers[_name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function pushParams(params) {\n    for (var i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function pushParam(val) {\n    var value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        var blockParamIndex = undefined;\n        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          var blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value.replace(/^this(?:\\.|$)/, '').replace(/^\\.\\//, '').replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {\n    var params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function blockParamIndex(name) {\n    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n      var blockParams = this.options.blockParams[depth],\n          param = blockParams && _utils.indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nfunction precompile(input, options, env) {\n  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  var ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nfunction compile(input, options, env) {\n  if (options === undefined) options = {};\n\n  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);\n  }\n\n  options = _utils.extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  var compiled = undefined;\n\n  function compileInput() {\n    var ast = env.parse(input, options),\n        environment = new env.Compiler().compile(ast, options),\n        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function (setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function (i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {\n    for (var i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    var literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n",
    "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n",
    "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n",
    "/* global define, require */\n'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nvar SourceNode = undefined;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we assume that\n    // they are running on the browser and thus have no need for the source-map library.\n    var SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {}\n/* NOP */\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function (line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function add(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function prepend(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function toStringWithSourceMap() {\n      return { code: this.toString() };\n    },\n    toString: function toString() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (_utils.isArray(chunk)) {\n    var ret = [];\n\n    for (var i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty: function isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function prepend(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function push(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function merge() {\n    var source = this.empty();\n    this.each(function (line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function each(iter) {\n    for (var i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function empty() {\n    var loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function wrap(chunk) {\n    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];\n\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n  },\n\n  functionCall: function functionCall(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function quotedString(str) {\n    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n  },\n\n  objectLiteral: function objectLiteral(obj) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var pairs = [];\n\n    Object.keys(obj).forEach(function (key) {\n      var value = castChunk(obj[key], _this);\n      if (value !== 'undefined') {\n        pairs.push([_this.quotedString(key), ':', value]);\n      }\n    });\n\n    var ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function generateList(entries) {\n    var ret = this.empty();\n\n    for (var i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function generateArray(entries) {\n    var ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexports['default'] = CodeGen;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _base = require('../base');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _utils = require('../utils');\n\nvar _codeGen = require('./code-gen');\n\nvar _codeGen2 = _interopRequireDefault(_codeGen);\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function nameLookup(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function depthedLookup(name) {\n    return [this.aliasable('container.lookup'), '(depths, ', JSON.stringify(name), ')'];\n  },\n\n  compilerInfo: function compilerInfo() {\n    var revision = _base.COMPILER_REVISION,\n        versions = _base.REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function appendToBuffer(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!_utils.isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function initializeBuffer() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function internalNameLookup(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function compile(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    var opcodes = environment.opcodes,\n        opcode = undefined,\n        firstLoc = undefined,\n        i = undefined,\n        l = undefined;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new _exception2['default']('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend(['var decorators = container.decorators, ', this.lookupPropertyFunctionVarDeclaration(), ';\\n']);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);\n      } else {\n        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\\n');\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    var fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      var ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      var _context = this.context;\n      var programs = _context.programs;\n      var decorators = _context.decorators;\n\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function preamble() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new _codeGen2['default'](this.options.srcName);\n    this.decorators = new _codeGen2['default'](this.options.srcName);\n  },\n\n  createFunctionContext: function createFunctionContext(asObject) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var varDeclarations = '';\n\n    var locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    var aliasCount = 0;\n    Object.keys(this.aliases).forEach(function (alias) {\n      var node = _this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    var source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n    }\n  },\n  mergeSource: function mergeSource(varDeclarations) {\n    var isSimple = this.environment.isSimple,\n        appendOnly = !this.forceBuffer,\n        appendFirst = undefined,\n        sourceSeen = undefined,\n        bufferStart = undefined,\n        bufferEnd = undefined;\n    this.source.each(function (line) {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function lookupPropertyFunctionVarDeclaration() {\n    return '\\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\\n          return parent[propertyName];\\n        }\\n        return undefined\\n    }\\n    '.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function blockValue(name) {\n    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    var blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function ambiguousBlockValue() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    var current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function appendContent(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function append() {\n    if (this.isInline()) {\n      this.replaceStack(function (current) {\n        return [' != null ? ', current, ' : \"\"'];\n      });\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      var local = this.popStack();\n      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n      if (this.environment.isSimple) {\n        this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function appendEscaped() {\n    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function getContext(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function pushContext() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {\n    var i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function lookupData(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function resolvePath(type, parts, i, falsy, strict) {\n    // istanbul ignore next\n\n    var _this2 = this;\n\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(strictLookup(this.options.strict && strict, this, parts, i, type));\n      return;\n    }\n\n    var len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(function (current) {\n        var lookup = _this2.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function resolvePossibleLambda() {\n    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function pushStringParam(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function emptyHash(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function pushHash() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function popHash() {\n    var hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function pushString(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function pushLiteral(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function pushProgram(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator: function registerDecorator(paramSize, name) {\n    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n        options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function invokeHelper(paramSize, name, isSimple) {\n    var nonHelper = this.popStack(),\n        helper = this.setupHelper(paramSize, name);\n\n    var possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(this.aliasable('container.hooks.helperMissing'));\n    }\n\n    var functionLookupCode = ['(', this.itemsSeparatedBy(possibleFunctionCalls, '||'), ')'];\n    var functionCall = this.source.functionCall(functionLookupCode, 'call', helper.callParams);\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function itemsSeparatedBy(items, separator) {\n    var result = [];\n    result.push(items[0]);\n    for (var i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {\n    var helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {\n    this.useRegister('helper');\n\n    var nonHelper = this.popStack();\n\n    this.emptyHash();\n    var helper = this.setupHelper(0, name, helperCall);\n\n    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(' != null ? helper : ', this.aliasable('container.hooks.helperMissing'));\n    }\n\n    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('\"function\"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function invokePartial(isDynamic, name, indent) {\n    var params = [],\n        options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function assignToHash(key) {\n    var value = this.popStack(),\n        context = undefined,\n        type = undefined,\n        id = undefined;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    var hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function pushId(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function compileChildren(environment, options) {\n    var children = environment.children,\n        child = undefined,\n        compiler = undefined;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      var existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        var index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function matchExistingProgram(child) {\n    for (var i = 0, len = this.context.environments.length; i < len; i++) {\n      var environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function programExpression(guid) {\n    var child = this.environment.children[guid],\n        programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function useRegister(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function push(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function pushStackLiteral(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function pushSource(source) {\n    if (this.pendingContent) {\n      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function replaceStack(callback) {\n    var prefix = ['('],\n        stack = undefined,\n        createdStack = undefined,\n        usedLiteral = undefined;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new _exception2['default']('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    var top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      var _name = this.incrStack();\n\n      prefix = ['((', this.push(_name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    var item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function incrStack() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function topStackName() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function flushInline() {\n    var inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (var i = 0, len = inlineStack.length; i < len; i++) {\n      var entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        var stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function isInline() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function popStack(wrapped) {\n    var inline = this.isInline(),\n        item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new _exception2['default']('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function topStack() {\n    var stack = this.isInline() ? this.inlineStack : this.compileStack,\n        item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function contextName(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function quotedString(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function objectLiteral(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function aliasable(name) {\n    var ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function setupHelper(paramSize, name, blockHelper) {\n    var params = [],\n        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    var foundHelper = this.nameLookup('helpers', name, 'helper'),\n        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function setupParams(helper, paramSize, params) {\n    var options = {},\n        contexts = [],\n        types = [],\n        ids = [],\n        objectArgs = !params,\n        param = undefined;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    var inverse = this.popStack(),\n        program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    var i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {\n    var options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function () {\n  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');\n\n  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n  for (var i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function (name) {\n  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, i, type) {\n  var stack = compiler.popStack(),\n      len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ', ', JSON.stringify(compiler.source.currentLocation), ' )'];\n  } else {\n    return stack;\n  }\n}\n\nexports['default'] = JavaScriptCompiler;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _handlebarsRuntime = require('./handlebars.runtime');\n\nvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);\n\n// Compiler imports\n\nvar _handlebarsCompilerAst = require('./handlebars/compiler/ast');\n\nvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\nvar _handlebarsCompilerBase = require('./handlebars/compiler/base');\n\nvar _handlebarsCompilerCompiler = require('./handlebars/compiler/compiler');\n\nvar _handlebarsCompilerJavascriptCompiler = require('./handlebars/compiler/javascript-compiler');\n\nvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\nvar _handlebarsCompilerVisitor = require('./handlebars/compiler/visitor');\n\nvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\nvar _create = _handlebarsRuntime2['default'].create;\nfunction create() {\n  var hb = _create();\n\n  hb.compile = function (input, options) {\n    return _handlebarsCompilerCompiler.compile(input, options, hb);\n  };\n  hb.precompile = function (input, options) {\n    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n  };\n\n  hb.AST = _handlebarsCompilerAst2['default'];\n  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n  hb.Parser = _handlebarsCompilerBase.parser;\n  hb.parse = _handlebarsCompilerBase.parse;\n  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst.Visitor = _handlebarsCompilerVisitor2['default'];\n\ninst['default'] = inst;\n\nexports['default'] = inst;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7aUNBQW9CLHNCQUFzQjs7Ozs7O3FDQUcxQiwyQkFBMkI7Ozs7c0NBS3BDLDRCQUE0Qjs7MENBQ1csZ0NBQWdDOztvREFDL0MsMkNBQTJDOzs7O3lDQUN0RCwrQkFBK0I7Ozs7b0NBRTVCLDBCQUEwQjs7OztBQUVqRCxJQUFJLE9BQU8sR0FBRywrQkFBUSxNQUFNLENBQUM7QUFDN0IsU0FBUyxNQUFNLEdBQUc7QUFDaEIsTUFBSSxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUM7O0FBRW5CLElBQUUsQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLFdBQU8sb0NBQVEsS0FBSyxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztHQUNwQyxDQUFDO0FBQ0YsSUFBRSxDQUFDLFVBQVUsR0FBRyxVQUFTLEtBQUssRUFBRSxPQUFPLEVBQUU7QUFDdkMsV0FBTyx1Q0FBVyxLQUFLLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0dBQ3ZDLENBQUM7O0FBRUYsSUFBRSxDQUFDLEdBQUcscUNBQU0sQ0FBQztBQUNiLElBQUUsQ0FBQyxRQUFRLHVDQUFXLENBQUM7QUFDdkIsSUFBRSxDQUFDLGtCQUFrQixvREFBcUIsQ0FBQztBQUMzQyxJQUFFLENBQUMsTUFBTSxpQ0FBUyxDQUFDO0FBQ25CLElBQUUsQ0FBQyxLQUFLLGdDQUFRLENBQUM7QUFDakIsSUFBRSxDQUFDLHNCQUFzQixpREFBeUIsQ0FBQzs7QUFFbkQsU0FBTyxFQUFFLENBQUM7Q0FDWDs7QUFFRCxJQUFJLElBQUksR0FBRyxNQUFNLEVBQUUsQ0FBQztBQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQzs7QUFFckIsa0NBQVcsSUFBSSxDQUFDLENBQUM7O0FBRWpCLElBQUksQ0FBQyxPQUFPLHlDQUFVLENBQUM7O0FBRXZCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUM7O3FCQUVSLElBQUkiLCJmaWxlIjoiaGFuZGxlYmFycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBydW50aW1lIGZyb20gJy4vaGFuZGxlYmFycy5ydW50aW1lJztcblxuLy8gQ29tcGlsZXIgaW1wb3J0c1xuaW1wb3J0IEFTVCBmcm9tICcuL2hhbmRsZWJhcnMvY29tcGlsZXIvYXN0JztcbmltcG9ydCB7XG4gIHBhcnNlciBhcyBQYXJzZXIsXG4gIHBhcnNlLFxuICBwYXJzZVdpdGhvdXRQcm9jZXNzaW5nXG59IGZyb20gJy4vaGFuZGxlYmFycy9jb21waWxlci9iYXNlJztcbmltcG9ydCB7IENvbXBpbGVyLCBjb21waWxlLCBwcmVjb21waWxlIH0gZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2NvbXBpbGVyJztcbmltcG9ydCBKYXZhU2NyaXB0Q29tcGlsZXIgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2phdmFzY3JpcHQtY29tcGlsZXInO1xuaW1wb3J0IFZpc2l0b3IgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL3Zpc2l0b3InO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG5sZXQgX2NyZWF0ZSA9IHJ1bnRpbWUuY3JlYXRlO1xuZnVuY3Rpb24gY3JlYXRlKCkge1xuICBsZXQgaGIgPSBfY3JlYXRlKCk7XG5cbiAgaGIuY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcbiAgaGIucHJlY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHByZWNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcblxuICBoYi5BU1QgPSBBU1Q7XG4gIGhiLkNvbXBpbGVyID0gQ29tcGlsZXI7XG4gIGhiLkphdmFTY3JpcHRDb21waWxlciA9IEphdmFTY3JpcHRDb21waWxlcjtcbiAgaGIuUGFyc2VyID0gUGFyc2VyO1xuICBoYi5wYXJzZSA9IHBhcnNlO1xuICBoYi5wYXJzZVdpdGhvdXRQcm9jZXNzaW5nID0gcGFyc2VXaXRob3V0UHJvY2Vzc2luZztcblxuICByZXR1cm4gaGI7XG59XG5cbmxldCBpbnN0ID0gY3JlYXRlKCk7XG5pbnN0LmNyZWF0ZSA9IGNyZWF0ZTtcblxubm9Db25mbGljdChpbnN0KTtcblxuaW5zdC5WaXNpdG9yID0gVmlzaXRvcjtcblxuaW5zdFsnZGVmYXVsdCddID0gaW5zdDtcblxuZXhwb3J0IGRlZmF1bHQgaW5zdDtcbiJdfQ==\n",
    "/* eslint-disable new-cap */\n'use strict';\n\nexports.__esModule = true;\nexports.print = print;\nexports.PrintVisitor = PrintVisitor;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _visitor = require('./visitor');\n\nvar _visitor2 = _interopRequireDefault(_visitor);\n\nfunction print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nfunction PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new _visitor2['default']();\n\nPrintVisitor.prototype.pad = function (string) {\n  var out = '';\n\n  for (var i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function (program) {\n  var out = '',\n      body = program.body,\n      i = undefined,\n      l = undefined;\n\n  if (program.blockParams) {\n    var blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function (mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function (mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function (block) {\n  var out = '';\n\n  out += this.pad((block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:');\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function (partial) {\n  var content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function (partial) {\n  var content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function (content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function (comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function (sexpr) {\n  var params = sexpr.params,\n      paramStrings = [],\n      hash = undefined;\n\n  for (var i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function (id) {\n  var path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function (string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function (number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function (bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function () {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function () {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function (hash) {\n  var pairs = hash.pairs,\n      joinedPairs = [];\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function (pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n",
    "// USAGE:\n// var handlebars = require('handlebars');\n/* eslint-env node */\n/* eslint-disable no-var */\n\n// var local = handlebars.create();\n\nvar handlebars = require('../dist/cjs/handlebars')['default'];\n\nvar printer = require('../dist/cjs/handlebars/compiler/printer');\nhandlebars.PrintVisitor = printer.PrintVisitor;\nhandlebars.print = printer.print;\n\nmodule.exports = handlebars;\n\n// Publish a Node.js require() handler for .handlebars and .hbs files\nfunction extension(module, filename) {\n  var fs = require('fs');\n  var templateString = fs.readFileSync(filename, 'utf8');\n  module.exports = handlebars.compile(templateString);\n}\n/* istanbul ignore else */\nif (typeof require !== 'undefined' && require.extensions) {\n  require.extensions['.handlebars'] = extension;\n  require.extensions['.hbs'] = extension;\n}\n",
    "const a=a=>{a=1831565813+(a|=0)|0;let e=Math.imul(a^a>>>15,1|a);return e=e+Math.imul(e^e>>>7,61|e)^e,((e^e>>>14)>>>0)/4294967296};class e{constructor(a){this.dictionaries=void 0,this.length=void 0,this.separator=void 0,this.style=void 0,this.seed=void 0;const{length:e,separator:i,dictionaries:n,style:l,seed:r}=a;this.dictionaries=n,this.separator=i,this.length=e,this.style=l,this.seed=r}generate(){if(!this.dictionaries)throw new Error('Cannot find any dictionary. Please provide at least one, or leave the \"dictionary\" field empty in the config object');if(this.length<=0)throw new Error(\"Invalid length provided\");if(this.length>this.dictionaries.length)throw new Error(`The length cannot be bigger than the number of dictionaries.\\nLength provided: ${this.length}. Number of dictionaries provided: ${this.dictionaries.length}`);let e=this.seed;return this.dictionaries.slice(0,this.length).reduce((i,n)=>{let l;e?(l=(e=>{if(\"string\"==typeof e){const i=e.split(\"\").map(a=>a.charCodeAt(0)).reduce((a,e)=>a+e,1),n=Math.floor(Number(i));return a(n)}return a(e)})(e),e=4294967296*l):l=Math.random();let r=n[Math.floor(l*n.length)]||\"\";if(\"lowerCase\"===this.style)r=r.toLowerCase();else if(\"capital\"===this.style){const[a,...e]=r.split(\"\");r=a.toUpperCase()+e.join(\"\")}else\"upperCase\"===this.style&&(r=r.toUpperCase());return i?`${i}${this.separator}${r}`:`${r}`},\"\")}}const i={separator:\"_\",dictionaries:[]};exports.NumberDictionary=class{static generate(a={}){let e=a.min||1,i=a.max||999;if(a.length){const n=Math.pow(10,a.length);return e=n/10,i=n-1,[`${Math.floor(Math.random()*(i-e))+e}`]}return[`${Math.floor(Math.random()*(i-e))+e}`]}},exports.adjectives=[\"able\",\"above\",\"absent\",\"absolute\",\"abstract\",\"abundant\",\"academic\",\"acceptable\",\"accepted\",\"accessible\",\"accurate\",\"accused\",\"active\",\"actual\",\"acute\",\"added\",\"additional\",\"adequate\",\"adjacent\",\"administrative\",\"adorable\",\"advanced\",\"adverse\",\"advisory\",\"aesthetic\",\"afraid\",\"aggregate\",\"aggressive\",\"agreeable\",\"agreed\",\"agricultural\",\"alert\",\"alive\",\"alleged\",\"allied\",\"alone\",\"alright\",\"alternative\",\"amateur\",\"amazing\",\"ambitious\",\"amused\",\"ancient\",\"angry\",\"annoyed\",\"annual\",\"anonymous\",\"anxious\",\"appalling\",\"apparent\",\"applicable\",\"appropriate\",\"arbitrary\",\"architectural\",\"armed\",\"arrogant\",\"artificial\",\"artistic\",\"ashamed\",\"asleep\",\"assistant\",\"associated\",\"atomic\",\"attractive\",\"automatic\",\"autonomous\",\"available\",\"average\",\"awake\",\"aware\",\"awful\",\"awkward\",\"back\",\"bad\",\"balanced\",\"bare\",\"basic\",\"beautiful\",\"beneficial\",\"better\",\"bewildered\",\"big\",\"binding\",\"biological\",\"bitter\",\"bizarre\",\"blank\",\"blind\",\"blonde\",\"bloody\",\"blushing\",\"boiling\",\"bold\",\"bored\",\"boring\",\"bottom\",\"brainy\",\"brave\",\"breakable\",\"breezy\",\"brief\",\"bright\",\"brilliant\",\"broad\",\"broken\",\"bumpy\",\"burning\",\"busy\",\"calm\",\"capable\",\"capitalist\",\"careful\",\"casual\",\"causal\",\"cautious\",\"central\",\"certain\",\"changing\",\"characteristic\",\"charming\",\"cheap\",\"cheerful\",\"chemical\",\"chief\",\"chilly\",\"chosen\",\"christian\",\"chronic\",\"chubby\",\"circular\",\"civic\",\"civil\",\"civilian\",\"classic\",\"classical\",\"clean\",\"clear\",\"clever\",\"clinical\",\"close\",\"closed\",\"cloudy\",\"clumsy\",\"coastal\",\"cognitive\",\"coherent\",\"cold\",\"collective\",\"colonial\",\"colorful\",\"colossal\",\"coloured\",\"colourful\",\"combative\",\"combined\",\"comfortable\",\"coming\",\"commercial\",\"common\",\"communist\",\"compact\",\"comparable\",\"comparative\",\"compatible\",\"competent\",\"competitive\",\"complete\",\"complex\",\"complicated\",\"comprehensive\",\"compulsory\",\"conceptual\",\"concerned\",\"concrete\",\"condemned\",\"confident\",\"confidential\",\"confused\",\"conscious\",\"conservation\",\"conservative\",\"considerable\",\"consistent\",\"constant\",\"constitutional\",\"contemporary\",\"content\",\"continental\",\"continued\",\"continuing\",\"continuous\",\"controlled\",\"controversial\",\"convenient\",\"conventional\",\"convinced\",\"convincing\",\"cooing\",\"cool\",\"cooperative\",\"corporate\",\"correct\",\"corresponding\",\"costly\",\"courageous\",\"crazy\",\"creative\",\"creepy\",\"criminal\",\"critical\",\"crooked\",\"crowded\",\"crucial\",\"crude\",\"cruel\",\"cuddly\",\"cultural\",\"curious\",\"curly\",\"current\",\"curved\",\"cute\",\"daily\",\"damaged\",\"damp\",\"dangerous\",\"dark\",\"dead\",\"deaf\",\"deafening\",\"dear\",\"decent\",\"decisive\",\"deep\",\"defeated\",\"defensive\",\"defiant\",\"definite\",\"deliberate\",\"delicate\",\"delicious\",\"delighted\",\"delightful\",\"democratic\",\"dependent\",\"depressed\",\"desirable\",\"desperate\",\"detailed\",\"determined\",\"developed\",\"developing\",\"devoted\",\"different\",\"difficult\",\"digital\",\"diplomatic\",\"direct\",\"dirty\",\"disabled\",\"disappointed\",\"disastrous\",\"disciplinary\",\"disgusted\",\"distant\",\"distinct\",\"distinctive\",\"distinguished\",\"disturbed\",\"disturbing\",\"diverse\",\"divine\",\"dizzy\",\"domestic\",\"dominant\",\"double\",\"doubtful\",\"drab\",\"dramatic\",\"dreadful\",\"driving\",\"drunk\",\"dry\",\"dual\",\"due\",\"dull\",\"dusty\",\"dutch\",\"dying\",\"dynamic\",\"eager\",\"early\",\"eastern\",\"easy\",\"economic\",\"educational\",\"eerie\",\"effective\",\"efficient\",\"elaborate\",\"elated\",\"elderly\",\"eldest\",\"electoral\",\"electric\",\"electrical\",\"electronic\",\"elegant\",\"eligible\",\"embarrassed\",\"embarrassing\",\"emotional\",\"empirical\",\"empty\",\"enchanting\",\"encouraging\",\"endless\",\"energetic\",\"enormous\",\"enthusiastic\",\"entire\",\"entitled\",\"envious\",\"environmental\",\"equal\",\"equivalent\",\"essential\",\"established\",\"estimated\",\"ethical\",\"ethnic\",\"eventual\",\"everyday\",\"evident\",\"evil\",\"evolutionary\",\"exact\",\"excellent\",\"exceptional\",\"excess\",\"excessive\",\"excited\",\"exciting\",\"exclusive\",\"existing\",\"exotic\",\"expected\",\"expensive\",\"experienced\",\"experimental\",\"explicit\",\"extended\",\"extensive\",\"external\",\"extra\",\"extraordinary\",\"extreme\",\"exuberant\",\"faint\",\"fair\",\"faithful\",\"familiar\",\"famous\",\"fancy\",\"fantastic\",\"far\",\"fascinating\",\"fashionable\",\"fast\",\"fat\",\"fatal\",\"favourable\",\"favourite\",\"federal\",\"fellow\",\"female\",\"feminist\",\"few\",\"fierce\",\"filthy\",\"final\",\"financial\",\"fine\",\"firm\",\"fiscal\",\"fit\",\"fixed\",\"flaky\",\"flat\",\"flexible\",\"fluffy\",\"fluttering\",\"flying\",\"following\",\"fond\",\"foolish\",\"foreign\",\"formal\",\"formidable\",\"forthcoming\",\"fortunate\",\"forward\",\"fragile\",\"frail\",\"frantic\",\"free\",\"frequent\",\"fresh\",\"friendly\",\"frightened\",\"front\",\"frozen\",\"full\",\"fun\",\"functional\",\"fundamental\",\"funny\",\"furious\",\"future\",\"fuzzy\",\"gastric\",\"gay\",\"general\",\"generous\",\"genetic\",\"gentle\",\"genuine\",\"geographical\",\"giant\",\"gigantic\",\"given\",\"glad\",\"glamorous\",\"gleaming\",\"global\",\"glorious\",\"golden\",\"good\",\"gorgeous\",\"gothic\",\"governing\",\"graceful\",\"gradual\",\"grand\",\"grateful\",\"greasy\",\"great\",\"grieving\",\"grim\",\"gross\",\"grotesque\",\"growing\",\"grubby\",\"grumpy\",\"guilty\",\"handicapped\",\"handsome\",\"happy\",\"hard\",\"harsh\",\"head\",\"healthy\",\"heavy\",\"helpful\",\"helpless\",\"hidden\",\"high\",\"hilarious\",\"hissing\",\"historic\",\"historical\",\"hollow\",\"holy\",\"homeless\",\"homely\",\"hon\",\"honest\",\"horizontal\",\"horrible\",\"hostile\",\"hot\",\"huge\",\"human\",\"hungry\",\"hurt\",\"hushed\",\"husky\",\"icy\",\"ideal\",\"identical\",\"ideological\",\"ill\",\"illegal\",\"imaginative\",\"immediate\",\"immense\",\"imperial\",\"implicit\",\"important\",\"impossible\",\"impressed\",\"impressive\",\"improved\",\"inadequate\",\"inappropriate\",\"inc\",\"inclined\",\"increased\",\"increasing\",\"incredible\",\"independent\",\"indirect\",\"individual\",\"industrial\",\"inevitable\",\"influential\",\"informal\",\"inherent\",\"initial\",\"injured\",\"inland\",\"inner\",\"innocent\",\"innovative\",\"inquisitive\",\"instant\",\"institutional\",\"insufficient\",\"intact\",\"integral\",\"integrated\",\"intellectual\",\"intelligent\",\"intense\",\"intensive\",\"interested\",\"interesting\",\"interim\",\"interior\",\"intermediate\",\"internal\",\"international\",\"intimate\",\"invisible\",\"involved\",\"irrelevant\",\"isolated\",\"itchy\",\"jealous\",\"jittery\",\"joint\",\"jolly\",\"joyous\",\"judicial\",\"juicy\",\"junior\",\"just\",\"keen\",\"key\",\"kind\",\"known\",\"labour\",\"large\",\"late\",\"latin\",\"lazy\",\"leading\",\"left\",\"legal\",\"legislative\",\"legitimate\",\"lengthy\",\"lesser\",\"level\",\"lexical\",\"liable\",\"liberal\",\"light\",\"like\",\"likely\",\"limited\",\"linear\",\"linguistic\",\"liquid\",\"literary\",\"little\",\"live\",\"lively\",\"living\",\"local\",\"logical\",\"lonely\",\"long\",\"loose\",\"lost\",\"loud\",\"lovely\",\"low\",\"loyal\",\"ltd\",\"lucky\",\"mad\",\"magic\",\"magnetic\",\"magnificent\",\"main\",\"major\",\"male\",\"mammoth\",\"managerial\",\"managing\",\"manual\",\"many\",\"marginal\",\"marine\",\"marked\",\"married\",\"marvellous\",\"marxist\",\"mass\",\"massive\",\"mathematical\",\"mature\",\"maximum\",\"mean\",\"meaningful\",\"mechanical\",\"medical\",\"medieval\",\"melodic\",\"melted\",\"mental\",\"mere\",\"metropolitan\",\"mid\",\"middle\",\"mighty\",\"mild\",\"military\",\"miniature\",\"minimal\",\"minimum\",\"ministerial\",\"minor\",\"miserable\",\"misleading\",\"missing\",\"misty\",\"mixed\",\"moaning\",\"mobile\",\"moderate\",\"modern\",\"modest\",\"molecular\",\"monetary\",\"monthly\",\"moral\",\"motionless\",\"muddy\",\"multiple\",\"mushy\",\"musical\",\"mute\",\"mutual\",\"mysterious\",\"naked\",\"narrow\",\"nasty\",\"national\",\"native\",\"natural\",\"naughty\",\"naval\",\"near\",\"nearby\",\"neat\",\"necessary\",\"negative\",\"neighbouring\",\"nervous\",\"net\",\"neutral\",\"new\",\"nice\",\"noble\",\"noisy\",\"normal\",\"northern\",\"nosy\",\"notable\",\"novel\",\"nuclear\",\"numerous\",\"nursing\",\"nutritious\",\"nutty\",\"obedient\",\"objective\",\"obliged\",\"obnoxious\",\"obvious\",\"occasional\",\"occupational\",\"odd\",\"official\",\"ok\",\"okay\",\"old\",\"olympic\",\"only\",\"open\",\"operational\",\"opposite\",\"optimistic\",\"oral\",\"ordinary\",\"organic\",\"organisational\",\"original\",\"orthodox\",\"other\",\"outdoor\",\"outer\",\"outrageous\",\"outside\",\"outstanding\",\"overall\",\"overseas\",\"overwhelming\",\"painful\",\"pale\",\"panicky\",\"parallel\",\"parental\",\"parliamentary\",\"partial\",\"particular\",\"passing\",\"passive\",\"past\",\"patient\",\"payable\",\"peaceful\",\"peculiar\",\"perfect\",\"permanent\",\"persistent\",\"personal\",\"petite\",\"philosophical\",\"physical\",\"plain\",\"planned\",\"plastic\",\"pleasant\",\"pleased\",\"poised\",\"polite\",\"political\",\"poor\",\"popular\",\"positive\",\"possible\",\"potential\",\"powerful\",\"practical\",\"precious\",\"precise\",\"preferred\",\"pregnant\",\"preliminary\",\"premier\",\"prepared\",\"present\",\"presidential\",\"pretty\",\"previous\",\"prickly\",\"primary\",\"prime\",\"primitive\",\"principal\",\"printed\",\"prior\",\"private\",\"probable\",\"productive\",\"professional\",\"profitable\",\"profound\",\"progressive\",\"prominent\",\"promising\",\"proper\",\"proposed\",\"prospective\",\"protective\",\"protestant\",\"proud\",\"provincial\",\"psychiatric\",\"psychological\",\"public\",\"puny\",\"pure\",\"purring\",\"puzzled\",\"quaint\",\"qualified\",\"quarrelsome\",\"querulous\",\"quick\",\"quickest\",\"quiet\",\"quintessential\",\"quixotic\",\"racial\",\"radical\",\"rainy\",\"random\",\"rapid\",\"rare\",\"raspy\",\"rational\",\"ratty\",\"raw\",\"ready\",\"real\",\"realistic\",\"rear\",\"reasonable\",\"recent\",\"reduced\",\"redundant\",\"regional\",\"registered\",\"regular\",\"regulatory\",\"related\",\"relative\",\"relaxed\",\"relevant\",\"reliable\",\"relieved\",\"religious\",\"reluctant\",\"remaining\",\"remarkable\",\"remote\",\"renewed\",\"representative\",\"repulsive\",\"required\",\"resident\",\"residential\",\"resonant\",\"respectable\",\"respective\",\"responsible\",\"resulting\",\"retail\",\"retired\",\"revolutionary\",\"rich\",\"ridiculous\",\"right\",\"rigid\",\"ripe\",\"rising\",\"rival\",\"roasted\",\"robust\",\"rolling\",\"romantic\",\"rotten\",\"rough\",\"round\",\"royal\",\"rubber\",\"rude\",\"ruling\",\"running\",\"rural\",\"sacred\",\"sad\",\"safe\",\"salty\",\"satisfactory\",\"satisfied\",\"scared\",\"scary\",\"scattered\",\"scientific\",\"scornful\",\"scrawny\",\"screeching\",\"secondary\",\"secret\",\"secure\",\"select\",\"selected\",\"selective\",\"selfish\",\"semantic\",\"senior\",\"sensible\",\"sensitive\",\"separate\",\"serious\",\"severe\",\"sexual\",\"shaggy\",\"shaky\",\"shallow\",\"shared\",\"sharp\",\"sheer\",\"shiny\",\"shivering\",\"shocked\",\"short\",\"shrill\",\"shy\",\"sick\",\"significant\",\"silent\",\"silky\",\"silly\",\"similar\",\"simple\",\"single\",\"skilled\",\"skinny\",\"sleepy\",\"slight\",\"slim\",\"slimy\",\"slippery\",\"slow\",\"small\",\"smart\",\"smiling\",\"smoggy\",\"smooth\",\"social\",\"socialist\",\"soft\",\"solar\",\"sole\",\"solid\",\"sophisticated\",\"sore\",\"sorry\",\"sound\",\"sour\",\"southern\",\"soviet\",\"spare\",\"sparkling\",\"spatial\",\"special\",\"specific\",\"specified\",\"spectacular\",\"spicy\",\"spiritual\",\"splendid\",\"spontaneous\",\"sporting\",\"spotless\",\"spotty\",\"square\",\"squealing\",\"stable\",\"stale\",\"standard\",\"static\",\"statistical\",\"statutory\",\"steady\",\"steep\",\"sticky\",\"stiff\",\"still\",\"stingy\",\"stormy\",\"straight\",\"straightforward\",\"strange\",\"strategic\",\"strict\",\"striking\",\"striped\",\"strong\",\"structural\",\"stuck\",\"stupid\",\"subjective\",\"subsequent\",\"substantial\",\"subtle\",\"successful\",\"successive\",\"sudden\",\"sufficient\",\"suitable\",\"sunny\",\"super\",\"superb\",\"superior\",\"supporting\",\"supposed\",\"supreme\",\"sure\",\"surprised\",\"surprising\",\"surrounding\",\"surviving\",\"suspicious\",\"sweet\",\"swift\",\"symbolic\",\"sympathetic\",\"systematic\",\"tall\",\"tame\",\"tart\",\"tasteless\",\"tasty\",\"technical\",\"technological\",\"teenage\",\"temporary\",\"tender\",\"tense\",\"terrible\",\"territorial\",\"testy\",\"then\",\"theoretical\",\"thick\",\"thin\",\"thirsty\",\"thorough\",\"thoughtful\",\"thoughtless\",\"thundering\",\"tight\",\"tiny\",\"tired\",\"top\",\"tory\",\"total\",\"tough\",\"toxic\",\"traditional\",\"tragic\",\"tremendous\",\"tricky\",\"tropical\",\"troubled\",\"typical\",\"ugliest\",\"ugly\",\"ultimate\",\"unable\",\"unacceptable\",\"unaware\",\"uncertain\",\"unchanged\",\"uncomfortable\",\"unconscious\",\"underground\",\"underlying\",\"unemployed\",\"uneven\",\"unexpected\",\"unfair\",\"unfortunate\",\"unhappy\",\"uniform\",\"uninterested\",\"unique\",\"united\",\"universal\",\"unknown\",\"unlikely\",\"unnecessary\",\"unpleasant\",\"unsightly\",\"unusual\",\"unwilling\",\"upper\",\"upset\",\"uptight\",\"urban\",\"urgent\",\"used\",\"useful\",\"useless\",\"usual\",\"vague\",\"valid\",\"valuable\",\"variable\",\"varied\",\"various\",\"varying\",\"vast\",\"verbal\",\"vertical\",\"very\",\"vicarious\",\"vicious\",\"victorious\",\"violent\",\"visible\",\"visiting\",\"visual\",\"vital\",\"vitreous\",\"vivacious\",\"vivid\",\"vocal\",\"vocational\",\"voiceless\",\"voluminous\",\"voluntary\",\"vulnerable\",\"wandering\",\"warm\",\"wasteful\",\"watery\",\"weak\",\"wealthy\",\"weary\",\"wee\",\"weekly\",\"weird\",\"welcome\",\"well\",\"western\",\"wet\",\"whispering\",\"whole\",\"wicked\",\"wide\",\"widespread\",\"wild\",\"wilful\",\"willing\",\"willowy\",\"wily\",\"wise\",\"wispy\",\"wittering\",\"witty\",\"wonderful\",\"wooden\",\"working\",\"worldwide\",\"worried\",\"worrying\",\"worthwhile\",\"worthy\",\"written\",\"wrong\",\"xenacious\",\"xenial\",\"xenogeneic\",\"xenophobic\",\"xeric\",\"xerothermic\",\"yabbering\",\"yammering\",\"yappiest\",\"yappy\",\"yawning\",\"yearling\",\"yearning\",\"yeasty\",\"yelling\",\"yelping\",\"yielding\",\"yodelling\",\"young\",\"youngest\",\"youthful\",\"ytterbic\",\"yucky\",\"yummy\",\"zany\",\"zealous\",\"zeroth\",\"zestful\",\"zesty\",\"zippy\",\"zonal\",\"zoophagous\",\"zygomorphic\",\"zygotic\"],exports.animals=[\"aardvark\",\"aardwolf\",\"albatross\",\"alligator\",\"alpaca\",\"amphibian\",\"anaconda\",\"angelfish\",\"anglerfish\",\"ant\",\"anteater\",\"antelope\",\"antlion\",\"ape\",\"aphid\",\"armadillo\",\"asp\",\"baboon\",\"badger\",\"bandicoot\",\"barnacle\",\"barracuda\",\"basilisk\",\"bass\",\"bat\",\"bear\",\"beaver\",\"bedbug\",\"bee\",\"beetle\",\"bird\",\"bison\",\"blackbird\",\"boa\",\"boar\",\"bobcat\",\"bobolink\",\"bonobo\",\"booby\",\"bovid\",\"bug\",\"butterfly\",\"buzzard\",\"camel\",\"canid\",\"canidae\",\"capybara\",\"cardinal\",\"caribou\",\"carp\",\"cat\",\"caterpillar\",\"catfish\",\"catshark\",\"cattle\",\"centipede\",\"cephalopod\",\"chameleon\",\"cheetah\",\"chickadee\",\"chicken\",\"chimpanzee\",\"chinchilla\",\"chipmunk\",\"cicada\",\"clam\",\"clownfish\",\"cobra\",\"cockroach\",\"cod\",\"condor\",\"constrictor\",\"coral\",\"cougar\",\"cow\",\"coyote\",\"crab\",\"crane\",\"crawdad\",\"crayfish\",\"cricket\",\"crocodile\",\"crow\",\"cuckoo\",\"damselfly\",\"deer\",\"dingo\",\"dinosaur\",\"dog\",\"dolphin\",\"donkey\",\"dormouse\",\"dove\",\"dragon\",\"dragonfly\",\"duck\",\"eagle\",\"earthworm\",\"earwig\",\"echidna\",\"eel\",\"egret\",\"elephant\",\"elk\",\"emu\",\"ermine\",\"falcon\",\"felidae\",\"ferret\",\"finch\",\"firefly\",\"fish\",\"flamingo\",\"flea\",\"fly\",\"flyingfish\",\"fowl\",\"fox\",\"frog\",\"galliform\",\"gamefowl\",\"gayal\",\"gazelle\",\"gecko\",\"gerbil\",\"gibbon\",\"giraffe\",\"goat\",\"goldfish\",\"goose\",\"gopher\",\"gorilla\",\"grasshopper\",\"grouse\",\"guan\",\"guanaco\",\"guineafowl\",\"gull\",\"guppy\",\"haddock\",\"halibut\",\"hamster\",\"hare\",\"harrier\",\"hawk\",\"hedgehog\",\"heron\",\"herring\",\"hippopotamus\",\"hookworm\",\"hornet\",\"horse\",\"hoverfly\",\"hummingbird\",\"hyena\",\"iguana\",\"impala\",\"jackal\",\"jaguar\",\"jay\",\"jellyfish\",\"junglefowl\",\"kangaroo\",\"kingfisher\",\"kite\",\"kiwi\",\"koala\",\"koi\",\"krill\",\"ladybug\",\"lamprey\",\"landfowl\",\"lark\",\"leech\",\"lemming\",\"lemur\",\"leopard\",\"leopon\",\"limpet\",\"lion\",\"lizard\",\"llama\",\"lobster\",\"locust\",\"loon\",\"louse\",\"lungfish\",\"lynx\",\"macaw\",\"mackerel\",\"magpie\",\"mammal\",\"manatee\",\"mandrill\",\"marlin\",\"marmoset\",\"marmot\",\"marsupial\",\"marten\",\"mastodon\",\"meadowlark\",\"meerkat\",\"mink\",\"minnow\",\"mite\",\"mockingbird\",\"mole\",\"mollusk\",\"mongoose\",\"monkey\",\"moose\",\"mosquito\",\"moth\",\"mouse\",\"mule\",\"muskox\",\"narwhal\",\"newt\",\"nightingale\",\"ocelot\",\"octopus\",\"opossum\",\"orangutan\",\"orca\",\"ostrich\",\"otter\",\"owl\",\"ox\",\"panda\",\"panther\",\"parakeet\",\"parrot\",\"parrotfish\",\"partridge\",\"peacock\",\"peafowl\",\"pelican\",\"penguin\",\"perch\",\"pheasant\",\"pig\",\"pigeon\",\"pike\",\"pinniped\",\"piranha\",\"planarian\",\"platypus\",\"pony\",\"porcupine\",\"porpoise\",\"possum\",\"prawn\",\"primate\",\"ptarmigan\",\"puffin\",\"puma\",\"python\",\"quail\",\"quelea\",\"quokka\",\"rabbit\",\"raccoon\",\"rat\",\"rattlesnake\",\"raven\",\"reindeer\",\"reptile\",\"rhinoceros\",\"roadrunner\",\"rodent\",\"rook\",\"rooster\",\"roundworm\",\"sailfish\",\"salamander\",\"salmon\",\"sawfish\",\"scallop\",\"scorpion\",\"seahorse\",\"shark\",\"sheep\",\"shrew\",\"shrimp\",\"silkworm\",\"silverfish\",\"skink\",\"skunk\",\"sloth\",\"slug\",\"smelt\",\"snail\",\"snake\",\"snipe\",\"sole\",\"sparrow\",\"spider\",\"spoonbill\",\"squid\",\"squirrel\",\"starfish\",\"stingray\",\"stoat\",\"stork\",\"sturgeon\",\"swallow\",\"swan\",\"swift\",\"swordfish\",\"swordtail\",\"tahr\",\"takin\",\"tapir\",\"tarantula\",\"tarsier\",\"termite\",\"tern\",\"thrush\",\"tick\",\"tiger\",\"tiglon\",\"toad\",\"tortoise\",\"toucan\",\"trout\",\"tuna\",\"turkey\",\"turtle\",\"tyrannosaurus\",\"unicorn\",\"urial\",\"vicuna\",\"viper\",\"vole\",\"vulture\",\"wallaby\",\"walrus\",\"warbler\",\"wasp\",\"weasel\",\"whale\",\"whippet\",\"whitefish\",\"wildcat\",\"wildebeest\",\"wildfowl\",\"wolf\",\"wolverine\",\"wombat\",\"woodpecker\",\"worm\",\"wren\",\"xerinae\",\"yak\",\"zebra\"],exports.colors=[\"amaranth\",\"amber\",\"amethyst\",\"apricot\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"black\",\"blue\",\"blush\",\"bronze\",\"brown\",\"chocolate\",\"coffee\",\"copper\",\"coral\",\"crimson\",\"cyan\",\"emerald\",\"fuchsia\",\"gold\",\"gray\",\"green\",\"harlequin\",\"indigo\",\"ivory\",\"jade\",\"lavender\",\"lime\",\"magenta\",\"maroon\",\"moccasin\",\"olive\",\"orange\",\"peach\",\"pink\",\"plum\",\"purple\",\"red\",\"rose\",\"salmon\",\"sapphire\",\"scarlet\",\"silver\",\"tan\",\"teal\",\"tomato\",\"turquoise\",\"violet\",\"white\",\"yellow\"],exports.countries=[\"Afghanistan\",\"Åland Islands\",\"Albania\",\"Algeria\",\"American Samoa\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antarctica\",\"Antigua & Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Ascension Island\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia & Herzegovina\",\"Botswana\",\"Brazil\",\"British Indian Ocean Territory\",\"British Virgin Islands\",\"Brunei\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Canary Islands\",\"Cape Verde\",\"Caribbean Netherlands\",\"Cayman Islands\",\"Central African Republic\",\"Ceuta & Melilla\",\"Chad\",\"Chile\",\"China\",\"Christmas Island\",\"Cocos Islands\",\"Colombia\",\"Comoros\",\"Congo\",\"Cook Islands\",\"Costa Rica\",\"Côte d'Ivoire\",\"Croatia\",\"Cuba\",\"Curaçao\",\"Cyprus\",\"Czechia\",\"Denmark\",\"Diego Garcia\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Eurozone\",\"Falkland Islands\",\"Faroe Islands\",\"Fiji\",\"Finland\",\"France\",\"French Guiana\",\"French Polynesia\",\"French Southern Territories\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guadeloupe\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea-Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong SAR China\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau SAR China\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Martinique\",\"Mauritania\",\"Mauritius\",\"Mayotte\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauru\",\"Nepal\",\"Netherlands\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"Niue\",\"Norfolk Island\",\"North Korea\",\"Northern Mariana Islands\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestinian Territories\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Pitcairn Islands\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Réunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Samoa\",\"San Marino\",\"São Tomé & Príncipe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Sint Maarten\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Georgia & South Sandwich Islands\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St. Barthélemy\",\"St. Helena\",\"St. Kitts & Nevis\",\"St. Lucia\",\"St. Martin\",\"St. Pierre & Miquelon\",\"St. Vincent & Grenadines\",\"Sudan\",\"Suriname\",\"Svalbard & Jan Mayen\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor-Leste\",\"Togo\",\"Tokelau\",\"Tonga\",\"Trinidad & Tobago\",\"Tristan da Cunha\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks & Caicos Islands\",\"Tuvalu\",\"U.S. Outlying Islands\",\"U.S. Virgin Islands\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United Nations\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican City\",\"Venezuela\",\"Vietnam\",\"Wallis & Futuna\",\"Western Sahara\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],exports.languages=[\"Akan\",\"Amharic\",\"Arabic\",\"Assamese\",\"Awadhi\",\"Azerbaijani\",\"Balochi\",\"Belarusian\",\"Bengali\",\"Bhojpuri\",\"Burmese\",\"Cebuano\",\"Chewa\",\"Chhattisgarhi\",\"Chittagonian\",\"Czech\",\"Deccan\",\"Dhundhari\",\"Dutch\",\"English\",\"French\",\"Fula\",\"Gan\",\"German\",\"Greek\",\"Gujarati\",\"Hakka\",\"Haryanvi\",\"Hausa\",\"Hiligaynon\",\"Hindi\",\"Hmong\",\"Hungarian\",\"Igbo\",\"Ilocano\",\"Italian\",\"Japanese\",\"Javanese\",\"Jin\",\"Kannada\",\"Kazakh\",\"Khmer\",\"Kinyarwanda\",\"Kirundi\",\"Konkani\",\"Korean\",\"Kurdish\",\"Madurese\",\"Magahi\",\"Maithili\",\"Malagasy\",\"Malay\",\"Malayalam\",\"Mandarin\",\"Marathi\",\"Marwari\",\"Min\",\"Mossi\",\"Nepali\",\"Odia\",\"Oromo\",\"Pashto\",\"Persian\",\"Polish\",\"Portuguese\",\"Punjabi\",\"Quechua\",\"Romanian\",\"Russian\",\"Saraiki\",\"Shona\",\"Sindhi\",\"Sinhala\",\"Somali\",\"Spanish\",\"Sundanese\",\"Swedish\",\"Sylheti\",\"Tagalog\",\"Tamil\",\"Telugu\",\"Thai\",\"Turkish\",\"Turkmen\",\"Ukrainian\",\"Urdu\",\"Uyghur\",\"Uzbek\",\"Vietnamese\",\"Wu\",\"Xhosa\",\"Xiang\",\"Yoruba\",\"Yue\",\"Zhuang\",\"Zulu\"],exports.names=[\"Aaren\",\"Aarika\",\"Abagael\",\"Abagail\",\"Abbe\",\"Abbey\",\"Abbi\",\"Abbie\",\"Abby\",\"Abbye\",\"Abigael\",\"Abigail\",\"Abigale\",\"Abra\",\"Ada\",\"Adah\",\"Adaline\",\"Adan\",\"Adara\",\"Adda\",\"Addi\",\"Addia\",\"Addie\",\"Addy\",\"Adel\",\"Adela\",\"Adelaida\",\"Adelaide\",\"Adele\",\"Adelheid\",\"Adelice\",\"Adelina\",\"Adelind\",\"Adeline\",\"Adella\",\"Adelle\",\"Adena\",\"Adey\",\"Adi\",\"Adiana\",\"Adina\",\"Adora\",\"Adore\",\"Adoree\",\"Adorne\",\"Adrea\",\"Adria\",\"Adriaens\",\"Adrian\",\"Adriana\",\"Adriane\",\"Adrianna\",\"Adrianne\",\"Adriena\",\"Adrienne\",\"Aeriel\",\"Aeriela\",\"Aeriell\",\"Afton\",\"Ag\",\"Agace\",\"Agata\",\"Agatha\",\"Agathe\",\"Aggi\",\"Aggie\",\"Aggy\",\"Agna\",\"Agnella\",\"Agnes\",\"Agnese\",\"Agnesse\",\"Agneta\",\"Agnola\",\"Agretha\",\"Aida\",\"Aidan\",\"Aigneis\",\"Aila\",\"Aile\",\"Ailee\",\"Aileen\",\"Ailene\",\"Ailey\",\"Aili\",\"Ailina\",\"Ailis\",\"Ailsun\",\"Ailyn\",\"Aime\",\"Aimee\",\"Aimil\",\"Aindrea\",\"Ainslee\",\"Ainsley\",\"Ainslie\",\"Ajay\",\"Alaine\",\"Alameda\",\"Alana\",\"Alanah\",\"Alane\",\"Alanna\",\"Alayne\",\"Alberta\",\"Albertina\",\"Albertine\",\"Albina\",\"Alecia\",\"Aleda\",\"Aleece\",\"Aleen\",\"Alejandra\",\"Alejandrina\",\"Alena\",\"Alene\",\"Alessandra\",\"Aleta\",\"Alethea\",\"Alex\",\"Alexa\",\"Alexandra\",\"Alexandrina\",\"Alexi\",\"Alexia\",\"Alexina\",\"Alexine\",\"Alexis\",\"Alfi\",\"Alfie\",\"Alfreda\",\"Alfy\",\"Ali\",\"Alia\",\"Alica\",\"Alice\",\"Alicea\",\"Alicia\",\"Alida\",\"Alidia\",\"Alie\",\"Alika\",\"Alikee\",\"Alina\",\"Aline\",\"Alis\",\"Alisa\",\"Alisha\",\"Alison\",\"Alissa\",\"Alisun\",\"Alix\",\"Aliza\",\"Alla\",\"Alleen\",\"Allegra\",\"Allene\",\"Alli\",\"Allianora\",\"Allie\",\"Allina\",\"Allis\",\"Allison\",\"Allissa\",\"Allix\",\"Allsun\",\"Allx\",\"Ally\",\"Allyce\",\"Allyn\",\"Allys\",\"Allyson\",\"Alma\",\"Almeda\",\"Almeria\",\"Almeta\",\"Almira\",\"Almire\",\"Aloise\",\"Aloisia\",\"Aloysia\",\"Alta\",\"Althea\",\"Alvera\",\"Alverta\",\"Alvina\",\"Alvinia\",\"Alvira\",\"Alyce\",\"Alyda\",\"Alys\",\"Alysa\",\"Alyse\",\"Alysia\",\"Alyson\",\"Alyss\",\"Alyssa\",\"Amabel\",\"Amabelle\",\"Amalea\",\"Amalee\",\"Amaleta\",\"Amalia\",\"Amalie\",\"Amalita\",\"Amalle\",\"Amanda\",\"Amandi\",\"Amandie\",\"Amandy\",\"Amara\",\"Amargo\",\"Amata\",\"Amber\",\"Amberly\",\"Ambur\",\"Ame\",\"Amelia\",\"Amelie\",\"Amelina\",\"Ameline\",\"Amelita\",\"Ami\",\"Amie\",\"Amii\",\"Amil\",\"Amitie\",\"Amity\",\"Ammamaria\",\"Amy\",\"Amye\",\"Ana\",\"Anabal\",\"Anabel\",\"Anabella\",\"Anabelle\",\"Analiese\",\"Analise\",\"Anallese\",\"Anallise\",\"Anastasia\",\"Anastasie\",\"Anastassia\",\"Anatola\",\"Andee\",\"Andeee\",\"Anderea\",\"Andi\",\"Andie\",\"Andra\",\"Andrea\",\"Andreana\",\"Andree\",\"Andrei\",\"Andria\",\"Andriana\",\"Andriette\",\"Andromache\",\"Andy\",\"Anestassia\",\"Anet\",\"Anett\",\"Anetta\",\"Anette\",\"Ange\",\"Angel\",\"Angela\",\"Angele\",\"Angelia\",\"Angelica\",\"Angelika\",\"Angelina\",\"Angeline\",\"Angelique\",\"Angelita\",\"Angelle\",\"Angie\",\"Angil\",\"Angy\",\"Ania\",\"Anica\",\"Anissa\",\"Anita\",\"Anitra\",\"Anjanette\",\"Anjela\",\"Ann\",\"Ann-marie\",\"Anna\",\"Anna-diana\",\"Anna-diane\",\"Anna-maria\",\"Annabal\",\"Annabel\",\"Annabela\",\"Annabell\",\"Annabella\",\"Annabelle\",\"Annadiana\",\"Annadiane\",\"Annalee\",\"Annaliese\",\"Annalise\",\"Annamaria\",\"Annamarie\",\"Anne\",\"Anne-corinne\",\"Anne-marie\",\"Annecorinne\",\"Anneliese\",\"Annelise\",\"Annemarie\",\"Annetta\",\"Annette\",\"Anni\",\"Annice\",\"Annie\",\"Annis\",\"Annissa\",\"Annmaria\",\"Annmarie\",\"Annnora\",\"Annora\",\"Anny\",\"Anselma\",\"Ansley\",\"Anstice\",\"Anthe\",\"Anthea\",\"Anthia\",\"Anthiathia\",\"Antoinette\",\"Antonella\",\"Antonetta\",\"Antonia\",\"Antonie\",\"Antonietta\",\"Antonina\",\"Anya\",\"Appolonia\",\"April\",\"Aprilette\",\"Ara\",\"Arabel\",\"Arabela\",\"Arabele\",\"Arabella\",\"Arabelle\",\"Arda\",\"Ardath\",\"Ardeen\",\"Ardelia\",\"Ardelis\",\"Ardella\",\"Ardelle\",\"Arden\",\"Ardene\",\"Ardenia\",\"Ardine\",\"Ardis\",\"Ardisj\",\"Ardith\",\"Ardra\",\"Ardyce\",\"Ardys\",\"Ardyth\",\"Aretha\",\"Ariadne\",\"Ariana\",\"Aridatha\",\"Ariel\",\"Ariela\",\"Ariella\",\"Arielle\",\"Arlana\",\"Arlee\",\"Arleen\",\"Arlen\",\"Arlena\",\"Arlene\",\"Arleta\",\"Arlette\",\"Arleyne\",\"Arlie\",\"Arliene\",\"Arlina\",\"Arlinda\",\"Arline\",\"Arluene\",\"Arly\",\"Arlyn\",\"Arlyne\",\"Aryn\",\"Ashely\",\"Ashia\",\"Ashien\",\"Ashil\",\"Ashla\",\"Ashlan\",\"Ashlee\",\"Ashleigh\",\"Ashlen\",\"Ashley\",\"Ashli\",\"Ashlie\",\"Ashly\",\"Asia\",\"Astra\",\"Astrid\",\"Astrix\",\"Atalanta\",\"Athena\",\"Athene\",\"Atlanta\",\"Atlante\",\"Auberta\",\"Aubine\",\"Aubree\",\"Aubrette\",\"Aubrey\",\"Aubrie\",\"Aubry\",\"Audi\",\"Audie\",\"Audra\",\"Audre\",\"Audrey\",\"Audrie\",\"Audry\",\"Audrye\",\"Audy\",\"Augusta\",\"Auguste\",\"Augustina\",\"Augustine\",\"Aundrea\",\"Aura\",\"Aurea\",\"Aurel\",\"Aurelea\",\"Aurelia\",\"Aurelie\",\"Auria\",\"Aurie\",\"Aurilia\",\"Aurlie\",\"Auroora\",\"Aurora\",\"Aurore\",\"Austin\",\"Austina\",\"Austine\",\"Ava\",\"Aveline\",\"Averil\",\"Averyl\",\"Avie\",\"Avis\",\"Aviva\",\"Avivah\",\"Avril\",\"Avrit\",\"Ayn\",\"Bab\",\"Babara\",\"Babb\",\"Babbette\",\"Babbie\",\"Babette\",\"Babita\",\"Babs\",\"Bambi\",\"Bambie\",\"Bamby\",\"Barb\",\"Barbabra\",\"Barbara\",\"Barbara-anne\",\"Barbaraanne\",\"Barbe\",\"Barbee\",\"Barbette\",\"Barbey\",\"Barbi\",\"Barbie\",\"Barbra\",\"Barby\",\"Bari\",\"Barrie\",\"Barry\",\"Basia\",\"Bathsheba\",\"Batsheva\",\"Bea\",\"Beatrice\",\"Beatrisa\",\"Beatrix\",\"Beatriz\",\"Bebe\",\"Becca\",\"Becka\",\"Becki\",\"Beckie\",\"Becky\",\"Bee\",\"Beilul\",\"Beitris\",\"Bekki\",\"Bel\",\"Belia\",\"Belicia\",\"Belinda\",\"Belita\",\"Bell\",\"Bella\",\"Bellanca\",\"Belle\",\"Bellina\",\"Belva\",\"Belvia\",\"Bendite\",\"Benedetta\",\"Benedicta\",\"Benedikta\",\"Benetta\",\"Benita\",\"Benni\",\"Bennie\",\"Benny\",\"Benoite\",\"Berenice\",\"Beret\",\"Berget\",\"Berna\",\"Bernadene\",\"Bernadette\",\"Bernadina\",\"Bernadine\",\"Bernardina\",\"Bernardine\",\"Bernelle\",\"Bernete\",\"Bernetta\",\"Bernette\",\"Berni\",\"Bernice\",\"Bernie\",\"Bernita\",\"Berny\",\"Berri\",\"Berrie\",\"Berry\",\"Bert\",\"Berta\",\"Berte\",\"Bertha\",\"Berthe\",\"Berti\",\"Bertie\",\"Bertina\",\"Bertine\",\"Berty\",\"Beryl\",\"Beryle\",\"Bess\",\"Bessie\",\"Bessy\",\"Beth\",\"Bethanne\",\"Bethany\",\"Bethena\",\"Bethina\",\"Betsey\",\"Betsy\",\"Betta\",\"Bette\",\"Bette-ann\",\"Betteann\",\"Betteanne\",\"Betti\",\"Bettina\",\"Bettine\",\"Betty\",\"Bettye\",\"Beulah\",\"Bev\",\"Beverie\",\"Beverlee\",\"Beverley\",\"Beverlie\",\"Beverly\",\"Bevvy\",\"Bianca\",\"Bianka\",\"Bibbie\",\"Bibby\",\"Bibbye\",\"Bibi\",\"Biddie\",\"Biddy\",\"Bidget\",\"Bili\",\"Bill\",\"Billi\",\"Billie\",\"Billy\",\"Billye\",\"Binni\",\"Binnie\",\"Binny\",\"Bird\",\"Birdie\",\"Birgit\",\"Birgitta\",\"Blair\",\"Blaire\",\"Blake\",\"Blakelee\",\"Blakeley\",\"Blanca\",\"Blanch\",\"Blancha\",\"Blanche\",\"Blinni\",\"Blinnie\",\"Blinny\",\"Bliss\",\"Blisse\",\"Blithe\",\"Blondell\",\"Blondelle\",\"Blondie\",\"Blondy\",\"Blythe\",\"Bobbe\",\"Bobbee\",\"Bobbette\",\"Bobbi\",\"Bobbie\",\"Bobby\",\"Bobbye\",\"Bobette\",\"Bobina\",\"Bobine\",\"Bobinette\",\"Bonita\",\"Bonnee\",\"Bonni\",\"Bonnibelle\",\"Bonnie\",\"Bonny\",\"Brana\",\"Brandais\",\"Brande\",\"Brandea\",\"Brandi\",\"Brandice\",\"Brandie\",\"Brandise\",\"Brandy\",\"Breanne\",\"Brear\",\"Bree\",\"Breena\",\"Bren\",\"Brena\",\"Brenda\",\"Brenn\",\"Brenna\",\"Brett\",\"Bria\",\"Briana\",\"Brianna\",\"Brianne\",\"Bride\",\"Bridget\",\"Bridgette\",\"Bridie\",\"Brier\",\"Brietta\",\"Brigid\",\"Brigida\",\"Brigit\",\"Brigitta\",\"Brigitte\",\"Brina\",\"Briney\",\"Brinn\",\"Brinna\",\"Briny\",\"Brit\",\"Brita\",\"Britney\",\"Britni\",\"Britt\",\"Britta\",\"Brittan\",\"Brittaney\",\"Brittani\",\"Brittany\",\"Britte\",\"Britteny\",\"Brittne\",\"Brittney\",\"Brittni\",\"Brook\",\"Brooke\",\"Brooks\",\"Brunhilda\",\"Brunhilde\",\"Bryana\",\"Bryn\",\"Bryna\",\"Brynn\",\"Brynna\",\"Brynne\",\"Buffy\",\"Bunni\",\"Bunnie\",\"Bunny\",\"Cacilia\",\"Cacilie\",\"Cahra\",\"Cairistiona\",\"Caitlin\",\"Caitrin\",\"Cal\",\"Calida\",\"Calla\",\"Calley\",\"Calli\",\"Callida\",\"Callie\",\"Cally\",\"Calypso\",\"Cam\",\"Camala\",\"Camel\",\"Camella\",\"Camellia\",\"Cami\",\"Camila\",\"Camile\",\"Camilla\",\"Camille\",\"Cammi\",\"Cammie\",\"Cammy\",\"Candace\",\"Candi\",\"Candice\",\"Candida\",\"Candide\",\"Candie\",\"Candis\",\"Candra\",\"Candy\",\"Caprice\",\"Cara\",\"Caralie\",\"Caren\",\"Carena\",\"Caresa\",\"Caressa\",\"Caresse\",\"Carey\",\"Cari\",\"Caria\",\"Carie\",\"Caril\",\"Carilyn\",\"Carin\",\"Carina\",\"Carine\",\"Cariotta\",\"Carissa\",\"Carita\",\"Caritta\",\"Carla\",\"Carlee\",\"Carleen\",\"Carlen\",\"Carlene\",\"Carley\",\"Carlie\",\"Carlin\",\"Carlina\",\"Carline\",\"Carlita\",\"Carlota\",\"Carlotta\",\"Carly\",\"Carlye\",\"Carlyn\",\"Carlynn\",\"Carlynne\",\"Carma\",\"Carmel\",\"Carmela\",\"Carmelia\",\"Carmelina\",\"Carmelita\",\"Carmella\",\"Carmelle\",\"Carmen\",\"Carmencita\",\"Carmina\",\"Carmine\",\"Carmita\",\"Carmon\",\"Caro\",\"Carol\",\"Carol-jean\",\"Carola\",\"Carolan\",\"Carolann\",\"Carole\",\"Carolee\",\"Carolin\",\"Carolina\",\"Caroline\",\"Caroljean\",\"Carolyn\",\"Carolyne\",\"Carolynn\",\"Caron\",\"Carree\",\"Carri\",\"Carrie\",\"Carrissa\",\"Carroll\",\"Carry\",\"Cary\",\"Caryl\",\"Caryn\",\"Casandra\",\"Casey\",\"Casi\",\"Casie\",\"Cass\",\"Cassandra\",\"Cassandre\",\"Cassandry\",\"Cassaundra\",\"Cassey\",\"Cassi\",\"Cassie\",\"Cassondra\",\"Cassy\",\"Catarina\",\"Cate\",\"Caterina\",\"Catha\",\"Catharina\",\"Catharine\",\"Cathe\",\"Cathee\",\"Catherin\",\"Catherina\",\"Catherine\",\"Cathi\",\"Cathie\",\"Cathleen\",\"Cathlene\",\"Cathrin\",\"Cathrine\",\"Cathryn\",\"Cathy\",\"Cathyleen\",\"Cati\",\"Catie\",\"Catina\",\"Catlaina\",\"Catlee\",\"Catlin\",\"Catrina\",\"Catriona\",\"Caty\",\"Caye\",\"Cayla\",\"Cecelia\",\"Cecil\",\"Cecile\",\"Ceciley\",\"Cecilia\",\"Cecilla\",\"Cecily\",\"Ceil\",\"Cele\",\"Celene\",\"Celesta\",\"Celeste\",\"Celestia\",\"Celestina\",\"Celestine\",\"Celestyn\",\"Celestyna\",\"Celia\",\"Celie\",\"Celina\",\"Celinda\",\"Celine\",\"Celinka\",\"Celisse\",\"Celka\",\"Celle\",\"Cesya\",\"Chad\",\"Chanda\",\"Chandal\",\"Chandra\",\"Channa\",\"Chantal\",\"Chantalle\",\"Charil\",\"Charin\",\"Charis\",\"Charissa\",\"Charisse\",\"Charita\",\"Charity\",\"Charla\",\"Charlean\",\"Charleen\",\"Charlena\",\"Charlene\",\"Charline\",\"Charlot\",\"Charlotta\",\"Charlotte\",\"Charmain\",\"Charmaine\",\"Charmane\",\"Charmian\",\"Charmine\",\"Charmion\",\"Charo\",\"Charyl\",\"Chastity\",\"Chelsae\",\"Chelsea\",\"Chelsey\",\"Chelsie\",\"Chelsy\",\"Cher\",\"Chere\",\"Cherey\",\"Cheri\",\"Cherianne\",\"Cherice\",\"Cherida\",\"Cherie\",\"Cherilyn\",\"Cherilynn\",\"Cherin\",\"Cherise\",\"Cherish\",\"Cherlyn\",\"Cherri\",\"Cherrita\",\"Cherry\",\"Chery\",\"Cherye\",\"Cheryl\",\"Cheslie\",\"Chiarra\",\"Chickie\",\"Chicky\",\"Chiquia\",\"Chiquita\",\"Chlo\",\"Chloe\",\"Chloette\",\"Chloris\",\"Chris\",\"Chrissie\",\"Chrissy\",\"Christa\",\"Christabel\",\"Christabella\",\"Christal\",\"Christalle\",\"Christan\",\"Christean\",\"Christel\",\"Christen\",\"Christi\",\"Christian\",\"Christiana\",\"Christiane\",\"Christie\",\"Christin\",\"Christina\",\"Christine\",\"Christy\",\"Christye\",\"Christyna\",\"Chrysa\",\"Chrysler\",\"Chrystal\",\"Chryste\",\"Chrystel\",\"Cicely\",\"Cicily\",\"Ciel\",\"Cilka\",\"Cinda\",\"Cindee\",\"Cindelyn\",\"Cinderella\",\"Cindi\",\"Cindie\",\"Cindra\",\"Cindy\",\"Cinnamon\",\"Cissiee\",\"Cissy\",\"Clair\",\"Claire\",\"Clara\",\"Clarabelle\",\"Clare\",\"Claresta\",\"Clareta\",\"Claretta\",\"Clarette\",\"Clarey\",\"Clari\",\"Claribel\",\"Clarice\",\"Clarie\",\"Clarinda\",\"Clarine\",\"Clarissa\",\"Clarisse\",\"Clarita\",\"Clary\",\"Claude\",\"Claudelle\",\"Claudetta\",\"Claudette\",\"Claudia\",\"Claudie\",\"Claudina\",\"Claudine\",\"Clea\",\"Clem\",\"Clemence\",\"Clementia\",\"Clementina\",\"Clementine\",\"Clemmie\",\"Clemmy\",\"Cleo\",\"Cleopatra\",\"Clerissa\",\"Clio\",\"Clo\",\"Cloe\",\"Cloris\",\"Clotilda\",\"Clovis\",\"Codee\",\"Codi\",\"Codie\",\"Cody\",\"Coleen\",\"Colene\",\"Coletta\",\"Colette\",\"Colleen\",\"Collen\",\"Collete\",\"Collette\",\"Collie\",\"Colline\",\"Colly\",\"Con\",\"Concettina\",\"Conchita\",\"Concordia\",\"Conni\",\"Connie\",\"Conny\",\"Consolata\",\"Constance\",\"Constancia\",\"Constancy\",\"Constanta\",\"Constantia\",\"Constantina\",\"Constantine\",\"Consuela\",\"Consuelo\",\"Cookie\",\"Cora\",\"Corabel\",\"Corabella\",\"Corabelle\",\"Coral\",\"Coralie\",\"Coraline\",\"Coralyn\",\"Cordelia\",\"Cordelie\",\"Cordey\",\"Cordi\",\"Cordie\",\"Cordula\",\"Cordy\",\"Coreen\",\"Corella\",\"Corenda\",\"Corene\",\"Coretta\",\"Corette\",\"Corey\",\"Cori\",\"Corie\",\"Corilla\",\"Corina\",\"Corine\",\"Corinna\",\"Corinne\",\"Coriss\",\"Corissa\",\"Corliss\",\"Corly\",\"Cornela\",\"Cornelia\",\"Cornelle\",\"Cornie\",\"Corny\",\"Correna\",\"Correy\",\"Corri\",\"Corrianne\",\"Corrie\",\"Corrina\",\"Corrine\",\"Corrinne\",\"Corry\",\"Cortney\",\"Cory\",\"Cosetta\",\"Cosette\",\"Costanza\",\"Courtenay\",\"Courtnay\",\"Courtney\",\"Crin\",\"Cris\",\"Crissie\",\"Crissy\",\"Crista\",\"Cristabel\",\"Cristal\",\"Cristen\",\"Cristi\",\"Cristie\",\"Cristin\",\"Cristina\",\"Cristine\",\"Cristionna\",\"Cristy\",\"Crysta\",\"Crystal\",\"Crystie\",\"Cthrine\",\"Cyb\",\"Cybil\",\"Cybill\",\"Cymbre\",\"Cynde\",\"Cyndi\",\"Cyndia\",\"Cyndie\",\"Cyndy\",\"Cynthea\",\"Cynthia\",\"Cynthie\",\"Cynthy\",\"Dacey\",\"Dacia\",\"Dacie\",\"Dacy\",\"Dael\",\"Daffi\",\"Daffie\",\"Daffy\",\"Dagmar\",\"Dahlia\",\"Daile\",\"Daisey\",\"Daisi\",\"Daisie\",\"Daisy\",\"Dale\",\"Dalenna\",\"Dalia\",\"Dalila\",\"Dallas\",\"Daloris\",\"Damara\",\"Damaris\",\"Damita\",\"Dana\",\"Danell\",\"Danella\",\"Danette\",\"Dani\",\"Dania\",\"Danica\",\"Danice\",\"Daniela\",\"Daniele\",\"Daniella\",\"Danielle\",\"Danika\",\"Danila\",\"Danit\",\"Danita\",\"Danna\",\"Danni\",\"Dannie\",\"Danny\",\"Dannye\",\"Danya\",\"Danyelle\",\"Danyette\",\"Daphene\",\"Daphna\",\"Daphne\",\"Dara\",\"Darb\",\"Darbie\",\"Darby\",\"Darcee\",\"Darcey\",\"Darci\",\"Darcie\",\"Darcy\",\"Darda\",\"Dareen\",\"Darell\",\"Darelle\",\"Dari\",\"Daria\",\"Darice\",\"Darla\",\"Darleen\",\"Darlene\",\"Darline\",\"Darlleen\",\"Daron\",\"Darrelle\",\"Darryl\",\"Darsey\",\"Darsie\",\"Darya\",\"Daryl\",\"Daryn\",\"Dasha\",\"Dasi\",\"Dasie\",\"Dasya\",\"Datha\",\"Daune\",\"Daveen\",\"Daveta\",\"Davida\",\"Davina\",\"Davine\",\"Davita\",\"Dawn\",\"Dawna\",\"Dayle\",\"Dayna\",\"Ddene\",\"De\",\"Deana\",\"Deane\",\"Deanna\",\"Deanne\",\"Deb\",\"Debbi\",\"Debbie\",\"Debby\",\"Debee\",\"Debera\",\"Debi\",\"Debor\",\"Debora\",\"Deborah\",\"Debra\",\"Dede\",\"Dedie\",\"Dedra\",\"Dee\",\"Deeann\",\"Deeanne\",\"Deedee\",\"Deena\",\"Deerdre\",\"Deeyn\",\"Dehlia\",\"Deidre\",\"Deina\",\"Deirdre\",\"Del\",\"Dela\",\"Delcina\",\"Delcine\",\"Delia\",\"Delila\",\"Delilah\",\"Delinda\",\"Dell\",\"Della\",\"Delly\",\"Delora\",\"Delores\",\"Deloria\",\"Deloris\",\"Delphine\",\"Delphinia\",\"Demeter\",\"Demetra\",\"Demetria\",\"Demetris\",\"Dena\",\"Deni\",\"Denice\",\"Denise\",\"Denna\",\"Denni\",\"Dennie\",\"Denny\",\"Deny\",\"Denys\",\"Denyse\",\"Deonne\",\"Desdemona\",\"Desirae\",\"Desiree\",\"Desiri\",\"Deva\",\"Devan\",\"Devi\",\"Devin\",\"Devina\",\"Devinne\",\"Devon\",\"Devondra\",\"Devonna\",\"Devonne\",\"Devora\",\"Di\",\"Diahann\",\"Dian\",\"Diana\",\"Diandra\",\"Diane\",\"Diane-marie\",\"Dianemarie\",\"Diann\",\"Dianna\",\"Dianne\",\"Diannne\",\"Didi\",\"Dido\",\"Diena\",\"Dierdre\",\"Dina\",\"Dinah\",\"Dinnie\",\"Dinny\",\"Dion\",\"Dione\",\"Dionis\",\"Dionne\",\"Dita\",\"Dix\",\"Dixie\",\"Dniren\",\"Dode\",\"Dodi\",\"Dodie\",\"Dody\",\"Doe\",\"Doll\",\"Dolley\",\"Dolli\",\"Dollie\",\"Dolly\",\"Dolores\",\"Dolorita\",\"Doloritas\",\"Domeniga\",\"Dominga\",\"Domini\",\"Dominica\",\"Dominique\",\"Dona\",\"Donella\",\"Donelle\",\"Donetta\",\"Donia\",\"Donica\",\"Donielle\",\"Donna\",\"Donnamarie\",\"Donni\",\"Donnie\",\"Donny\",\"Dora\",\"Doralia\",\"Doralin\",\"Doralyn\",\"Doralynn\",\"Doralynne\",\"Dore\",\"Doreen\",\"Dorelia\",\"Dorella\",\"Dorelle\",\"Dorena\",\"Dorene\",\"Doretta\",\"Dorette\",\"Dorey\",\"Dori\",\"Doria\",\"Dorian\",\"Dorice\",\"Dorie\",\"Dorine\",\"Doris\",\"Dorisa\",\"Dorise\",\"Dorita\",\"Doro\",\"Dorolice\",\"Dorolisa\",\"Dorotea\",\"Doroteya\",\"Dorothea\",\"Dorothee\",\"Dorothy\",\"Dorree\",\"Dorri\",\"Dorrie\",\"Dorris\",\"Dorry\",\"Dorthea\",\"Dorthy\",\"Dory\",\"Dosi\",\"Dot\",\"Doti\",\"Dotti\",\"Dottie\",\"Dotty\",\"Dre\",\"Dreddy\",\"Dredi\",\"Drona\",\"Dru\",\"Druci\",\"Drucie\",\"Drucill\",\"Drucy\",\"Drusi\",\"Drusie\",\"Drusilla\",\"Drusy\",\"Dulce\",\"Dulcea\",\"Dulci\",\"Dulcia\",\"Dulciana\",\"Dulcie\",\"Dulcine\",\"Dulcinea\",\"Dulcy\",\"Dulsea\",\"Dusty\",\"Dyan\",\"Dyana\",\"Dyane\",\"Dyann\",\"Dyanna\",\"Dyanne\",\"Dyna\",\"Dynah\",\"Eachelle\",\"Eada\",\"Eadie\",\"Eadith\",\"Ealasaid\",\"Eartha\",\"Easter\",\"Eba\",\"Ebba\",\"Ebonee\",\"Ebony\",\"Eda\",\"Eddi\",\"Eddie\",\"Eddy\",\"Ede\",\"Edee\",\"Edeline\",\"Eden\",\"Edi\",\"Edie\",\"Edin\",\"Edita\",\"Edith\",\"Editha\",\"Edithe\",\"Ediva\",\"Edna\",\"Edwina\",\"Edy\",\"Edyth\",\"Edythe\",\"Effie\",\"Eileen\",\"Eilis\",\"Eimile\",\"Eirena\",\"Ekaterina\",\"Elaina\",\"Elaine\",\"Elana\",\"Elane\",\"Elayne\",\"Elberta\",\"Elbertina\",\"Elbertine\",\"Eleanor\",\"Eleanora\",\"Eleanore\",\"Electra\",\"Eleen\",\"Elena\",\"Elene\",\"Eleni\",\"Elenore\",\"Eleonora\",\"Eleonore\",\"Elfie\",\"Elfreda\",\"Elfrida\",\"Elfrieda\",\"Elga\",\"Elianora\",\"Elianore\",\"Elicia\",\"Elie\",\"Elinor\",\"Elinore\",\"Elisa\",\"Elisabet\",\"Elisabeth\",\"Elisabetta\",\"Elise\",\"Elisha\",\"Elissa\",\"Elita\",\"Eliza\",\"Elizabet\",\"Elizabeth\",\"Elka\",\"Elke\",\"Ella\",\"Elladine\",\"Elle\",\"Ellen\",\"Ellene\",\"Ellette\",\"Elli\",\"Ellie\",\"Ellissa\",\"Elly\",\"Ellyn\",\"Ellynn\",\"Elmira\",\"Elna\",\"Elnora\",\"Elnore\",\"Eloisa\",\"Eloise\",\"Elonore\",\"Elora\",\"Elsa\",\"Elsbeth\",\"Else\",\"Elset\",\"Elsey\",\"Elsi\",\"Elsie\",\"Elsinore\",\"Elspeth\",\"Elsy\",\"Elva\",\"Elvera\",\"Elvina\",\"Elvira\",\"Elwira\",\"Elyn\",\"Elyse\",\"Elysee\",\"Elysha\",\"Elysia\",\"Elyssa\",\"Em\",\"Ema\",\"Emalee\",\"Emalia\",\"Emelda\",\"Emelia\",\"Emelina\",\"Emeline\",\"Emelita\",\"Emelyne\",\"Emera\",\"Emilee\",\"Emili\",\"Emilia\",\"Emilie\",\"Emiline\",\"Emily\",\"Emlyn\",\"Emlynn\",\"Emlynne\",\"Emma\",\"Emmalee\",\"Emmaline\",\"Emmalyn\",\"Emmalynn\",\"Emmalynne\",\"Emmeline\",\"Emmey\",\"Emmi\",\"Emmie\",\"Emmy\",\"Emmye\",\"Emogene\",\"Emyle\",\"Emylee\",\"Engracia\",\"Enid\",\"Enrica\",\"Enrichetta\",\"Enrika\",\"Enriqueta\",\"Eolanda\",\"Eolande\",\"Eran\",\"Erda\",\"Erena\",\"Erica\",\"Ericha\",\"Ericka\",\"Erika\",\"Erin\",\"Erina\",\"Erinn\",\"Erinna\",\"Erma\",\"Ermengarde\",\"Ermentrude\",\"Ermina\",\"Erminia\",\"Erminie\",\"Erna\",\"Ernaline\",\"Ernesta\",\"Ernestine\",\"Ertha\",\"Eryn\",\"Esma\",\"Esmaria\",\"Esme\",\"Esmeralda\",\"Essa\",\"Essie\",\"Essy\",\"Esta\",\"Estel\",\"Estele\",\"Estell\",\"Estella\",\"Estelle\",\"Ester\",\"Esther\",\"Estrella\",\"Estrellita\",\"Ethel\",\"Ethelda\",\"Ethelin\",\"Ethelind\",\"Etheline\",\"Ethelyn\",\"Ethyl\",\"Etta\",\"Etti\",\"Ettie\",\"Etty\",\"Eudora\",\"Eugenia\",\"Eugenie\",\"Eugine\",\"Eula\",\"Eulalie\",\"Eunice\",\"Euphemia\",\"Eustacia\",\"Eva\",\"Evaleen\",\"Evangelia\",\"Evangelin\",\"Evangelina\",\"Evangeline\",\"Evania\",\"Evanne\",\"Eve\",\"Eveleen\",\"Evelina\",\"Eveline\",\"Evelyn\",\"Evey\",\"Evie\",\"Evita\",\"Evonne\",\"Evvie\",\"Evvy\",\"Evy\",\"Eyde\",\"Eydie\",\"Ezmeralda\",\"Fae\",\"Faina\",\"Faith\",\"Fallon\",\"Fan\",\"Fanchette\",\"Fanchon\",\"Fancie\",\"Fancy\",\"Fanechka\",\"Fania\",\"Fanni\",\"Fannie\",\"Fanny\",\"Fanya\",\"Fara\",\"Farah\",\"Farand\",\"Farica\",\"Farra\",\"Farrah\",\"Farrand\",\"Faun\",\"Faunie\",\"Faustina\",\"Faustine\",\"Fawn\",\"Fawne\",\"Fawnia\",\"Fay\",\"Faydra\",\"Faye\",\"Fayette\",\"Fayina\",\"Fayre\",\"Fayth\",\"Faythe\",\"Federica\",\"Fedora\",\"Felecia\",\"Felicdad\",\"Felice\",\"Felicia\",\"Felicity\",\"Felicle\",\"Felipa\",\"Felisha\",\"Felita\",\"Feliza\",\"Fenelia\",\"Feodora\",\"Ferdinanda\",\"Ferdinande\",\"Fern\",\"Fernanda\",\"Fernande\",\"Fernandina\",\"Ferne\",\"Fey\",\"Fiann\",\"Fianna\",\"Fidela\",\"Fidelia\",\"Fidelity\",\"Fifi\",\"Fifine\",\"Filia\",\"Filide\",\"Filippa\",\"Fina\",\"Fiona\",\"Fionna\",\"Fionnula\",\"Fiorenze\",\"Fleur\",\"Fleurette\",\"Flo\",\"Flor\",\"Flora\",\"Florance\",\"Flore\",\"Florella\",\"Florence\",\"Florencia\",\"Florentia\",\"Florenza\",\"Florette\",\"Flori\",\"Floria\",\"Florida\",\"Florie\",\"Florina\",\"Florinda\",\"Floris\",\"Florri\",\"Florrie\",\"Florry\",\"Flory\",\"Flossi\",\"Flossie\",\"Flossy\",\"Flss\",\"Fran\",\"Francene\",\"Frances\",\"Francesca\",\"Francine\",\"Francisca\",\"Franciska\",\"Francoise\",\"Francyne\",\"Frank\",\"Frankie\",\"Franky\",\"Franni\",\"Frannie\",\"Franny\",\"Frayda\",\"Fred\",\"Freda\",\"Freddi\",\"Freddie\",\"Freddy\",\"Fredelia\",\"Frederica\",\"Fredericka\",\"Frederique\",\"Fredi\",\"Fredia\",\"Fredra\",\"Fredrika\",\"Freida\",\"Frieda\",\"Friederike\",\"Fulvia\",\"Gabbey\",\"Gabbi\",\"Gabbie\",\"Gabey\",\"Gabi\",\"Gabie\",\"Gabriel\",\"Gabriela\",\"Gabriell\",\"Gabriella\",\"Gabrielle\",\"Gabriellia\",\"Gabrila\",\"Gaby\",\"Gae\",\"Gael\",\"Gail\",\"Gale\",\"Galina\",\"Garland\",\"Garnet\",\"Garnette\",\"Gates\",\"Gavra\",\"Gavrielle\",\"Gay\",\"Gaye\",\"Gayel\",\"Gayla\",\"Gayle\",\"Gayleen\",\"Gaylene\",\"Gaynor\",\"Gelya\",\"Gena\",\"Gene\",\"Geneva\",\"Genevieve\",\"Genevra\",\"Genia\",\"Genna\",\"Genni\",\"Gennie\",\"Gennifer\",\"Genny\",\"Genovera\",\"Genvieve\",\"George\",\"Georgeanna\",\"Georgeanne\",\"Georgena\",\"Georgeta\",\"Georgetta\",\"Georgette\",\"Georgia\",\"Georgiana\",\"Georgianna\",\"Georgianne\",\"Georgie\",\"Georgina\",\"Georgine\",\"Geralda\",\"Geraldine\",\"Gerda\",\"Gerhardine\",\"Geri\",\"Gerianna\",\"Gerianne\",\"Gerladina\",\"Germain\",\"Germaine\",\"Germana\",\"Gerri\",\"Gerrie\",\"Gerrilee\",\"Gerry\",\"Gert\",\"Gerta\",\"Gerti\",\"Gertie\",\"Gertrud\",\"Gertruda\",\"Gertrude\",\"Gertrudis\",\"Gerty\",\"Giacinta\",\"Giana\",\"Gianina\",\"Gianna\",\"Gigi\",\"Gilberta\",\"Gilberte\",\"Gilbertina\",\"Gilbertine\",\"Gilda\",\"Gilemette\",\"Gill\",\"Gillan\",\"Gilli\",\"Gillian\",\"Gillie\",\"Gilligan\",\"Gilly\",\"Gina\",\"Ginelle\",\"Ginevra\",\"Ginger\",\"Ginni\",\"Ginnie\",\"Ginnifer\",\"Ginny\",\"Giorgia\",\"Giovanna\",\"Gipsy\",\"Giralda\",\"Gisela\",\"Gisele\",\"Gisella\",\"Giselle\",\"Giuditta\",\"Giulia\",\"Giulietta\",\"Giustina\",\"Gizela\",\"Glad\",\"Gladi\",\"Gladys\",\"Gleda\",\"Glen\",\"Glenda\",\"Glenine\",\"Glenn\",\"Glenna\",\"Glennie\",\"Glennis\",\"Glori\",\"Gloria\",\"Gloriana\",\"Gloriane\",\"Glory\",\"Glyn\",\"Glynda\",\"Glynis\",\"Glynnis\",\"Gnni\",\"Godiva\",\"Golda\",\"Goldarina\",\"Goldi\",\"Goldia\",\"Goldie\",\"Goldina\",\"Goldy\",\"Grace\",\"Gracia\",\"Gracie\",\"Grata\",\"Gratia\",\"Gratiana\",\"Gray\",\"Grayce\",\"Grazia\",\"Greer\",\"Greta\",\"Gretal\",\"Gretchen\",\"Grete\",\"Gretel\",\"Grethel\",\"Gretna\",\"Gretta\",\"Grier\",\"Griselda\",\"Grissel\",\"Guendolen\",\"Guenevere\",\"Guenna\",\"Guglielma\",\"Gui\",\"Guillema\",\"Guillemette\",\"Guinevere\",\"Guinna\",\"Gunilla\",\"Gus\",\"Gusella\",\"Gussi\",\"Gussie\",\"Gussy\",\"Gusta\",\"Gusti\",\"Gustie\",\"Gusty\",\"Gwen\",\"Gwendolen\",\"Gwendolin\",\"Gwendolyn\",\"Gweneth\",\"Gwenette\",\"Gwenneth\",\"Gwenni\",\"Gwennie\",\"Gwenny\",\"Gwenora\",\"Gwenore\",\"Gwyn\",\"Gwyneth\",\"Gwynne\",\"Gypsy\",\"Hadria\",\"Hailee\",\"Haily\",\"Haleigh\",\"Halette\",\"Haley\",\"Hali\",\"Halie\",\"Halimeda\",\"Halley\",\"Halli\",\"Hallie\",\"Hally\",\"Hana\",\"Hanna\",\"Hannah\",\"Hanni\",\"Hannie\",\"Hannis\",\"Hanny\",\"Happy\",\"Harlene\",\"Harley\",\"Harli\",\"Harlie\",\"Harmonia\",\"Harmonie\",\"Harmony\",\"Harri\",\"Harrie\",\"Harriet\",\"Harriett\",\"Harrietta\",\"Harriette\",\"Harriot\",\"Harriott\",\"Hatti\",\"Hattie\",\"Hatty\",\"Hayley\",\"Hazel\",\"Heath\",\"Heather\",\"Heda\",\"Hedda\",\"Heddi\",\"Heddie\",\"Hedi\",\"Hedvig\",\"Hedvige\",\"Hedwig\",\"Hedwiga\",\"Hedy\",\"Heida\",\"Heidi\",\"Heidie\",\"Helaina\",\"Helaine\",\"Helen\",\"Helen-elizabeth\",\"Helena\",\"Helene\",\"Helenka\",\"Helga\",\"Helge\",\"Helli\",\"Heloise\",\"Helsa\",\"Helyn\",\"Hendrika\",\"Henka\",\"Henrie\",\"Henrieta\",\"Henrietta\",\"Henriette\",\"Henryetta\",\"Hephzibah\",\"Hermia\",\"Hermina\",\"Hermine\",\"Herminia\",\"Hermione\",\"Herta\",\"Hertha\",\"Hester\",\"Hesther\",\"Hestia\",\"Hetti\",\"Hettie\",\"Hetty\",\"Hilary\",\"Hilda\",\"Hildagard\",\"Hildagarde\",\"Hilde\",\"Hildegaard\",\"Hildegarde\",\"Hildy\",\"Hillary\",\"Hilliary\",\"Hinda\",\"Holli\",\"Hollie\",\"Holly\",\"Holly-anne\",\"Hollyanne\",\"Honey\",\"Honor\",\"Honoria\",\"Hope\",\"Horatia\",\"Hortense\",\"Hortensia\",\"Hulda\",\"Hyacinth\",\"Hyacintha\",\"Hyacinthe\",\"Hyacinthia\",\"Hyacinthie\",\"Hynda\",\"Ianthe\",\"Ibbie\",\"Ibby\",\"Ida\",\"Idalia\",\"Idalina\",\"Idaline\",\"Idell\",\"Idelle\",\"Idette\",\"Ileana\",\"Ileane\",\"Ilene\",\"Ilise\",\"Ilka\",\"Illa\",\"Ilsa\",\"Ilse\",\"Ilysa\",\"Ilyse\",\"Ilyssa\",\"Imelda\",\"Imogen\",\"Imogene\",\"Imojean\",\"Ina\",\"Indira\",\"Ines\",\"Inesita\",\"Inessa\",\"Inez\",\"Inga\",\"Ingaberg\",\"Ingaborg\",\"Inge\",\"Ingeberg\",\"Ingeborg\",\"Inger\",\"Ingrid\",\"Ingunna\",\"Inna\",\"Iolande\",\"Iolanthe\",\"Iona\",\"Iormina\",\"Ira\",\"Irena\",\"Irene\",\"Irina\",\"Iris\",\"Irita\",\"Irma\",\"Isa\",\"Isabel\",\"Isabelita\",\"Isabella\",\"Isabelle\",\"Isadora\",\"Isahella\",\"Iseabal\",\"Isidora\",\"Isis\",\"Isobel\",\"Issi\",\"Issie\",\"Issy\",\"Ivett\",\"Ivette\",\"Ivie\",\"Ivonne\",\"Ivory\",\"Ivy\",\"Izabel\",\"Jacenta\",\"Jacinda\",\"Jacinta\",\"Jacintha\",\"Jacinthe\",\"Jackelyn\",\"Jacki\",\"Jackie\",\"Jacklin\",\"Jacklyn\",\"Jackquelin\",\"Jackqueline\",\"Jacky\",\"Jaclin\",\"Jaclyn\",\"Jacquelin\",\"Jacqueline\",\"Jacquelyn\",\"Jacquelynn\",\"Jacquenetta\",\"Jacquenette\",\"Jacquetta\",\"Jacquette\",\"Jacqui\",\"Jacquie\",\"Jacynth\",\"Jada\",\"Jade\",\"Jaime\",\"Jaimie\",\"Jaine\",\"Jami\",\"Jamie\",\"Jamima\",\"Jammie\",\"Jan\",\"Jana\",\"Janaya\",\"Janaye\",\"Jandy\",\"Jane\",\"Janean\",\"Janeczka\",\"Janeen\",\"Janel\",\"Janela\",\"Janella\",\"Janelle\",\"Janene\",\"Janenna\",\"Janessa\",\"Janet\",\"Janeta\",\"Janetta\",\"Janette\",\"Janeva\",\"Janey\",\"Jania\",\"Janice\",\"Janie\",\"Janifer\",\"Janina\",\"Janine\",\"Janis\",\"Janith\",\"Janka\",\"Janna\",\"Jannel\",\"Jannelle\",\"Janot\",\"Jany\",\"Jaquelin\",\"Jaquelyn\",\"Jaquenetta\",\"Jaquenette\",\"Jaquith\",\"Jasmin\",\"Jasmina\",\"Jasmine\",\"Jayme\",\"Jaymee\",\"Jayne\",\"Jaynell\",\"Jazmin\",\"Jean\",\"Jeana\",\"Jeane\",\"Jeanelle\",\"Jeanette\",\"Jeanie\",\"Jeanine\",\"Jeanna\",\"Jeanne\",\"Jeannette\",\"Jeannie\",\"Jeannine\",\"Jehanna\",\"Jelene\",\"Jemie\",\"Jemima\",\"Jemimah\",\"Jemmie\",\"Jemmy\",\"Jen\",\"Jena\",\"Jenda\",\"Jenelle\",\"Jeni\",\"Jenica\",\"Jeniece\",\"Jenifer\",\"Jeniffer\",\"Jenilee\",\"Jenine\",\"Jenn\",\"Jenna\",\"Jennee\",\"Jennette\",\"Jenni\",\"Jennica\",\"Jennie\",\"Jennifer\",\"Jennilee\",\"Jennine\",\"Jenny\",\"Jeralee\",\"Jere\",\"Jeri\",\"Jermaine\",\"Jerrie\",\"Jerrilee\",\"Jerrilyn\",\"Jerrine\",\"Jerry\",\"Jerrylee\",\"Jess\",\"Jessa\",\"Jessalin\",\"Jessalyn\",\"Jessamine\",\"Jessamyn\",\"Jesse\",\"Jesselyn\",\"Jessi\",\"Jessica\",\"Jessie\",\"Jessika\",\"Jessy\",\"Jewel\",\"Jewell\",\"Jewelle\",\"Jill\",\"Jillana\",\"Jillane\",\"Jillayne\",\"Jilleen\",\"Jillene\",\"Jilli\",\"Jillian\",\"Jillie\",\"Jilly\",\"Jinny\",\"Jo\",\"Jo-ann\",\"Jo-anne\",\"Joan\",\"Joana\",\"Joane\",\"Joanie\",\"Joann\",\"Joanna\",\"Joanne\",\"Joannes\",\"Jobey\",\"Jobi\",\"Jobie\",\"Jobina\",\"Joby\",\"Jobye\",\"Jobyna\",\"Jocelin\",\"Joceline\",\"Jocelyn\",\"Jocelyne\",\"Jodee\",\"Jodi\",\"Jodie\",\"Jody\",\"Joeann\",\"Joela\",\"Joelie\",\"Joell\",\"Joella\",\"Joelle\",\"Joellen\",\"Joelly\",\"Joellyn\",\"Joelynn\",\"Joete\",\"Joey\",\"Johanna\",\"Johannah\",\"Johna\",\"Johnath\",\"Johnette\",\"Johnna\",\"Joice\",\"Jojo\",\"Jolee\",\"Joleen\",\"Jolene\",\"Joletta\",\"Joli\",\"Jolie\",\"Joline\",\"Joly\",\"Jolyn\",\"Jolynn\",\"Jonell\",\"Joni\",\"Jonie\",\"Jonis\",\"Jordain\",\"Jordan\",\"Jordana\",\"Jordanna\",\"Jorey\",\"Jori\",\"Jorie\",\"Jorrie\",\"Jorry\",\"Joscelin\",\"Josee\",\"Josefa\",\"Josefina\",\"Josepha\",\"Josephina\",\"Josephine\",\"Josey\",\"Josi\",\"Josie\",\"Josselyn\",\"Josy\",\"Jourdan\",\"Joy\",\"Joya\",\"Joyan\",\"Joyann\",\"Joyce\",\"Joycelin\",\"Joye\",\"Jsandye\",\"Juana\",\"Juanita\",\"Judi\",\"Judie\",\"Judith\",\"Juditha\",\"Judy\",\"Judye\",\"Juieta\",\"Julee\",\"Juli\",\"Julia\",\"Juliana\",\"Juliane\",\"Juliann\",\"Julianna\",\"Julianne\",\"Julie\",\"Julienne\",\"Juliet\",\"Julieta\",\"Julietta\",\"Juliette\",\"Julina\",\"Juline\",\"Julissa\",\"Julita\",\"June\",\"Junette\",\"Junia\",\"Junie\",\"Junina\",\"Justina\",\"Justine\",\"Justinn\",\"Jyoti\",\"Kacey\",\"Kacie\",\"Kacy\",\"Kaela\",\"Kai\",\"Kaia\",\"Kaila\",\"Kaile\",\"Kailey\",\"Kaitlin\",\"Kaitlyn\",\"Kaitlynn\",\"Kaja\",\"Kakalina\",\"Kala\",\"Kaleena\",\"Kali\",\"Kalie\",\"Kalila\",\"Kalina\",\"Kalinda\",\"Kalindi\",\"Kalli\",\"Kally\",\"Kameko\",\"Kamila\",\"Kamilah\",\"Kamillah\",\"Kandace\",\"Kandy\",\"Kania\",\"Kanya\",\"Kara\",\"Kara-lynn\",\"Karalee\",\"Karalynn\",\"Kare\",\"Karee\",\"Karel\",\"Karen\",\"Karena\",\"Kari\",\"Karia\",\"Karie\",\"Karil\",\"Karilynn\",\"Karin\",\"Karina\",\"Karine\",\"Kariotta\",\"Karisa\",\"Karissa\",\"Karita\",\"Karla\",\"Karlee\",\"Karleen\",\"Karlen\",\"Karlene\",\"Karlie\",\"Karlotta\",\"Karlotte\",\"Karly\",\"Karlyn\",\"Karmen\",\"Karna\",\"Karol\",\"Karola\",\"Karole\",\"Karolina\",\"Karoline\",\"Karoly\",\"Karon\",\"Karrah\",\"Karrie\",\"Karry\",\"Kary\",\"Karyl\",\"Karylin\",\"Karyn\",\"Kasey\",\"Kass\",\"Kassandra\",\"Kassey\",\"Kassi\",\"Kassia\",\"Kassie\",\"Kat\",\"Kata\",\"Katalin\",\"Kate\",\"Katee\",\"Katerina\",\"Katerine\",\"Katey\",\"Kath\",\"Katha\",\"Katharina\",\"Katharine\",\"Katharyn\",\"Kathe\",\"Katherina\",\"Katherine\",\"Katheryn\",\"Kathi\",\"Kathie\",\"Kathleen\",\"Kathlin\",\"Kathrine\",\"Kathryn\",\"Kathryne\",\"Kathy\",\"Kathye\",\"Kati\",\"Katie\",\"Katina\",\"Katine\",\"Katinka\",\"Katleen\",\"Katlin\",\"Katrina\",\"Katrine\",\"Katrinka\",\"Katti\",\"Kattie\",\"Katuscha\",\"Katusha\",\"Katy\",\"Katya\",\"Kay\",\"Kaycee\",\"Kaye\",\"Kayla\",\"Kayle\",\"Kaylee\",\"Kayley\",\"Kaylil\",\"Kaylyn\",\"Keeley\",\"Keelia\",\"Keely\",\"Kelcey\",\"Kelci\",\"Kelcie\",\"Kelcy\",\"Kelila\",\"Kellen\",\"Kelley\",\"Kelli\",\"Kellia\",\"Kellie\",\"Kellina\",\"Kellsie\",\"Kelly\",\"Kellyann\",\"Kelsey\",\"Kelsi\",\"Kelsy\",\"Kendra\",\"Kendre\",\"Kenna\",\"Keri\",\"Keriann\",\"Kerianne\",\"Kerri\",\"Kerrie\",\"Kerrill\",\"Kerrin\",\"Kerry\",\"Kerstin\",\"Kesley\",\"Keslie\",\"Kessia\",\"Kessiah\",\"Ketti\",\"Kettie\",\"Ketty\",\"Kevina\",\"Kevyn\",\"Ki\",\"Kiah\",\"Kial\",\"Kiele\",\"Kiersten\",\"Kikelia\",\"Kiley\",\"Kim\",\"Kimberlee\",\"Kimberley\",\"Kimberli\",\"Kimberly\",\"Kimberlyn\",\"Kimbra\",\"Kimmi\",\"Kimmie\",\"Kimmy\",\"Kinna\",\"Kip\",\"Kipp\",\"Kippie\",\"Kippy\",\"Kira\",\"Kirbee\",\"Kirbie\",\"Kirby\",\"Kiri\",\"Kirsten\",\"Kirsteni\",\"Kirsti\",\"Kirstin\",\"Kirstyn\",\"Kissee\",\"Kissiah\",\"Kissie\",\"Kit\",\"Kitti\",\"Kittie\",\"Kitty\",\"Kizzee\",\"Kizzie\",\"Klara\",\"Klarika\",\"Klarrisa\",\"Konstance\",\"Konstanze\",\"Koo\",\"Kora\",\"Koral\",\"Koralle\",\"Kordula\",\"Kore\",\"Korella\",\"Koren\",\"Koressa\",\"Kori\",\"Korie\",\"Korney\",\"Korrie\",\"Korry\",\"Kris\",\"Krissie\",\"Krissy\",\"Krista\",\"Kristal\",\"Kristan\",\"Kriste\",\"Kristel\",\"Kristen\",\"Kristi\",\"Kristien\",\"Kristin\",\"Kristina\",\"Kristine\",\"Kristy\",\"Kristyn\",\"Krysta\",\"Krystal\",\"Krystalle\",\"Krystle\",\"Krystyna\",\"Kyla\",\"Kyle\",\"Kylen\",\"Kylie\",\"Kylila\",\"Kylynn\",\"Kym\",\"Kynthia\",\"Kyrstin\",\"Lacee\",\"Lacey\",\"Lacie\",\"Lacy\",\"Ladonna\",\"Laetitia\",\"Laina\",\"Lainey\",\"Lana\",\"Lanae\",\"Lane\",\"Lanette\",\"Laney\",\"Lani\",\"Lanie\",\"Lanita\",\"Lanna\",\"Lanni\",\"Lanny\",\"Lara\",\"Laraine\",\"Lari\",\"Larina\",\"Larine\",\"Larisa\",\"Larissa\",\"Lark\",\"Laryssa\",\"Latashia\",\"Latia\",\"Latisha\",\"Latrena\",\"Latrina\",\"Laura\",\"Lauraine\",\"Laural\",\"Lauralee\",\"Laure\",\"Lauree\",\"Laureen\",\"Laurel\",\"Laurella\",\"Lauren\",\"Laurena\",\"Laurene\",\"Lauretta\",\"Laurette\",\"Lauri\",\"Laurianne\",\"Laurice\",\"Laurie\",\"Lauryn\",\"Lavena\",\"Laverna\",\"Laverne\",\"Lavina\",\"Lavinia\",\"Lavinie\",\"Layla\",\"Layne\",\"Layney\",\"Lea\",\"Leah\",\"Leandra\",\"Leann\",\"Leanna\",\"Leanor\",\"Leanora\",\"Lebbie\",\"Leda\",\"Lee\",\"Leeann\",\"Leeanne\",\"Leela\",\"Leelah\",\"Leena\",\"Leesa\",\"Leese\",\"Legra\",\"Leia\",\"Leigh\",\"Leigha\",\"Leila\",\"Leilah\",\"Leisha\",\"Lela\",\"Lelah\",\"Leland\",\"Lelia\",\"Lena\",\"Lenee\",\"Lenette\",\"Lenka\",\"Lenna\",\"Lenora\",\"Lenore\",\"Leodora\",\"Leoine\",\"Leola\",\"Leoline\",\"Leona\",\"Leonanie\",\"Leone\",\"Leonelle\",\"Leonie\",\"Leonora\",\"Leonore\",\"Leontine\",\"Leontyne\",\"Leora\",\"Leshia\",\"Lesley\",\"Lesli\",\"Leslie\",\"Lesly\",\"Lesya\",\"Leta\",\"Lethia\",\"Leticia\",\"Letisha\",\"Letitia\",\"Letizia\",\"Letta\",\"Letti\",\"Lettie\",\"Letty\",\"Lexi\",\"Lexie\",\"Lexine\",\"Lexis\",\"Lexy\",\"Leyla\",\"Lezlie\",\"Lia\",\"Lian\",\"Liana\",\"Liane\",\"Lianna\",\"Lianne\",\"Lib\",\"Libbey\",\"Libbi\",\"Libbie\",\"Libby\",\"Licha\",\"Lida\",\"Lidia\",\"Liesa\",\"Lil\",\"Lila\",\"Lilah\",\"Lilas\",\"Lilia\",\"Lilian\",\"Liliane\",\"Lilias\",\"Lilith\",\"Lilla\",\"Lilli\",\"Lillian\",\"Lillis\",\"Lilllie\",\"Lilly\",\"Lily\",\"Lilyan\",\"Lin\",\"Lina\",\"Lind\",\"Linda\",\"Lindi\",\"Lindie\",\"Lindsay\",\"Lindsey\",\"Lindsy\",\"Lindy\",\"Linea\",\"Linell\",\"Linet\",\"Linette\",\"Linn\",\"Linnea\",\"Linnell\",\"Linnet\",\"Linnie\",\"Linzy\",\"Lira\",\"Lisa\",\"Lisabeth\",\"Lisbeth\",\"Lise\",\"Lisetta\",\"Lisette\",\"Lisha\",\"Lishe\",\"Lissa\",\"Lissi\",\"Lissie\",\"Lissy\",\"Lita\",\"Liuka\",\"Liv\",\"Liva\",\"Livia\",\"Livvie\",\"Livvy\",\"Livvyy\",\"Livy\",\"Liz\",\"Liza\",\"Lizabeth\",\"Lizbeth\",\"Lizette\",\"Lizzie\",\"Lizzy\",\"Loella\",\"Lois\",\"Loise\",\"Lola\",\"Loleta\",\"Lolita\",\"Lolly\",\"Lona\",\"Lonee\",\"Loni\",\"Lonna\",\"Lonni\",\"Lonnie\",\"Lora\",\"Lorain\",\"Loraine\",\"Loralee\",\"Loralie\",\"Loralyn\",\"Loree\",\"Loreen\",\"Lorelei\",\"Lorelle\",\"Loren\",\"Lorena\",\"Lorene\",\"Lorenza\",\"Loretta\",\"Lorette\",\"Lori\",\"Loria\",\"Lorianna\",\"Lorianne\",\"Lorie\",\"Lorilee\",\"Lorilyn\",\"Lorinda\",\"Lorine\",\"Lorita\",\"Lorna\",\"Lorne\",\"Lorraine\",\"Lorrayne\",\"Lorri\",\"Lorrie\",\"Lorrin\",\"Lorry\",\"Lory\",\"Lotta\",\"Lotte\",\"Lotti\",\"Lottie\",\"Lotty\",\"Lou\",\"Louella\",\"Louisa\",\"Louise\",\"Louisette\",\"Loutitia\",\"Lu\",\"Luce\",\"Luci\",\"Lucia\",\"Luciana\",\"Lucie\",\"Lucienne\",\"Lucila\",\"Lucilia\",\"Lucille\",\"Lucina\",\"Lucinda\",\"Lucine\",\"Lucita\",\"Lucky\",\"Lucretia\",\"Lucy\",\"Ludovika\",\"Luella\",\"Luelle\",\"Luisa\",\"Luise\",\"Lula\",\"Lulita\",\"Lulu\",\"Lura\",\"Lurette\",\"Lurleen\",\"Lurlene\",\"Lurline\",\"Lusa\",\"Luz\",\"Lyda\",\"Lydia\",\"Lydie\",\"Lyn\",\"Lynda\",\"Lynde\",\"Lyndel\",\"Lyndell\",\"Lyndsay\",\"Lyndsey\",\"Lyndsie\",\"Lyndy\",\"Lynea\",\"Lynelle\",\"Lynett\",\"Lynette\",\"Lynn\",\"Lynna\",\"Lynne\",\"Lynnea\",\"Lynnell\",\"Lynnelle\",\"Lynnet\",\"Lynnett\",\"Lynnette\",\"Lynsey\",\"Lyssa\",\"Mab\",\"Mabel\",\"Mabelle\",\"Mable\",\"Mada\",\"Madalena\",\"Madalyn\",\"Maddalena\",\"Maddi\",\"Maddie\",\"Maddy\",\"Madel\",\"Madelaine\",\"Madeleine\",\"Madelena\",\"Madelene\",\"Madelin\",\"Madelina\",\"Madeline\",\"Madella\",\"Madelle\",\"Madelon\",\"Madelyn\",\"Madge\",\"Madlen\",\"Madlin\",\"Madonna\",\"Mady\",\"Mae\",\"Maegan\",\"Mag\",\"Magda\",\"Magdaia\",\"Magdalen\",\"Magdalena\",\"Magdalene\",\"Maggee\",\"Maggi\",\"Maggie\",\"Maggy\",\"Mahala\",\"Mahalia\",\"Maia\",\"Maible\",\"Maiga\",\"Maighdiln\",\"Mair\",\"Maire\",\"Maisey\",\"Maisie\",\"Maitilde\",\"Mala\",\"Malanie\",\"Malena\",\"Malia\",\"Malina\",\"Malinda\",\"Malinde\",\"Malissa\",\"Malissia\",\"Mallissa\",\"Mallorie\",\"Mallory\",\"Malorie\",\"Malory\",\"Malva\",\"Malvina\",\"Malynda\",\"Mame\",\"Mamie\",\"Manda\",\"Mandi\",\"Mandie\",\"Mandy\",\"Manon\",\"Manya\",\"Mara\",\"Marabel\",\"Marcela\",\"Marcelia\",\"Marcella\",\"Marcelle\",\"Marcellina\",\"Marcelline\",\"Marchelle\",\"Marci\",\"Marcia\",\"Marcie\",\"Marcile\",\"Marcille\",\"Marcy\",\"Mareah\",\"Maren\",\"Marena\",\"Maressa\",\"Marga\",\"Margalit\",\"Margalo\",\"Margaret\",\"Margareta\",\"Margarete\",\"Margaretha\",\"Margarethe\",\"Margaretta\",\"Margarette\",\"Margarita\",\"Margaux\",\"Marge\",\"Margeaux\",\"Margery\",\"Marget\",\"Margette\",\"Margi\",\"Margie\",\"Margit\",\"Margo\",\"Margot\",\"Margret\",\"Marguerite\",\"Margy\",\"Mari\",\"Maria\",\"Mariam\",\"Marian\",\"Mariana\",\"Mariann\",\"Marianna\",\"Marianne\",\"Maribel\",\"Maribelle\",\"Maribeth\",\"Marice\",\"Maridel\",\"Marie\",\"Marie-ann\",\"Marie-jeanne\",\"Marieann\",\"Mariejeanne\",\"Mariel\",\"Mariele\",\"Marielle\",\"Mariellen\",\"Marietta\",\"Mariette\",\"Marigold\",\"Marijo\",\"Marika\",\"Marilee\",\"Marilin\",\"Marillin\",\"Marilyn\",\"Marin\",\"Marina\",\"Marinna\",\"Marion\",\"Mariquilla\",\"Maris\",\"Marisa\",\"Mariska\",\"Marissa\",\"Marita\",\"Maritsa\",\"Mariya\",\"Marj\",\"Marja\",\"Marje\",\"Marji\",\"Marjie\",\"Marjorie\",\"Marjory\",\"Marjy\",\"Marketa\",\"Marla\",\"Marlane\",\"Marleah\",\"Marlee\",\"Marleen\",\"Marlena\",\"Marlene\",\"Marley\",\"Marlie\",\"Marline\",\"Marlo\",\"Marlyn\",\"Marna\",\"Marne\",\"Marney\",\"Marni\",\"Marnia\",\"Marnie\",\"Marquita\",\"Marrilee\",\"Marris\",\"Marrissa\",\"Marsha\",\"Marsiella\",\"Marta\",\"Martelle\",\"Martguerita\",\"Martha\",\"Marthe\",\"Marthena\",\"Marti\",\"Martica\",\"Martie\",\"Martina\",\"Martita\",\"Marty\",\"Martynne\",\"Mary\",\"Marya\",\"Maryann\",\"Maryanna\",\"Maryanne\",\"Marybelle\",\"Marybeth\",\"Maryellen\",\"Maryjane\",\"Maryjo\",\"Maryl\",\"Marylee\",\"Marylin\",\"Marylinda\",\"Marylou\",\"Marylynne\",\"Maryrose\",\"Marys\",\"Marysa\",\"Masha\",\"Matelda\",\"Mathilda\",\"Mathilde\",\"Matilda\",\"Matilde\",\"Matti\",\"Mattie\",\"Matty\",\"Maud\",\"Maude\",\"Maudie\",\"Maura\",\"Maure\",\"Maureen\",\"Maureene\",\"Maurene\",\"Maurine\",\"Maurise\",\"Maurita\",\"Maurizia\",\"Mavis\",\"Mavra\",\"Max\",\"Maxi\",\"Maxie\",\"Maxine\",\"Maxy\",\"May\",\"Maybelle\",\"Maye\",\"Mead\",\"Meade\",\"Meagan\",\"Meaghan\",\"Meara\",\"Mechelle\",\"Meg\",\"Megan\",\"Megen\",\"Meggi\",\"Meggie\",\"Meggy\",\"Meghan\",\"Meghann\",\"Mehetabel\",\"Mei\",\"Mel\",\"Mela\",\"Melamie\",\"Melania\",\"Melanie\",\"Melantha\",\"Melany\",\"Melba\",\"Melesa\",\"Melessa\",\"Melicent\",\"Melina\",\"Melinda\",\"Melinde\",\"Melisa\",\"Melisande\",\"Melisandra\",\"Melisenda\",\"Melisent\",\"Melissa\",\"Melisse\",\"Melita\",\"Melitta\",\"Mella\",\"Melli\",\"Mellicent\",\"Mellie\",\"Mellisa\",\"Mellisent\",\"Melloney\",\"Melly\",\"Melodee\",\"Melodie\",\"Melody\",\"Melonie\",\"Melony\",\"Melosa\",\"Melva\",\"Mercedes\",\"Merci\",\"Mercie\",\"Mercy\",\"Meredith\",\"Meredithe\",\"Meridel\",\"Meridith\",\"Meriel\",\"Merilee\",\"Merilyn\",\"Meris\",\"Merissa\",\"Merl\",\"Merla\",\"Merle\",\"Merlina\",\"Merline\",\"Merna\",\"Merola\",\"Merralee\",\"Merridie\",\"Merrie\",\"Merrielle\",\"Merrile\",\"Merrilee\",\"Merrili\",\"Merrill\",\"Merrily\",\"Merry\",\"Mersey\",\"Meryl\",\"Meta\",\"Mia\",\"Micaela\",\"Michaela\",\"Michaelina\",\"Michaeline\",\"Michaella\",\"Michal\",\"Michel\",\"Michele\",\"Michelina\",\"Micheline\",\"Michell\",\"Michelle\",\"Micki\",\"Mickie\",\"Micky\",\"Midge\",\"Mignon\",\"Mignonne\",\"Miguela\",\"Miguelita\",\"Mikaela\",\"Mil\",\"Mildred\",\"Mildrid\",\"Milena\",\"Milicent\",\"Milissent\",\"Milka\",\"Milli\",\"Millicent\",\"Millie\",\"Millisent\",\"Milly\",\"Milzie\",\"Mimi\",\"Min\",\"Mina\",\"Minda\",\"Mindy\",\"Minerva\",\"Minetta\",\"Minette\",\"Minna\",\"Minnaminnie\",\"Minne\",\"Minni\",\"Minnie\",\"Minnnie\",\"Minny\",\"Minta\",\"Miquela\",\"Mira\",\"Mirabel\",\"Mirabella\",\"Mirabelle\",\"Miran\",\"Miranda\",\"Mireielle\",\"Mireille\",\"Mirella\",\"Mirelle\",\"Miriam\",\"Mirilla\",\"Mirna\",\"Misha\",\"Missie\",\"Missy\",\"Misti\",\"Misty\",\"Mitzi\",\"Modesta\",\"Modestia\",\"Modestine\",\"Modesty\",\"Moina\",\"Moira\",\"Moll\",\"Mollee\",\"Molli\",\"Mollie\",\"Molly\",\"Mommy\",\"Mona\",\"Monah\",\"Monica\",\"Monika\",\"Monique\",\"Mora\",\"Moreen\",\"Morena\",\"Morgan\",\"Morgana\",\"Morganica\",\"Morganne\",\"Morgen\",\"Moria\",\"Morissa\",\"Morna\",\"Moselle\",\"Moyna\",\"Moyra\",\"Mozelle\",\"Muffin\",\"Mufi\",\"Mufinella\",\"Muire\",\"Mureil\",\"Murial\",\"Muriel\",\"Murielle\",\"Myra\",\"Myrah\",\"Myranda\",\"Myriam\",\"Myrilla\",\"Myrle\",\"Myrlene\",\"Myrna\",\"Myrta\",\"Myrtia\",\"Myrtice\",\"Myrtie\",\"Myrtle\",\"Nada\",\"Nadean\",\"Nadeen\",\"Nadia\",\"Nadine\",\"Nadiya\",\"Nady\",\"Nadya\",\"Nalani\",\"Nan\",\"Nana\",\"Nananne\",\"Nance\",\"Nancee\",\"Nancey\",\"Nanci\",\"Nancie\",\"Nancy\",\"Nanete\",\"Nanette\",\"Nani\",\"Nanice\",\"Nanine\",\"Nannette\",\"Nanni\",\"Nannie\",\"Nanny\",\"Nanon\",\"Naoma\",\"Naomi\",\"Nara\",\"Nari\",\"Nariko\",\"Nat\",\"Nata\",\"Natala\",\"Natalee\",\"Natalie\",\"Natalina\",\"Nataline\",\"Natalya\",\"Natasha\",\"Natassia\",\"Nathalia\",\"Nathalie\",\"Natividad\",\"Natka\",\"Natty\",\"Neala\",\"Neda\",\"Nedda\",\"Nedi\",\"Neely\",\"Neila\",\"Neile\",\"Neilla\",\"Neille\",\"Nelia\",\"Nelie\",\"Nell\",\"Nelle\",\"Nelli\",\"Nellie\",\"Nelly\",\"Nerissa\",\"Nerita\",\"Nert\",\"Nerta\",\"Nerte\",\"Nerti\",\"Nertie\",\"Nerty\",\"Nessa\",\"Nessi\",\"Nessie\",\"Nessy\",\"Nesta\",\"Netta\",\"Netti\",\"Nettie\",\"Nettle\",\"Netty\",\"Nevsa\",\"Neysa\",\"Nichol\",\"Nichole\",\"Nicholle\",\"Nicki\",\"Nickie\",\"Nicky\",\"Nicol\",\"Nicola\",\"Nicole\",\"Nicolea\",\"Nicolette\",\"Nicoli\",\"Nicolina\",\"Nicoline\",\"Nicolle\",\"Nikaniki\",\"Nike\",\"Niki\",\"Nikki\",\"Nikkie\",\"Nikoletta\",\"Nikolia\",\"Nina\",\"Ninetta\",\"Ninette\",\"Ninnetta\",\"Ninnette\",\"Ninon\",\"Nissa\",\"Nisse\",\"Nissie\",\"Nissy\",\"Nita\",\"Nixie\",\"Noami\",\"Noel\",\"Noelani\",\"Noell\",\"Noella\",\"Noelle\",\"Noellyn\",\"Noelyn\",\"Noemi\",\"Nola\",\"Nolana\",\"Nolie\",\"Nollie\",\"Nomi\",\"Nona\",\"Nonah\",\"Noni\",\"Nonie\",\"Nonna\",\"Nonnah\",\"Nora\",\"Norah\",\"Norean\",\"Noreen\",\"Norene\",\"Norina\",\"Norine\",\"Norma\",\"Norri\",\"Norrie\",\"Norry\",\"Novelia\",\"Nydia\",\"Nyssa\",\"Octavia\",\"Odele\",\"Odelia\",\"Odelinda\",\"Odella\",\"Odelle\",\"Odessa\",\"Odetta\",\"Odette\",\"Odilia\",\"Odille\",\"Ofelia\",\"Ofella\",\"Ofilia\",\"Ola\",\"Olenka\",\"Olga\",\"Olia\",\"Olimpia\",\"Olive\",\"Olivette\",\"Olivia\",\"Olivie\",\"Oliy\",\"Ollie\",\"Olly\",\"Olva\",\"Olwen\",\"Olympe\",\"Olympia\",\"Olympie\",\"Ondrea\",\"Oneida\",\"Onida\",\"Oona\",\"Opal\",\"Opalina\",\"Opaline\",\"Ophelia\",\"Ophelie\",\"Ora\",\"Oralee\",\"Oralia\",\"Oralie\",\"Oralla\",\"Oralle\",\"Orel\",\"Orelee\",\"Orelia\",\"Orelie\",\"Orella\",\"Orelle\",\"Oriana\",\"Orly\",\"Orsa\",\"Orsola\",\"Ortensia\",\"Otha\",\"Othelia\",\"Othella\",\"Othilia\",\"Othilie\",\"Ottilie\",\"Page\",\"Paige\",\"Paloma\",\"Pam\",\"Pamela\",\"Pamelina\",\"Pamella\",\"Pammi\",\"Pammie\",\"Pammy\",\"Pandora\",\"Pansie\",\"Pansy\",\"Paola\",\"Paolina\",\"Papagena\",\"Pat\",\"Patience\",\"Patrica\",\"Patrice\",\"Patricia\",\"Patrizia\",\"Patsy\",\"Patti\",\"Pattie\",\"Patty\",\"Paula\",\"Paule\",\"Pauletta\",\"Paulette\",\"Pauli\",\"Paulie\",\"Paulina\",\"Pauline\",\"Paulita\",\"Pauly\",\"Pavia\",\"Pavla\",\"Pearl\",\"Pearla\",\"Pearle\",\"Pearline\",\"Peg\",\"Pegeen\",\"Peggi\",\"Peggie\",\"Peggy\",\"Pen\",\"Penelopa\",\"Penelope\",\"Penni\",\"Pennie\",\"Penny\",\"Pepi\",\"Pepita\",\"Peri\",\"Peria\",\"Perl\",\"Perla\",\"Perle\",\"Perri\",\"Perrine\",\"Perry\",\"Persis\",\"Pet\",\"Peta\",\"Petra\",\"Petrina\",\"Petronella\",\"Petronia\",\"Petronilla\",\"Petronille\",\"Petunia\",\"Phaedra\",\"Phaidra\",\"Phebe\",\"Phedra\",\"Phelia\",\"Phil\",\"Philipa\",\"Philippa\",\"Philippe\",\"Philippine\",\"Philis\",\"Phillida\",\"Phillie\",\"Phillis\",\"Philly\",\"Philomena\",\"Phoebe\",\"Phylis\",\"Phyllida\",\"Phyllis\",\"Phyllys\",\"Phylys\",\"Pia\",\"Pier\",\"Pierette\",\"Pierrette\",\"Pietra\",\"Piper\",\"Pippa\",\"Pippy\",\"Polly\",\"Pollyanna\",\"Pooh\",\"Poppy\",\"Portia\",\"Pris\",\"Prisca\",\"Priscella\",\"Priscilla\",\"Prissie\",\"Pru\",\"Prudence\",\"Prudi\",\"Prudy\",\"Prue\",\"Queenie\",\"Quentin\",\"Querida\",\"Quinn\",\"Quinta\",\"Quintana\",\"Quintilla\",\"Quintina\",\"Rachael\",\"Rachel\",\"Rachele\",\"Rachelle\",\"Rae\",\"Raeann\",\"Raf\",\"Rafa\",\"Rafaela\",\"Rafaelia\",\"Rafaelita\",\"Rahal\",\"Rahel\",\"Raina\",\"Raine\",\"Rakel\",\"Ralina\",\"Ramona\",\"Ramonda\",\"Rana\",\"Randa\",\"Randee\",\"Randene\",\"Randi\",\"Randie\",\"Randy\",\"Ranee\",\"Rani\",\"Rania\",\"Ranice\",\"Ranique\",\"Ranna\",\"Raphaela\",\"Raquel\",\"Raquela\",\"Rasia\",\"Rasla\",\"Raven\",\"Ray\",\"Raychel\",\"Raye\",\"Rayna\",\"Raynell\",\"Rayshell\",\"Rea\",\"Reba\",\"Rebbecca\",\"Rebe\",\"Rebeca\",\"Rebecca\",\"Rebecka\",\"Rebeka\",\"Rebekah\",\"Rebekkah\",\"Ree\",\"Reeba\",\"Reena\",\"Reeta\",\"Reeva\",\"Regan\",\"Reggi\",\"Reggie\",\"Regina\",\"Regine\",\"Reiko\",\"Reina\",\"Reine\",\"Remy\",\"Rena\",\"Renae\",\"Renata\",\"Renate\",\"Rene\",\"Renee\",\"Renell\",\"Renelle\",\"Renie\",\"Rennie\",\"Reta\",\"Retha\",\"Revkah\",\"Rey\",\"Reyna\",\"Rhea\",\"Rheba\",\"Rheta\",\"Rhetta\",\"Rhiamon\",\"Rhianna\",\"Rhianon\",\"Rhoda\",\"Rhodia\",\"Rhodie\",\"Rhody\",\"Rhona\",\"Rhonda\",\"Riane\",\"Riannon\",\"Rianon\",\"Rica\",\"Ricca\",\"Rici\",\"Ricki\",\"Rickie\",\"Ricky\",\"Riki\",\"Rikki\",\"Rina\",\"Risa\",\"Rita\",\"Riva\",\"Rivalee\",\"Rivi\",\"Rivkah\",\"Rivy\",\"Roana\",\"Roanna\",\"Roanne\",\"Robbi\",\"Robbie\",\"Robbin\",\"Robby\",\"Robbyn\",\"Robena\",\"Robenia\",\"Roberta\",\"Robin\",\"Robina\",\"Robinet\",\"Robinett\",\"Robinetta\",\"Robinette\",\"Robinia\",\"Roby\",\"Robyn\",\"Roch\",\"Rochell\",\"Rochella\",\"Rochelle\",\"Rochette\",\"Roda\",\"Rodi\",\"Rodie\",\"Rodina\",\"Rois\",\"Romola\",\"Romona\",\"Romonda\",\"Romy\",\"Rona\",\"Ronalda\",\"Ronda\",\"Ronica\",\"Ronna\",\"Ronni\",\"Ronnica\",\"Ronnie\",\"Ronny\",\"Roobbie\",\"Rora\",\"Rori\",\"Rorie\",\"Rory\",\"Ros\",\"Rosa\",\"Rosabel\",\"Rosabella\",\"Rosabelle\",\"Rosaleen\",\"Rosalia\",\"Rosalie\",\"Rosalind\",\"Rosalinda\",\"Rosalinde\",\"Rosaline\",\"Rosalyn\",\"Rosalynd\",\"Rosamond\",\"Rosamund\",\"Rosana\",\"Rosanna\",\"Rosanne\",\"Rose\",\"Roseann\",\"Roseanna\",\"Roseanne\",\"Roselia\",\"Roselin\",\"Roseline\",\"Rosella\",\"Roselle\",\"Rosemaria\",\"Rosemarie\",\"Rosemary\",\"Rosemonde\",\"Rosene\",\"Rosetta\",\"Rosette\",\"Roshelle\",\"Rosie\",\"Rosina\",\"Rosita\",\"Roslyn\",\"Rosmunda\",\"Rosy\",\"Row\",\"Rowe\",\"Rowena\",\"Roxana\",\"Roxane\",\"Roxanna\",\"Roxanne\",\"Roxi\",\"Roxie\",\"Roxine\",\"Roxy\",\"Roz\",\"Rozalie\",\"Rozalin\",\"Rozamond\",\"Rozanna\",\"Rozanne\",\"Roze\",\"Rozele\",\"Rozella\",\"Rozelle\",\"Rozina\",\"Rubetta\",\"Rubi\",\"Rubia\",\"Rubie\",\"Rubina\",\"Ruby\",\"Ruperta\",\"Ruth\",\"Ruthann\",\"Ruthanne\",\"Ruthe\",\"Ruthi\",\"Ruthie\",\"Ruthy\",\"Ryann\",\"Rycca\",\"Saba\",\"Sabina\",\"Sabine\",\"Sabra\",\"Sabrina\",\"Sacha\",\"Sada\",\"Sadella\",\"Sadie\",\"Sadye\",\"Saidee\",\"Sal\",\"Salaidh\",\"Sallee\",\"Salli\",\"Sallie\",\"Sally\",\"Sallyann\",\"Sallyanne\",\"Saloma\",\"Salome\",\"Salomi\",\"Sam\",\"Samantha\",\"Samara\",\"Samaria\",\"Sammy\",\"Sande\",\"Sandi\",\"Sandie\",\"Sandra\",\"Sandy\",\"Sandye\",\"Sapphira\",\"Sapphire\",\"Sara\",\"Sara-ann\",\"Saraann\",\"Sarah\",\"Sarajane\",\"Saree\",\"Sarena\",\"Sarene\",\"Sarette\",\"Sari\",\"Sarina\",\"Sarine\",\"Sarita\",\"Sascha\",\"Sasha\",\"Sashenka\",\"Saudra\",\"Saundra\",\"Savina\",\"Sayre\",\"Scarlet\",\"Scarlett\",\"Sean\",\"Seana\",\"Seka\",\"Sela\",\"Selena\",\"Selene\",\"Selestina\",\"Selia\",\"Selie\",\"Selina\",\"Selinda\",\"Seline\",\"Sella\",\"Selle\",\"Selma\",\"Sena\",\"Sephira\",\"Serena\",\"Serene\",\"Shae\",\"Shaina\",\"Shaine\",\"Shalna\",\"Shalne\",\"Shana\",\"Shanda\",\"Shandee\",\"Shandeigh\",\"Shandie\",\"Shandra\",\"Shandy\",\"Shane\",\"Shani\",\"Shanie\",\"Shanna\",\"Shannah\",\"Shannen\",\"Shannon\",\"Shanon\",\"Shanta\",\"Shantee\",\"Shara\",\"Sharai\",\"Shari\",\"Sharia\",\"Sharity\",\"Sharl\",\"Sharla\",\"Sharleen\",\"Sharlene\",\"Sharline\",\"Sharon\",\"Sharona\",\"Sharron\",\"Sharyl\",\"Shaun\",\"Shauna\",\"Shawn\",\"Shawna\",\"Shawnee\",\"Shay\",\"Shayla\",\"Shaylah\",\"Shaylyn\",\"Shaylynn\",\"Shayna\",\"Shayne\",\"Shea\",\"Sheba\",\"Sheela\",\"Sheelagh\",\"Sheelah\",\"Sheena\",\"Sheeree\",\"Sheila\",\"Sheila-kathryn\",\"Sheilah\",\"Shel\",\"Shela\",\"Shelagh\",\"Shelba\",\"Shelbi\",\"Shelby\",\"Shelia\",\"Shell\",\"Shelley\",\"Shelli\",\"Shellie\",\"Shelly\",\"Shena\",\"Sher\",\"Sheree\",\"Sheri\",\"Sherie\",\"Sherill\",\"Sherilyn\",\"Sherline\",\"Sherri\",\"Sherrie\",\"Sherry\",\"Sherye\",\"Sheryl\",\"Shina\",\"Shir\",\"Shirl\",\"Shirlee\",\"Shirleen\",\"Shirlene\",\"Shirley\",\"Shirline\",\"Shoshana\",\"Shoshanna\",\"Siana\",\"Sianna\",\"Sib\",\"Sibbie\",\"Sibby\",\"Sibeal\",\"Sibel\",\"Sibella\",\"Sibelle\",\"Sibilla\",\"Sibley\",\"Sibyl\",\"Sibylla\",\"Sibylle\",\"Sidoney\",\"Sidonia\",\"Sidonnie\",\"Sigrid\",\"Sile\",\"Sileas\",\"Silva\",\"Silvana\",\"Silvia\",\"Silvie\",\"Simona\",\"Simone\",\"Simonette\",\"Simonne\",\"Sindee\",\"Siobhan\",\"Sioux\",\"Siouxie\",\"Sisely\",\"Sisile\",\"Sissie\",\"Sissy\",\"Siusan\",\"Sofia\",\"Sofie\",\"Sondra\",\"Sonia\",\"Sonja\",\"Sonni\",\"Sonnie\",\"Sonnnie\",\"Sonny\",\"Sonya\",\"Sophey\",\"Sophi\",\"Sophia\",\"Sophie\",\"Sophronia\",\"Sorcha\",\"Sosanna\",\"Stace\",\"Stacee\",\"Stacey\",\"Staci\",\"Stacia\",\"Stacie\",\"Stacy\",\"Stafani\",\"Star\",\"Starla\",\"Starlene\",\"Starlin\",\"Starr\",\"Stefa\",\"Stefania\",\"Stefanie\",\"Steffane\",\"Steffi\",\"Steffie\",\"Stella\",\"Stepha\",\"Stephana\",\"Stephani\",\"Stephanie\",\"Stephannie\",\"Stephenie\",\"Stephi\",\"Stephie\",\"Stephine\",\"Stesha\",\"Stevana\",\"Stevena\",\"Stoddard\",\"Storm\",\"Stormi\",\"Stormie\",\"Stormy\",\"Sue\",\"Suellen\",\"Sukey\",\"Suki\",\"Sula\",\"Sunny\",\"Sunshine\",\"Susan\",\"Susana\",\"Susanetta\",\"Susann\",\"Susanna\",\"Susannah\",\"Susanne\",\"Susette\",\"Susi\",\"Susie\",\"Susy\",\"Suzann\",\"Suzanna\",\"Suzanne\",\"Suzette\",\"Suzi\",\"Suzie\",\"Suzy\",\"Sybil\",\"Sybila\",\"Sybilla\",\"Sybille\",\"Sybyl\",\"Sydel\",\"Sydelle\",\"Sydney\",\"Sylvia\",\"Tabatha\",\"Tabbatha\",\"Tabbi\",\"Tabbie\",\"Tabbitha\",\"Tabby\",\"Tabina\",\"Tabitha\",\"Taffy\",\"Talia\",\"Tallia\",\"Tallie\",\"Tallou\",\"Tallulah\",\"Tally\",\"Talya\",\"Talyah\",\"Tamar\",\"Tamara\",\"Tamarah\",\"Tamarra\",\"Tamera\",\"Tami\",\"Tamiko\",\"Tamma\",\"Tammara\",\"Tammi\",\"Tammie\",\"Tammy\",\"Tamqrah\",\"Tamra\",\"Tana\",\"Tandi\",\"Tandie\",\"Tandy\",\"Tanhya\",\"Tani\",\"Tania\",\"Tanitansy\",\"Tansy\",\"Tanya\",\"Tara\",\"Tarah\",\"Tarra\",\"Tarrah\",\"Taryn\",\"Tasha\",\"Tasia\",\"Tate\",\"Tatiana\",\"Tatiania\",\"Tatum\",\"Tawnya\",\"Tawsha\",\"Ted\",\"Tedda\",\"Teddi\",\"Teddie\",\"Teddy\",\"Tedi\",\"Tedra\",\"Teena\",\"Teirtza\",\"Teodora\",\"Tera\",\"Teresa\",\"Terese\",\"Teresina\",\"Teresita\",\"Teressa\",\"Teri\",\"Teriann\",\"Terra\",\"Terri\",\"Terrie\",\"Terrijo\",\"Terry\",\"Terrye\",\"Tersina\",\"Terza\",\"Tess\",\"Tessa\",\"Tessi\",\"Tessie\",\"Tessy\",\"Thalia\",\"Thea\",\"Theadora\",\"Theda\",\"Thekla\",\"Thelma\",\"Theo\",\"Theodora\",\"Theodosia\",\"Theresa\",\"Therese\",\"Theresina\",\"Theresita\",\"Theressa\",\"Therine\",\"Thia\",\"Thomasa\",\"Thomasin\",\"Thomasina\",\"Thomasine\",\"Tiena\",\"Tierney\",\"Tiertza\",\"Tiff\",\"Tiffani\",\"Tiffanie\",\"Tiffany\",\"Tiffi\",\"Tiffie\",\"Tiffy\",\"Tilda\",\"Tildi\",\"Tildie\",\"Tildy\",\"Tillie\",\"Tilly\",\"Tim\",\"Timi\",\"Timmi\",\"Timmie\",\"Timmy\",\"Timothea\",\"Tina\",\"Tine\",\"Tiphani\",\"Tiphanie\",\"Tiphany\",\"Tish\",\"Tisha\",\"Tobe\",\"Tobey\",\"Tobi\",\"Toby\",\"Tobye\",\"Toinette\",\"Toma\",\"Tomasina\",\"Tomasine\",\"Tomi\",\"Tommi\",\"Tommie\",\"Tommy\",\"Toni\",\"Tonia\",\"Tonie\",\"Tony\",\"Tonya\",\"Tonye\",\"Tootsie\",\"Torey\",\"Tori\",\"Torie\",\"Torrie\",\"Tory\",\"Tova\",\"Tove\",\"Tracee\",\"Tracey\",\"Traci\",\"Tracie\",\"Tracy\",\"Trenna\",\"Tresa\",\"Trescha\",\"Tressa\",\"Tricia\",\"Trina\",\"Trish\",\"Trisha\",\"Trista\",\"Trix\",\"Trixi\",\"Trixie\",\"Trixy\",\"Truda\",\"Trude\",\"Trudey\",\"Trudi\",\"Trudie\",\"Trudy\",\"Trula\",\"Tuesday\",\"Twila\",\"Twyla\",\"Tybi\",\"Tybie\",\"Tyne\",\"Ula\",\"Ulla\",\"Ulrica\",\"Ulrika\",\"Ulrikaumeko\",\"Ulrike\",\"Umeko\",\"Una\",\"Ursa\",\"Ursala\",\"Ursola\",\"Ursula\",\"Ursulina\",\"Ursuline\",\"Uta\",\"Val\",\"Valaree\",\"Valaria\",\"Vale\",\"Valeda\",\"Valencia\",\"Valene\",\"Valenka\",\"Valentia\",\"Valentina\",\"Valentine\",\"Valera\",\"Valeria\",\"Valerie\",\"Valery\",\"Valerye\",\"Valida\",\"Valina\",\"Valli\",\"Vallie\",\"Vally\",\"Valma\",\"Valry\",\"Van\",\"Vanda\",\"Vanessa\",\"Vania\",\"Vanna\",\"Vanni\",\"Vannie\",\"Vanny\",\"Vanya\",\"Veda\",\"Velma\",\"Velvet\",\"Venita\",\"Venus\",\"Vera\",\"Veradis\",\"Vere\",\"Verena\",\"Verene\",\"Veriee\",\"Verile\",\"Verina\",\"Verine\",\"Verla\",\"Verna\",\"Vernice\",\"Veronica\",\"Veronika\",\"Veronike\",\"Veronique\",\"Vevay\",\"Vi\",\"Vicki\",\"Vickie\",\"Vicky\",\"Victoria\",\"Vida\",\"Viki\",\"Vikki\",\"Vikky\",\"Vilhelmina\",\"Vilma\",\"Vin\",\"Vina\",\"Vinita\",\"Vinni\",\"Vinnie\",\"Vinny\",\"Viola\",\"Violante\",\"Viole\",\"Violet\",\"Violetta\",\"Violette\",\"Virgie\",\"Virgina\",\"Virginia\",\"Virginie\",\"Vita\",\"Vitia\",\"Vitoria\",\"Vittoria\",\"Viv\",\"Viva\",\"Vivi\",\"Vivia\",\"Vivian\",\"Viviana\",\"Vivianna\",\"Vivianne\",\"Vivie\",\"Vivien\",\"Viviene\",\"Vivienne\",\"Viviyan\",\"Vivyan\",\"Vivyanne\",\"Vonni\",\"Vonnie\",\"Vonny\",\"Vyky\",\"Wallie\",\"Wallis\",\"Walliw\",\"Wally\",\"Waly\",\"Wanda\",\"Wandie\",\"Wandis\",\"Waneta\",\"Wanids\",\"Wenda\",\"Wendeline\",\"Wendi\",\"Wendie\",\"Wendy\",\"Wendye\",\"Wenona\",\"Wenonah\",\"Whitney\",\"Wileen\",\"Wilhelmina\",\"Wilhelmine\",\"Wilie\",\"Willa\",\"Willabella\",\"Willamina\",\"Willetta\",\"Willette\",\"Willi\",\"Willie\",\"Willow\",\"Willy\",\"Willyt\",\"Wilma\",\"Wilmette\",\"Wilona\",\"Wilone\",\"Wilow\",\"Windy\",\"Wini\",\"Winifred\",\"Winna\",\"Winnah\",\"Winne\",\"Winni\",\"Winnie\",\"Winnifred\",\"Winny\",\"Winona\",\"Winonah\",\"Wren\",\"Wrennie\",\"Wylma\",\"Wynn\",\"Wynne\",\"Wynnie\",\"Wynny\",\"Xaviera\",\"Xena\",\"Xenia\",\"Xylia\",\"Xylina\",\"Yalonda\",\"Yasmeen\",\"Yasmin\",\"Yelena\",\"Yetta\",\"Yettie\",\"Yetty\",\"Yevette\",\"Ynes\",\"Ynez\",\"Yoko\",\"Yolanda\",\"Yolande\",\"Yolane\",\"Yolanthe\",\"Yoshi\",\"Yoshiko\",\"Yovonnda\",\"Ysabel\",\"Yvette\",\"Yvonne\",\"Zabrina\",\"Zahara\",\"Zandra\",\"Zaneta\",\"Zara\",\"Zarah\",\"Zaria\",\"Zarla\",\"Zea\",\"Zelda\",\"Zelma\",\"Zena\",\"Zenia\",\"Zia\",\"Zilvia\",\"Zita\",\"Zitella\",\"Zoe\",\"Zola\",\"Zonda\",\"Zondra\",\"Zonnya\",\"Zora\",\"Zorah\",\"Zorana\",\"Zorina\",\"Zorine\",\"Zsazsa\",\"Zulema\",\"Zuzana\"],exports.starWars=[\"Ackbar\",\"Adi Gallia\",\"Anakin Skywalker\",\"Arvel Crynyd\",\"Ayla Secura\",\"Bail Prestor Organa\",\"Barriss Offee\",\"Ben Quadinaros\",\"Beru Whitesun lars\",\"Bib Fortuna\",\"Biggs Darklighter\",\"Boba Fett\",\"Bossk\",\"C-3PO\",\"Chewbacca\",\"Cliegg Lars\",\"Cordé\",\"Darth Maul\",\"Darth Vader\",\"Dexter Jettster\",\"Dooku\",\"Dormé\",\"Dud Bolt\",\"Eeth Koth\",\"Finis Valorum\",\"Gasgano\",\"Greedo\",\"Gregar Typho\",\"Grievous\",\"Han Solo\",\"IG-88\",\"Jabba Desilijic Tiure\",\"Jango Fett\",\"Jar Jar Binks\",\"Jek Tono Porkins\",\"Jocasta Nu\",\"Ki-Adi-Mundi\",\"Kit Fisto\",\"Lama Su\",\"Lando Calrissian\",\"Leia Organa\",\"Lobot\",\"Luke Skywalker\",\"Luminara Unduli\",\"Mace Windu\",\"Mas Amedda\",\"Mon Mothma\",\"Nien Nunb\",\"Nute Gunray\",\"Obi-Wan Kenobi\",\"Owen Lars\",\"Padmé Amidala\",\"Palpatine\",\"Plo Koon\",\"Poggle the Lesser\",\"Quarsh Panaka\",\"Qui-Gon Jinn\",\"R2-D2\",\"R4-P17\",\"R5-D4\",\"Ratts Tyerel\",\"Raymus Antilles\",\"Ric Olié\",\"Roos Tarpals\",\"Rugor Nass\",\"Saesee Tiin\",\"San Hill\",\"Sebulba\",\"Shaak Ti\",\"Shmi Skywalker\",\"Sly Moore\",\"Tarfful\",\"Taun We\",\"Tion Medon\",\"Wat Tambor\",\"Watto\",\"Wedge Antilles\",\"Wicket Systri Warrick\",\"Wilhuff Tarkin\",\"Yarael Poof\",\"Yoda\",\"Zam Wesell\"],exports.uniqueNamesGenerator=a=>{const n=[...a&&a.dictionaries||i.dictionaries],l={...i,...a,length:a&&a.length||n.length,dictionaries:n};if(!a||!a.dictionaries||!a.dictionaries.length)throw new Error('A \"dictionaries\" array must be provided. This is a breaking change introduced starting from Unique Name Generator v4. Read more about the breaking change here: https://github.com/andreasonny83/unique-names-generator#migration-guide');return new e(l).generate()};\n//# sourceMappingURL=index.js.map\n",
    "let p = process || {}, argv = p.argv || [], env = p.env || {}\nlet isColorSupported =\n\t!(!!env.NO_COLOR || argv.includes(\"--no-color\")) &&\n\t(!!env.FORCE_COLOR || argv.includes(\"--color\") || p.platform === \"win32\" || ((p.stdout || {}).isTTY && env.TERM !== \"dumb\") || !!env.CI)\n\nlet formatter = (open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input, index = string.indexOf(close, open.length)\n\t\treturn ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet result = \"\", cursor = 0\n\tdo {\n\t\tresult += string.substring(cursor, index) + replace\n\t\tcursor = index + close.length\n\t\tindex = string.indexOf(close, cursor)\n\t} while (~index)\n\treturn result + string.substring(cursor)\n}\n\nlet createColors = (enabled = isColorSupported) => {\n\tlet f = enabled ? formatter : () => String\n\treturn {\n\t\tisColorSupported: enabled,\n\t\treset: f(\"\\x1b[0m\", \"\\x1b[0m\"),\n\t\tbold: f(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\"),\n\t\tdim: f(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\"),\n\t\titalic: f(\"\\x1b[3m\", \"\\x1b[23m\"),\n\t\tunderline: f(\"\\x1b[4m\", \"\\x1b[24m\"),\n\t\tinverse: f(\"\\x1b[7m\", \"\\x1b[27m\"),\n\t\thidden: f(\"\\x1b[8m\", \"\\x1b[28m\"),\n\t\tstrikethrough: f(\"\\x1b[9m\", \"\\x1b[29m\"),\n\n\t\tblack: f(\"\\x1b[30m\", \"\\x1b[39m\"),\n\t\tred: f(\"\\x1b[31m\", \"\\x1b[39m\"),\n\t\tgreen: f(\"\\x1b[32m\", \"\\x1b[39m\"),\n\t\tyellow: f(\"\\x1b[33m\", \"\\x1b[39m\"),\n\t\tblue: f(\"\\x1b[34m\", \"\\x1b[39m\"),\n\t\tmagenta: f(\"\\x1b[35m\", \"\\x1b[39m\"),\n\t\tcyan: f(\"\\x1b[36m\", \"\\x1b[39m\"),\n\t\twhite: f(\"\\x1b[37m\", \"\\x1b[39m\"),\n\t\tgray: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n\n\t\tbgBlack: f(\"\\x1b[40m\", \"\\x1b[49m\"),\n\t\tbgRed: f(\"\\x1b[41m\", \"\\x1b[49m\"),\n\t\tbgGreen: f(\"\\x1b[42m\", \"\\x1b[49m\"),\n\t\tbgYellow: f(\"\\x1b[43m\", \"\\x1b[49m\"),\n\t\tbgBlue: f(\"\\x1b[44m\", \"\\x1b[49m\"),\n\t\tbgMagenta: f(\"\\x1b[45m\", \"\\x1b[49m\"),\n\t\tbgCyan: f(\"\\x1b[46m\", \"\\x1b[49m\"),\n\t\tbgWhite: f(\"\\x1b[47m\", \"\\x1b[49m\"),\n\n\t\tblackBright: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n\t\tredBright: f(\"\\x1b[91m\", \"\\x1b[39m\"),\n\t\tgreenBright: f(\"\\x1b[92m\", \"\\x1b[39m\"),\n\t\tyellowBright: f(\"\\x1b[93m\", \"\\x1b[39m\"),\n\t\tblueBright: f(\"\\x1b[94m\", \"\\x1b[39m\"),\n\t\tmagentaBright: f(\"\\x1b[95m\", \"\\x1b[39m\"),\n\t\tcyanBright: f(\"\\x1b[96m\", \"\\x1b[39m\"),\n\t\twhiteBright: f(\"\\x1b[97m\", \"\\x1b[39m\"),\n\n\t\tbgBlackBright: f(\"\\x1b[100m\", \"\\x1b[49m\"),\n\t\tbgRedBright: f(\"\\x1b[101m\", \"\\x1b[49m\"),\n\t\tbgGreenBright: f(\"\\x1b[102m\", \"\\x1b[49m\"),\n\t\tbgYellowBright: f(\"\\x1b[103m\", \"\\x1b[49m\"),\n\t\tbgBlueBright: f(\"\\x1b[104m\", \"\\x1b[49m\"),\n\t\tbgMagentaBright: f(\"\\x1b[105m\", \"\\x1b[49m\"),\n\t\tbgCyanBright: f(\"\\x1b[106m\", \"\\x1b[49m\"),\n\t\tbgWhiteBright: f(\"\\x1b[107m\", \"\\x1b[49m\"),\n\t}\n}\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n",
    "module.exports = require('crypto').randomBytes\n",
    "module.exports = require('crypto').createHash\n",
    "module.exports = require('crypto').createHmac\n",
    "'use strict';\n\nvar MAX_ALLOC = Math.pow(2, 30) - 1; // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n\tif (typeof iterations !== 'number') {\n\t\tthrow new TypeError('Iterations not a number');\n\t}\n\n\tif (iterations < 0) {\n\t\tthrow new TypeError('Bad iterations');\n\t}\n\n\tif (typeof keylen !== 'number') {\n\t\tthrow new TypeError('Key length not a number');\n\t}\n\n\tif (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n\t\tthrow new TypeError('Bad key length');\n\t}\n};\n",
    "'use strict';\n\nvar defaultEncoding;\n/* istanbul ignore next */\nif (global.process && global.process.browser) {\n\tdefaultEncoding = 'utf-8';\n} else if (global.process && global.process.version) {\n\tvar pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10);\n\n\tdefaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary';\n} else {\n\tdefaultEncoding = 'utf-8';\n}\nmodule.exports = defaultEncoding;\n",
    "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",
    "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n",
    "'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n",
    "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n",
    "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n",
    "'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n",
    "'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n",
    "'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n",
    "'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n",
    "'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n",
    "'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n",
    "'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n",
    "'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n",
    "'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n",
    "'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n",
    "'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n",
    "'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n",
    "'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n",
    "'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n",
    "'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n",
    "'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n",
    "'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n",
    "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n",
    "'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n",
    "'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n",
    "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n",
    "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n",
    "'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n",
    "'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n",
    "'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n",
    "'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n",
    "'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n",
    "'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n",
    "'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n",
    "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n",
    "'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n",
    "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n",
    "'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n",
    "'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/** @type {<This, A extends readonly unknown[]>(arr: A, iterator: (this: This | void, value: A[number], index: number, arr: A) => void, receiver: This | undefined) => void} */\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\n/** @type {<This, S extends string>(string: S, iterator: (this: This | void, value: S[number], index: number, string: S) => void, receiver: This | undefined) => void} */\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\n/** @type {<This, O>(obj: O, iterator: (this: This | void, value: O[keyof O], index: keyof O, obj: O) => void, receiver: This | undefined) => void} */\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\n/** @type {(x: unknown) => x is readonly unknown[]} */\nfunction isArray(x) {\n    return toStr.call(x) === '[object Array]';\n}\n\n/** @type {import('.')._internal} */\nmodule.exports = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (isArray(list)) {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n",
    "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float16Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n",
    "'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n",
    "'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n",
    "'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n",
    "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n",
    "'use strict';\n\nvar bind = require('function-bind');\nvar $apply = require('./functionApply');\nvar actualApply = require('./actualApply');\n\n/** @type {import('./applyBind')} */\nmodule.exports = function applyBind() {\n\treturn actualApply(bind, $apply, arguments);\n};\n",
    "'use strict';\n\nvar setFunctionLength = require('set-function-length');\n\nvar $defineProperty = require('es-define-property');\n\nvar callBindBasic = require('call-bind-apply-helpers');\nvar applyBind = require('call-bind-apply-helpers/applyBind');\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = callBindBasic(arguments);\n\tvar adjustedLength = originalFunction.length - (arguments.length - 1);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + (adjustedLength > 0 ? adjustedLength : 0),\n\t\ttrue\n\t);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n",
    "'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n",
    "'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\nvar gOPD = require('gopd');\nvar getProto = require('get-proto');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {import('./types').Getter} Getter */\n/** @type {import('./types').Cache} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getProto) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr && getProto) {\n\t\t\tvar proto = getProto(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor && proto) {\n\t\t\t\tvar superProto = getProto(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\tcache[\n\t\t\t\t/** @type {`$${import('.').TypedArrayName}`} */ ('$' + typedArray)\n\t\t\t] = /** @type {import('./types').BoundSlice | import('./types').BoundSet} */ (\n\t\t\t\t// @ts-expect-error TODO FIXME\n\t\t\t\tcallBind(fn)\n\t\t\t);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(typedArray, 1));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */(cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(name, 1));\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n",
    "'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n",
    "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar callBound = require('call-bound');\n\n/** @type {undefined | ((thisArg: import('.').TypedArray) => Buffer<ArrayBufferLike>)} */\nvar $typedArrayBuffer = callBound('TypedArray.prototype.buffer', true);\n\nvar isTypedArray = require('is-typed-array');\n\n/** @type {import('.')} */\n// node <= 0.10, < 0.11.4 has a nonconfigurable own property instead of a prototype getter\nmodule.exports = $typedArrayBuffer || function typedArrayBuffer(x) {\n\tif (!isTypedArray(x)) {\n\t\tthrow new $TypeError('Not a Typed Array');\n\t}\n\treturn x.buffer;\n};\n",
    "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar isArray = require('isarray');\nvar typedArrayBuffer = require('typed-array-buffer');\n\nvar isView = ArrayBuffer.isView || function isView(obj) {\n\ttry {\n\t\ttypedArrayBuffer(obj);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined'\n\t&& typeof Uint8Array !== 'undefined';\nvar useFromArrayBuffer = useArrayBuffer && (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);\n\nmodule.exports = function toBuffer(data, encoding) {\n\t/*\n\t * No need to do anything for exact instance\n\t * This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n\t */\n\tif (data instanceof Buffer) {\n\t\treturn data;\n\t}\n\n\tif (typeof data === 'string') {\n\t\treturn Buffer.from(data, encoding);\n\t}\n\n\t/*\n\t * Wrap any TypedArray instances and DataViews\n\t * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n\t */\n\tif (useArrayBuffer && isView(data)) {\n\t\t// Bug in Node.js <6.3.1, which treats this as out-of-bounds\n\t\tif (data.byteLength === 0) {\n\t\t\treturn Buffer.alloc(0);\n\t\t}\n\n\t\t// When Buffer is based on Uint8Array, we can just construct it from ArrayBuffer\n\t\tif (useFromArrayBuffer) {\n\t\t\tvar res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n\t\t\t/*\n\t\t\t * Recheck result size, as offset/length doesn't work on Node.js <5.10\n\t\t\t * We just go to Uint8Array case if this fails\n\t\t\t */\n\t\t\tif (res.byteLength === data.byteLength) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\n\t\t// Convert to Uint8Array bytes and then to Buffer\n\t\tvar uint8 = data instanceof Uint8Array ? data : new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n\t\tvar result = Buffer.from(uint8);\n\n\t\t/*\n\t\t * Let's recheck that conversion succeeded\n\t\t * We have .length but not .byteLength when useFromArrayBuffer is false\n\t\t */\n\t\tif (result.length === data.byteLength) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/*\n\t * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n\t * Doesn't make sense with other TypedArray instances\n\t */\n\tif (useUint8Array && data instanceof Uint8Array) {\n\t\treturn Buffer.from(data);\n\t}\n\n\tvar isArr = isArray(data);\n\tif (isArr) {\n\t\tfor (var i = 0; i < data.length; i += 1) {\n\t\t\tvar x = data[i];\n\t\t\tif (\n\t\t\t\ttypeof x !== 'number'\n\t\t\t\t|| x < 0\n\t\t\t\t|| x > 255\n\t\t\t\t|| ~~x !== x // NaN and integer check\n\t\t\t) {\n\t\t\t\tthrow new RangeError('Array items must be numbers in the range 0-255.');\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t * Old Buffer polyfill on an engine that doesn't have TypedArray support\n\t * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n\t * Convert to our current Buffer implementation\n\t */\n\tif (\n\t\tisArr || (\n\t\t\tBuffer.isBuffer(data)\n\t\t\t\t&& data.constructor\n\t\t\t\t&& typeof data.constructor.isBuffer === 'function'\n\t\t\t\t&& data.constructor.isBuffer(data)\n\t\t)\n\t) {\n\t\treturn Buffer.from(data);\n\t}\n\n\tthrow new TypeError('The \"data\" argument must be a string, an Array, a Buffer, a Uint8Array, or a DataView.');\n};\n",
    "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('to-buffer');\n\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = useUint8Array && typeof ArrayBuffer !== 'undefined';\nvar isView = useArrayBuffer && ArrayBuffer.isView;\n\nmodule.exports = function (thing, encoding, name) {\n\tif (\n\t\ttypeof thing === 'string'\n\t\t|| Buffer.isBuffer(thing)\n\t\t|| (useUint8Array && thing instanceof Uint8Array)\n\t\t|| (isView && isView(thing))\n\t) {\n\t\treturn toBuffer(thing, encoding);\n\t}\n\tthrow new TypeError(name + ' must be a string, a Buffer, a Uint8Array, or a DataView');\n};\n",
    "'use strict';\n\nvar sizes = {\n\t__proto__: null,\n\tmd5: 16,\n\tsha1: 20,\n\tsha224: 28,\n\tsha256: 32,\n\tsha384: 48,\n\tsha512: 64,\n\t'sha512-256': 32,\n\trmd160: 20,\n\tripemd160: 20\n};\n\nvar mapping = {\n\t__proto__: null,\n\t'sha-1': 'sha1',\n\t'sha-224': 'sha224',\n\t'sha-256': 'sha256',\n\t'sha-384': 'sha384',\n\t'sha-512': 'sha512',\n\t'ripemd-160': 'ripemd160'\n};\n\nvar createHmac = require('create-hmac');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar checkParameters = require('./precondition');\nvar defaultEncoding = require('./default-encoding');\nvar toBuffer = require('./to-buffer');\n\nfunction pbkdf2(password, salt, iterations, keylen, digest) {\n\tcheckParameters(iterations, keylen);\n\tpassword = toBuffer(password, defaultEncoding, 'Password');\n\tsalt = toBuffer(salt, defaultEncoding, 'Salt');\n\n\tvar lowerDigest = (digest || 'sha1').toLowerCase();\n\tvar mappedDigest = mapping[lowerDigest] || lowerDigest;\n\tvar size = sizes[mappedDigest];\n\tif (typeof size !== 'number' || !size) {\n\t\tthrow new TypeError('Digest algorithm not supported: ' + digest);\n\t}\n\n\tvar DK = Buffer.allocUnsafe(keylen);\n\tvar block1 = Buffer.allocUnsafe(salt.length + 4);\n\tsalt.copy(block1, 0, 0, salt.length);\n\n\tvar destPos = 0;\n\tvar hLen = size;\n\tvar l = Math.ceil(keylen / hLen);\n\n\tfor (var i = 1; i <= l; i++) {\n\t\tblock1.writeUInt32BE(i, salt.length);\n\n\t\tvar T = createHmac(mappedDigest, password).update(block1).digest();\n\t\tvar U = T;\n\n\t\tfor (var j = 1; j < iterations; j++) {\n\t\t\tU = createHmac(mappedDigest, password).update(U).digest();\n\t\t\tfor (var k = 0; k < hLen; k++) {\n\t\t\t\tT[k] ^= U[k];\n\t\t\t}\n\t\t}\n\n\t\tT.copy(DK, destPos);\n\t\tdestPos += hLen;\n\t}\n\n\treturn DK;\n}\n\nmodule.exports = pbkdf2;\n",
    "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar checkParameters = require('./precondition');\nvar defaultEncoding = require('./default-encoding');\nvar sync = require('./sync');\nvar toBuffer = require('./to-buffer');\n\nvar ZERO_BUF;\nvar subtle = global.crypto && global.crypto.subtle;\nvar toBrowser = {\n\tsha: 'SHA-1',\n\t'sha-1': 'SHA-1',\n\tsha1: 'SHA-1',\n\tsha256: 'SHA-256',\n\t'sha-256': 'SHA-256',\n\tsha384: 'SHA-384',\n\t'sha-384': 'SHA-384',\n\t'sha-512': 'SHA-512',\n\tsha512: 'SHA-512'\n};\nvar checks = [];\nvar nextTick;\nfunction getNextTick() {\n\tif (nextTick) {\n\t\treturn nextTick;\n\t}\n\tif (global.process && global.process.nextTick) {\n\t\tnextTick = global.process.nextTick;\n\t} else if (global.queueMicrotask) {\n\t\tnextTick = global.queueMicrotask;\n\t} else if (global.setImmediate) {\n\t\tnextTick = global.setImmediate;\n\t} else {\n\t\tnextTick = global.setTimeout;\n\t}\n\treturn nextTick;\n}\nfunction browserPbkdf2(password, salt, iterations, length, algo) {\n\treturn subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveBits']).then(function (key) {\n\t\treturn subtle.deriveBits({\n\t\t\tname: 'PBKDF2',\n\t\t\tsalt: salt,\n\t\t\titerations: iterations,\n\t\t\thash: {\n\t\t\t\tname: algo\n\t\t\t}\n\t\t}, key, length << 3);\n\t}).then(function (res) {\n\t\treturn Buffer.from(res);\n\t});\n}\nfunction checkNative(algo) {\n\tif (global.process && !global.process.browser) {\n\t\treturn Promise.resolve(false);\n\t}\n\tif (!subtle || !subtle.importKey || !subtle.deriveBits) {\n\t\treturn Promise.resolve(false);\n\t}\n\tif (checks[algo] !== undefined) {\n\t\treturn checks[algo];\n\t}\n\tZERO_BUF = ZERO_BUF || Buffer.alloc(8);\n\tvar prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n\t\t.then(\n\t\t\tfunction () { return true; },\n\t\t\tfunction () { return false; }\n\t\t);\n\tchecks[algo] = prom;\n\treturn prom;\n}\n\nfunction resolvePromise(promise, callback) {\n\tpromise.then(function (out) {\n\t\tgetNextTick()(function () {\n\t\t\tcallback(null, out);\n\t\t});\n\t}, function (e) {\n\t\tgetNextTick()(function () {\n\t\t\tcallback(e);\n\t\t});\n\t});\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n\tif (typeof digest === 'function') {\n\t\tcallback = digest;\n\t\tdigest = undefined;\n\t}\n\n\tdigest = digest || 'sha1';\n\tvar algo = toBrowser[digest.toLowerCase()];\n\n\tif (!algo || typeof global.Promise !== 'function') {\n\t\tgetNextTick()(function () {\n\t\t\tvar out;\n\t\t\ttry {\n\t\t\t\tout = sync(password, salt, iterations, keylen, digest);\n\t\t\t} catch (e) {\n\t\t\t\tcallback(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback(null, out);\n\t\t});\n\t\treturn;\n\t}\n\n\tcheckParameters(iterations, keylen);\n\tpassword = toBuffer(password, defaultEncoding, 'Password');\n\tsalt = toBuffer(salt, defaultEncoding, 'Salt');\n\tif (typeof callback !== 'function') {\n\t\tthrow new Error('No callback provided to pbkdf2');\n\t}\n\n\tresolvePromise(checkNative(algo).then(function (resp) {\n\t\tif (resp) {\n\t\t\treturn browserPbkdf2(password, salt, iterations, keylen, algo);\n\t\t}\n\n\t\treturn sync(password, salt, iterations, keylen, digest);\n\t}), callback);\n};\n",
    "'use strict';\n\nvar nativeImpl = require('crypto');\n\nvar checkParameters = require('./lib/precondition');\nvar defaultEncoding = require('./lib/default-encoding');\nvar toBuffer = require('./lib/to-buffer');\n\nfunction nativePBKDF2(password, salt, iterations, keylen, digest, callback) {\n\tcheckParameters(iterations, keylen);\n\tpassword = toBuffer(password, defaultEncoding, 'Password');\n\tsalt = toBuffer(salt, defaultEncoding, 'Salt');\n\n\tif (typeof digest === 'function') {\n\t\tcallback = digest;\n\t\tdigest = 'sha1';\n\t}\n\tif (typeof callback !== 'function') {\n\t\tthrow new Error('No callback provided to pbkdf2');\n\t}\n\n\treturn nativeImpl.pbkdf2(password, salt, iterations, keylen, digest, callback);\n}\n\nfunction nativePBKDF2Sync(password, salt, iterations, keylen, digest) {\n\tcheckParameters(iterations, keylen);\n\tpassword = toBuffer(password, defaultEncoding, 'Password');\n\tsalt = toBuffer(salt, defaultEncoding, 'Salt');\n\tdigest = digest || 'sha1';\n\treturn nativeImpl.pbkdf2Sync(password, salt, iterations, keylen, digest);\n}\n\n/* istanbul ignore next */\nif (!nativeImpl.pbkdf2Sync || nativeImpl.pbkdf2Sync.toString().indexOf('keylen, digest') === -1) {\n\t/* eslint global-require: 0 */\n\texports.pbkdf2Sync = require('./lib/sync');\n\texports.pbkdf2 = require('./lib/async');\n\n// native\n} else {\n\texports.pbkdf2Sync = nativePBKDF2Sync;\n\texports.pbkdf2 = nativePBKDF2;\n}\n",
    "var crypto = require('crypto')\n\nexports.createCipher = exports.Cipher = crypto.createCipher\nexports.createCipheriv = exports.Cipheriv = crypto.createCipheriv\nexports.createDecipher = exports.Decipher = crypto.createDecipher\nexports.createDecipheriv = exports.Decipheriv = crypto.createDecipheriv\nexports.listCiphers = exports.getCiphers = crypto.getCiphers\n",
    "var crypto = require('crypto')\n\n// getDiffieHellman\nexports.DiffieHellmanGroup = crypto.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = crypto.createDiffieHellmanGroup\nexports.getDiffieHellman = crypto.getDiffieHellman\n\n// createDiffieHellman\nexports.createDiffieHellman = crypto.createDiffieHellman\nexports.DiffieHellman = crypto.DiffieHellman\n",
    "'use strict';\n\nvar crypto = require('crypto');\n\nexports.createSign = crypto.createSign;\nexports.Sign = crypto.Sign;\n\nexports.createVerify = crypto.createVerify;\nexports.Verify = crypto.Verify;\n",
    "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",
    "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n",
    "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n",
    "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n",
    "var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n",
    "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n",
    "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n",
    "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n",
    "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n",
    "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n",
    "'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n",
    "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n",
    "'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n",
    "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n",
    "'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n",
    "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n",
    "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n",
    "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n",
    "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n",
    "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n",
    "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n",
    "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n",
    "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',\n      'Expected message to be an array-like, a hex string, or a BN instance');\n    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer\n    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n  }\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Would fail further checks, but let's make the error message clear\n  assert(!msg.isNeg(), 'Can not sign a negative message');\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Recheck nonce to be bijective to msg\n  assert((new BN(nonce)).eq(msg), 'Can not sign message');\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n",
    "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n",
    "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n",
    "'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n",
    "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n",
    "var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n",
    "var createECDH = require('crypto').createECDH\n\nmodule.exports = createECDH || require('./browser')\n",
    "var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n",
    "var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n",
    "var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n",
    "var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar DecoderBuffer = require('../base').DecoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n",
    "var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n",
    "var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n",
    "var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n",
    "var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n",
    "var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n",
    "var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n",
    "var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n",
    "var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n",
    "var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n",
    "var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n",
    "// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict';\n\nvar asn = require('asn1.js');\n\nvar Time = asn.define('Time', function () {\n\tthis.choice({\n\t\tutcTime: this.utctime(),\n\t\tgeneralTime: this.gentime()\n\t});\n});\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n\tthis.seq().obj(\n\t\tthis.key('type').objid(),\n\t\tthis.key('value').any()\n\t);\n});\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('parameters').optional(),\n\t\tthis.key('curve').objid().optional()\n\t);\n});\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n\tthis.setof(AttributeTypeValue);\n});\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n\tthis.seqof(RelativeDistinguishedName);\n});\n\nvar Name = asn.define('Name', function () {\n\tthis.choice({\n\t\trdnSequence: this.use(RDNSequence)\n\t});\n});\n\nvar Validity = asn.define('Validity', function () {\n\tthis.seq().obj(\n\t\tthis.key('notBefore').use(Time),\n\t\tthis.key('notAfter').use(Time)\n\t);\n});\n\nvar Extension = asn.define('Extension', function () {\n\tthis.seq().obj(\n\t\tthis.key('extnID').objid(),\n\t\tthis.key('critical').bool().def(false),\n\t\tthis.key('extnValue').octstr()\n\t);\n});\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('version').explicit(0)['int']().optional(),\n\t\tthis.key('serialNumber')['int'](),\n\t\tthis.key('signature').use(AlgorithmIdentifier),\n\t\tthis.key('issuer').use(Name),\n\t\tthis.key('validity').use(Validity),\n\t\tthis.key('subject').use(Name),\n\t\tthis.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n\t\tthis.key('issuerUniqueID').implicit(1).bitstr().optional(),\n\t\tthis.key('subjectUniqueID').implicit(2).bitstr().optional(),\n\t\tthis.key('extensions').explicit(3).seqof(Extension).optional()\n\t);\n});\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('tbsCertificate').use(TBSCertificate),\n\t\tthis.key('signatureAlgorithm').use(AlgorithmIdentifier),\n\t\tthis.key('signatureValue').bitstr()\n\t);\n});\n\nmodule.exports = X509Certificate;\n",
    "// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n'use strict';\n\nvar asn1 = require('asn1.js');\n\nexports.certificate = require('./certificate');\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int'](),\n\t\tthis.key('privateExponent')['int'](),\n\t\tthis.key('prime1')['int'](),\n\t\tthis.key('prime2')['int'](),\n\t\tthis.key('exponent1')['int'](),\n\t\tthis.key('exponent2')['int'](),\n\t\tthis.key('coefficient')['int']()\n\t);\n});\nexports.RSAPrivateKey = RSAPrivateKey;\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int']()\n\t);\n});\nexports.RSAPublicKey = RSAPublicKey;\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('none').null_().optional(),\n\t\tthis.key('curve').objid().optional(),\n\t\tthis.key('params').seq().obj(\n\t\t\tthis.key('p')['int'](),\n\t\t\tthis.key('q')['int'](),\n\t\t\tthis.key('g')['int']()\n\t\t).optional()\n\t);\n});\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\nexports.PublicKey = PublicKey;\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\nexports.PrivateKey = PrivateKeyInfo;\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').seq().obj(\n\t\t\tthis.key('id').objid(),\n\t\t\tthis.key('decrypt').seq().obj(\n\t\t\t\tthis.key('kde').seq().obj(\n\t\t\t\t\tthis.key('id').objid(),\n\t\t\t\t\tthis.key('kdeparams').seq().obj(\n\t\t\t\t\t\tthis.key('salt').octstr(),\n\t\t\t\t\t\tthis.key('iters')['int']()\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tthis.key('cipher').seq().obj(\n\t\t\t\t\tthis.key('algo').objid(),\n\t\t\t\t\tthis.key('iv').octstr()\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('p')['int'](),\n\t\tthis.key('q')['int'](),\n\t\tthis.key('g')['int'](),\n\t\tthis.key('pub_key')['int'](),\n\t\tthis.key('priv_key')['int']()\n\t);\n});\nexports.DSAPrivateKey = DSAPrivateKey;\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n\tthis['int']();\n});\n\nvar ECParameters = asn1.define('ECParameters', function () {\n\tthis.choice({\n\t\tnamedCurve: this.objid()\n\t});\n});\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('privateKey').octstr(),\n\t\tthis.key('parameters').optional().explicit(0).use(ECParameters),\n\t\tthis.key('publicKey').optional().explicit(1).bitstr()\n\t);\n});\nexports.ECPrivateKey = ECPrivateKey;\n\nexports.signature = asn1.define('signature', function () {\n\tthis.seq().obj(\n\t\tthis.key('r')['int'](),\n\t\tthis.key('s')['int']()\n\t);\n});\n",
    "'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nvar useUint8Array = typeof Uint8Array !== 'undefined'\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined' &&\n  typeof Uint8Array !== 'undefined' &&\n  ArrayBuffer.isView &&\n  (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT)\n\nfunction toBuffer (data, encoding) {\n  // No need to do anything for exact instance\n  // This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n  if (data instanceof Buffer) return data\n\n  // Convert strings to Buffer\n  if (typeof data === 'string') return Buffer.from(data, encoding)\n\n  /*\n   * Wrap any TypedArray instances and DataViews\n   * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n   */\n  if (useArrayBuffer && ArrayBuffer.isView(data)) {\n    if (data.byteLength === 0) return Buffer.alloc(0) // Bug in Node.js <6.3.1, which treats this as out-of-bounds\n    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n    // Recheck result size, as offset/length doesn't work on Node.js <5.10\n    // We just go to Uint8Array case if this fails\n    if (res.byteLength === data.byteLength) return res\n  }\n\n  /*\n   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n   * Doesn't make sense with other TypedArray instances\n   */\n  if (useUint8Array && data instanceof Uint8Array) return Buffer.from(data)\n\n  /*\n   * Old Buffer polyfill on an engine that doesn't have TypedArray support\n   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n   * Convert to our current Buffer implementation\n   */\n  if (\n    Buffer.isBuffer(data) &&\n    data.constructor &&\n    typeof data.constructor.isBuffer === 'function' &&\n    data.constructor.isBuffer(data)\n  ) {\n    return Buffer.from(data)\n  }\n\n  throw new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n\n  data = toBuffer(data, encoding) // asserts correct input type\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n",
    "'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n",
    "var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n",
    "var crypto = require('crypto')\n\nexports.createCipher = exports.Cipher = crypto.createCipher\nexports.createCipheriv = exports.Cipheriv = crypto.createCipheriv\nexports.createDecipher = exports.Decipher = crypto.createDecipher\nexports.createDecipheriv = exports.Decipheriv = crypto.createDecipheriv\nexports.listCiphers = exports.getCiphers = crypto.getCiphers\n",
    "'use strict';\n\n// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m;\nvar evp = require('evp_bytestokey');\nvar ciphers = require('browserify-aes');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = function (okey, password) {\n\tvar key = okey.toString();\n\tvar match = key.match(findProc);\n\tvar decrypted;\n\tif (!match) {\n\t\tvar match2 = key.match(fullRegex);\n\t\tdecrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n\t} else {\n\t\tvar suite = 'aes' + match[1];\n\t\tvar iv = Buffer.from(match[2], 'hex');\n\t\tvar cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n\t\tvar cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n\t\tvar out = [];\n\t\tvar cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n\t\tout.push(cipher.update(cipherText));\n\t\tout.push(cipher['final']());\n\t\tdecrypted = Buffer.concat(out);\n\t}\n\tvar tag = key.match(startRegex)[1];\n\treturn {\n\t\ttag: tag,\n\t\tdata: decrypted\n\t};\n};\n",
    "'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction decrypt(data, password) {\n\tvar salt = data.algorithm.decrypt.kde.kdeparams.salt;\n\tvar iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n\tvar algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n\tvar iv = data.algorithm.decrypt.cipher.iv;\n\tvar cipherText = data.subjectPrivateKey;\n\tvar keylen = parseInt(algo.split('-')[1], 10) / 8;\n\tvar key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n\tvar cipher = ciphers.createDecipheriv(algo, key, iv);\n\tvar out = [];\n\tout.push(cipher.update(cipherText));\n\tout.push(cipher['final']());\n\treturn Buffer.concat(out);\n}\n\nfunction parseKeys(buffer) {\n\tvar password;\n\tif (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n\t\tpassword = buffer.passphrase;\n\t\tbuffer = buffer.key;\n\t}\n\tif (typeof buffer === 'string') {\n\t\tbuffer = Buffer.from(buffer);\n\t}\n\n\tvar stripped = fixProc(buffer, password);\n\n\tvar type = stripped.tag;\n\tvar data = stripped.data;\n\tvar subtype, ndata;\n\tswitch (type) {\n\t\tcase 'CERTIFICATE':\n\t\t\tndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n\t\t\t// falls through\n\t\tcase 'PUBLIC KEY':\n\t\t\tif (!ndata) {\n\t\t\t\tndata = asn1.PublicKey.decode(data, 'der');\n\t\t\t}\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\tndata.subjectPrivateKey = ndata.subjectPublicKey;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'ec',\n\t\t\t\t\t\tdata: ndata\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tdata: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'ENCRYPTED PRIVATE KEY':\n\t\t\tdata = asn1.EncryptedPrivateKey.decode(data, 'der');\n\t\t\tdata = decrypt(data, password);\n\t\t\t// falls through\n\t\tcase 'PRIVATE KEY':\n\t\t\tndata = asn1.PrivateKey.decode(data, 'der');\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcurve: ndata.algorithm.curve,\n\t\t\t\t\t\tprivateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tparams: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'RSA PUBLIC KEY':\n\t\t\treturn asn1.RSAPublicKey.decode(data, 'der');\n\t\tcase 'RSA PRIVATE KEY':\n\t\t\treturn asn1.RSAPrivateKey.decode(data, 'der');\n\t\tcase 'DSA PRIVATE KEY':\n\t\t\treturn {\n\t\t\t\ttype: 'dsa',\n\t\t\t\tparams: asn1.DSAPrivateKey.decode(data, 'der')\n\t\t\t};\n\t\tcase 'EC PRIVATE KEY':\n\t\t\tdata = asn1.ECPrivateKey.decode(data, 'der');\n\t\t\treturn {\n\t\t\t\tcurve: data.parameters.value,\n\t\t\t\tprivateKey: data.privateKey\n\t\t\t};\n\t\tdefault: throw new Error('unknown key type ' + type);\n\t}\n}\nparseKeys.signature = asn1.signature;\n\nmodule.exports = parseKeys;\n",
    "var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n",
    "module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n",
    "var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n",
    "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",
    "'use strict';\n\nvar BN = require('bn.js');\nvar randomBytes = require('randombytes');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction getr(priv) {\n\tvar len = priv.modulus.byteLength();\n\tvar r;\n\tdo {\n\t\tr = new BN(randomBytes(len));\n\t} while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));\n\treturn r;\n}\n\nfunction blind(priv) {\n\tvar r = getr(priv);\n\tvar blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();\n\treturn { blinder: blinder, unblinder: r.invm(priv.modulus) };\n}\n\nfunction crt(msg, priv) {\n\tvar blinds = blind(priv);\n\tvar len = priv.modulus.byteLength();\n\tvar blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);\n\tvar c1 = blinded.toRed(BN.mont(priv.prime1));\n\tvar c2 = blinded.toRed(BN.mont(priv.prime2));\n\tvar qinv = priv.coefficient;\n\tvar p = priv.prime1;\n\tvar q = priv.prime2;\n\tvar m1 = c1.redPow(priv.exponent1).fromRed();\n\tvar m2 = c2.redPow(priv.exponent2).fromRed();\n\tvar h = m1.isub(m2).imul(qinv).umod(p).imul(q);\n\treturn m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);\n}\ncrt.getr = getr;\n\nmodule.exports = crt;\n",
    "var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n",
    "var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n",
    "exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n",
    "var crypto = require('crypto')\nif (typeof crypto.publicEncrypt !== 'function') {\n  crypto = require('./browser')\n}\nexports.publicEncrypt = crypto.publicEncrypt\nexports.privateDecrypt = crypto.privateDecrypt\n\nif (typeof crypto.privateEncrypt !== 'function') {\n  exports.privateEncrypt = require('./browser').privateEncrypt\n} else {\n  exports.privateEncrypt = crypto.privateEncrypt\n}\n\nif (typeof crypto.publicDecrypt !== 'function') {\n  exports.publicDecrypt = require('./browser').publicDecrypt\n} else {\n  exports.publicDecrypt = crypto.publicDecrypt\n}\n",
    "'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n",
    "var crypto = require('crypto')\nif (typeof crypto.randomFill === 'function' && typeof crypto.randomFillSync === 'function') {\n  exports.randomFill = crypto.randomFill\n  exports.randomFillSync = crypto.randomFillSync\n} else {\n  module.exports = require('./browser')\n}\n",
    "'use strict';\n\n// eslint-disable-next-line no-multi-assign\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes');\n\n// eslint-disable-next-line no-multi-assign\nexports.createHash = exports.Hash = require('create-hash');\n\n// eslint-disable-next-line no-multi-assign\nexports.createHmac = exports.Hmac = require('create-hmac');\n\nvar algos = require('browserify-sign/algos');\nvar algoKeys = Object.keys(algos);\nvar hashes = [\n\t'sha1',\n\t'sha224',\n\t'sha256',\n\t'sha384',\n\t'sha512',\n\t'md5',\n\t'rmd160'\n].concat(algoKeys);\n\nexports.getHashes = function () {\n\treturn hashes;\n};\n\nvar p = require('pbkdf2');\nexports.pbkdf2 = p.pbkdf2;\nexports.pbkdf2Sync = p.pbkdf2Sync;\n\nvar aes = require('browserify-cipher');\n\nexports.Cipher = aes.Cipher;\nexports.createCipher = aes.createCipher;\nexports.Cipheriv = aes.Cipheriv;\nexports.createCipheriv = aes.createCipheriv;\nexports.Decipher = aes.Decipher;\nexports.createDecipher = aes.createDecipher;\nexports.Decipheriv = aes.Decipheriv;\nexports.createDecipheriv = aes.createDecipheriv;\nexports.getCiphers = aes.getCiphers;\nexports.listCiphers = aes.listCiphers;\n\nvar dh = require('diffie-hellman');\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup;\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;\nexports.getDiffieHellman = dh.getDiffieHellman;\nexports.createDiffieHellman = dh.createDiffieHellman;\nexports.DiffieHellman = dh.DiffieHellman;\n\nvar sign = require('browserify-sign');\n\nexports.createSign = sign.createSign;\nexports.Sign = sign.Sign;\nexports.createVerify = sign.createVerify;\nexports.Verify = sign.Verify;\n\nexports.createECDH = require('create-ecdh');\n\nvar publicEncrypt = require('public-encrypt');\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt;\nexports.privateEncrypt = publicEncrypt.privateEncrypt;\nexports.publicDecrypt = publicEncrypt.publicDecrypt;\nexports.privateDecrypt = publicEncrypt.privateDecrypt;\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// [\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error('sorry, ' + name + ' is not implemented yet\\nwe accept pull requests\\nhttps://github.com/browserify/crypto-browserify');\n//   };\n// });\n\nvar rf = require('randomfill');\n\nexports.randomFill = rf.randomFill;\nexports.randomFillSync = rf.randomFillSync;\n\nexports.createCredentials = function () {\n\tthrow new Error('sorry, createCredentials is not implemented yet\\nwe accept pull requests\\nhttps://github.com/browserify/crypto-browserify');\n};\n\nexports.constants = {\n\tDH_CHECK_P_NOT_SAFE_PRIME: 2,\n\tDH_CHECK_P_NOT_PRIME: 1,\n\tDH_UNABLE_TO_CHECK_GENERATOR: 4,\n\tDH_NOT_SUITABLE_GENERATOR: 8,\n\tNPN_ENABLED: 1,\n\tALPN_ENABLED: 1,\n\tRSA_PKCS1_PADDING: 1,\n\tRSA_SSLV23_PADDING: 2,\n\tRSA_NO_PADDING: 3,\n\tRSA_PKCS1_OAEP_PADDING: 4,\n\tRSA_X931_PADDING: 5,\n\tRSA_PKCS1_PSS_PADDING: 6,\n\tPOINT_CONVERSION_COMPRESSED: 2,\n\tPOINT_CONVERSION_UNCOMPRESSED: 4,\n\tPOINT_CONVERSION_HYBRID: 6\n};\n",
    "/**\n * Defines a custom type UUID representing a universally unique identifier\n */\nexport type UUID = `${string}-${string}-${string}-${string}-${string}`;\n\n/**\n * Helper function to safely cast a string to strongly typed UUID\n * @param id The string UUID to validate and cast\n * @returns The same UUID with branded type information\n */\nexport function asUUID(id: string): UUID {\n  if (!id || !/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(id)) {\n    throw new Error(`Invalid UUID format: ${id}`);\n  }\n  return id as UUID;\n}\n\n/**\n * Represents the content of a memory, message, or other information\n */\nexport interface Content {\n  /** The agent's internal thought process */\n  thought?: string;\n\n  /** The main text content visible to users */\n  text?: string;\n\n  /** Optional actions to be performed */\n  actions?: string[];\n\n  /** Optional providers to use for context generation */\n  providers?: string[];\n\n  /** Optional source/origin of the content */\n  source?: string;\n\n  /** Optional target/destination for responses */\n  target?: string;\n\n  /** URL of the original message/post (e.g. tweet URL, Discord message link) */\n  url?: string;\n\n  /** UUID of parent message if this is a reply/thread */\n  inReplyTo?: UUID;\n\n  /** Array of media attachments */\n  attachments?: Media[];\n\n  /** room type */\n  channelType?: string;\n\n  /**\n   * Additional dynamic properties\n   * Use specific properties above instead of this when possible\n   */\n  [key: string]: unknown;\n}\n\n/**\n * Represents a media attachment\n */\nexport type Media = {\n  /** Unique identifier */\n  id: string;\n\n  /** Media URL */\n  url: string;\n\n  /** Media title */\n  title?: string;\n\n  /** Media source */\n  source?: string;\n\n  /** Media description */\n  description?: string;\n\n  /** Text content */\n  text?: string;\n\n  /** Content type */\n  contentType?: ContentType;\n};\n\nexport enum ContentType {\n  IMAGE = 'image',\n  VIDEO = 'video',\n  AUDIO = 'audio',\n  DOCUMENT = 'document',\n  LINK = 'link',\n}\n\n/**\n * A generic type for metadata objects, allowing for arbitrary key-value pairs.\n * This encourages consumers to perform type checking or casting.\n */\nexport type Metadata = Record<string, unknown>;\n",
    "import type { Content, UUID } from './primitives';\n\n/**\n * Memory type enumeration for built-in memory types\n */\nexport type MemoryTypeAlias = string;\n\n/**\n * Enumerates the built-in types of memories that can be stored and retrieved.\n * - `DOCUMENT`: Represents a whole document or a large piece of text.\n * - `FRAGMENT`: A chunk or segment of a `DOCUMENT`, often created for embedding and search.\n * - `MESSAGE`: A conversational message, typically from a user or the agent.\n * - `DESCRIPTION`: A descriptive piece of information, perhaps about an entity or concept.\n * - `CUSTOM`: For any other type of memory not covered by the built-in types.\n * This enum is used in `MemoryMetadata` to categorize memories and influences how they are processed or queried.\n */\nexport enum MemoryType {\n  DOCUMENT = 'document',\n  FRAGMENT = 'fragment',\n  MESSAGE = 'message',\n  DESCRIPTION = 'description',\n  CUSTOM = 'custom',\n}\n/**\n * Defines the scope of a memory, indicating its visibility and accessibility.\n * - `shared`: The memory is accessible to multiple entities or across different contexts (e.g., a public fact).\n * - `private`: The memory is specific to a single entity or a private context (e.g., a user's personal preference).\n * - `room`: The memory is scoped to a specific room or channel.\n * This is used in `MemoryMetadata` to control how memories are stored and retrieved based on context.\n */\nexport type MemoryScope = 'shared' | 'private' | 'room';\n\n/**\n * Base interface for all memory metadata types.\n * It includes common properties for all memories, such as:\n * - `type`: The kind of memory (e.g., `MemoryType.MESSAGE`, `MemoryType.DOCUMENT`).\n * - `source`: An optional string indicating the origin of the memory (e.g., 'discord', 'user_input').\n * - `sourceId`: An optional UUID linking to a source entity or object.\n * - `scope`: The visibility scope of the memory (`shared`, `private`, or `room`).\n * - `timestamp`: An optional numerical timestamp (e.g., milliseconds since epoch) of when the memory was created or relevant.\n * - `tags`: Optional array of strings for categorizing or filtering memories.\n * Specific metadata types like `DocumentMetadata` or `MessageMetadata` extend this base.\n */\nexport interface BaseMetadata {\n  type: MemoryTypeAlias;\n  source?: string;\n  sourceId?: UUID;\n  scope?: MemoryScope;\n  timestamp?: number;\n  tags?: string[];\n}\n\nexport interface DocumentMetadata extends BaseMetadata {\n  type: MemoryType.DOCUMENT;\n}\n\nexport interface FragmentMetadata extends BaseMetadata {\n  type: MemoryType.FRAGMENT;\n  documentId: UUID;\n  position: number;\n}\n\nexport interface MessageMetadata extends BaseMetadata {\n  type: MemoryType.MESSAGE;\n}\n\nexport interface DescriptionMetadata extends BaseMetadata {\n  type: MemoryType.DESCRIPTION;\n}\n\nexport interface CustomMetadata extends BaseMetadata {\n  [key: string]: unknown;\n}\n\nexport type MemoryMetadata =\n  | DocumentMetadata\n  | FragmentMetadata\n  | MessageMetadata\n  | DescriptionMetadata\n  | CustomMetadata;\n\n/**\n * Represents a stored memory/message\n */\nexport interface Memory {\n  /** Optional unique identifier */\n  id?: UUID;\n\n  /** Associated user ID */\n  entityId: UUID;\n\n  /** Associated agent ID */\n  agentId?: UUID;\n\n  /** Optional creation timestamp in milliseconds since epoch */\n  createdAt?: number;\n\n  /** Memory content */\n  content: Content;\n\n  /** Optional embedding vector for semantic search */\n  embedding?: number[];\n\n  /** Associated room ID */\n  roomId: UUID;\n\n  /** Associated world ID (optional) */\n  worldId?: UUID;\n\n  /** Whether memory is unique (used to prevent duplicates) */\n  unique?: boolean;\n\n  /** Embedding similarity score (set when retrieved via search) */\n  similarity?: number;\n\n  /** Metadata for the memory */\n  metadata?: MemoryMetadata;\n}\n\n/**\n * Specialized memory type for messages with enhanced type checking\n */\nexport interface MessageMemory extends Memory {\n  metadata: MessageMetadata;\n  content: Content & {\n    text: string; // Message memories must have text content\n  };\n}\n\n/**\n * Factory function to create a new message memory with proper defaults\n */\nexport function createMessageMemory(params: {\n  id?: UUID;\n  entityId: UUID;\n  agentId?: UUID;\n  roomId: UUID;\n  content: Content & { text: string };\n  embedding?: number[];\n}): MessageMemory {\n  return {\n    ...params,\n    createdAt: Date.now(),\n    metadata: {\n      type: MemoryType.MESSAGE,\n      timestamp: Date.now(),\n      scope: params.agentId ? 'private' : 'shared',\n    },\n  };\n}\n\n/**\n * Type guard to check if a memory metadata is a DocumentMetadata\n * @param metadata The metadata to check\n * @returns True if the metadata is a DocumentMetadata\n */\nexport function isDocumentMetadata(metadata: MemoryMetadata): metadata is DocumentMetadata {\n  return metadata.type === MemoryType.DOCUMENT;\n}\n\n/**\n * Type guard to check if a memory metadata is a FragmentMetadata\n * @param metadata The metadata to check\n * @returns True if the metadata is a FragmentMetadata\n */\nexport function isFragmentMetadata(metadata: MemoryMetadata): metadata is FragmentMetadata {\n  return metadata.type === MemoryType.FRAGMENT;\n}\n\n/**\n * Type guard to check if a memory metadata is a MessageMetadata\n * @param metadata The metadata to check\n * @returns True if the metadata is a MessageMetadata\n */\nexport function isMessageMetadata(metadata: MemoryMetadata): metadata is MessageMetadata {\n  return metadata.type === MemoryType.MESSAGE;\n}\n\n/**\n * Type guard to check if a memory metadata is a DescriptionMetadata\n * @param metadata The metadata to check\n * @returns True if the metadata is a DescriptionMetadata\n */\nexport function isDescriptionMetadata(metadata: MemoryMetadata): metadata is DescriptionMetadata {\n  return metadata.type === MemoryType.DESCRIPTION;\n}\n\n/**\n * Type guard to check if a memory metadata is a CustomMetadata\n * @param metadata The metadata to check\n * @returns True if the metadata is a CustomMetadata\n */\nexport function isCustomMetadata(metadata: MemoryMetadata): metadata is CustomMetadata {\n  return (\n    metadata.type !== MemoryType.DOCUMENT &&\n    metadata.type !== MemoryType.FRAGMENT &&\n    metadata.type !== MemoryType.MESSAGE &&\n    metadata.type !== MemoryType.DESCRIPTION\n  );\n}\n\n/**\n * Memory type guard for document memories\n */\nexport function isDocumentMemory(\n  memory: Memory\n): memory is Memory & { metadata: DocumentMetadata } {\n  return memory.metadata?.type === MemoryType.DOCUMENT;\n}\n\n/**\n * Memory type guard for fragment memories\n */\nexport function isFragmentMemory(\n  memory: Memory\n): memory is Memory & { metadata: FragmentMetadata } {\n  return memory.metadata?.type === MemoryType.FRAGMENT;\n}\n\n/**\n * Safely access the text content of a memory\n * @param memory The memory to extract text from\n * @param defaultValue Optional default value if no text is found\n * @returns The text content or default value\n */\nexport function getMemoryText(memory: Memory, defaultValue = ''): string {\n  return memory.content.text ?? defaultValue;\n}\n",
    "import type { MemoryMetadata } from './memory';\nimport type { Content, UUID } from './primitives';\n\n/**\n * Represents a single item of knowledge that can be processed and stored by the agent.\n * Knowledge items consist of content (text and optional structured data) and metadata.\n * These items are typically added to the agent's knowledge base via `AgentRuntime.addKnowledge`\n * and retrieved using `AgentRuntime.getKnowledge`.\n * The `id` is a unique identifier for the knowledge item, often derived from its source or content.\n */\nexport type KnowledgeItem = {\n  /** A Universally Unique Identifier for this specific knowledge item. */\n  id: UUID;\n  /** The actual content of the knowledge item, which must include text and can have other fields. */\n  content: Content;\n  /** Optional metadata associated with this knowledge item, conforming to `MemoryMetadata`. */\n  metadata?: MemoryMetadata;\n};\n\n/**\n * Defines the scope or visibility of knowledge items within the agent's system.\n * - `SHARED`: Indicates knowledge that is broadly accessible, potentially across different agents or users if the system architecture permits.\n * - `PRIVATE`: Indicates knowledge that is restricted, typically to the specific agent or user context it belongs to.\n * This enum is used to manage access and retrieval of knowledge items, often in conjunction with `AgentRuntime.addKnowledge` or `AgentRuntime.getKnowledge` scopes.\n */\nexport enum KnowledgeScope {\n  SHARED = 'shared',\n  PRIVATE = 'private',\n}\n\n/**\n * Specifies prefixes for keys used in caching mechanisms, helping to namespace cached data.\n * For example, `KNOWLEDGE` might be used to prefix keys for cached knowledge embeddings or processed documents.\n * This helps in organizing the cache and avoiding key collisions.\n * Used internally by caching strategies, potentially within `IDatabaseAdapter` cache methods or runtime caching layers.\n */\nexport enum CacheKeyPrefix {\n  KNOWLEDGE = 'knowledge',\n}\n\n/**\n * Represents an item within a directory listing, specifically for knowledge loading.\n * When an agent's `Character.knowledge` configuration includes a directory, this type\n * is used to specify the path to that directory and whether its contents should be treated as shared.\n * - `directory`: The path to the directory containing knowledge files.\n * - `shared`: An optional boolean (defaults to false) indicating if the knowledge from this directory is considered shared or private.\n */\nexport interface DirectoryItem {\n  /** The path to the directory containing knowledge files. */\n  directory: string;\n  /** If true, knowledge from this directory is considered shared; otherwise, it's private. Defaults to false. */\n  shared?: boolean;\n}\n\n/**\n * Represents a row structure, typically from a database query related to text chunking or processing.\n * This interface is quite minimal and seems to be a placeholder or a base for more specific chunk-related types.\n * The `id` would be the unique identifier for the chunk.\n * It might be used when splitting large documents into smaller, manageable pieces for embedding or analysis.\n */\nexport interface ChunkRow {\n  /** The unique identifier for this chunk of text. */\n  id: string;\n  // Add other properties if needed\n}\n",
    "import type { Metadata, UUID } from './primitives';\n\nexport interface Component {\n  id: UUID;\n  entityId: UUID;\n  agentId: UUID;\n  roomId: UUID;\n  worldId: UUID;\n  sourceEntityId: UUID;\n  type: string;\n  createdAt: number;\n  data: Metadata;\n}\n\n/**\n * Represents a user account\n */\nexport interface Entity {\n  /** Unique identifier, optional on creation */\n  id?: UUID;\n\n  /** Names of the entity */\n  names: string[];\n\n  /** Additional metadata */\n  metadata: Metadata;\n\n  /** Agent ID this account is related to, for agents should be themselves */\n  agentId: UUID;\n\n  /** Optional array of components */\n  components?: Component[];\n}\n\n/**\n * Defines roles within a system, typically for access control or permissions, often within a `World`.\n * - `OWNER`: Represents the highest level of control, typically the creator or primary administrator.\n * - `ADMIN`: Represents administrative privileges, usually a subset of owner capabilities.\n * - `NONE`: Indicates no specific role or default, minimal permissions.\n * These roles are often used in `World.metadata.roles` to assign roles to entities.\n */\nexport enum Role {\n  OWNER = 'OWNER',\n  ADMIN = 'ADMIN',\n  NONE = 'NONE',\n}\n\nexport type World = {\n  id: UUID;\n  name?: string;\n  agentId: UUID;\n  serverId: string;\n  metadata?: {\n    ownership?: {\n      ownerId: string;\n    };\n    roles?: {\n      [entityId: UUID]: Role;\n    };\n    [key: string]: unknown;\n  };\n};\n\nexport enum ChannelType {\n  SELF = 'SELF', // Messages to self\n  DM = 'DM', // Direct messages between two participants\n  GROUP = 'GROUP', // Group messages with multiple participants\n  VOICE_DM = 'VOICE_DM', // Voice direct messages\n  VOICE_GROUP = 'VOICE_GROUP', // Voice channels with multiple participants\n  FEED = 'FEED', // Social media feed\n  THREAD = 'THREAD', // Threaded conversation\n  WORLD = 'WORLD', // World channel\n  FORUM = 'FORUM', // Forum discussion\n  // Legacy types - kept for backward compatibility but should be replaced\n  API = 'API', // @deprecated - Use DM or GROUP instead\n}\n\nexport type Room = {\n  id: UUID;\n  name?: string;\n  agentId?: UUID;\n  source: string;\n  type: ChannelType;\n  channelId?: string;\n  serverId?: string;\n  worldId?: UUID;\n  metadata?: Metadata;\n};\n\nexport type RoomMetadata = {\n  [key: string]: unknown;\n};\n\n/**\n * Room participant with account details\n */\nexport interface Participant {\n  /** Unique identifier */\n  id: UUID;\n\n  /** Associated account */\n  entity: Entity;\n}\n\n/**\n * Represents a relationship between users\n */\nexport interface Relationship {\n  /** Unique identifier */\n  id: UUID;\n\n  /** First user ID */\n  sourceEntityId: UUID;\n\n  /** Second user ID */\n  targetEntityId: UUID;\n\n  /** Agent ID */\n  agentId: UUID;\n\n  /** Tags for filtering/categorizing relationships */\n  tags: string[];\n\n  /** Additional metadata about the relationship */\n  metadata: Metadata;\n\n  /** Optional creation timestamp */\n  createdAt?: string;\n}\n",
    "import type { DirectoryItem } from './knowledge';\nimport type { Content, UUID } from './primitives';\nimport type { State } from './state';\n\n/**\n * Example message for demonstration\n */\nexport interface MessageExample {\n  /** Associated user */\n  name: string;\n\n  /** Message content */\n  content: Content;\n}\n\nexport type TemplateType =\n  | string\n  | ((options: { state: State | { [key: string]: string } }) => string);\n\n/**\n * Configuration for an agent's character, defining its personality, knowledge, and capabilities.\n * This is a central piece of an agent's definition, used by the `AgentRuntime` to initialize and operate the agent.\n * It includes:\n * - `id`: Optional unique identifier for the character.\n * - `name`, `username`: Identifying names for the character.\n * - `system`: A system prompt that guides the agent's overall behavior.\n * - `templates`: A map of prompt templates for various situations (e.g., message generation, summarization).\n * - `bio`: A textual biography or description of the character.\n * - `messageExamples`, `postExamples`: Examples of how the character communicates.\n * - `topics`, `adjectives`: Keywords describing the character's knowledge areas and traits.\n * - `knowledge`: Paths to knowledge files or directories to be loaded into the agent's memory.\n * - `plugins`: A list of plugin names to be loaded for this character.\n * - `settings`, `secrets`: Configuration key-value pairs, with secrets being handled more securely.\n * - `style`: Guidelines for the character's writing style in different contexts (chat, post).\n */\nexport interface Character {\n  /** Optional unique identifier */\n  id?: UUID;\n\n  /** Character name */\n  name: string;\n\n  /** Optional username */\n  username?: string;\n\n  /** Optional system prompt */\n  system?: string;\n\n  /** Optional prompt templates */\n  templates?: {\n    [key: string]: TemplateType;\n  };\n\n  /** Character biography */\n  bio: string | string[];\n\n  /** Example messages */\n  messageExamples?: MessageExample[][];\n\n  /** Example posts */\n  postExamples?: string[];\n\n  /** Known topics */\n  topics?: string[];\n\n  /** Character traits */\n  adjectives?: string[];\n\n  /** Optional knowledge base */\n  knowledge?: (string | { path: string; shared?: boolean } | DirectoryItem)[];\n\n  /** Available plugins */\n  plugins?: string[];\n\n  /** Optional configuration */\n  settings?: {\n    [key: string]: string | boolean | number | Record<string, any>;\n  };\n\n  /** Optional secrets */\n  secrets?: {\n    [key: string]: string | boolean | number;\n  };\n\n  /** Writing style guides */\n  style?: {\n    all?: string[];\n    chat?: string[];\n    post?: string[];\n  };\n}\n\nexport enum AgentStatus {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\n\n/**\n * Represents an operational agent, extending the `Character` definition with runtime status and timestamps.\n * While `Character` defines the blueprint, `Agent` represents an instantiated and potentially running version.\n * It includes:\n * - `enabled`: A boolean indicating if the agent is currently active or disabled.\n * - `status`: The current operational status, typically `AgentStatus.ACTIVE` or `AgentStatus.INACTIVE`.\n * - `createdAt`, `updatedAt`: Timestamps for when the agent record was created and last updated in the database.\n * This interface is primarily used by the `IDatabaseAdapter` for agent management.\n */\nexport interface Agent extends Character {\n  enabled?: boolean;\n  status?: AgentStatus;\n  createdAt: number;\n  updatedAt: number;\n}\n",
    "import type { Memory } from './memory';\nimport type { Content } from './primitives';\nimport type { IAgentRuntime } from './runtime';\nimport type { State } from './state';\n\n/**\n * Example content with associated user for demonstration purposes\n */\nexport interface ActionExample {\n  /** User associated with the example */\n  name: string;\n\n  /** Content of the example */\n  content: Content;\n}\n\n/**\n * Callback function type for handlers\n */\nexport type HandlerCallback = (response: Content, files?: any) => Promise<Memory[]>;\n\n/**\n * Handler function type for processing messages\n */\nexport type Handler = (\n  runtime: IAgentRuntime,\n  message: Memory,\n  state?: State,\n  options?: { [key: string]: unknown },\n  callback?: HandlerCallback,\n  responses?: Memory[]\n) => Promise<ActionResult | void | undefined>;\n\n/**\n * Validator function type for actions/evaluators\n */\nexport type Validator = (\n  runtime: IAgentRuntime,\n  message: Memory,\n  state?: State\n) => Promise<boolean>;\n\n/**\n * Represents an action the agent can perform\n */\nexport interface Action {\n  /** Similar action descriptions */\n  similes?: string[];\n\n  /** Detailed description */\n  description: string;\n\n  /** Example usages */\n  examples?: ActionExample[][];\n\n  /** Handler function */\n  handler: Handler;\n\n  /** Action name */\n  name: string;\n\n  /** Validation function */\n  validate: Validator;\n}\n\n/**\n * Example for evaluating agent behavior\n */\nexport interface EvaluationExample {\n  /** Evaluation context */\n  prompt: string;\n\n  /** Example messages */\n  messages: Array<ActionExample>;\n\n  /** Expected outcome */\n  outcome: string;\n}\n\n/**\n * Evaluator for assessing agent responses\n */\nexport interface Evaluator {\n  /** Whether to always run */\n  alwaysRun?: boolean;\n\n  /** Detailed description */\n  description: string;\n\n  /** Similar evaluator descriptions */\n  similes?: string[];\n\n  /** Example evaluations */\n  examples: EvaluationExample[];\n\n  /** Handler function */\n  handler: Handler;\n\n  /** Evaluator name */\n  name: string;\n\n  /** Validation function */\n  validate: Validator;\n}\n\nexport interface ProviderResult {\n  values?: {\n    [key: string]: any;\n  };\n  data?: {\n    [key: string]: any;\n  };\n  text?: string;\n}\n\n/**\n * Provider for external data/services\n */\nexport interface Provider {\n  /** Provider name */\n  name: string;\n\n  /** Description of the provider */\n  description?: string;\n\n  /** Whether the provider is dynamic */\n  dynamic?: boolean;\n\n  /** Position of the provider in the provider list, positive or negative */\n  position?: number;\n\n  /**\n   * Whether the provider is private\n   *\n   * Private providers are not displayed in the regular provider list, they have to be called explicitly\n   */\n  private?: boolean;\n\n  /** Data retrieval function */\n  get: (runtime: IAgentRuntime, message: Memory, state: State) => Promise<ProviderResult>;\n}\n\n/**\n * Result returned by an action after execution\n * Used for action chaining and state management\n */\nexport interface ActionResult {\n  /** Optional text description of the result */\n  text?: string;\n\n  /** Values to merge into the state */\n  values?: Record<string, any>;\n\n  /** Data payload containing action-specific results */\n  data?: Record<string, any>;\n\n  /** Whether the action succeeded - defaults to true */\n  success: boolean;\n\n  /** Error information if the action failed */\n  error?: string | Error;\n}\n\n/**\n * Context provided to actions during execution\n * Allows actions to access previous results and update state\n */\nexport interface ActionContext {\n  /** Results from previously executed actions in this run */\n  previousResults: ActionResult[];\n\n  /** Get a specific previous result by action name */\n  getPreviousResult?: (actionName: string) => ActionResult | undefined;\n}\n\n/**\n * Helper function to create ActionResult with proper defaults\n */\nexport function createActionResult(partial: Partial<ActionResult> = {}): ActionResult {\n  return {\n    success: true, // Default to success\n    ...partial,\n  };\n}\n",
    "import type { Metadata } from './primitives';\nimport type { IAgentRuntime } from './runtime';\n\n/**\n * Core service type registry that can be extended by plugins via module augmentation.\n * Plugins can extend this interface to add their own service types:\n *\n * @example\n * ```typescript\n * declare module '@elizaos/core' {\n *   interface ServiceTypeRegistry {\n *     MY_CUSTOM_SERVICE: 'my_custom_service';\n *   }\n * }\n * ```\n */\nexport interface ServiceTypeRegistry {\n  TRANSCRIPTION: 'transcription';\n  VIDEO: 'video';\n  BROWSER: 'browser';\n  PDF: 'pdf';\n  REMOTE_FILES: 'aws_s3';\n  WEB_SEARCH: 'web_search';\n  EMAIL: 'email';\n  TEE: 'tee';\n  TASK: 'task';\n  WALLET: 'wallet';\n  LP_POOL: 'lp_pool';\n  TOKEN_DATA: 'token_data';\n  MESSAGE: 'message';\n  POST: 'post';\n  UNKNOWN: 'unknown';\n}\n\n/**\n * Type for service names that includes both core services and any plugin-registered services\n */\nexport type ServiceTypeName = ServiceTypeRegistry[keyof ServiceTypeRegistry];\n\n/**\n * Helper type to extract service type values from the registry\n */\nexport type ServiceTypeValue<K extends keyof ServiceTypeRegistry> = ServiceTypeRegistry[K];\n\n/**\n * Helper type to check if a service type exists in the registry\n */\nexport type IsValidServiceType<T extends string> = T extends ServiceTypeName ? true : false;\n\n/**\n * Type-safe service class definition\n */\nexport type TypedServiceClass<T extends ServiceTypeName> = {\n  new (runtime?: IAgentRuntime): Service;\n  serviceType: T;\n  start(runtime: IAgentRuntime): Promise<Service>;\n};\n\n/**\n * Map of service type names to their implementation classes\n */\nexport interface ServiceClassMap {\n  // Core services will be added here, plugins extend via module augmentation\n}\n\n/**\n * Helper to infer service instance type from service type name\n */\nexport type ServiceInstance<T extends ServiceTypeName> = T extends keyof ServiceClassMap\n  ? InstanceType<ServiceClassMap[T]>\n  : Service;\n\n/**\n * Runtime service registry type\n */\nexport type ServiceRegistry<T extends ServiceTypeName = ServiceTypeName> = Map<T, Service>;\n\n/**\n * Enumerates the recognized types of services that can be registered and used by the agent runtime.\n * Services provide specialized functionalities like audio transcription, video processing,\n * web browsing, PDF handling, file storage (e.g., AWS S3), web search, email integration,\n * secure execution via TEE (Trusted Execution Environment), and task management.\n * This constant is used in `AgentRuntime` for service registration and retrieval (e.g., `getService`).\n * Each service typically implements the `Service` abstract class or a more specific interface like `IVideoService`.\n */\nexport const ServiceType = {\n  TRANSCRIPTION: 'transcription',\n  VIDEO: 'video',\n  BROWSER: 'browser',\n  PDF: 'pdf',\n  REMOTE_FILES: 'aws_s3',\n  WEB_SEARCH: 'web_search',\n  EMAIL: 'email',\n  TEE: 'tee',\n  TASK: 'task',\n  WALLET: 'wallet',\n  LP_POOL: 'lp_pool',\n  TOKEN_DATA: 'token_data',\n  MESSAGE: 'message',\n  POST: 'post',\n  UNKNOWN: 'unknown',\n} as const satisfies ServiceTypeRegistry;\n\n/**\n * Client instance\n */\nexport abstract class Service {\n  /** Runtime instance */\n  protected runtime!: IAgentRuntime;\n\n  constructor(runtime?: IAgentRuntime) {\n    if (runtime) {\n      this.runtime = runtime;\n    }\n  }\n\n  abstract stop(): Promise<void>;\n\n  /** Service type */\n  static serviceType: string;\n\n  /** Service name */\n  abstract capabilityDescription: string;\n\n  /** Service configuration */\n  config?: Metadata;\n\n  /** Start service connection */\n  static async start(_runtime: IAgentRuntime): Promise<Service> {\n    throw new Error('Not implemented');\n  }\n\n  /** Stop service connection */\n  static async stop(_runtime: IAgentRuntime): Promise<unknown> {\n    throw new Error('Not implemented');\n  }\n}\n\n/**\n * Generic service interface that provides better type checking for services\n * @template ConfigType The configuration type for this service\n * @template ResultType The result type returned by the service operations\n */\nexport interface TypedService<ConfigType extends Metadata = Metadata, ResultType = unknown>\n  extends Service {\n  /**\n   * The configuration for this service instance\n   */\n  config?: ConfigType;\n\n  /**\n   * Process an input with this service\n   * @param input The input to process\n   * @returns A promise resolving to the result\n   */\n  process(input: unknown): Promise<ResultType>;\n}\n\n/**\n * Generic factory function to create a typed service instance\n * @param runtime The agent runtime\n * @param serviceType The type of service to get\n * @returns The service instance or null if not available\n */\nexport function getTypedService<T extends TypedService<any, any>>(\n  runtime: IAgentRuntime,\n  serviceType: ServiceTypeName\n): T | null {\n  return runtime.getService<T>(serviceType);\n}\n\n/**\n * Standardized service error type for consistent error handling\n */\nexport interface ServiceError {\n  code: string;\n  message: string;\n  details?: unknown;\n  cause?: Error;\n}\n\n/**\n * Safely create a ServiceError from any caught error\n */\nexport function createServiceError(error: unknown, code = 'UNKNOWN_ERROR'): ServiceError {\n  if (error instanceof Error) {\n    return {\n      code,\n      message: error.message,\n      cause: error,\n    };\n  }\n\n  return {\n    code,\n    message: String(error),\n  };\n}\n",
    "import type { IAgentRuntime } from './runtime';\n\nexport type ModelTypeName = (typeof ModelType)[keyof typeof ModelType] | string;\n\n/**\n * Defines the recognized types of models that the agent runtime can use.\n * These include models for text generation (small, large, reasoning, completion),\n * text embedding, tokenization (encode/decode), image generation and description,\n * audio transcription, text-to-speech, and generic object generation.\n * This constant is used throughout the system, particularly in `AgentRuntime.useModel`,\n * `AgentRuntime.registerModel`, and in `ModelParamsMap` / `ModelResultMap` to ensure\n * type safety and clarity when working with different AI models.\n * String values are used for extensibility with custom model types.\n */\nexport const ModelType = {\n  SMALL: 'TEXT_SMALL', // kept for backwards compatibility\n  MEDIUM: 'TEXT_LARGE', // kept for backwards compatibility\n  LARGE: 'TEXT_LARGE', // kept for backwards compatibility\n  TEXT_SMALL: 'TEXT_SMALL',\n  TEXT_LARGE: 'TEXT_LARGE',\n  TEXT_EMBEDDING: 'TEXT_EMBEDDING',\n  TEXT_TOKENIZER_ENCODE: 'TEXT_TOKENIZER_ENCODE',\n  TEXT_TOKENIZER_DECODE: 'TEXT_TOKENIZER_DECODE',\n  TEXT_REASONING_SMALL: 'REASONING_SMALL',\n  TEXT_REASONING_LARGE: 'REASONING_LARGE',\n  TEXT_COMPLETION: 'TEXT_COMPLETION',\n  IMAGE: 'IMAGE',\n  IMAGE_DESCRIPTION: 'IMAGE_DESCRIPTION',\n  TRANSCRIPTION: 'TRANSCRIPTION',\n  TEXT_TO_SPEECH: 'TEXT_TO_SPEECH',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  OBJECT_SMALL: 'OBJECT_SMALL',\n  OBJECT_LARGE: 'OBJECT_LARGE',\n} as const;\n\n/**\n * Model configuration setting keys used in character settings.\n * These constants define the keys for accessing model parameters\n * from character configuration with support for per-model-type settings.\n *\n * Setting Precedence (highest to lowest):\n * 1. Parameters passed directly to useModel()\n * 2. Model-specific settings (e.g., TEXT_SMALL_TEMPERATURE)\n * 3. Default settings (e.g., DEFAULT_TEMPERATURE)\n *\n * Example character settings:\n * ```\n * settings: {\n *   DEFAULT_TEMPERATURE: 0.7,              // Applies to all models\n *   TEXT_SMALL_TEMPERATURE: 0.5,           // Overrides default for TEXT_SMALL\n *   TEXT_LARGE_MAX_TOKENS: 4096,           // Specific to TEXT_LARGE\n *   OBJECT_SMALL_TEMPERATURE: 0.3,         // Specific to OBJECT_SMALL\n * }\n * ```\n */\nexport const MODEL_SETTINGS = {\n  // Default settings - apply to all model types unless overridden\n  DEFAULT_MAX_TOKENS: 'DEFAULT_MAX_TOKENS',\n  DEFAULT_TEMPERATURE: 'DEFAULT_TEMPERATURE',\n  DEFAULT_FREQUENCY_PENALTY: 'DEFAULT_FREQUENCY_PENALTY',\n  DEFAULT_PRESENCE_PENALTY: 'DEFAULT_PRESENCE_PENALTY',\n\n  // TEXT_SMALL specific settings\n  TEXT_SMALL_MAX_TOKENS: 'TEXT_SMALL_MAX_TOKENS',\n  TEXT_SMALL_TEMPERATURE: 'TEXT_SMALL_TEMPERATURE',\n  TEXT_SMALL_FREQUENCY_PENALTY: 'TEXT_SMALL_FREQUENCY_PENALTY',\n  TEXT_SMALL_PRESENCE_PENALTY: 'TEXT_SMALL_PRESENCE_PENALTY',\n\n  // TEXT_LARGE specific settings\n  TEXT_LARGE_MAX_TOKENS: 'TEXT_LARGE_MAX_TOKENS',\n  TEXT_LARGE_TEMPERATURE: 'TEXT_LARGE_TEMPERATURE',\n  TEXT_LARGE_FREQUENCY_PENALTY: 'TEXT_LARGE_FREQUENCY_PENALTY',\n  TEXT_LARGE_PRESENCE_PENALTY: 'TEXT_LARGE_PRESENCE_PENALTY',\n\n  // OBJECT_SMALL specific settings\n  OBJECT_SMALL_MAX_TOKENS: 'OBJECT_SMALL_MAX_TOKENS',\n  OBJECT_SMALL_TEMPERATURE: 'OBJECT_SMALL_TEMPERATURE',\n  OBJECT_SMALL_FREQUENCY_PENALTY: 'OBJECT_SMALL_FREQUENCY_PENALTY',\n  OBJECT_SMALL_PRESENCE_PENALTY: 'OBJECT_SMALL_PRESENCE_PENALTY',\n\n  // OBJECT_LARGE specific settings\n  OBJECT_LARGE_MAX_TOKENS: 'OBJECT_LARGE_MAX_TOKENS',\n  OBJECT_LARGE_TEMPERATURE: 'OBJECT_LARGE_TEMPERATURE',\n  OBJECT_LARGE_FREQUENCY_PENALTY: 'OBJECT_LARGE_FREQUENCY_PENALTY',\n  OBJECT_LARGE_PRESENCE_PENALTY: 'OBJECT_LARGE_PRESENCE_PENALTY',\n\n  // Legacy keys for backwards compatibility (will be treated as defaults)\n  MODEL_MAX_TOKEN: 'MODEL_MAX_TOKEN',\n  MODEL_TEMPERATURE: 'MODEL_TEMPERATURE',\n  MODEL_FREQ_PENALTY: 'MODEL_FREQ_PENALTY',\n  MODEL_PRESENCE_PENALTY: 'MODEL_PRESENCE_PENALTY',\n} as const;\n\n/**\n * Helper to get the model-specific setting key for a given model type and parameter.\n * @param modelType The model type (e.g., TEXT_SMALL, TEXT_LARGE)\n * @param param The parameter name (e.g., MAX_TOKENS, TEMPERATURE)\n * @returns The appropriate setting key or null if not a supported model type\n */\nexport function getModelSpecificSettingKey(\n  modelType: ModelTypeName,\n  param: 'MAX_TOKENS' | 'TEMPERATURE' | 'FREQUENCY_PENALTY' | 'PRESENCE_PENALTY'\n): string | null {\n  const supportedModelTypes = ['TEXT_SMALL', 'TEXT_LARGE', 'OBJECT_SMALL', 'OBJECT_LARGE'];\n\n  if (!supportedModelTypes.includes(modelType)) {\n    return null;\n  }\n\n  return `${modelType}_${param}`;\n}\n\n/**\n * Parameters for generating text using a language model.\n * This structure is typically passed to `AgentRuntime.useModel` when the `modelType` is one of\n * `ModelType.TEXT_SMALL`, `ModelType.TEXT_LARGE`, `ModelType.TEXT_REASONING_SMALL`,\n * `ModelType.TEXT_REASONING_LARGE`, or `ModelType.TEXT_COMPLETION`.\n * It includes essential information like the prompt, model type, and various generation controls.\n */\nexport type GenerateTextParams = {\n  /** The `AgentRuntime` instance, providing access to models and other services. */\n  runtime: IAgentRuntime;\n  /** The input string or prompt that the language model will use to generate text. */\n  prompt: string;\n  /** Specifies the type of text generation model to use (e.g., TEXT_LARGE, REASONING_SMALL). */\n  modelType: ModelTypeName;\n  /** Optional. The maximum number of tokens to generate in the response. */\n  maxTokens?: number;\n  /** Optional. Controls randomness (0.0-1.0). Lower values are more deterministic, higher are more creative. */\n  temperature?: number;\n  /** Optional. Penalizes new tokens based on their existing frequency in the text so far. */\n  frequencyPenalty?: number;\n  /** Optional. Penalizes new tokens based on whether they appear in the text so far. */\n  presencePenalty?: number;\n  /** Optional. A list of sequences at which the model will stop generating further tokens. */\n  stopSequences?: string[];\n};\n\n/**\n * Parameters for detokenizing text, i.e., converting a sequence of numerical tokens back into a string.\n * This is the reverse operation of tokenization.\n * This structure is used with `AgentRuntime.useModel` when the `modelType` is `ModelType.TEXT_TOKENIZER_DECODE`.\n */\nexport interface DetokenizeTextParams {\n  /** An array of numerical tokens to be converted back into text. */\n  tokens: number[];\n  /** The model type used for detokenization, ensuring consistency with the original tokenization. */\n  modelType: ModelTypeName;\n}\n\n/**\n * Base parameters common to all model types\n */\nexport interface BaseModelParams {\n  /** The agent runtime for accessing services and utilities */\n  runtime: IAgentRuntime;\n}\n\n/**\n * Parameters for text generation models\n */\nexport interface TextGenerationParams extends BaseModelParams {\n  /** The prompt to generate text from */\n  prompt: string;\n  /** Model temperature (0.0 to 1.0, lower is more deterministic) */\n  temperature?: number;\n  /** Maximum number of tokens to generate */\n  maxTokens?: number;\n  /** Sequences that should stop generation when encountered */\n  stopSequences?: string[];\n  /** Frequency penalty to apply */\n  frequencyPenalty?: number;\n  /** Presence penalty to apply */\n  presencePenalty?: number;\n}\n\n/**\n * Parameters for text embedding models\n */\nexport interface TextEmbeddingParams extends BaseModelParams {\n  /** The text to create embeddings for */\n  text: string;\n}\n\n/**\n * Parameters for text tokenization models\n */\nexport interface TokenizeTextParams extends BaseModelParams {\n  /** The text to tokenize */\n  prompt: string;\n  /** The model type to use for tokenization */\n  modelType: ModelTypeName;\n}\n\n/**\n * Parameters for image generation models\n */\nexport interface ImageGenerationParams extends BaseModelParams {\n  /** The prompt describing the image to generate */\n  prompt: string;\n  /** The dimensions of the image to generate */\n  size?: string;\n  /** Number of images to generate */\n  count?: number;\n}\n\n/**\n * Parameters for image description models\n */\nexport interface ImageDescriptionParams extends BaseModelParams {\n  /** The URL or path of the image to describe */\n  imageUrl: string;\n  /** Optional prompt to guide the description */\n  prompt?: string;\n}\n\n/**\n * Parameters for transcription models\n */\nexport interface TranscriptionParams extends BaseModelParams {\n  /** The URL or path of the audio file to transcribe */\n  audioUrl: string;\n  /** Optional prompt to guide transcription */\n  prompt?: string;\n}\n\n/**\n * Parameters for text-to-speech models\n */\nexport interface TextToSpeechParams extends BaseModelParams {\n  /** The text to convert to speech */\n  text: string;\n  /** The voice to use */\n  voice?: string;\n  /** The speaking speed */\n  speed?: number;\n}\n\n/**\n * Parameters for audio processing models\n */\nexport interface AudioProcessingParams extends BaseModelParams {\n  /** The URL or path of the audio file to process */\n  audioUrl: string;\n  /** The type of audio processing to perform */\n  processingType: string;\n}\n\n/**\n * Parameters for video processing models\n */\nexport interface VideoProcessingParams extends BaseModelParams {\n  /** The URL or path of the video file to process */\n  videoUrl: string;\n  /** The type of video processing to perform */\n  processingType: string;\n}\n\n/**\n * Optional JSON schema for validating generated objects\n */\nexport type JSONSchema = {\n  type: string;\n  properties?: Record<string, any>;\n  required?: string[];\n  items?: JSONSchema;\n  [key: string]: any;\n};\n\n/**\n * Parameters for object generation models\n * @template T - The expected return type, inferred from schema if provided\n */\nexport interface ObjectGenerationParams extends BaseModelParams {\n  /** The prompt describing the object to generate */\n  prompt: string;\n  /** Optional JSON schema for validation */\n  schema?: JSONSchema;\n  /** Type of object to generate */\n  output?: 'object' | 'array' | 'enum';\n  /** For enum type, the allowed values */\n  enumValues?: string[];\n  /** Model type to use */\n  modelType?: ModelTypeName;\n  /** Model temperature (0.0 to 1.0) */\n  temperature?: number;\n  /** Sequences that should stop generation */\n  stopSequences?: string[];\n}\n\n/**\n * Map of model types to their parameter types\n */\nexport interface ModelParamsMap {\n  [ModelType.TEXT_SMALL]: TextGenerationParams;\n  [ModelType.TEXT_LARGE]: TextGenerationParams;\n  [ModelType.TEXT_EMBEDDING]: TextEmbeddingParams | string | null;\n  [ModelType.TEXT_TOKENIZER_ENCODE]: TokenizeTextParams;\n  [ModelType.TEXT_TOKENIZER_DECODE]: DetokenizeTextParams;\n  [ModelType.TEXT_REASONING_SMALL]: TextGenerationParams;\n  [ModelType.TEXT_REASONING_LARGE]: TextGenerationParams;\n  [ModelType.IMAGE]: ImageGenerationParams;\n  [ModelType.IMAGE_DESCRIPTION]: ImageDescriptionParams | string;\n  [ModelType.TRANSCRIPTION]: TranscriptionParams | Buffer | string;\n  [ModelType.TEXT_TO_SPEECH]: TextToSpeechParams | string;\n  [ModelType.AUDIO]: AudioProcessingParams;\n  [ModelType.VIDEO]: VideoProcessingParams;\n  [ModelType.OBJECT_SMALL]: ObjectGenerationParams;\n  [ModelType.OBJECT_LARGE]: ObjectGenerationParams;\n  // Allow string index for custom model types\n  [key: string]: BaseModelParams | any;\n}\n\n/**\n * Map of model types to their return value types\n */\nexport interface ModelResultMap {\n  [ModelType.TEXT_SMALL]: string;\n  [ModelType.TEXT_LARGE]: string;\n  [ModelType.TEXT_EMBEDDING]: number[];\n  [ModelType.TEXT_TOKENIZER_ENCODE]: number[];\n  [ModelType.TEXT_TOKENIZER_DECODE]: string;\n  [ModelType.TEXT_REASONING_SMALL]: string;\n  [ModelType.TEXT_REASONING_LARGE]: string;\n  [ModelType.IMAGE]: { url: string }[];\n  [ModelType.IMAGE_DESCRIPTION]: { title: string; description: string };\n  [ModelType.TRANSCRIPTION]: string;\n  [ModelType.TEXT_TO_SPEECH]: any | Buffer;\n  [ModelType.AUDIO]: any; // Specific return type depends on processing type\n  [ModelType.VIDEO]: any; // Specific return type depends on processing type\n  [ModelType.OBJECT_SMALL]: any;\n  [ModelType.OBJECT_LARGE]: any;\n  // Allow string index for custom model types\n  [key: string]: any;\n}\n\n/**\n * Defines the structure for a model handler registration within the `AgentRuntime`.\n * Each model (e.g., for text generation, embedding) is associated with a handler function,\n * the name of the provider (plugin or system) that registered it, and an optional priority.\n * The `priority` (higher is more preferred) helps in selecting which handler to use if multiple\n * handlers are registered for the same model type. The `registrationOrder` (not in type, but used in runtime)\n * serves as a tie-breaker. See `AgentRuntime.registerModel` and `AgentRuntime.getModel`.\n */\nexport interface ModelHandler {\n  /** The function that executes the model, taking runtime and parameters, and returning a Promise. */\n  handler: (runtime: IAgentRuntime, params: Record<string, unknown>) => Promise<unknown>;\n  /** The name of the provider (e.g., plugin name) that registered this model handler. */\n  provider: string;\n  /**\n   * Optional priority for this model handler. Higher numbers indicate higher priority.\n   * This is used by `AgentRuntime.getModel` to select the most appropriate handler\n   * when multiple are available for a given model type. Defaults to 0 if not specified.\n   */\n  priority?: number; // Optional priority for selection order\n\n  registrationOrder?: number;\n}\n",
    "import type { Agent } from './agent';\nimport type { Component, Entity, Participant, Relationship, Room, World } from './environment';\nimport type { Memory, MemoryMetadata } from './memory';\nimport type { Metadata, UUID } from './primitives';\nimport type { Task } from './task';\n\n/**\n * Represents a log entry\n */\nexport interface Log {\n  /** Optional unique identifier */\n  id?: UUID;\n\n  /** Associated entity ID */\n  entityId: UUID;\n\n  /** Associated room ID */\n  roomId?: UUID;\n\n  /** Log body */\n  body: { [key: string]: unknown };\n\n  /** Log type */\n  type: string;\n\n  /** Log creation timestamp */\n  createdAt: Date;\n}\n\n/**\n * Interface for database operations\n */\nexport interface IDatabaseAdapter {\n  /** Database instance */\n  db: any;\n\n  /** Initialize database connection */\n  initialize(config?: any): Promise<void>;\n\n  /** Initialize database connection */\n  init(): Promise<void>;\n\n  /** Run database migrations */\n  runMigrations(schema?: any, pluginName?: string): Promise<void>;\n\n  /** Check if the database connection is ready */\n  isReady(): Promise<boolean>;\n\n  /** Close database connection */\n  close(): Promise<void>;\n\n  getConnection(): Promise<any>;\n\n  getAgent(agentId: UUID): Promise<Agent | null>;\n\n  /** Get all agents */\n  getAgents(): Promise<Partial<Agent>[]>;\n\n  createAgent(agent: Partial<Agent>): Promise<boolean>;\n\n  updateAgent(agentId: UUID, agent: Partial<Agent>): Promise<boolean>;\n\n  deleteAgent(agentId: UUID): Promise<boolean>;\n\n  ensureEmbeddingDimension(dimension: number): Promise<void>;\n\n  /** Get entity by IDs */\n  getEntitiesByIds(entityIds: UUID[]): Promise<Entity[] | null>;\n\n  /** Get entities for room */\n  getEntitiesForRoom(roomId: UUID, includeComponents?: boolean): Promise<Entity[]>;\n\n  /** Create new entities */\n  createEntities(entities: Entity[]): Promise<boolean>;\n\n  /** Update entity */\n  updateEntity(entity: Entity): Promise<void>;\n\n  /** Get component by ID */\n  getComponent(\n    entityId: UUID,\n    type: string,\n    worldId?: UUID,\n    sourceEntityId?: UUID\n  ): Promise<Component | null>;\n\n  /** Get all components for an entity */\n  getComponents(entityId: UUID, worldId?: UUID, sourceEntityId?: UUID): Promise<Component[]>;\n\n  /** Create component */\n  createComponent(component: Component): Promise<boolean>;\n\n  /** Update component */\n  updateComponent(component: Component): Promise<void>;\n\n  /** Delete component */\n  deleteComponent(componentId: UUID): Promise<void>;\n\n  /** Get memories matching criteria */\n  getMemories(params: {\n    entityId?: UUID;\n    agentId?: UUID;\n    count?: number;\n    unique?: boolean;\n    tableName: string;\n    start?: number;\n    end?: number;\n    roomId?: UUID;\n    worldId?: UUID;\n  }): Promise<Memory[]>;\n\n  getMemoryById(id: UUID): Promise<Memory | null>;\n\n  getMemoriesByIds(ids: UUID[], tableName?: string): Promise<Memory[]>;\n\n  getMemoriesByRoomIds(params: {\n    tableName: string;\n    roomIds: UUID[];\n    limit?: number;\n  }): Promise<Memory[]>;\n\n  getCachedEmbeddings(params: {\n    query_table_name: string;\n    query_threshold: number;\n    query_input: string;\n    query_field_name: string;\n    query_field_sub_name: string;\n    query_match_count: number;\n  }): Promise<{ embedding: number[]; levenshtein_score: number }[]>;\n\n  log(params: {\n    body: { [key: string]: unknown };\n    entityId: UUID;\n    roomId: UUID;\n    type: string;\n  }): Promise<void>;\n\n  getLogs(params: {\n    entityId: UUID;\n    roomId?: UUID;\n    type?: string;\n    count?: number;\n    offset?: number;\n  }): Promise<Log[]>;\n\n  deleteLog(logId: UUID): Promise<void>;\n\n  searchMemories(params: {\n    embedding: number[];\n    match_threshold?: number;\n    count?: number;\n    unique?: boolean;\n    tableName: string;\n    query?: string;\n    roomId?: UUID;\n    worldId?: UUID;\n    entityId?: UUID;\n  }): Promise<Memory[]>;\n\n  createMemory(memory: Memory, tableName: string, unique?: boolean): Promise<UUID>;\n\n  updateMemory(memory: Partial<Memory> & { id: UUID; metadata?: MemoryMetadata }): Promise<boolean>;\n\n  deleteMemory(memoryId: UUID): Promise<void>;\n\n  deleteManyMemories(memoryIds: UUID[]): Promise<void>;\n\n  deleteAllMemories(roomId: UUID, tableName: string): Promise<void>;\n\n  countMemories(roomId: UUID, unique?: boolean, tableName?: string): Promise<number>;\n\n  createWorld(world: World): Promise<UUID>;\n\n  getWorld(id: UUID): Promise<World | null>;\n\n  removeWorld(id: UUID): Promise<void>;\n\n  getAllWorlds(): Promise<World[]>;\n\n  updateWorld(world: World): Promise<void>;\n\n  getRoomsByIds(roomIds: UUID[]): Promise<Room[] | null>;\n\n  createRooms(rooms: Room[]): Promise<UUID[]>;\n\n  deleteRoom(roomId: UUID): Promise<void>;\n\n  deleteRoomsByWorldId(worldId: UUID): Promise<void>;\n\n  updateRoom(room: Room): Promise<void>;\n\n  getRoomsForParticipant(entityId: UUID): Promise<UUID[]>;\n\n  getRoomsForParticipants(userIds: UUID[]): Promise<UUID[]>;\n\n  getRoomsByWorld(worldId: UUID): Promise<Room[]>;\n\n  removeParticipant(entityId: UUID, roomId: UUID): Promise<boolean>;\n\n  getParticipantsForEntity(entityId: UUID): Promise<Participant[]>;\n\n  getParticipantsForRoom(roomId: UUID): Promise<UUID[]>;\n\n  addParticipantsRoom(entityIds: UUID[], roomId: UUID): Promise<boolean>;\n\n  getParticipantUserState(roomId: UUID, entityId: UUID): Promise<'FOLLOWED' | 'MUTED' | null>;\n\n  setParticipantUserState(\n    roomId: UUID,\n    entityId: UUID,\n    state: 'FOLLOWED' | 'MUTED' | null\n  ): Promise<void>;\n\n  /**\n   * Creates a new relationship between two entities.\n   * @param params Object containing the relationship details\n   * @returns Promise resolving to boolean indicating success\n   */\n  createRelationship(params: {\n    sourceEntityId: UUID;\n    targetEntityId: UUID;\n    tags?: string[];\n    metadata?: Metadata;\n  }): Promise<boolean>;\n\n  /**\n   * Updates an existing relationship between two entities.\n   * @param relationship The relationship object with updated data\n   * @returns Promise resolving to void\n   */\n  updateRelationship(relationship: Relationship): Promise<void>;\n\n  /**\n   * Retrieves a relationship between two entities if it exists.\n   * @param params Object containing the entity IDs and agent ID\n   * @returns Promise resolving to the Relationship object or null if not found\n   */\n  getRelationship(params: {\n    sourceEntityId: UUID;\n    targetEntityId: UUID;\n  }): Promise<Relationship | null>;\n\n  /**\n   * Retrieves all relationships for a specific entity.\n   * @param params Object containing the user ID, agent ID and optional tags to filter by\n   * @returns Promise resolving to an array of Relationship objects\n   */\n  getRelationships(params: { entityId: UUID; tags?: string[] }): Promise<Relationship[]>;\n\n  getCache<T>(key: string): Promise<T | undefined>;\n  setCache<T>(key: string, value: T): Promise<boolean>;\n  deleteCache(key: string): Promise<boolean>;\n\n  // Only task instance methods - definitions are in-memory\n  createTask(task: Task): Promise<UUID>;\n  getTasks(params: { roomId?: UUID; tags?: string[]; entityId?: UUID }): Promise<Task[]>;\n  getTask(id: UUID): Promise<Task | null>;\n  getTasksByName(name: string): Promise<Task[]>;\n  updateTask(id: UUID, task: Partial<Task>): Promise<void>;\n  deleteTask(id: UUID): Promise<void>;\n\n  getMemoriesByWorldId(params: {\n    worldId: UUID;\n    count?: number;\n    tableName?: string;\n  }): Promise<Memory[]>;\n}\n\n/**\n * Result interface for embedding similarity searches\n */\nexport interface EmbeddingSearchResult {\n  embedding: number[];\n  levenshtein_score: number;\n}\n\n/**\n * Options for memory retrieval operations\n */\nexport interface MemoryRetrievalOptions {\n  roomId: UUID;\n  count?: number;\n  unique?: boolean;\n  start?: number;\n  end?: number;\n  agentId?: UUID;\n}\n\n/**\n * Options for memory search operations\n */\nexport interface MemorySearchOptions {\n  embedding: number[];\n  match_threshold?: number;\n  count?: number;\n  roomId: UUID;\n  agentId?: UUID;\n  unique?: boolean;\n  metadata?: Partial<MemoryMetadata>;\n}\n\n/**\n * Options for multi-room memory retrieval\n */\nexport interface MultiRoomMemoryOptions {\n  roomIds: UUID[];\n  limit?: number;\n  agentId?: UUID;\n}\n\n/**\n * Unified options pattern for memory operations\n * Provides a simpler, more consistent interface\n */\nexport interface UnifiedMemoryOptions {\n  roomId: UUID;\n  limit?: number; // Unified naming (replacing 'count')\n  agentId?: UUID; // Common optional parameter\n  unique?: boolean; // Common flag for duplication control\n  start?: number; // Pagination start\n  end?: number; // Pagination end\n}\n\n/**\n * Specialized memory search options\n */\nexport interface UnifiedSearchOptions extends UnifiedMemoryOptions {\n  embedding: number[];\n  similarity?: number; // Clearer name than 'match_threshold'\n}\n\n/**\n * Represents a generic database connection object.\n * The actual type of this connection will depend on the specific database adapter implementation\n * (e.g., a connection pool object for PostgreSQL, a client instance for a NoSQL database).\n * This `unknown` type serves as a placeholder in the abstract `IDatabaseAdapter`.\n */\nexport type DbConnection = unknown;\n\n// Allowable vector dimensions\nexport const VECTOR_DIMS = {\n  SMALL: 384,\n  MEDIUM: 512,\n  LARGE: 768,\n  XL: 1024,\n  XXL: 1536,\n  XXXL: 3072,\n} as const;\n",
    "import type { HandlerCallback } from './components';\nimport type { Entity, Room, World } from './environment';\nimport type { Memory } from './memory';\nimport type { ModelTypeName } from './model';\nimport type { Content, Metadata, UUID } from './primitives';\nimport type { IAgentRuntime } from './runtime';\n\n/**\n * Standard event types across all platforms\n */\nexport enum EventType {\n  // World events\n  WORLD_JOINED = 'WORLD_JOINED',\n  WORLD_CONNECTED = 'WORLD_CONNECTED',\n  WORLD_LEFT = 'WORLD_LEFT',\n\n  // Entity events\n  ENTITY_JOINED = 'ENTITY_JOINED',\n  ENTITY_LEFT = 'ENTITY_LEFT',\n  ENTITY_UPDATED = 'ENTITY_UPDATED',\n\n  // Room events\n  ROOM_JOINED = 'ROOM_JOINED',\n  ROOM_LEFT = 'ROOM_LEFT',\n\n  // Message events\n  MESSAGE_RECEIVED = 'MESSAGE_RECEIVED',\n  MESSAGE_SENT = 'MESSAGE_SENT',\n  MESSAGE_DELETED = 'MESSAGE_DELETED',\n\n  // Channel events\n  CHANNEL_CLEARED = 'CHANNEL_CLEARED',\n\n  // Voice events\n  VOICE_MESSAGE_RECEIVED = 'VOICE_MESSAGE_RECEIVED',\n  VOICE_MESSAGE_SENT = 'VOICE_MESSAGE_SENT',\n\n  // Interaction events\n  REACTION_RECEIVED = 'REACTION_RECEIVED',\n  POST_GENERATED = 'POST_GENERATED',\n  INTERACTION_RECEIVED = 'INTERACTION_RECEIVED',\n\n  // Run events\n  RUN_STARTED = 'RUN_STARTED',\n  RUN_ENDED = 'RUN_ENDED',\n  RUN_TIMEOUT = 'RUN_TIMEOUT',\n\n  // Action events\n  ACTION_STARTED = 'ACTION_STARTED',\n  ACTION_COMPLETED = 'ACTION_COMPLETED',\n\n  // Evaluator events\n  EVALUATOR_STARTED = 'EVALUATOR_STARTED',\n  EVALUATOR_COMPLETED = 'EVALUATOR_COMPLETED',\n\n  // Model events\n  MODEL_USED = 'MODEL_USED',\n\n  // Embedding events\n  EMBEDDING_GENERATION_REQUESTED = 'EMBEDDING_GENERATION_REQUESTED',\n  EMBEDDING_GENERATION_COMPLETED = 'EMBEDDING_GENERATION_COMPLETED',\n  EMBEDDING_GENERATION_FAILED = 'EMBEDDING_GENERATION_FAILED',\n}\n\n/**\n * Platform-specific event type prefix\n */\nexport enum PlatformPrefix {\n  DISCORD = 'DISCORD',\n  TELEGRAM = 'TELEGRAM',\n  TWITTER = 'TWITTER',\n}\n\n/**\n * Base payload interface for all events\n */\nexport interface EventPayload {\n  runtime: IAgentRuntime;\n  source: string;\n  onComplete?: () => void;\n}\n\n/**\n * Payload for world-related events\n */\nexport interface WorldPayload extends EventPayload {\n  world: World;\n  rooms: Room[];\n  entities: Entity[];\n}\n\n/**\n * Payload for entity-related events\n */\nexport interface EntityPayload extends EventPayload {\n  entityId: UUID;\n  worldId?: UUID;\n  roomId?: UUID;\n  metadata?: {\n    orginalId: string;\n    username: string;\n    displayName?: string;\n    [key: string]: any;\n  };\n}\n\n/**\n * Payload for reaction-related events\n */\nexport interface MessagePayload extends EventPayload {\n  message: Memory;\n  callback?: HandlerCallback;\n  onComplete?: () => void;\n}\n\n/**\n * Payload for channel cleared events\n */\nexport interface ChannelClearedPayload extends EventPayload {\n  roomId: UUID;\n  channelId: string;\n  memoryCount: number;\n}\n\n/**\n * Payload for events that are invoked without a message\n */\nexport interface InvokePayload extends EventPayload {\n  worldId: UUID;\n  userId: string;\n  roomId: UUID;\n  callback?: HandlerCallback;\n  source: string;\n}\n\n/**\n * Run event payload type\n */\nexport interface RunEventPayload extends EventPayload {\n  runId: UUID;\n  messageId: UUID;\n  roomId: UUID;\n  entityId: UUID;\n  startTime: number;\n  status: 'started' | 'completed' | 'timeout';\n  endTime?: number;\n  duration?: number;\n  error?: string;\n}\n\n/**\n * Action event payload type\n */\nexport interface ActionEventPayload extends EventPayload {\n  roomId: UUID;\n  world: UUID;\n  content: Content;\n  messageId?: UUID;\n}\n\n/**\n * Evaluator event payload type\n */\nexport interface EvaluatorEventPayload extends EventPayload {\n  evaluatorId: UUID;\n  evaluatorName: string;\n  startTime?: number;\n  completed?: boolean;\n  error?: Error;\n}\n\n/**\n * Model event payload type\n */\nexport interface ModelEventPayload extends EventPayload {\n  provider: string;\n  type: ModelTypeName;\n  prompt: string;\n  tokens?: {\n    prompt: number;\n    completion: number;\n    total: number;\n  };\n}\n\n/**\n * Payload for embedding generation events\n */\nexport interface EmbeddingGenerationPayload extends EventPayload {\n  memory: Memory;\n  priority?: 'high' | 'normal' | 'low';\n  retryCount?: number;\n  maxRetries?: number;\n  embedding?: number[];\n  error?: any;\n  runId?: UUID;\n}\n\nexport type MessageReceivedHandlerParams = {\n  runtime: IAgentRuntime;\n  message: Memory;\n  callback: HandlerCallback;\n  onComplete?: () => void;\n};\n\n/**\n * Maps event types to their corresponding payload types\n */\nexport interface EventPayloadMap {\n  [EventType.WORLD_JOINED]: WorldPayload;\n  [EventType.WORLD_CONNECTED]: WorldPayload;\n  [EventType.WORLD_LEFT]: WorldPayload;\n  [EventType.ENTITY_JOINED]: EntityPayload;\n  [EventType.ENTITY_LEFT]: EntityPayload;\n  [EventType.ENTITY_UPDATED]: EntityPayload;\n  [EventType.MESSAGE_RECEIVED]: MessagePayload;\n  [EventType.MESSAGE_SENT]: MessagePayload;\n  [EventType.MESSAGE_DELETED]: MessagePayload;\n  [EventType.CHANNEL_CLEARED]: ChannelClearedPayload;\n  [EventType.REACTION_RECEIVED]: MessagePayload;\n  [EventType.POST_GENERATED]: InvokePayload;\n  [EventType.INTERACTION_RECEIVED]: MessagePayload;\n  [EventType.RUN_STARTED]: RunEventPayload;\n  [EventType.RUN_ENDED]: RunEventPayload;\n  [EventType.RUN_TIMEOUT]: RunEventPayload;\n  [EventType.ACTION_STARTED]: ActionEventPayload;\n  [EventType.ACTION_COMPLETED]: ActionEventPayload;\n  [EventType.EVALUATOR_STARTED]: EvaluatorEventPayload;\n  [EventType.EVALUATOR_COMPLETED]: EvaluatorEventPayload;\n  [EventType.MODEL_USED]: ModelEventPayload;\n  [EventType.EMBEDDING_GENERATION_REQUESTED]: EmbeddingGenerationPayload;\n  [EventType.EMBEDDING_GENERATION_COMPLETED]: EmbeddingGenerationPayload;\n  [EventType.EMBEDDING_GENERATION_FAILED]: EmbeddingGenerationPayload;\n}\n\n/**\n * Event handler function type\n */\nexport type EventHandler<T extends keyof EventPayloadMap> = (\n  payload: EventPayloadMap[T]\n) => Promise<void>;\n\n/**\n * Defines a more specific type for event handlers, expecting an `Metadata`.\n * This aims to improve upon generic 'any' type handlers, providing a clearer contract\n * for functions that respond to events emitted within the agent runtime (see `emitEvent` in `AgentRuntime`).\n * Handlers can be synchronous or asynchronous.\n */\nexport type TypedEventHandler = (data: Metadata) => Promise<void> | void;\n",
    "import type { Metadata } from './primitives';\n\n// Represents an agent in the TeeAgent table, containing details about the agent.\n/**\n * Represents an agent's registration details within a Trusted Execution Environment (TEE) context.\n * This is typically stored in a database table (e.g., `TeeAgent`) to manage agents operating in a TEE.\n * It allows for multiple registrations of the same `agentId` to support scenarios where an agent might restart,\n * generating a new keypair and attestation each time.\n */\nexport interface TeeAgent {\n  /** Primary key for the TEE agent registration record (e.g., a UUID or auto-incrementing ID). */\n  id: string; // Primary key\n  // Allow duplicate agentId.\n  // This is to support the case where the same agentId is registered multiple times.\n  // Each time the agent restarts, we will generate a new keypair and attestation.\n  /** The core identifier of the agent, which can be duplicated across multiple TEE registrations. */\n  agentId: string;\n  /** The human-readable name of the agent. */\n  agentName: string;\n  /** Timestamp (e.g., Unix epoch in milliseconds) when this TEE registration was created. */\n  createdAt: number;\n  /** The public key associated with this specific TEE agent instance/session. */\n  publicKey: string;\n  /** The attestation document proving the authenticity and integrity of the TEE instance. */\n  attestation: string;\n}\n\n/**\n * Defines the operational modes for a Trusted Execution Environment (TEE).\n * This enum is used to configure how TEE functionalities are engaged, allowing for\n * different setups for local development, Docker-based development, and production.\n */\nexport enum TEEMode {\n  /** TEE functionality is completely disabled. */\n  OFF = 'OFF',\n  /** For local development, potentially using a TEE simulator. */\n  LOCAL = 'LOCAL', // For local development with simulator\n  /** For Docker-based development environments, possibly with a TEE simulator. */\n  DOCKER = 'DOCKER', // For docker development with simulator\n  /** For production deployments, using actual TEE hardware without a simulator. */\n  PRODUCTION = 'PRODUCTION', // For production without simulator\n}\n\n/**\n * Represents a quote obtained during remote attestation for a Trusted Execution Environment (TEE).\n * This quote is a piece of evidence provided by the TEE, cryptographically signed, which can be\n * verified by a relying party to ensure the TEE's integrity and authenticity.\n */\nexport interface RemoteAttestationQuote {\n  /** The attestation quote data, typically a base64 encoded string or similar format. */\n  quote: string;\n  /** Timestamp (e.g., Unix epoch in milliseconds) when the quote was generated or received. */\n  timestamp: number;\n}\n\n/**\n * Data structure used in the attestation process for deriving a key within a Trusted Execution Environment (TEE).\n * This information helps establish a secure channel or verify the identity of the agent instance\n * requesting key derivation.\n */\nexport interface DeriveKeyAttestationData {\n  /** The unique identifier of the agent for which the key derivation is being attested. */\n  agentId: string;\n  /** The public key of the agent instance involved in the key derivation process. */\n  publicKey: string;\n  /** Optional subject or context information related to the key derivation. */\n  subject?: string;\n}\n\n/**\n * Represents a message that has been attested by a Trusted Execution Environment (TEE).\n * This structure binds a message to an agent's identity and a timestamp, all within the\n * context of a remote attestation process, ensuring the message originated from a trusted TEE instance.\n */\nexport interface RemoteAttestationMessage {\n  /** The unique identifier of the agent sending the attested message. */\n  agentId: string;\n  /** Timestamp (e.g., Unix epoch in milliseconds) when the message was attested or sent. */\n  timestamp: number;\n  /** The actual message content, including details about the entity, room, and the content itself. */\n  message: {\n    entityId: string;\n    roomId: string;\n    content: string;\n  };\n}\n\n/**\n * Enumerates different types or vendors of Trusted Execution Environments (TEEs).\n * This allows the system to adapt to specific TEE technologies, like Intel TDX on DSTACK.\n */\nexport enum TeeType {\n  /** Represents Intel Trusted Domain Extensions (TDX) running on DSTACK infrastructure. */\n  TDX_DSTACK = 'tdx_dstack',\n}\n\n/**\n * Configuration for a TEE (Trusted Execution Environment) plugin.\n * This allows specifying the TEE vendor and any vendor-specific configurations.\n * It's used to initialize and configure TEE-related functionalities within the agent system.\n */\nexport interface TeePluginConfig {\n  /** Optional. The name or identifier of the TEE vendor (e.g., 'tdx_dstack' from `TeeType`). */\n  vendor?: string;\n  /** Optional. Vendor-specific configuration options, conforming to `TeeVendorConfig`. */\n  vendorConfig?: Metadata;\n}\n",
    "import { Service, ServiceType } from './service';\n\n/**\n * A standardized representation of a token holding.\n */\nexport interface TokenBalance {\n  address: string; // Token mint address, or a native identifier like 'SOL' or 'ETH'\n  balance: string; // Raw balance as a string to handle large numbers with precision\n  decimals: number;\n  uiAmount?: number; // User-friendly balance, adjusted for decimals\n  name?: string;\n  symbol?: string;\n  logoURI?: string;\n}\n\n/**\n * Generic representation of token data that can be provided by various services.\n */\nexport interface TokenData {\n  id: string; // Unique identifier (e.g., contract address or a composite ID)\n  symbol: string;\n  name: string;\n  address: string; // Contract address\n  chain: string; // e.g., 'solana', 'ethereum', 'base'\n  sourceProvider: string; // e.g., 'birdeye', 'coinmarketcap'\n\n  price?: number;\n  priceChange24hPercent?: number;\n  priceChange24hUSD?: number; // Absolute change\n\n  volume24hUSD?: number;\n  marketCapUSD?: number;\n\n  liquidity?: number;\n  holders?: number;\n\n  logoURI?: string;\n  decimals?: number;\n\n  // Timestamps\n  lastUpdatedAt?: Date; // When this specific data point was last updated from the source\n\n  // Optional raw data from the provider\n  raw?: any;\n}\n\n/**\n * Interface for a generic service that provides token data.\n */\nexport abstract class ITokenDataService extends Service {\n  static override readonly serviceType = ServiceType.TOKEN_DATA;\n  public readonly capabilityDescription =\n    'Provides standardized access to token market data.' as string;\n\n  /**\n   * Fetches detailed information for a single token.\n   * @param address The token's contract address.\n   * @param chain The blockchain the token resides on.\n   * @returns A Promise resolving to TokenData or null if not found.\n   */\n  abstract getTokenDetails(address: string, chain: string): Promise<TokenData | null>;\n\n  /**\n   * Fetches a list of trending tokens.\n   * @param chain Optional: Filter by a specific blockchain.\n   * @param limit Optional: Number of tokens to return. Defaults to a service-specific value.\n   * @param timePeriod Optional: Time period for trending data (e.g., '24h', '7d'). Defaults to service-specific.\n   * @returns A Promise resolving to an array of TokenData.\n   */\n  abstract getTrendingTokens(\n    chain?: string,\n    limit?: number,\n    timePeriod?: string\n  ): Promise<TokenData[]>;\n\n  /**\n   * Searches for tokens based on a query string.\n   * @param query The search query (e.g., symbol, name, address).\n   * @param chain Optional: Filter by a specific blockchain.\n   * @param limit Optional: Number of results to return.\n   * @returns A Promise resolving to an array of TokenData.\n   */\n  abstract searchTokens(query: string, chain?: string, limit?: number): Promise<TokenData[]>;\n\n  /**\n   * Fetches data for multiple tokens by their addresses on a specific chain.\n   * @param addresses Array of token contract addresses.\n   * @param chain The blockchain the tokens reside on.\n   * @returns A Promise resolving to an array of TokenData. May not include all requested if some are not found.\n   */\n  abstract getTokensByAddresses(addresses: string[], chain: string): Promise<TokenData[]>;\n\n  // Future potential methods:\n  // getHistoricalPriceData(address: string, chain: string, timeFrame: string): Promise<any[]>;\n  // getTokenMarketChart(address: string, chain: string, days: number): Promise<any[]>;\n}\n",
    "import type { Content, UUID } from './primitives';\nimport type { IAgentRuntime } from './runtime';\n\n/**\n * Information describing the target of a message.\n */\nexport interface TargetInfo {\n  source: string; // Platform identifier (e.g., 'discord', 'telegram', 'websocket-api')\n  roomId?: UUID; // Target room ID (platform-specific or runtime-specific)\n  channelId?: string; // Platform-specific channel/chat ID\n  serverId?: string; // Platform-specific server/guild ID\n  entityId?: UUID; // Target user ID (for DMs)\n  threadId?: string; // Platform-specific thread ID (e.g., Telegram topics)\n  // Add other relevant platform-specific identifiers as needed\n}\n\n/**\n * Function signature for handlers responsible for sending messages to specific platforms.\n */\nexport type SendHandlerFunction = (\n  runtime: IAgentRuntime,\n  target: TargetInfo,\n  content: Content\n) => Promise<void>;\n\nexport enum SOCKET_MESSAGE_TYPE {\n  ROOM_JOINING = 1,\n  SEND_MESSAGE = 2,\n  MESSAGE = 3,\n  ACK = 4,\n  THINKING = 5,\n  CONTROL = 6,\n}\n\n/**\n * Interface for control messages sent from the backend to the frontend\n * to manage UI state and interaction capabilities\n */\nexport interface ControlMessage {\n  /** Message type identifier */\n  type: 'control';\n\n  /** Control message payload */\n  payload: {\n    /** Action to perform */\n    action: 'disable_input' | 'enable_input';\n\n    /** Optional target element identifier */\n    target?: string;\n\n    /** Additional optional parameters */\n    [key: string]: unknown;\n  };\n\n  /** Room ID to ensure signal is directed to the correct chat window */\n  roomId: UUID;\n}\n",
    "import { Service, ServiceType } from './service';\nimport type { TokenBalance } from './token';\n\n/**\n * Represents a single asset holding within a wallet, including its value.\n * This extends a generic TokenBalance with wallet-specific valuation.\n */\nexport interface WalletAsset extends TokenBalance {\n  priceUsd?: number;\n  valueUsd?: number;\n}\n\n/**\n * Represents the entire portfolio of assets in a wallet.\n */\nexport interface WalletPortfolio {\n  totalValueUsd: number;\n  assets: WalletAsset[];\n}\n\n/**\n * Abstract interface for a Wallet Service.\n * Plugins that provide wallet functionality (e.g., for Solana, EVM) should implement this service.\n * It provides a standardized way for other plugins to query the state of a wallet.\n */\nexport abstract class IWalletService extends Service {\n  static override readonly serviceType = ServiceType.WALLET;\n\n  public readonly capabilityDescription =\n    'Provides standardized access to wallet balances and portfolios.';\n\n  /**\n   * Retrieves the entire portfolio of assets held by the wallet.\n   * @param owner - Optional: The specific wallet address/owner to query if the service manages multiple.\n   * @returns A promise that resolves to the wallet's portfolio.\n   */\n  abstract getPortfolio(owner?: string): Promise<WalletPortfolio>;\n\n  /**\n   * Retrieves the balance of a specific asset in the wallet.\n   * @param assetAddress - The mint address or native identifier of the asset.\n   * @param owner - Optional: The specific wallet address/owner to query.\n   * @returns A promise that resolves to the user-friendly (decimal-adjusted) balance of the asset held.\n   */\n  abstract getBalance(assetAddress: string, owner?: string): Promise<number>;\n\n  /**\n   * Transfers SOL from a specified keypair to a given public key.\n   * This is a low-level function primarily for Solana-based wallet services.\n   * @param from - The Keypair of the sender.\n   * @param to - The PublicKey of the recipient.\n   * @param lamports - The amount in lamports to transfer.\n   * @returns A promise that resolves with the transaction signature.\n   */\n  abstract transferSol(from: any, to: any, lamports: number): Promise<string>;\n}\n",
    "import type { Metadata } from './primitives';\nimport { Service } from './service';\nimport type { TokenBalance } from './token';\n\n/**\n * A standardized representation of a liquidity pool from any DEX.\n */\nexport type PoolInfo = {\n  id: string; // Unique identifier for the pool (e.g., LP token mint or a DEX-specific ID).\n  displayName?: string; // User-friendly name for the pool.\n  dex: string; // Identifier for the DEX (e.g., \"orca\", \"raydium\").\n  tokenA: {\n    mint: string;\n    symbol?: string;\n    reserve?: string;\n    decimals?: number;\n  };\n  tokenB: {\n    mint: string;\n    symbol?: string;\n    reserve?: string;\n    decimals?: number;\n  };\n  lpTokenMint?: string;\n  apr?: number; // Annual Percentage Rate.\n  apy?: number; // Annual Percentage Yield.\n  tvl?: number; // Total Value Locked in USD.\n  fee?: number; // Trading fee percentage.\n  metadata?: Metadata; // For DEX-specific extra data.\n};\n\n/**\n * A standardized representation of a user's position in a liquidity pool.\n */\nexport type LpPositionDetails = {\n  poolId: string;\n  dex: string;\n  lpTokenBalance: TokenBalance;\n  underlyingTokens: TokenBalance[]; // Array of two token balances.\n  valueUsd?: number;\n  accruedFees?: TokenBalance[];\n  rewards?: TokenBalance[];\n  metadata?: Metadata; // For additional DEX-specific position data.\n};\n\n/**\n * A standardized result for blockchain transactions.\n */\nexport type TransactionResult = {\n  success: boolean;\n  transactionId?: string;\n  error?: string;\n  data?: any;\n};\n\n/**\n * Abstract interface for a Liquidity Pool Service.\n * DEX-specific plugins (e.g., for Orca, Raydium) must implement this service\n * to allow the LP Manager to interact with them in a standardized way.\n */\nexport abstract class ILpService extends Service {\n  static override readonly serviceType = 'lp';\n\n  public readonly capabilityDescription = 'Provides standardized access to DEX liquidity pools.';\n\n  /**\n   * Returns the name of the DEX this service interacts with.\n   * @returns The name of the DEX (e.g., \"Orca\", \"Raydium\").\n   */\n  abstract getDexName(): string;\n\n  /**\n   * Fetches a list of available liquidity pools from the DEX.\n   * @param tokenAMint - Optional: Filter pools by the mint address of the first token.\n   * @param tokenBMint - Optional: Filter pools by the mint address of the second token.\n   * @returns A promise that resolves to an array of standardized PoolInfo objects.\n   */\n  abstract getPools(tokenAMint?: string, tokenBMint?: string): Promise<PoolInfo[]>;\n\n  /**\n   * Adds liquidity to a specified pool.\n   * @param params - The parameters for adding liquidity.\n   * @returns A promise resolving to a transaction result, including the LP tokens received.\n   */\n  abstract addLiquidity(params: {\n    userVault: any;\n    poolId: string;\n    tokenAAmountLamports: string;\n    tokenBAmountLamports?: string;\n    slippageBps: number;\n    tickLowerIndex?: number; // For concentrated liquidity\n    tickUpperIndex?: number; // For concentrated liquidity\n  }): Promise<TransactionResult & { lpTokensReceived?: TokenBalance }>;\n\n  /**\n   * Removes liquidity from a specified pool.\n   * @param params - The parameters for removing liquidity.\n   * @returns A promise resolving to a transaction result, including the tokens received.\n   */\n  abstract removeLiquidity(params: {\n    userVault: any;\n    poolId: string;\n    lpTokenAmountLamports: string;\n    slippageBps: number;\n  }): Promise<TransactionResult & { tokensReceived?: TokenBalance[] }>;\n\n  /**\n   * Fetches the details of a specific LP position for a user.\n   * @param userAccountPublicKey - The user's wallet public key.\n   * @param poolOrPositionIdentifier - The identifier for the pool or a specific position (e.g., position NFT mint).\n   * @returns A promise resolving to the position details or null if not found.\n   */\n  abstract getLpPositionDetails(\n    userAccountPublicKey: string,\n    poolOrPositionIdentifier: string\n  ): Promise<LpPositionDetails | null>;\n\n  /**\n   * Fetches the latest market data (e.g., APY, TVL) for a list of pools.\n   * @param poolIds - An array of pool IDs to fetch data for.\n   * @returns A promise resolving to a map of pool IDs to their partial market data.\n   */\n  abstract getMarketDataForPools(poolIds: string[]): Promise<Record<string, Partial<PoolInfo>>>;\n}\n",
    "import { Service, ServiceType } from './service';\n\nexport interface PdfExtractionResult {\n  text: string;\n  pageCount: number;\n  metadata?: {\n    title?: string;\n    author?: string;\n    createdAt?: Date;\n    modifiedAt?: Date;\n  };\n}\n\nexport interface PdfGenerationOptions {\n  format?: 'A4' | 'A3' | 'Letter';\n  orientation?: 'portrait' | 'landscape';\n  margins?: {\n    top?: number;\n    bottom?: number;\n    left?: number;\n    right?: number;\n  };\n  header?: string;\n  footer?: string;\n}\n\nexport interface PdfConversionOptions {\n  quality?: 'high' | 'medium' | 'low';\n  outputFormat?: 'pdf' | 'pdf/a';\n  compression?: boolean;\n}\n\n/**\n * Interface for PDF processing services\n */\nexport abstract class IPdfService extends Service {\n  static override readonly serviceType = ServiceType.PDF;\n\n  public readonly capabilityDescription = 'PDF processing, extraction, and generation capabilities';\n\n  /**\n   * Extract text and metadata from a PDF file\n   * @param pdfPath - Path to the PDF file or buffer\n   * @returns Promise resolving to extracted text and metadata\n   */\n  abstract extractText(pdfPath: string | Buffer): Promise<PdfExtractionResult>;\n\n  /**\n   * Generate a PDF from HTML content\n   * @param htmlContent - HTML content to convert to PDF\n   * @param options - PDF generation options\n   * @returns Promise resolving to PDF buffer\n   */\n  abstract generatePdf(htmlContent: string, options?: PdfGenerationOptions): Promise<Buffer>;\n\n  /**\n   * Convert a document to PDF format\n   * @param filePath - Path to the document file\n   * @param options - Conversion options\n   * @returns Promise resolving to PDF buffer\n   */\n  abstract convertToPdf(filePath: string, options?: PdfConversionOptions): Promise<Buffer>;\n\n  /**\n   * Merge multiple PDF files into one\n   * @param pdfPaths - Array of PDF file paths or buffers\n   * @returns Promise resolving to merged PDF buffer\n   */\n  abstract mergePdfs(pdfPaths: (string | Buffer)[]): Promise<Buffer>;\n\n  /**\n   * Split a PDF into individual pages\n   * @param pdfPath - Path to the PDF file or buffer\n   * @returns Promise resolving to array of page buffers\n   */\n  abstract splitPdf(pdfPath: string | Buffer): Promise<Buffer[]>;\n}\n",
    "import { Service, ServiceType } from './service';\n\nexport interface VideoInfo {\n  title?: string;\n  duration?: number;\n  url: string;\n  thumbnail?: string;\n  description?: string;\n  uploader?: string;\n  viewCount?: number;\n  uploadDate?: Date;\n  formats?: VideoFormat[];\n}\n\nexport interface VideoFormat {\n  formatId: string;\n  url: string;\n  extension: string;\n  quality: string;\n  fileSize?: number;\n  videoCodec?: string;\n  audioCodec?: string;\n  resolution?: string;\n  fps?: number;\n  bitrate?: number;\n}\n\nexport interface VideoDownloadOptions {\n  format?: string;\n  quality?: 'best' | 'worst' | 'bestvideo' | 'bestaudio' | string;\n  outputPath?: string;\n  audioOnly?: boolean;\n  videoOnly?: boolean;\n  subtitles?: boolean;\n  embedSubs?: boolean;\n  writeInfoJson?: boolean;\n}\n\nexport interface VideoProcessingOptions {\n  startTime?: number;\n  endTime?: number;\n  outputFormat?: string;\n  resolution?: string;\n  bitrate?: string;\n  framerate?: number;\n  audioCodec?: string;\n  videoCodec?: string;\n}\n\n/**\n * Interface for video processing and download services\n */\nexport abstract class IVideoService extends Service {\n  static override readonly serviceType = ServiceType.VIDEO;\n\n  public readonly capabilityDescription = 'Video download, processing, and conversion capabilities';\n\n  /**\n   * Get video information without downloading\n   * @param url - Video URL\n   * @returns Promise resolving to video information\n   */\n  abstract getVideoInfo(url: string): Promise<VideoInfo>;\n\n  /**\n   * Download a video from URL\n   * @param url - Video URL\n   * @param options - Download options\n   * @returns Promise resolving to downloaded file path\n   */\n  abstract downloadVideo(url: string, options?: VideoDownloadOptions): Promise<string>;\n\n  /**\n   * Extract audio from video\n   * @param videoPath - Path to video file or video URL\n   * @param outputPath - Optional output path for audio file\n   * @returns Promise resolving to audio file path\n   */\n  abstract extractAudio(videoPath: string, outputPath?: string): Promise<string>;\n\n  /**\n   * Generate thumbnail from video\n   * @param videoPath - Path to video file or video URL\n   * @param timestamp - Timestamp in seconds to capture thumbnail\n   * @returns Promise resolving to thumbnail image path\n   */\n  abstract getThumbnail(videoPath: string, timestamp?: number): Promise<string>;\n\n  /**\n   * Convert video to different format\n   * @param videoPath - Path to input video file\n   * @param outputPath - Path for output video file\n   * @param options - Processing options\n   * @returns Promise resolving to converted video path\n   */\n  abstract convertVideo(\n    videoPath: string,\n    outputPath: string,\n    options?: VideoProcessingOptions\n  ): Promise<string>;\n\n  /**\n   * Get available formats for a video URL\n   * @param url - Video URL\n   * @returns Promise resolving to available formats\n   */\n  abstract getAvailableFormats(url: string): Promise<VideoFormat[]>;\n}\n",
    "import { Service, ServiceType } from './service';\n\nexport interface BrowserNavigationOptions {\n  timeout?: number;\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle0' | 'networkidle2';\n  viewport?: {\n    width: number;\n    height: number;\n  };\n  userAgent?: string;\n  headers?: Record<string, string>;\n}\n\nexport interface ScreenshotOptions {\n  fullPage?: boolean;\n  clip?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  format?: 'png' | 'jpeg' | 'webp';\n  quality?: number;\n  omitBackground?: boolean;\n}\n\nexport interface ElementSelector {\n  selector: string;\n  text?: string;\n  timeout?: number;\n}\n\nexport interface ExtractedContent {\n  text: string;\n  html: string;\n  links: Array<{\n    url: string;\n    text: string;\n  }>;\n  images: Array<{\n    src: string;\n    alt?: string;\n  }>;\n  title?: string;\n  metadata?: Record<string, string>;\n}\n\nexport interface ClickOptions {\n  timeout?: number;\n  force?: boolean;\n  waitForNavigation?: boolean;\n}\n\nexport interface TypeOptions {\n  delay?: number;\n  timeout?: number;\n  clear?: boolean;\n}\n\n/**\n * Interface for browser automation services\n */\nexport abstract class IBrowserService extends Service {\n  static override readonly serviceType = ServiceType.BROWSER;\n\n  public readonly capabilityDescription = 'Web browser automation and scraping capabilities';\n\n  /**\n   * Navigate to a URL\n   * @param url - URL to navigate to\n   * @param options - Navigation options\n   * @returns Promise resolving when navigation completes\n   */\n  abstract navigate(url: string, options?: BrowserNavigationOptions): Promise<void>;\n\n  /**\n   * Take a screenshot of the current page\n   * @param options - Screenshot options\n   * @returns Promise resolving to screenshot buffer\n   */\n  abstract screenshot(options?: ScreenshotOptions): Promise<Buffer>;\n\n  /**\n   * Extract text and content from the current page\n   * @param selector - Optional CSS selector to extract from specific element\n   * @returns Promise resolving to extracted content\n   */\n  abstract extractContent(selector?: string): Promise<ExtractedContent>;\n\n  /**\n   * Click on an element\n   * @param selector - CSS selector or element selector\n   * @param options - Click options\n   * @returns Promise resolving when click completes\n   */\n  abstract click(selector: string | ElementSelector, options?: ClickOptions): Promise<void>;\n\n  /**\n   * Type text into an input field\n   * @param selector - CSS selector for input field\n   * @param text - Text to type\n   * @param options - Typing options\n   * @returns Promise resolving when typing completes\n   */\n  abstract type(selector: string, text: string, options?: TypeOptions): Promise<void>;\n\n  /**\n   * Wait for an element to appear\n   * @param selector - CSS selector or element selector\n   * @returns Promise resolving when element is found\n   */\n  abstract waitForElement(selector: string | ElementSelector): Promise<void>;\n\n  /**\n   * Evaluate JavaScript in the browser context\n   * @param script - JavaScript code to evaluate\n   * @param args - Arguments to pass to the script\n   * @returns Promise resolving to evaluation result\n   */\n  abstract evaluate<T = any>(script: string, ...args: any[]): Promise<T>;\n\n  /**\n   * Get the current page URL\n   * @returns Promise resolving to current URL\n   */\n  abstract getCurrentUrl(): Promise<string>;\n\n  /**\n   * Go back in browser history\n   * @returns Promise resolving when navigation completes\n   */\n  abstract goBack(): Promise<void>;\n\n  /**\n   * Go forward in browser history\n   * @returns Promise resolving when navigation completes\n   */\n  abstract goForward(): Promise<void>;\n\n  /**\n   * Refresh the current page\n   * @returns Promise resolving when refresh completes\n   */\n  abstract refresh(): Promise<void>;\n}\n",
    "import { Service, ServiceType } from './service';\n\nexport interface TranscriptionOptions {\n  language?: string;\n  model?: string;\n  temperature?: number;\n  prompt?: string;\n  response_format?: 'json' | 'text' | 'srt' | 'vtt' | 'verbose_json';\n  timestamp_granularities?: ('word' | 'segment')[];\n  word_timestamps?: boolean;\n  segment_timestamps?: boolean;\n}\n\nexport interface TranscriptionResult {\n  text: string;\n  language?: string;\n  duration?: number;\n  segments?: TranscriptionSegment[];\n  words?: TranscriptionWord[];\n  confidence?: number;\n}\n\nexport interface TranscriptionSegment {\n  id: number;\n  text: string;\n  start: number;\n  end: number;\n  confidence?: number;\n  tokens?: number[];\n  temperature?: number;\n  avg_logprob?: number;\n  compression_ratio?: number;\n  no_speech_prob?: number;\n}\n\nexport interface TranscriptionWord {\n  word: string;\n  start: number;\n  end: number;\n  confidence?: number;\n}\n\nexport interface SpeechToTextOptions {\n  language?: string;\n  model?: string;\n  continuous?: boolean;\n  interimResults?: boolean;\n  maxAlternatives?: number;\n}\n\nexport interface TextToSpeechOptions {\n  voice?: string;\n  model?: string;\n  speed?: number;\n  format?: 'mp3' | 'wav' | 'flac' | 'aac';\n  response_format?: 'mp3' | 'opus' | 'aac' | 'flac';\n}\n\n/**\n * Interface for audio transcription and speech services\n */\nexport abstract class ITranscriptionService extends Service {\n  static override readonly serviceType = ServiceType.TRANSCRIPTION;\n\n  public readonly capabilityDescription = 'Audio transcription and speech processing capabilities';\n\n  /**\n   * Transcribe audio file to text\n   * @param audioPath - Path to audio file or audio buffer\n   * @param options - Transcription options\n   * @returns Promise resolving to transcription result\n   */\n  abstract transcribeAudio(\n    audioPath: string | Buffer,\n    options?: TranscriptionOptions\n  ): Promise<TranscriptionResult>;\n\n  /**\n   * Transcribe video file to text (extracts audio first)\n   * @param videoPath - Path to video file or video buffer\n   * @param options - Transcription options\n   * @returns Promise resolving to transcription result\n   */\n  abstract transcribeVideo(\n    videoPath: string | Buffer,\n    options?: TranscriptionOptions\n  ): Promise<TranscriptionResult>;\n\n  /**\n   * Real-time speech to text from audio stream\n   * @param audioStream - Audio stream or buffer\n   * @param options - Speech to text options\n   * @returns Promise resolving to transcription result\n   */\n  abstract speechToText(\n    audioStream: NodeJS.ReadableStream | Buffer,\n    options?: SpeechToTextOptions\n  ): Promise<TranscriptionResult>;\n\n  /**\n   * Convert text to speech\n   * @param text - Text to convert to speech\n   * @param options - Text to speech options\n   * @returns Promise resolving to audio buffer\n   */\n  abstract textToSpeech(text: string, options?: TextToSpeechOptions): Promise<Buffer>;\n\n  /**\n   * Get supported languages for transcription\n   * @returns Promise resolving to array of supported language codes\n   */\n  abstract getSupportedLanguages(): Promise<string[]>;\n\n  /**\n   * Get available voices for text to speech\n   * @returns Promise resolving to array of available voices\n   */\n  abstract getAvailableVoices(): Promise<\n    Array<{\n      id: string;\n      name: string;\n      language: string;\n      gender?: 'male' | 'female' | 'neutral';\n    }>\n  >;\n\n  /**\n   * Detect language of audio file\n   * @param audioPath - Path to audio file or audio buffer\n   * @returns Promise resolving to detected language code\n   */\n  abstract detectLanguage(audioPath: string | Buffer): Promise<string>;\n}\n",
    "import { Service, ServiceType } from './service';\n\nexport interface SearchOptions {\n  limit?: number;\n  offset?: number;\n  language?: string;\n  region?: string;\n  dateRange?: {\n    start?: Date;\n    end?: Date;\n  };\n  fileType?: string;\n  site?: string;\n  sortBy?: 'relevance' | 'date' | 'popularity';\n  safeSearch?: 'strict' | 'moderate' | 'off';\n}\n\nexport interface SearchResult {\n  title: string;\n  url: string;\n  description: string;\n  displayUrl?: string;\n  thumbnail?: string;\n  publishedDate?: Date;\n  source?: string;\n  relevanceScore?: number;\n  snippet?: string;\n}\n\nexport interface SearchResponse {\n  query: string;\n  results: SearchResult[];\n  totalResults?: number;\n  searchTime?: number;\n  suggestions?: string[];\n  nextPageToken?: string;\n  relatedSearches?: string[];\n}\n\nexport interface NewsSearchOptions extends SearchOptions {\n  category?:\n    | 'general'\n    | 'business'\n    | 'entertainment'\n    | 'health'\n    | 'science'\n    | 'sports'\n    | 'technology';\n  freshness?: 'day' | 'week' | 'month';\n}\n\nexport interface ImageSearchOptions extends SearchOptions {\n  size?: 'small' | 'medium' | 'large' | 'wallpaper' | 'any';\n  color?:\n    | 'color'\n    | 'monochrome'\n    | 'red'\n    | 'orange'\n    | 'yellow'\n    | 'green'\n    | 'blue'\n    | 'purple'\n    | 'pink'\n    | 'brown'\n    | 'black'\n    | 'gray'\n    | 'white';\n  type?: 'photo' | 'clipart' | 'line' | 'animated';\n  layout?: 'square' | 'wide' | 'tall' | 'any';\n  license?: 'any' | 'public' | 'share' | 'sharecommercially' | 'modify';\n}\n\nexport interface VideoSearchOptions extends SearchOptions {\n  duration?: 'short' | 'medium' | 'long' | 'any';\n  resolution?: 'high' | 'standard' | 'any';\n  quality?: 'high' | 'standard' | 'any';\n}\n\n/**\n * Interface for web search services\n */\nexport abstract class IWebSearchService extends Service {\n  static override readonly serviceType = ServiceType.WEB_SEARCH;\n\n  public readonly capabilityDescription = 'Web search and content discovery capabilities';\n\n  /**\n   * Perform a general web search\n   * @param query - Search query\n   * @param options - Search options\n   * @returns Promise resolving to search results\n   */\n  abstract search(query: string, options?: SearchOptions): Promise<SearchResponse>;\n\n  /**\n   * Search for news articles\n   * @param query - Search query\n   * @param options - News search options\n   * @returns Promise resolving to news search results\n   */\n  abstract searchNews(query: string, options?: NewsSearchOptions): Promise<SearchResponse>;\n\n  /**\n   * Search for images\n   * @param query - Search query\n   * @param options - Image search options\n   * @returns Promise resolving to image search results\n   */\n  abstract searchImages(query: string, options?: ImageSearchOptions): Promise<SearchResponse>;\n\n  /**\n   * Search for videos\n   * @param query - Search query\n   * @param options - Video search options\n   * @returns Promise resolving to video search results\n   */\n  abstract searchVideos(query: string, options?: VideoSearchOptions): Promise<SearchResponse>;\n\n  /**\n   * Get search suggestions for a query\n   * @param query - Partial search query\n   * @returns Promise resolving to array of suggestions\n   */\n  abstract getSuggestions(query: string): Promise<string[]>;\n\n  /**\n   * Get trending searches\n   * @param region - Optional region code\n   * @returns Promise resolving to trending search queries\n   */\n  abstract getTrendingSearches(region?: string): Promise<string[]>;\n\n  /**\n   * Get detailed information about a specific URL\n   * @param url - URL to analyze\n   * @returns Promise resolving to page information\n   */\n  abstract getPageInfo(url: string): Promise<{\n    title: string;\n    description: string;\n    content: string;\n    metadata: Record<string, string>;\n    images: string[];\n    links: string[];\n  }>;\n}\n",
    "import { Service, ServiceType } from './service';\n\nexport interface EmailAddress {\n  email: string;\n  name?: string;\n}\n\nexport interface EmailAttachment {\n  filename: string;\n  content: Buffer | string;\n  contentType?: string;\n  contentDisposition?: 'attachment' | 'inline';\n  cid?: string;\n}\n\nexport interface EmailMessage {\n  from: EmailAddress;\n  to: EmailAddress[];\n  cc?: EmailAddress[];\n  bcc?: EmailAddress[];\n  subject: string;\n  text?: string;\n  html?: string;\n  attachments?: EmailAttachment[];\n  replyTo?: EmailAddress;\n  date?: Date;\n  messageId?: string;\n  references?: string[];\n  inReplyTo?: string;\n  priority?: 'high' | 'normal' | 'low';\n}\n\nexport interface EmailSendOptions {\n  retry?: number;\n  timeout?: number;\n  trackOpens?: boolean;\n  trackClicks?: boolean;\n  tags?: string[];\n}\n\nexport interface EmailSearchOptions {\n  query?: string;\n  from?: string;\n  to?: string;\n  subject?: string;\n  folder?: string;\n  since?: Date;\n  before?: Date;\n  limit?: number;\n  offset?: number;\n  unread?: boolean;\n  flagged?: boolean;\n  hasAttachments?: boolean;\n}\n\nexport interface EmailFolder {\n  name: string;\n  path: string;\n  type: 'inbox' | 'sent' | 'drafts' | 'trash' | 'spam' | 'custom';\n  messageCount?: number;\n  unreadCount?: number;\n  children?: EmailFolder[];\n}\n\nexport interface EmailAccount {\n  email: string;\n  name?: string;\n  provider?: string;\n  folders?: EmailFolder[];\n  quotaUsed?: number;\n  quotaLimit?: number;\n}\n\n/**\n * Interface for email services\n */\nexport abstract class IEmailService extends Service {\n  static override readonly serviceType = ServiceType.EMAIL;\n\n  public readonly capabilityDescription = 'Email sending, receiving, and management capabilities';\n\n  /**\n   * Send an email\n   * @param message - Email message to send\n   * @param options - Send options\n   * @returns Promise resolving to message ID\n   */\n  abstract sendEmail(message: EmailMessage, options?: EmailSendOptions): Promise<string>;\n\n  /**\n   * Get emails from a folder\n   * @param options - Search options\n   * @returns Promise resolving to array of emails\n   */\n  abstract getEmails(options?: EmailSearchOptions): Promise<EmailMessage[]>;\n\n  /**\n   * Get a specific email by ID\n   * @param messageId - Message ID\n   * @returns Promise resolving to email message\n   */\n  abstract getEmail(messageId: string): Promise<EmailMessage>;\n\n  /**\n   * Delete an email\n   * @param messageId - Message ID\n   * @returns Promise resolving when deletion completes\n   */\n  abstract deleteEmail(messageId: string): Promise<void>;\n\n  /**\n   * Mark an email as read/unread\n   * @param messageId - Message ID\n   * @param read - True to mark as read, false for unread\n   * @returns Promise resolving when operation completes\n   */\n  abstract markEmailAsRead(messageId: string, read: boolean): Promise<void>;\n\n  /**\n   * Flag/unflag an email\n   * @param messageId - Message ID\n   * @param flagged - True to flag, false to unflag\n   * @returns Promise resolving when operation completes\n   */\n  abstract flagEmail(messageId: string, flagged: boolean): Promise<void>;\n\n  /**\n   * Move email to a different folder\n   * @param messageId - Message ID\n   * @param folderPath - Destination folder path\n   * @returns Promise resolving when move completes\n   */\n  abstract moveEmail(messageId: string, folderPath: string): Promise<void>;\n\n  /**\n   * Get available folders\n   * @returns Promise resolving to array of folders\n   */\n  abstract getFolders(): Promise<EmailFolder[]>;\n\n  /**\n   * Create a new folder\n   * @param folderName - Name of the folder\n   * @param parentPath - Optional parent folder path\n   * @returns Promise resolving when folder is created\n   */\n  abstract createFolder(folderName: string, parentPath?: string): Promise<void>;\n\n  /**\n   * Get account information\n   * @returns Promise resolving to account details\n   */\n  abstract getAccountInfo(): Promise<EmailAccount>;\n\n  /**\n   * Search emails\n   * @param query - Search query\n   * @param options - Search options\n   * @returns Promise resolving to search results\n   */\n  abstract searchEmails(query: string, options?: EmailSearchOptions): Promise<EmailMessage[]>;\n}\n",
    "import { Service, ServiceType } from './service';\nimport type { UUID } from './primitives';\n\nexport interface MessageParticipant {\n  id: UUID;\n  name: string;\n  username?: string;\n  avatar?: string;\n  status?: 'online' | 'offline' | 'away' | 'busy';\n}\n\nexport interface MessageAttachment {\n  id: UUID;\n  filename: string;\n  url: string;\n  mimeType: string;\n  size: number;\n  width?: number;\n  height?: number;\n  duration?: number;\n  thumbnail?: string;\n}\n\nexport interface MessageReaction {\n  emoji: string;\n  count: number;\n  users: UUID[];\n  hasReacted: boolean;\n}\n\nexport interface MessageReference {\n  messageId: UUID;\n  channelId: UUID;\n  type: 'reply' | 'forward' | 'quote';\n}\n\nexport interface MessageContent {\n  text?: string;\n  html?: string;\n  markdown?: string;\n  attachments?: MessageAttachment[];\n  reactions?: MessageReaction[];\n  reference?: MessageReference;\n  mentions?: UUID[];\n  embeds?: Array<{\n    title?: string;\n    description?: string;\n    url?: string;\n    image?: string;\n    fields?: Array<{\n      name: string;\n      value: string;\n      inline?: boolean;\n    }>;\n  }>;\n}\n\nexport interface MessageInfo {\n  id: UUID;\n  channelId: UUID;\n  senderId: UUID;\n  content: MessageContent;\n  timestamp: Date;\n  edited?: Date;\n  deleted?: Date;\n  pinned?: boolean;\n  thread?: {\n    id: UUID;\n    messageCount: number;\n    participants: UUID[];\n    lastMessageAt: Date;\n  };\n}\n\nexport interface MessageSendOptions {\n  replyTo?: UUID;\n  ephemeral?: boolean;\n  silent?: boolean;\n  scheduled?: Date;\n  thread?: UUID;\n  nonce?: string;\n}\n\nexport interface MessageSearchOptions {\n  query?: string;\n  channelId?: UUID;\n  senderId?: UUID;\n  before?: Date;\n  after?: Date;\n  limit?: number;\n  offset?: number;\n  hasAttachments?: boolean;\n  pinned?: boolean;\n  mentions?: UUID;\n}\n\nexport interface MessageChannel {\n  id: UUID;\n  name: string;\n  type: 'text' | 'voice' | 'dm' | 'group' | 'announcement' | 'thread';\n  description?: string;\n  participants?: MessageParticipant[];\n  permissions?: {\n    canSend: boolean;\n    canRead: boolean;\n    canDelete: boolean;\n    canPin: boolean;\n    canManage: boolean;\n  };\n  lastMessageAt?: Date;\n  messageCount?: number;\n  unreadCount?: number;\n}\n\n/**\n * Interface for messaging services\n */\nexport abstract class IMessageService extends Service {\n  static override readonly serviceType = ServiceType.MESSAGE;\n\n  public readonly capabilityDescription = 'Message sending, receiving, and management capabilities';\n\n  /**\n   * Send a message to a channel\n   * @param channelId - Channel ID\n   * @param content - Message content\n   * @param options - Send options\n   * @returns Promise resolving to message ID\n   */\n  abstract sendMessage(\n    channelId: UUID,\n    content: MessageContent,\n    options?: MessageSendOptions\n  ): Promise<UUID>;\n\n  /**\n   * Get messages from a channel\n   * @param channelId - Channel ID\n   * @param options - Search options\n   * @returns Promise resolving to array of messages\n   */\n  abstract getMessages(channelId: UUID, options?: MessageSearchOptions): Promise<MessageInfo[]>;\n\n  /**\n   * Get a specific message by ID\n   * @param messageId - Message ID\n   * @returns Promise resolving to message\n   */\n  abstract getMessage(messageId: UUID): Promise<MessageInfo>;\n\n  /**\n   * Edit a message\n   * @param messageId - Message ID\n   * @param content - New message content\n   * @returns Promise resolving when edit completes\n   */\n  abstract editMessage(messageId: UUID, content: MessageContent): Promise<void>;\n\n  /**\n   * Delete a message\n   * @param messageId - Message ID\n   * @returns Promise resolving when deletion completes\n   */\n  abstract deleteMessage(messageId: UUID): Promise<void>;\n\n  /**\n   * Add a reaction to a message\n   * @param messageId - Message ID\n   * @param emoji - Reaction emoji\n   * @returns Promise resolving when reaction is added\n   */\n  abstract addReaction(messageId: UUID, emoji: string): Promise<void>;\n\n  /**\n   * Remove a reaction from a message\n   * @param messageId - Message ID\n   * @param emoji - Reaction emoji\n   * @returns Promise resolving when reaction is removed\n   */\n  abstract removeReaction(messageId: UUID, emoji: string): Promise<void>;\n\n  /**\n   * Pin a message\n   * @param messageId - Message ID\n   * @returns Promise resolving when message is pinned\n   */\n  abstract pinMessage(messageId: UUID): Promise<void>;\n\n  /**\n   * Unpin a message\n   * @param messageId - Message ID\n   * @returns Promise resolving when message is unpinned\n   */\n  abstract unpinMessage(messageId: UUID): Promise<void>;\n\n  /**\n   * Get available channels\n   * @returns Promise resolving to array of channels\n   */\n  abstract getChannels(): Promise<MessageChannel[]>;\n\n  /**\n   * Get channel information\n   * @param channelId - Channel ID\n   * @returns Promise resolving to channel info\n   */\n  abstract getChannel(channelId: UUID): Promise<MessageChannel>;\n\n  /**\n   * Create a new channel\n   * @param name - Channel name\n   * @param type - Channel type\n   * @param options - Channel options\n   * @returns Promise resolving to new channel ID\n   */\n  abstract createChannel(\n    name: string,\n    type: MessageChannel['type'],\n    options?: {\n      description?: string;\n      participants?: UUID[];\n      private?: boolean;\n    }\n  ): Promise<UUID>;\n\n  /**\n   * Search messages across channels\n   * @param query - Search query\n   * @param options - Search options\n   * @returns Promise resolving to search results\n   */\n  abstract searchMessages(query: string, options?: MessageSearchOptions): Promise<MessageInfo[]>;\n}\n",
    "import { Service, ServiceType } from './service';\nimport type { UUID } from './primitives';\n\nexport interface PostMedia {\n  id: UUID;\n  url: string;\n  type: 'image' | 'video' | 'audio' | 'document';\n  mimeType: string;\n  size: number;\n  width?: number;\n  height?: number;\n  duration?: number;\n  thumbnail?: string;\n  description?: string;\n  altText?: string;\n}\n\nexport interface PostLocation {\n  name: string;\n  address?: string;\n  coordinates?: {\n    latitude: number;\n    longitude: number;\n  };\n  placeId?: string;\n}\n\nexport interface PostAuthor {\n  id: UUID;\n  username: string;\n  displayName: string;\n  avatar?: string;\n  verified?: boolean;\n  followerCount?: number;\n  followingCount?: number;\n  bio?: string;\n  website?: string;\n}\n\nexport interface PostEngagement {\n  likes: number;\n  shares: number;\n  comments: number;\n  views?: number;\n  hasLiked: boolean;\n  hasShared: boolean;\n  hasCommented: boolean;\n  hasSaved: boolean;\n}\n\nexport interface PostContent {\n  text?: string;\n  html?: string;\n  media?: PostMedia[];\n  location?: PostLocation;\n  tags?: string[];\n  mentions?: UUID[];\n  links?: Array<{\n    url: string;\n    title?: string;\n    description?: string;\n    image?: string;\n  }>;\n  poll?: {\n    question: string;\n    options: Array<{\n      text: string;\n      votes: number;\n    }>;\n    expiresAt?: Date;\n    multipleChoice?: boolean;\n  };\n}\n\nexport interface PostInfo {\n  id: UUID;\n  author: PostAuthor;\n  content: PostContent;\n  platform: string;\n  platformId: string;\n  url: string;\n  createdAt: Date;\n  editedAt?: Date;\n  scheduledAt?: Date;\n  engagement: PostEngagement;\n  visibility: 'public' | 'private' | 'followers' | 'friends' | 'unlisted';\n  replyTo?: UUID;\n  thread?: {\n    id: UUID;\n    position: number;\n    total: number;\n  };\n  crossPosted?: Array<{\n    platform: string;\n    platformId: string;\n    url: string;\n  }>;\n}\n\nexport interface PostCreateOptions {\n  platforms?: string[];\n  scheduledAt?: Date;\n  visibility?: PostInfo['visibility'];\n  replyTo?: UUID;\n  thread?: boolean;\n  location?: PostLocation;\n  tags?: string[];\n  mentions?: UUID[];\n  enableComments?: boolean;\n  enableSharing?: boolean;\n  contentWarning?: string;\n  sensitive?: boolean;\n}\n\nexport interface PostSearchOptions {\n  query?: string;\n  author?: UUID;\n  platform?: string;\n  tags?: string[];\n  mentions?: UUID[];\n  since?: Date;\n  before?: Date;\n  limit?: number;\n  offset?: number;\n  hasMedia?: boolean;\n  hasLocation?: boolean;\n  visibility?: PostInfo['visibility'];\n  sortBy?: 'date' | 'engagement' | 'relevance';\n}\n\nexport interface PostAnalytics {\n  postId: UUID;\n  platform: string;\n  impressions: number;\n  reach: number;\n  engagement: PostEngagement;\n  clicks: number;\n  shares: number;\n  saves: number;\n  demographics?: {\n    age?: Record<string, number>;\n    gender?: Record<string, number>;\n    location?: Record<string, number>;\n  };\n  topPerformingHours?: Array<{\n    hour: number;\n    engagement: number;\n  }>;\n}\n\n/**\n * Interface for social media posting services\n */\nexport abstract class IPostService extends Service {\n  static override readonly serviceType = ServiceType.POST;\n\n  public readonly capabilityDescription =\n    'Social media posting and content management capabilities';\n\n  /**\n   * Create and publish a new post\n   * @param content - Post content\n   * @param options - Publishing options\n   * @returns Promise resolving to post ID\n   */\n  abstract createPost(content: PostContent, options?: PostCreateOptions): Promise<UUID>;\n\n  /**\n   * Get posts from timeline or specific user\n   * @param options - Search options\n   * @returns Promise resolving to array of posts\n   */\n  abstract getPosts(options?: PostSearchOptions): Promise<PostInfo[]>;\n\n  /**\n   * Get a specific post by ID\n   * @param postId - Post ID\n   * @returns Promise resolving to post info\n   */\n  abstract getPost(postId: UUID): Promise<PostInfo>;\n\n  /**\n   * Edit an existing post\n   * @param postId - Post ID\n   * @param content - New post content\n   * @returns Promise resolving when edit completes\n   */\n  abstract editPost(postId: UUID, content: PostContent): Promise<void>;\n\n  /**\n   * Delete a post\n   * @param postId - Post ID\n   * @returns Promise resolving when deletion completes\n   */\n  abstract deletePost(postId: UUID): Promise<void>;\n\n  /**\n   * Like/unlike a post\n   * @param postId - Post ID\n   * @param like - True to like, false to unlike\n   * @returns Promise resolving when operation completes\n   */\n  abstract likePost(postId: UUID, like: boolean): Promise<void>;\n\n  /**\n   * Share/repost a post\n   * @param postId - Post ID\n   * @param comment - Optional comment when sharing\n   * @returns Promise resolving to share ID\n   */\n  abstract sharePost(postId: UUID, comment?: string): Promise<UUID>;\n\n  /**\n   * Save/unsave a post\n   * @param postId - Post ID\n   * @param save - True to save, false to unsave\n   * @returns Promise resolving when operation completes\n   */\n  abstract savePost(postId: UUID, save: boolean): Promise<void>;\n\n  /**\n   * Comment on a post\n   * @param postId - Post ID\n   * @param content - Comment content\n   * @returns Promise resolving to comment ID\n   */\n  abstract commentOnPost(postId: UUID, content: PostContent): Promise<UUID>;\n\n  /**\n   * Get comments for a post\n   * @param postId - Post ID\n   * @param options - Search options\n   * @returns Promise resolving to array of comments\n   */\n  abstract getComments(postId: UUID, options?: PostSearchOptions): Promise<PostInfo[]>;\n\n  /**\n   * Schedule a post for later publishing\n   * @param content - Post content\n   * @param scheduledAt - When to publish\n   * @param options - Publishing options\n   * @returns Promise resolving to scheduled post ID\n   */\n  abstract schedulePost(\n    content: PostContent,\n    scheduledAt: Date,\n    options?: PostCreateOptions\n  ): Promise<UUID>;\n\n  /**\n   * Get analytics for a post\n   * @param postId - Post ID\n   * @returns Promise resolving to post analytics\n   */\n  abstract getPostAnalytics(postId: UUID): Promise<PostAnalytics>;\n\n  /**\n   * Get trending posts\n   * @param options - Search options\n   * @returns Promise resolving to trending posts\n   */\n  abstract getTrendingPosts(options?: PostSearchOptions): Promise<PostInfo[]>;\n\n  /**\n   * Search posts across platforms\n   * @param query - Search query\n   * @param options - Search options\n   * @returns Promise resolving to search results\n   */\n  abstract searchPosts(query: string, options?: PostSearchOptions): Promise<PostInfo[]>;\n}\n",
    "/**\n * Interface for interacting with a document.\n */\nexport class Document {\n    constructor(fields) {\n        Object.defineProperty(this, \"pageContent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The ID field is optional at the moment.\n        // It will likely become required in a future major release after\n        // it has been adopted by enough vectorstore implementations.\n        /**\n         * An optional identifier for the document.\n         *\n         * Ideally this should be unique across the document collection and formatted\n         * as a UUID, but this will not be enforced.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pageContent =\n            fields.pageContent !== undefined ? fields.pageContent.toString() : \"\";\n        this.metadata = fields.metadata ?? {};\n        this.id = fields.id;\n    }\n}\n",
    "import { z } from \"zod/v3\";\nimport pRetry from \"p-retry\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { isTraceableFunction, } from \"langsmith/singletons/traceable\";\nimport { LogStreamCallbackHandler, RunLog, RunLogPatch, isLogStreamHandler, } from \"../tracers/log_stream.js\";\nimport { EventStreamCallbackHandler, isStreamEventsHandler, } from \"../tracers/event_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { IterableReadableStream, concat, atee, pipeGeneratorWithSetup, AsyncGeneratorWithSetup, } from \"../utils/stream.js\";\nimport { raceWithSignal } from \"../utils/signal.js\";\nimport { DEFAULT_RECURSION_LIMIT, ensureConfig, getCallbackManagerForConfig, mergeConfigs, patchConfig, pickRunnableConfigKeys, } from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\nimport { _RootEventFilter, isRunnableInterface } from \"./utils.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { Graph } from \"./graph.js\";\nimport { convertToHttpEventStream } from \"./wrappers.js\";\nimport { consumeAsyncIterableInContext, consumeIteratorInContext, isAsyncIterable, isIterableIterator, isIterator, } from \"./iter.js\";\nimport { _isToolCall, ToolInputParsingException } from \"../tools/utils.js\";\nimport { getSchemaDescription, interopParseAsync, isSimpleStringZodSchema, } from \"../utils/types/zod.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport class Runnable extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     *\n     * @deprecated This will be removed in the next breaking release.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param fields.stopAfterAttempt The number of attempts to retry.\n     * @param fields.onFailedAttempt A function that is called when a retry fails.\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        const fallbacks = Array.isArray(fields) ? fields : fields.fallbacks;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options) && options.length !== length) {\n            throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n        }\n        if (Array.isArray(options)) {\n            return options.map(ensureConfig);\n        }\n        if (length > 1 && !Array.isArray(options) && options.runId) {\n            console.warn(\"Provided runId will be used only for the first element of the batch.\");\n            const subsequent = Object.fromEntries(Object.entries(options).filter(([key]) => key !== \"runId\"));\n            return Array.from({ length }, (_, i) => ensureConfig(i === 0 ? options : subsequent));\n        }\n        return Array.from({ length }, () => ensureConfig(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const caller = new AsyncCaller({\n            maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        // Buffer the first streamed chunk to allow for initial errors\n        // to surface immediately.\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this._streamIterator(input, config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    _separateRunnableConfigFromCallOptions(options) {\n        let runnableConfig;\n        if (options === undefined) {\n            runnableConfig = ensureConfig(options);\n        }\n        else {\n            runnableConfig = ensureConfig({\n                callbacks: options.callbacks,\n                tags: options.tags,\n                metadata: options.metadata,\n                runName: options.runName,\n                configurable: options.configurable,\n                recursionLimit: options.recursionLimit,\n                maxConcurrency: options.maxConcurrency,\n                runId: options.runId,\n                timeout: options.timeout,\n                signal: options.signal,\n            });\n        }\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        delete callOptions.recursionLimit;\n        delete callOptions.maxConcurrency;\n        delete callOptions.runId;\n        delete callOptions.timeout;\n        delete callOptions.signal;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, config?.runType, undefined, undefined, config?.runName ?? this.getName());\n        delete config.runId;\n        let output;\n        try {\n            const promise = func.call(this, input, config, runManager);\n            output = await raceWithSignal(promise, options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), optionsList[i].runId, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName());\n            delete optionsList[i].runId;\n            return handleStartRes;\n        }));\n        let outputs;\n        try {\n            const promise = func.call(this, inputs, optionsList, runManagers, batchOptions);\n            outputs = await raceWithSignal(promise, optionsList?.[0]?.signal);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /** @internal */\n    _concatOutputChunks(first, second) {\n        return concat(first, second);\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const outerThis = this;\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            finalInput = outerThis._concatOutputChunks(finalInput, \n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await pipeGeneratorWithSetup(transformer.bind(this), wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, config.runId, config.runType, undefined, undefined, config.runName ?? this.getName()), options?.signal, config);\n            delete config.runId;\n            runManager = pipe.setup;\n            const streamEventsHandler = runManager?.handlers.find(isStreamEventsHandler);\n            let iterator = pipe.output;\n            if (streamEventsHandler !== undefined && runManager !== undefined) {\n                iterator = streamEventsHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n            if (streamLogHandler !== undefined && runManager !== undefined) {\n                iterator = streamLogHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            for await (const chunk of iterator) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            finalOutput = this._concatOutputChunks(finalOutput, \n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    getGraph(_) {\n        const graph = new Graph();\n        // TODO: Add input schema for runnables\n        const inputNode = graph.addNode({\n            name: `${this.getName()}Input`,\n            schema: z.any(),\n        });\n        const runnableNode = graph.addNode(this);\n        // TODO: Add output schemas for runnables\n        const outputNode = graph.addNode({\n            name: `${this.getName()}Output`,\n            schema: z.any(),\n        });\n        graph.addEdge(inputNode, runnableNode);\n        graph.addEdge(runnableNode, outputNode);\n        return graph;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = this._concatOutputChunks(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, ensureConfig(options));\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"original\",\n        });\n        const config = ensureConfig(options);\n        yield* this._streamLog(input, logStreamCallbackHandler, config);\n    }\n    async *_streamLog(input, logStreamCallbackHandler, config) {\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = [logStreamCallbackHandler];\n        }\n        else if (Array.isArray(callbacks)) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(logStreamCallbackHandler, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStreamPromise = this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await runnableStreamPromise;\n                for await (const chunk of runnableStream) {\n                    const patch = new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await logStreamCallbackHandler.writer.write(patch);\n                }\n            }\n            finally {\n                await logStreamCallbackHandler.writer.close();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        try {\n            for await (const log of logStreamCallbackHandler) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    streamEvents(input, options, streamOptions) {\n        let stream;\n        if (options.version === \"v1\") {\n            stream = this._streamEventsV1(input, options, streamOptions);\n        }\n        else if (options.version === \"v2\") {\n            stream = this._streamEventsV2(input, options, streamOptions);\n        }\n        else {\n            throw new Error(`Only versions \"v1\" and \"v2\" of the schema are currently supported.`);\n        }\n        if (options.encoding === \"text/event-stream\") {\n            return convertToHttpEventStream(stream);\n        }\n        else {\n            return IterableReadableStream.fromAsyncGenerator(stream);\n        }\n    }\n    async *_streamEventsV2(input, options, streamOptions) {\n        const eventStreamer = new EventStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n        });\n        const config = ensureConfig(options);\n        const runId = config.runId ?? uuidv4();\n        config.runId = runId;\n        const callbacks = config.callbacks;\n        if (callbacks === undefined) {\n            config.callbacks = [eventStreamer];\n        }\n        else if (Array.isArray(callbacks)) {\n            config.callbacks = callbacks.concat(eventStreamer);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(eventStreamer, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const abortController = new AbortController();\n        // Call the runnable in streaming mode,\n        // add each chunk to the output stream\n        const outerThis = this;\n        async function consumeRunnableStream() {\n            let signal;\n            let listener = null;\n            try {\n                if (options?.signal) {\n                    if (\"any\" in AbortSignal) {\n                        // Use native AbortSignal.any() if available (Node 19+)\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        signal = AbortSignal.any([\n                            abortController.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        // Fallback for Node 18 and below - just use the provided signal\n                        signal = options.signal;\n                        // Ensure we still abort our controller when the parent signal aborts\n                        listener = () => {\n                            abortController.abort();\n                        };\n                        options.signal.addEventListener(\"abort\", listener, { once: true });\n                    }\n                }\n                else {\n                    signal = abortController.signal;\n                }\n                const runnableStream = await outerThis.stream(input, {\n                    ...config,\n                    signal,\n                });\n                const tappedStream = eventStreamer.tapOutputIterable(runId, runnableStream);\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                for await (const _ of tappedStream) {\n                    // Just iterate so that the callback handler picks up events\n                    if (abortController.signal.aborted)\n                        break;\n                }\n            }\n            finally {\n                await eventStreamer.finish();\n                if (signal && listener) {\n                    signal.removeEventListener(\"abort\", listener);\n                }\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        let firstEventSent = false;\n        let firstEventRunId;\n        try {\n            for await (const event of eventStreamer) {\n                // This is a work-around an issue where the inputs into the\n                // chain are not available until the entire input is consumed.\n                // As a temporary solution, we'll modify the input to be the input\n                // that was passed into the chain.\n                if (!firstEventSent) {\n                    event.data.input = input;\n                    firstEventSent = true;\n                    firstEventRunId = event.run_id;\n                    yield event;\n                    continue;\n                }\n                if (event.run_id === firstEventRunId && event.event.endsWith(\"_end\")) {\n                    // If it's the end event corresponding to the root runnable\n                    // we dont include the input in the event since it's guaranteed\n                    // to be included in the first event.\n                    if (event.data?.input) {\n                        delete event.data.input;\n                    }\n                }\n                yield event;\n            }\n        }\n        finally {\n            abortController.abort();\n            await runnableStreamConsumePromise;\n        }\n    }\n    async *_streamEventsV1(input, options, streamOptions) {\n        let runLog;\n        let hasEncounteredStartEvent = false;\n        const config = ensureConfig(options);\n        const rootTags = config.tags ?? [];\n        const rootMetadata = config.metadata ?? {};\n        const rootName = config.runName ?? this.getName();\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"streaming_events\",\n        });\n        const rootEventFilter = new _RootEventFilter({\n            ...streamOptions,\n        });\n        const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n        for await (const log of logStream) {\n            if (!runLog) {\n                runLog = RunLog.fromRunLogPatch(log);\n            }\n            else {\n                runLog = runLog.concat(log);\n            }\n            if (runLog.state === undefined) {\n                throw new Error(`Internal error: \"streamEvents\" state is missing. Please open a bug report.`);\n            }\n            // Yield the start event for the root runnable if it hasn't been seen.\n            // The root run is never filtered out\n            if (!hasEncounteredStartEvent) {\n                hasEncounteredStartEvent = true;\n                const state = { ...runLog.state };\n                const event = {\n                    run_id: state.id,\n                    event: `on_${state.type}_start`,\n                    name: rootName,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    data: {\n                        input,\n                    },\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n            const paths = log.ops\n                .filter((op) => op.path.startsWith(\"/logs/\"))\n                .map((op) => op.path.split(\"/\")[2]);\n            const dedupedPaths = [...new Set(paths)];\n            for (const path of dedupedPaths) {\n                let eventType;\n                let data = {};\n                const logEntry = runLog.state.logs[path];\n                if (logEntry.end_time === undefined) {\n                    if (logEntry.streamed_output.length > 0) {\n                        eventType = \"stream\";\n                    }\n                    else {\n                        eventType = \"start\";\n                    }\n                }\n                else {\n                    eventType = \"end\";\n                }\n                if (eventType === \"start\") {\n                    // Include the inputs with the start event if they are available.\n                    // Usually they will NOT be available for components that operate\n                    // on streams, since those components stream the input and\n                    // don't know its final value until the end of the stream.\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                }\n                else if (eventType === \"end\") {\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                    data.output = logEntry.final_output;\n                }\n                else if (eventType === \"stream\") {\n                    const chunkCount = logEntry.streamed_output.length;\n                    if (chunkCount !== 1) {\n                        throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`);\n                    }\n                    data = { chunk: logEntry.streamed_output[0] };\n                    // Clean up the stream, we don't need it anymore.\n                    // And this avoids duplicates as well!\n                    logEntry.streamed_output = [];\n                }\n                yield {\n                    event: `on_${logEntry.type}_${eventType}`,\n                    name: logEntry.name,\n                    run_id: logEntry.id,\n                    tags: logEntry.tags,\n                    metadata: logEntry.metadata,\n                    data,\n                };\n            }\n            // Finally, we take care of the streaming output from the root chain\n            // if there is any.\n            const { state } = runLog;\n            if (state.streamed_output.length > 0) {\n                const chunkCount = state.streamed_output.length;\n                if (chunkCount !== 1) {\n                    throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`);\n                }\n                const data = { chunk: state.streamed_output[0] };\n                // Clean up the stream, we don't need it anymore.\n                state.streamed_output = [];\n                const event = {\n                    event: `on_${state.type}_stream`,\n                    run_id: state.id,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    name: rootName,\n                    data,\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n        }\n        const state = runLog?.state;\n        if (state !== undefined) {\n            // Finally, yield the end event for the root runnable.\n            const event = {\n                event: `on_${state.type}_end`,\n                name: rootName,\n                run_id: state.id,\n                tags: rootTags,\n                metadata: rootMetadata,\n                data: {\n                    output: state.final_output,\n                },\n            };\n            if (rootEventFilter.includeEvent(event, state.type))\n                yield event;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return isRunnableInterface(thing);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n    /**\n     * Convert a runnable to a tool. Return a new instance of `RunnableToolLike`\n     * which contains the runnable, name, description and schema.\n     *\n     * @template {T extends RunInput = RunInput} RunInput - The input type of the runnable. Should be the same as the `RunInput` type of the runnable.\n     *\n     * @param fields\n     * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n     * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n     * @param {z.ZodType<T>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n     * @returns {RunnableToolLike<z.ZodType<T>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n     */\n    asTool(fields) {\n        return convertRunnableToTool(this, fields);\n    }\n}\n/**\n * Wraps a runnable and applies partial config upon invocation.\n *\n * @example\n * ```typescript\n * import {\n *   type RunnableConfig,\n *   RunnableLambda,\n * } from \"@langchain/core/runnables\";\n *\n * const enhanceProfile = (\n *   profile: Record<string, any>,\n *   config?: RunnableConfig\n * ) => {\n *   if (config?.configurable?.role) {\n *     return { ...profile, role: config.configurable.role };\n *   }\n *   return profile;\n * };\n *\n * const runnable = RunnableLambda.from(enhanceProfile);\n *\n * // Bind configuration to the runnable to set the user's role dynamically\n * const adminRunnable = runnable.bind({ configurable: { role: \"Admin\" } });\n * const userRunnable = runnable.bind({ configurable: { role: \"User\" } });\n *\n * const result1 = await adminRunnable.invoke({\n *   name: \"Alice\",\n *   email: \"alice@example.com\"\n * });\n *\n * // { name: \"Alice\", email: \"alice@example.com\", role: \"Admin\" }\n *\n * const result2 = await userRunnable.invoke({\n *   name: \"Bob\",\n *   email: \"bob@example.com\"\n * });\n *\n * // { name: \"Bob\", email: \"bob@example.com\", role: \"User\" }\n * ```\n */\nexport class RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(...options) {\n        const config = mergeConfigs(this.config, ...options);\n        return mergeConfigs(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableBinding` class that is bound with the specified arguments.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig(ensureConfig(individualOption), this.kwargs)))\n            : await this._mergeConfig(ensureConfig(options), this.kwargs);\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    /** @internal */\n    _concatOutputChunks(first, second) {\n        return this.bound._concatOutputChunks(first, second);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async *transform(generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    streamEvents(input, options, streamOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const outerThis = this;\n        const generator = async function* () {\n            yield* outerThis.bound.streamEvents(input, {\n                ...(await outerThis._mergeConfig(ensureConfig(options), outerThis.kwargs)),\n                version: options.version,\n            }, streamOptions);\n        };\n        return IterableReadableStream.fromAsyncGenerator(generator());\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n * @example\n * ```typescript\n * import { RunnableEach, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const toUpperCase = (input: string): string => input.toUpperCase();\n * const addGreeting = (input: string): string => `Hello, ${input}!`;\n *\n * const upperCaseLambda = RunnableLambda.from(toUpperCase);\n * const greetingLambda = RunnableLambda.from(addGreeting);\n *\n * const chain = new RunnableEach({\n *   bound: upperCaseLambda.pipe(greetingLambda),\n * });\n *\n * const result = await chain.invoke([\"alice\", \"bob\", \"carol\"])\n *\n * // [\"Hello, ALICE!\", \"Hello, BOB!\", \"Hello, CAROL!\"]\n * ```\n *\n * @deprecated This will be removed in the next breaking release.\n */\nexport class RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke.bind(this), inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, patchConfig(config, { callbacks: runManager?.getChild() }));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableRetry,\n * } from \"@langchain/core/runnables\";\n *\n * // Simulate an API call that fails\n * const simulateApiCall = (input: string): string => {\n *   console.log(`Attempting API call with input: ${input}`);\n *   throw new Error(\"API call failed due to network issue\");\n * };\n *\n * const apiCallLambda = RunnableLambda.from(simulateApiCall);\n *\n * // Apply retry logic using the .withRetry() method\n * const apiCallWithRetry = apiCallLambda.withRetry({ stopAfterAttempt: 3 });\n *\n * // Alternatively, create a RunnableRetry instance manually\n * const manualRetry = new RunnableRetry({\n *   bound: apiCallLambda,\n *   maxAttemptNumber: 3,\n *   config: {},\n * });\n *\n * // Example invocation using the .withRetry() method\n * const res = await apiCallWithRetry\n *   .invoke(\"Request 1\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n *\n * // Example invocation using the manual retry instance\n * const res2 = await manualRetry\n *   .invoke(\"Request 2\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n * ```\n */\nexport class RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return patchConfig(config, { callbacks: runManager?.getChild(tag) });\n    }\n    async _invoke(input, config, runManager) {\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onFailedAttempt: (error) => this.onFailedAttempt(error, input),\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke.bind(this), input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await pRetry(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            firstException.input = remainingInputs[i];\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onFailedAttempt: (error) => this.onFailedAttempt(error, error.input),\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({ model: \"gpt-4o-mini\" })]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"omitSequenceTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n        this.omitSequenceTags = fields.omitSequenceTags ?? this.omitSequenceTags;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                const promise = step.invoke(nextStepInput, patchConfig(config, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n                nextStepInput = await raceWithSignal(promise, options?.signal);\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            if (options?.signal?.aborted) {\n                throw new Error(\"Aborted\");\n            }\n            finalOutput = await this.last.invoke(nextStepInput, patchConfig(config, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${this.steps.length}`),\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        try {\n            for (let i = 0; i < this.steps.length; i += 1) {\n                const step = this.steps[i];\n                const promise = step.batch(nextStepInputs, runManagers.map((runManager, j) => {\n                    const childRunManager = runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`);\n                    return patchConfig(configList[j], { callbacks: childRunManager });\n                }), batchOptions);\n                nextStepInputs = await raceWithSignal(promise, configList[0]?.signal);\n            }\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))));\n        return nextStepInputs;\n    }\n    /** @internal */\n    _concatOutputChunks(first, second) {\n        return this.last._concatOutputChunks(first, second);\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), patchConfig(otherOptions, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:1`),\n            }));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, patchConfig(otherOptions, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n            }\n            for await (const chunk of finalGenerator) {\n                options?.signal?.throwIfAborted();\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = this._concatOutputChunks(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    getGraph(config) {\n        const graph = new Graph();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let currentLastNode = null;\n        this.steps.forEach((step, index) => {\n            const stepGraph = step.getGraph(config);\n            if (index !== 0) {\n                stepGraph.trimFirstNode();\n            }\n            if (index !== this.steps.length - 1) {\n                stepGraph.trimLastNode();\n            }\n            graph.extend(stepGraph);\n            const stepFirstNode = stepGraph.firstNode();\n            if (!stepFirstNode) {\n                throw new Error(`Runnable ${step} has no first node`);\n            }\n            if (currentLastNode) {\n                graph.addEdge(currentLastNode, stepFirstNode);\n            }\n            currentLastNode = stepGraph.lastNode();\n        });\n        return graph;\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], nameOrFields) {\n        let extra = {};\n        if (typeof nameOrFields === \"string\") {\n            extra.name = nameOrFields;\n        }\n        else if (nameOrFields !== undefined) {\n            extra = nameOrFields;\n        }\n        return new RunnableSequence({\n            ...extra,\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            const promises = Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`map:key:${key}`),\n                }));\n            });\n            await raceWithSignal(Promise.all(promises), options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = atee(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], patchConfig(options, {\n                callbacks: runManager?.getChild(`map:key:${key}`),\n            }));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const promise = Promise.race(tasks.values());\n            const { key, result, gen } = await raceWithSignal(promise, options?.signal);\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that wraps a traced LangSmith function.\n */\nexport class RunnableTraceable extends Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isTraceableFunction(fields.func)) {\n            throw new Error(\"RunnableTraceable requires a function that is wrapped in traceable higher-order function\");\n        }\n        this.func = fields.func;\n    }\n    async invoke(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const callbacks = await getCallbackManagerForConfig(config);\n        const promise = this.func(patchConfig(config, { callbacks }), input);\n        return raceWithSignal(promise, config?.signal);\n    }\n    async *_streamIterator(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const result = await this.invoke(input, options);\n        if (isAsyncIterable(result)) {\n            for await (const item of result) {\n                config?.signal?.throwIfAborted();\n                yield item;\n            }\n            return;\n        }\n        if (isIterator(result)) {\n            while (true) {\n                config?.signal?.throwIfAborted();\n                const state = result.next();\n                if (state.done)\n                    break;\n                yield state.value;\n            }\n            return;\n        }\n        yield result;\n    }\n    static from(func) {\n        return new RunnableTraceable({ func });\n    }\n}\nfunction assertNonTraceableFunction(func) {\n    if (isTraceableFunction(func)) {\n        throw new Error(\"RunnableLambda requires a function that is not wrapped in traceable higher-order function. This shouldn't happen.\");\n    }\n}\n/**\n * A runnable that wraps an arbitrary function that takes a single argument.\n * @example\n * ```typescript\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const add = (input: { x: number; y: number }) => input.x + input.y;\n *\n * const multiply = (input: { value: number; multiplier: number }) =>\n *   input.value * input.multiplier;\n *\n * // Create runnables for the functions\n * const addLambda = RunnableLambda.from(add);\n * const multiplyLambda = RunnableLambda.from(multiply);\n *\n * // Chain the lambdas for a mathematical operation\n * const chainedLambda = addLambda.pipe((result) =>\n *   multiplyLambda.invoke({ value: result, multiplier: 2 })\n * );\n *\n * // Example invocation of the chainedLambda\n * const result = await chainedLambda.invoke({ x: 2, y: 3 });\n *\n * // Will log \"10\" (since (2 + 3) * 2 = 10)\n * ```\n */\nexport class RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        if (isTraceableFunction(fields.func)) {\n            // eslint-disable-next-line no-constructor-return\n            return RunnableTraceable.from(fields.func);\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        assertNonTraceableFunction(fields.func);\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = patchConfig(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n            });\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    let output = await this.func(input, {\n                        ...childConfig,\n                    });\n                    if (output && Runnable.isRunnable(output)) {\n                        if (config?.recursionLimit === 0) {\n                            throw new Error(\"Recursion limit reached.\");\n                        }\n                        output = await output.invoke(input, {\n                            ...childConfig,\n                            recursionLimit: (childConfig.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n                        });\n                    }\n                    else if (isAsyncIterable(output)) {\n                        let finalOutput;\n                        for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    finalOutput = this._concatOutputChunks(finalOutput, \n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    else if (isIterableIterator(output)) {\n                        let finalOutput;\n                        for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    finalOutput = this._concatOutputChunks(finalOutput, \n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke.bind(this), input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = this._concatOutputChunks(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const childConfig = patchConfig(config, {\n            callbacks: runManager?.getChild(),\n            recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n        });\n        const output = await new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    const res = await this.func(finalChunk, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    resolve(res);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, childConfig);\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else if (isAsyncIterable(output)) {\n            for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else if (isIterableIterator(output)) {\n            for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const addYears = (age: number): number => age + 5;\n * const yearsToFifty = (age: number): number => 50 - age;\n * const yearsToHundred = (age: number): number => 100 - age;\n *\n * const addYearsLambda = RunnableLambda.from(addYears);\n * const milestoneFiftyLambda = RunnableLambda.from(yearsToFifty);\n * const milestoneHundredLambda = RunnableLambda.from(yearsToHundred);\n *\n * // Pipe will coerce objects into RunnableParallel by default, but we\n * // explicitly instantiate one here to demonstrate\n * const sequence = addYearsLambda.pipe(\n *   RunnableParallel.from({\n *     years_to_fifty: milestoneFiftyLambda,\n *     years_to_hundred: milestoneHundredLambda,\n *   })\n * );\n *\n * // Invoke the sequence with a single age input\n * const res = await sequence.invoke(25);\n *\n * // { years_to_fifty: 20, years_to_hundred: 70 }\n * ```\n */\nexport class RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n * External APIs (e.g., APIs for a language model) may at times experience\n * degraded performance or even downtime.\n *\n * In these cases, it can be useful to have a fallback Runnable that can be\n * used in place of the original Runnable (e.g., fallback to another LLM provider).\n *\n * Fallbacks can be defined at the level of a single Runnable, or at the level\n * of a chain of Runnables. Fallbacks are tried in order until one succeeds or\n * all fail.\n *\n * While you can instantiate a `RunnableWithFallbacks` directly, it is usually\n * more convenient to use the `withFallbacks` method on an existing Runnable.\n *\n * When streaming, fallbacks will only be called on failures during the initial\n * stream creation. Errors that occur after a stream starts will not fallback\n * to the next Runnable.\n *\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableWithFallbacks,\n * } from \"@langchain/core/runnables\";\n *\n * const primaryOperation = (input: string): string => {\n *   if (input !== \"safe\") {\n *     throw new Error(\"Primary operation failed due to unsafe input\");\n *   }\n *   return `Processed: ${input}`;\n * };\n *\n * // Define a fallback operation that processes the input differently\n * const fallbackOperation = (input: string): string =>\n *   `Fallback processed: ${input}`;\n *\n * const primaryRunnable = RunnableLambda.from(primaryOperation);\n * const fallbackRunnable = RunnableLambda.from(fallbackOperation);\n *\n * // Apply the fallback logic using the .withFallbacks() method\n * const runnableWithFallback = primaryRunnable.withFallbacks([fallbackRunnable]);\n *\n * // Alternatively, create a RunnableWithFallbacks instance manually\n * const manualFallbackChain = new RunnableWithFallbacks({\n *   runnable: primaryRunnable,\n *   fallbacks: [fallbackRunnable],\n * });\n *\n * // Example invocation using .withFallbacks()\n * const res = await runnableWithFallback\n *   .invoke(\"unsafe input\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Fallback processed: unsafe input\"\n *\n * // Example invocation using manual instantiation\n * const res = await manualFallbackChain\n *   .invoke(\"safe\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Processed: safe\"\n * ```\n */\nexport class RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        const childConfig = patchConfig(otherConfigFields, {\n            callbacks: runManager?.getChild(),\n        });\n        const res = await AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n            let firstError;\n            for (const runnable of this.runnables()) {\n                config?.signal?.throwIfAborted();\n                try {\n                    const output = await runnable.invoke(input, childConfig);\n                    await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                    return output;\n                }\n                catch (e) {\n                    if (firstError === undefined) {\n                        firstError = e;\n                    }\n                }\n            }\n            if (firstError === undefined) {\n                throw new Error(\"No error stored at end of fallback.\");\n            }\n            await runManager?.handleChainError(firstError);\n            throw firstError;\n        });\n        return res;\n    }\n    async *_streamIterator(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        let firstError;\n        let stream;\n        for (const runnable of this.runnables()) {\n            config?.signal?.throwIfAborted();\n            const childConfig = patchConfig(otherConfigFields, {\n                callbacks: runManager?.getChild(),\n            });\n            try {\n                const originalStream = await runnable.stream(input, childConfig);\n                stream = consumeAsyncIterableInContext(childConfig, originalStream);\n                break;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (stream === undefined) {\n            const error = firstError ?? new Error(\"No error stored at end of fallback.\");\n            await runManager?.handleChainError(error);\n            throw error;\n        }\n        let output;\n        try {\n            for await (const chunk of stream) {\n                yield chunk;\n                try {\n                    output =\n                        output === undefined\n                            ? output\n                            : this._concatOutputChunks(output, chunk);\n                }\n                catch (e) {\n                    output = undefined;\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => getCallbackManagerForConfig(config)));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            configList[0].signal?.throwIfAborted();\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => patchConfig(configList[j], {\n                    callbacks: runManager?.getChild(),\n                })), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * @example\n * ```typescript\n * import {\n *   RunnableAssign,\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const calculateAge = (x: { birthYear: number }): { age: number } => {\n *   const currentYear = new Date().getFullYear();\n *   return { age: currentYear - x.birthYear };\n * };\n *\n * const createGreeting = (x: { name: string }): { greeting: string } => {\n *   return { greeting: `Hello, ${x.name}!` };\n * };\n *\n * const mapper = RunnableParallel.from({\n *   age_step: RunnableLambda.from(calculateAge),\n *   greeting_step: RunnableLambda.from(createGreeting),\n * });\n *\n * const runnableAssign = new RunnableAssign({ mapper });\n *\n * const res = await runnableAssign.invoke({ name: \"Alice\", birthYear: 1990 });\n *\n * // { name: \"Alice\", birthYear: 1990, age_step: { age: 34 }, greeting_step: { greeting: \"Hello, Alice!\" } }\n * ```\n */\nexport class RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = atee(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, patchConfig(options, { callbacks: runManager?.getChild() }));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * Useful for streaming, can be automatically created and chained by calling `runnable.pick();`.\n * @example\n * ```typescript\n * import { RunnablePick } from \"@langchain/core/runnables\";\n *\n * const inputData = {\n *   name: \"John\",\n *   age: 30,\n *   city: \"New York\",\n *   country: \"USA\",\n *   email: \"john.doe@example.com\",\n *   phone: \"+1234567890\",\n * };\n *\n * const basicInfoRunnable = new RunnablePick([\"name\", \"city\"]);\n *\n * // Example invocation\n * const res = await basicInfoRunnable.invoke(inputData);\n *\n * // { name: 'John', city: 'New York' }\n * ```\n */\nexport class RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0\n                ? undefined\n                : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nexport class RunnableToolLike extends RunnableBinding {\n    constructor(fields) {\n        const sequence = RunnableSequence.from([\n            RunnableLambda.from(async (input) => {\n                let toolInput;\n                if (_isToolCall(input)) {\n                    try {\n                        toolInput = await interopParseAsync(this.schema, input.args);\n                    }\n                    catch (e) {\n                        throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(input.args));\n                    }\n                }\n                else {\n                    toolInput = input;\n                }\n                return toolInput;\n            }).withConfig({ runName: `${fields.name}:parse_input` }),\n            fields.bound,\n        ]).withConfig({ runName: fields.name });\n        super({\n            bound: sequence,\n            config: fields.config ?? {},\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.schema = fields.schema;\n    }\n    static lc_name() {\n        return \"RunnableToolLike\";\n    }\n}\n/**\n * Given a runnable and a Zod schema, convert the runnable to a tool.\n *\n * @template RunInput The input type for the runnable.\n * @template RunOutput The output type for the runnable.\n *\n * @param {Runnable<RunInput, RunOutput>} runnable The runnable to convert to a tool.\n * @param fields\n * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n * @param {InteropZodType<RunInput>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n * @returns {RunnableToolLike<InteropZodType<RunInput>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n */\nexport function convertRunnableToTool(runnable, fields) {\n    const name = fields.name ?? runnable.getName();\n    const description = fields.description ?? getSchemaDescription(fields.schema);\n    if (isSimpleStringZodSchema(fields.schema)) {\n        return new RunnableToolLike({\n            name,\n            description,\n            schema: z\n                .object({ input: z.string() })\n                .transform((input) => input.input),\n            bound: runnable,\n        });\n    }\n    return new RunnableToolLike({\n        name,\n        description,\n        schema: fields.schema,\n        bound: runnable,\n    });\n}\n",
    "import uuid from './dist/index.js';\nexport const v1 = uuid.v1;\nexport const v1ToV6 = uuid.v1ToV6;\nexport const v3 = uuid.v3;\nexport const v4 = uuid.v4;\nexport const v5 = uuid.v5;\nexport const v6 = uuid.v6;\nexport const v6ToV1 = uuid.v6ToV1;\nexport const v7 = uuid.v7;\nexport const NIL = uuid.NIL;\nexport const MAX = uuid.MAX;\nexport const version = uuid.version;\nexport const validate = uuid.validate;\nexport const stringify = uuid.stringify;\nexport const parse = uuid.parse;\n",
    "class MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_, callback) {\n        return callback();\n    }\n}\nconst TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return globalThis[TRACING_ALS_KEY] ?? mockAsyncLocalStorage;\n    }\n    initializeGlobalInstance(instance) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (globalThis[TRACING_ALS_KEY] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            globalThis[TRACING_ALS_KEY] = instance;\n        }\n    }\n}\nexport const AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport function getCurrentRunTree(permitAbsentRunTree = false) {\n    const runTree = AsyncLocalStorageProviderSingleton.getInstance().getStore();\n    if (!permitAbsentRunTree && runTree === undefined) {\n        throw new Error(\"Could not get the current run tree.\\n\\nPlease make sure you are calling this method within a traceable function and that tracing is enabled.\");\n    }\n    return runTree;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withRunTree(runTree, fn) {\n    const storage = AsyncLocalStorageProviderSingleton.getInstance();\n    return new Promise((resolve, reject) => {\n        storage.run(runTree, () => void Promise.resolve(fn()).then(resolve).catch(reject));\n    });\n}\nexport const ROOT = Symbol.for(\"langsmith:traceable:root\");\nexport function isTraceableFunction(x\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return typeof x === \"function\" && \"langsmith:traceable\" in x;\n}\n",
    "// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n",
    "// @ts-nocheck\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: _deepClone(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        hasUndefined(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n",
    "// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty, } from \"./helpers.js\";\nimport { applyPatch } from \"./core.js\";\nvar beforeDict = new WeakMap();\nclass Mirror {\n    constructor(obj) {\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.obj = obj;\n    }\n}\nclass ObserverInfo {\n    constructor(callback, observer) {\n        Object.defineProperty(this, \"callback\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callback = callback;\n        this.observer = observer;\n    }\n}\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        const observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = () => {\n            generate(observer);\n        };\n        var fastCheck = () => {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== \"undefined\") {\n            //not Node\n            window.addEventListener(\"mouseup\", fastCheck);\n            window.addEventListener(\"keyup\", fastCheck);\n            window.addEventListener(\"mousedown\", fastCheck);\n            window.addEventListener(\"keydown\", fastCheck);\n            window.addEventListener(\"change\", fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = () => {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"mouseup\", fastCheck);\n            window.removeEventListener(\"keyup\", fastCheck);\n            window.removeEventListener(\"mousedown\", fastCheck);\n            window.removeEventListener(\"keydown\", fastCheck);\n            window.removeEventListener(\"change\", fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible = false) {\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) &&\n            !(obj[key] === undefined &&\n                oldVal !== undefined &&\n                Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" &&\n                oldVal != null &&\n                typeof newVal == \"object\" &&\n                newVal != null &&\n                Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({\n                            op: \"test\",\n                            path: path + \"/\" + escapePathComponent(key),\n                            value: _deepClone(oldVal),\n                        });\n                    }\n                    patches.push({\n                        op: \"replace\",\n                        path: path + \"/\" + escapePathComponent(key),\n                        value: _deepClone(newVal),\n                    });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({\n                    op: \"test\",\n                    path: path + \"/\" + escapePathComponent(key),\n                    value: _deepClone(oldVal),\n                });\n            }\n            patches.push({\n                op: \"remove\",\n                path: path + \"/\" + escapePathComponent(key),\n            });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({\n                op: \"add\",\n                path: path + \"/\" + escapePathComponent(key),\n                value: _deepClone(obj[key]),\n            });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible = false) {\n    var patches = [];\n    _generate(tree1, tree2, patches, \"\", invertible);\n    return patches;\n}\n",
    "export * from \"./src/core.js\";\nexport * from \"./src/duplex.js\";\nexport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\n/**\n * Default export for backwards compat\n */\nimport * as core from \"./src/core.js\";\nimport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\nexport default {\n    ...core,\n    // ...duplex,\n    JsonPatchError,\n    deepClone,\n    escapePathComponent,\n    unescapePathComponent,\n};\n",
    "import uuid from './dist/index.js';\nexport const v1 = uuid.v1;\nexport const v1ToV6 = uuid.v1ToV6;\nexport const v3 = uuid.v3;\nexport const v4 = uuid.v4;\nexport const v5 = uuid.v5;\nexport const v6 = uuid.v6;\nexport const v6ToV1 = uuid.v6ToV1;\nexport const v7 = uuid.v7;\nexport const NIL = uuid.NIL;\nexport const MAX = uuid.MAX;\nexport const version = uuid.version;\nexport const validate = uuid.validate;\nexport const stringify = uuid.stringify;\nexport const parse = uuid.parse;\n",
    "// OpenTelemetry GenAI semantic convention attribute names\nexport const GEN_AI_OPERATION_NAME = \"gen_ai.operation.name\";\nexport const GEN_AI_SYSTEM = \"gen_ai.system\";\nexport const GEN_AI_REQUEST_MODEL = \"gen_ai.request.model\";\nexport const GEN_AI_RESPONSE_MODEL = \"gen_ai.response.model\";\nexport const GEN_AI_USAGE_INPUT_TOKENS = \"gen_ai.usage.input_tokens\";\nexport const GEN_AI_USAGE_OUTPUT_TOKENS = \"gen_ai.usage.output_tokens\";\nexport const GEN_AI_USAGE_TOTAL_TOKENS = \"gen_ai.usage.total_tokens\";\nexport const GEN_AI_REQUEST_MAX_TOKENS = \"gen_ai.request.max_tokens\";\nexport const GEN_AI_REQUEST_TEMPERATURE = \"gen_ai.request.temperature\";\nexport const GEN_AI_REQUEST_TOP_P = \"gen_ai.request.top_p\";\nexport const GEN_AI_REQUEST_FREQUENCY_PENALTY = \"gen_ai.request.frequency_penalty\";\nexport const GEN_AI_REQUEST_PRESENCE_PENALTY = \"gen_ai.request.presence_penalty\";\nexport const GEN_AI_RESPONSE_FINISH_REASONS = \"gen_ai.response.finish_reasons\";\nexport const GENAI_PROMPT = \"gen_ai.prompt\";\nexport const GENAI_COMPLETION = \"gen_ai.completion\";\nexport const GEN_AI_REQUEST_EXTRA_QUERY = \"gen_ai.request.extra_query\";\nexport const GEN_AI_REQUEST_EXTRA_BODY = \"gen_ai.request.extra_body\";\nexport const GEN_AI_SERIALIZED_NAME = \"gen_ai.serialized.name\";\nexport const GEN_AI_SERIALIZED_SIGNATURE = \"gen_ai.serialized.signature\";\nexport const GEN_AI_SERIALIZED_DOC = \"gen_ai.serialized.doc\";\nexport const GEN_AI_RESPONSE_ID = \"gen_ai.response.id\";\nexport const GEN_AI_RESPONSE_SERVICE_TIER = \"gen_ai.response.service_tier\";\nexport const GEN_AI_RESPONSE_SYSTEM_FINGERPRINT = \"gen_ai.response.system_fingerprint\";\nexport const GEN_AI_USAGE_INPUT_TOKEN_DETAILS = \"gen_ai.usage.input_token_details\";\nexport const GEN_AI_USAGE_OUTPUT_TOKEN_DETAILS = \"gen_ai.usage.output_token_details\";\n// LangSmith custom attributes\nexport const LANGSMITH_SESSION_ID = \"langsmith.trace.session_id\";\nexport const LANGSMITH_SESSION_NAME = \"langsmith.trace.session_name\";\nexport const LANGSMITH_RUN_TYPE = \"langsmith.span.kind\";\nexport const LANGSMITH_NAME = \"langsmith.trace.name\";\nexport const LANGSMITH_METADATA = \"langsmith.metadata\";\nexport const LANGSMITH_TAGS = \"langsmith.span.tags\";\nexport const LANGSMITH_RUNTIME = \"langsmith.span.runtime\";\nexport const LANGSMITH_REQUEST_STREAMING = \"langsmith.request.streaming\";\nexport const LANGSMITH_REQUEST_HEADERS = \"langsmith.request.headers\";\nexport const LANGSMITH_RUN_ID = \"langsmith.span.id\";\nexport const LANGSMITH_TRACE_ID = \"langsmith.trace.id\";\nexport const LANGSMITH_DOTTED_ORDER = \"langsmith.span.dotted_order\";\nexport const LANGSMITH_PARENT_RUN_ID = \"langsmith.span.parent_id\";\nexport const LANGSMITH_USAGE_METADATA = \"langsmith.usage_metadata\";\nexport const LANGSMITH_REFERENCE_EXAMPLE_ID = \"langsmith.reference_example_id\";\nexport const LANGSMITH_TRACEABLE = \"langsmith.traceable\";\nexport const LANGSMITH_IS_ROOT = \"langsmith.is_root\";\nexport const LANGSMITH_TRACEABLE_PARENT_OTEL_SPAN_ID = \"langsmith.traceable_parent_otel_span_id\";\n// GenAI event names\nexport const GEN_AI_SYSTEM_MESSAGE = \"gen_ai.system.message\";\nexport const GEN_AI_USER_MESSAGE = \"gen_ai.user.message\";\nexport const GEN_AI_ASSISTANT_MESSAGE = \"gen_ai.assistant.message\";\nexport const GEN_AI_CHOICE = \"gen_ai.choice\";\nexport const AI_SDK_LLM_OPERATIONS = [\n    \"ai.generateText.doGenerate\",\n    \"ai.streamText.doStream\",\n    \"ai.generateObject.doGenerate\",\n    \"ai.streamObject.doStream\",\n];\nexport const AI_SDK_TOOL_OPERATIONS = [\"ai.toolCall\"];\n",
    "import { getLangSmithEnvironmentVariable } from \"../utils/env.js\";\n// Wrap the default fetch call due to issues with illegal invocations\n// in some environments:\n// https://stackoverflow.com/questions/69876859/why-does-bind-fix-failed-to-execute-fetch-on-window-illegal-invocation-err\n// @ts-expect-error Broad typing to support a range of fetch implementations\nconst DEFAULT_FETCH_IMPLEMENTATION = (...args) => fetch(...args);\nconst LANGSMITH_FETCH_IMPLEMENTATION_KEY = Symbol.for(\"ls:fetch_implementation\");\n/**\n * Overrides the fetch implementation used for LangSmith calls.\n * You should use this if you need to use an implementation of fetch\n * other than the default global (e.g. for dealing with proxies).\n * @param fetch The new fetch functino to use.\n */\nexport const overrideFetchImplementation = (fetch) => {\n    globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] = fetch;\n};\nexport const clearFetchImplementation = () => {\n    delete globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY];\n};\nexport const _globalFetchImplementationIsNodeFetch = () => {\n    const fetchImpl = globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY];\n    if (!fetchImpl)\n        return false;\n    // Check if the implementation has node-fetch specific properties\n    return (typeof fetchImpl === \"function\" &&\n        \"Headers\" in fetchImpl &&\n        \"Request\" in fetchImpl &&\n        \"Response\" in fetchImpl);\n};\n/**\n * @internal\n */\nexport const _getFetchImplementation = (debug) => {\n    return async (...args) => {\n        if (debug || getLangSmithEnvironmentVariable(\"DEBUG\") === \"true\") {\n            const [url, options] = args;\n            console.log(`→ ${options?.method || \"GET\"} ${url}`);\n        }\n        const res = await (globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] ??\n            DEFAULT_FETCH_IMPLEMENTATION)(...args);\n        if (debug || getLangSmithEnvironmentVariable(\"DEBUG\") === \"true\") {\n            console.log(`← ${res.status} ${res.statusText} ${res.url}`);\n        }\n        return res;\n    };\n};\n",
    "import { getEnvironmentVariable, getLangSmithEnvironmentVariable, } from \"./env.js\";\nexport const getDefaultProjectName = () => {\n    return (getLangSmithEnvironmentVariable(\"PROJECT\") ??\n        getEnvironmentVariable(\"LANGCHAIN_SESSION\") ?? // TODO: Deprecate\n        \"default\");\n};\n",
    "export { Client, } from \"./client.js\";\nexport { RunTree } from \"./run_trees.js\";\nexport { overrideFetchImplementation } from \"./singletons/fetch.js\";\nexport { getDefaultProjectName } from \"./utils/project.js\";\n// Update using yarn bump-version\nexport const __version__ = \"0.3.68\";\n",
    "// Inlined from https://github.com/flexdinesh/browser-or-node\nimport { __version__ } from \"../index.js\";\nlet globalEnv;\nexport const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" && navigator.userAgent.includes(\"jsdom\"));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    if (globalEnv) {\n        return globalEnv;\n    }\n    // @ts-expect-error Bun types are not imported due to conflicts with Node types\n    if (typeof Bun !== \"undefined\") {\n        globalEnv = \"bun\";\n    }\n    else if (isBrowser()) {\n        globalEnv = \"browser\";\n    }\n    else if (isNode()) {\n        globalEnv = \"node\";\n    }\n    else if (isWebWorker()) {\n        globalEnv = \"webworker\";\n    }\n    else if (isJsDom()) {\n        globalEnv = \"jsdom\";\n    }\n    else if (isDeno()) {\n        globalEnv = \"deno\";\n    }\n    else {\n        globalEnv = \"other\";\n    }\n    return globalEnv;\n};\nlet runtimeEnvironment;\nexport function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        const releaseEnv = getShas();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n            sdk: \"langsmith-js\",\n            sdk_version: __version__,\n            ...releaseEnv,\n        };\n    }\n    return runtimeEnvironment;\n}\n/**\n * Retrieves the LangChain-specific environment variables from the current runtime environment.\n * Sensitive keys (containing the word \"key\", \"token\", or \"secret\") have their values redacted for security.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific environment variables.\n */\nexport function getLangChainEnvVars() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if (key.startsWith(\"LANGCHAIN_\") && typeof value === \"string\") {\n            envVars[key] = value;\n        }\n    }\n    for (const key in envVars) {\n        if ((key.toLowerCase().includes(\"key\") ||\n            key.toLowerCase().includes(\"secret\") ||\n            key.toLowerCase().includes(\"token\")) &&\n            typeof envVars[key] === \"string\") {\n            const value = envVars[key];\n            envVars[key] =\n                value.slice(0, 2) + \"*\".repeat(value.length - 4) + value.slice(-2);\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the LangChain-specific metadata from the current runtime environment.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific metadata environment variables.\n */\nexport function getLangChainEnvVarsMetadata() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    const excluded = [\n        \"LANGCHAIN_API_KEY\",\n        \"LANGCHAIN_ENDPOINT\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGCHAIN_PROJECT\",\n        \"LANGCHAIN_SESSION\",\n        \"LANGSMITH_API_KEY\",\n        \"LANGSMITH_ENDPOINT\",\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGSMITH_PROJECT\",\n        \"LANGSMITH_SESSION\",\n    ];\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if ((key.startsWith(\"LANGCHAIN_\") || key.startsWith(\"LANGSMITH_\")) &&\n            typeof value === \"string\" &&\n            !excluded.includes(key) &&\n            !key.toLowerCase().includes(\"key\") &&\n            !key.toLowerCase().includes(\"secret\") &&\n            !key.toLowerCase().includes(\"token\")) {\n            if (key === \"LANGCHAIN_REVISION_ID\") {\n                envVars[\"revision_id\"] = value;\n            }\n            else {\n                envVars[key] = value;\n            }\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the environment variables from the current runtime environment.\n *\n * This function is designed to operate in a variety of JS environments,\n * including Node.js, Deno, browsers, etc.\n *\n * @returns {Record<string, string> | undefined}\n *  - A record of environment variables if available.\n *  - `undefined` if the environment does not support or allows access to environment variables.\n */\nexport function getEnvironmentVariables() {\n    try {\n        // Check for Node.js environment\n        // eslint-disable-next-line no-process-env\n        if (typeof process !== \"undefined\" && process.env) {\n            // eslint-disable-next-line no-process-env\n            return Object.entries(process.env).reduce((acc, [key, value]) => {\n                acc[key] = String(value);\n                return acc;\n            }, {});\n        }\n        // For browsers and other environments, we may not have direct access to env variables\n        // Return undefined or any other fallback as required.\n        return undefined;\n    }\n    catch (e) {\n        // Catch any errors that might occur while trying to access environment variables\n        return undefined;\n    }\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function getLangSmithEnvironmentVariable(name) {\n    return (getEnvironmentVariable(`LANGSMITH_${name}`) ||\n        getEnvironmentVariable(`LANGCHAIN_${name}`));\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n    if (cachedCommitSHAs !== undefined) {\n        return cachedCommitSHAs;\n    }\n    const common_release_envs = [\n        \"VERCEL_GIT_COMMIT_SHA\",\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n        \"COMMIT_REF\",\n        \"RENDER_GIT_COMMIT\",\n        \"CI_COMMIT_SHA\",\n        \"CIRCLE_SHA1\",\n        \"CF_PAGES_COMMIT_SHA\",\n        \"REACT_APP_GIT_SHA\",\n        \"SOURCE_VERSION\",\n        \"GITHUB_SHA\",\n        \"TRAVIS_COMMIT\",\n        \"GIT_COMMIT\",\n        \"BUILD_VCS_NUMBER\",\n        \"bamboo_planRepository_revision\",\n        \"Build.SourceVersion\",\n        \"BITBUCKET_COMMIT\",\n        \"DRONE_COMMIT_SHA\",\n        \"SEMAPHORE_GIT_SHA\",\n        \"BUILDKITE_COMMIT\",\n    ];\n    const shas = {};\n    for (const env of common_release_envs) {\n        const envVar = getEnvironmentVariable(env);\n        if (envVar !== undefined) {\n            shas[env] = envVar;\n        }\n    }\n    cachedCommitSHAs = shas;\n    return shas;\n}\nexport function getOtelEnabled() {\n    return (getEnvironmentVariable(\"OTEL_ENABLED\") === \"true\" ||\n        getLangSmithEnvironmentVariable(\"OTEL_ENABLED\") === \"true\");\n}\n",
    "// Should not import any OTEL packages to avoid pulling in optional deps.\nimport { getOtelEnabled } from \"../utils/env.js\";\nclass MockTracer {\n    constructor() {\n        Object.defineProperty(this, \"hasWarned\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    startActiveSpan(_name, ...args) {\n        if (!this.hasWarned && getOtelEnabled()) {\n            console.warn(\"You have enabled OTEL export via the `OTEL_ENABLED` or `LANGSMITH_OTEL_ENABLED` environment variable, but have not initialized the required OTEL instances. \" +\n                'Please add:\\n```\\nimport { initializeOTEL } from \"langsmith/experimental/otel/setup\";\\ninitializeOTEL();\\n```\\nat the beginning of your code.');\n            this.hasWarned = true;\n        }\n        // Handle different overloads:\n        // startActiveSpan(name, fn)\n        // startActiveSpan(name, options, fn)\n        // startActiveSpan(name, options, context, fn)\n        let fn;\n        if (args.length === 1 && typeof args[0] === \"function\") {\n            fn = args[0];\n        }\n        else if (args.length === 2 && typeof args[1] === \"function\") {\n            fn = args[1];\n        }\n        else if (args.length === 3 && typeof args[2] === \"function\") {\n            fn = args[2];\n        }\n        if (typeof fn === \"function\") {\n            return fn();\n        }\n        return undefined;\n    }\n}\nclass MockOTELTrace {\n    constructor() {\n        Object.defineProperty(this, \"mockTracer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new MockTracer()\n        });\n    }\n    getTracer(_name, _version) {\n        return this.mockTracer;\n    }\n    getActiveSpan() {\n        return undefined;\n    }\n    setSpan(context, _span) {\n        return context;\n    }\n    getSpan(_context) {\n        return undefined;\n    }\n    setSpanContext(context, _spanContext) {\n        return context;\n    }\n    getTracerProvider() {\n        return undefined;\n    }\n    setGlobalTracerProvider(_tracerProvider) {\n        return false;\n    }\n}\nclass MockOTELContext {\n    active() {\n        return {};\n    }\n    with(_context, fn) {\n        return fn();\n    }\n}\nconst OTEL_TRACE_KEY = Symbol.for(\"ls:otel_trace\");\nconst OTEL_CONTEXT_KEY = Symbol.for(\"ls:otel_context\");\nconst OTEL_GET_DEFAULT_OTLP_TRACER_PROVIDER_KEY = Symbol.for(\"ls:otel_get_default_otlp_tracer_provider\");\nconst mockOTELTrace = new MockOTELTrace();\nconst mockOTELContext = new MockOTELContext();\nclass OTELProvider {\n    getTraceInstance() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return globalThis[OTEL_TRACE_KEY] ?? mockOTELTrace;\n    }\n    getContextInstance() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return globalThis[OTEL_CONTEXT_KEY] ?? mockOTELContext;\n    }\n    initializeGlobalInstances(otel) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (globalThis[OTEL_TRACE_KEY] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            globalThis[OTEL_TRACE_KEY] = otel.trace;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (globalThis[OTEL_CONTEXT_KEY] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            globalThis[OTEL_CONTEXT_KEY] = otel.context;\n        }\n    }\n    setDefaultOTLPTracerComponents(components) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        globalThis[OTEL_GET_DEFAULT_OTLP_TRACER_PROVIDER_KEY] = components;\n    }\n    getDefaultOTLPTracerComponents() {\n        return (globalThis[OTEL_GET_DEFAULT_OTLP_TRACER_PROVIDER_KEY] ??\n            undefined);\n    }\n}\nexport const OTELProviderSingleton = new OTELProvider();\n/**\n * Get the current OTEL trace instance.\n * Returns a mock implementation if OTEL is not available.\n */\nexport function getOTELTrace() {\n    return OTELProviderSingleton.getTraceInstance();\n}\n/**\n * Get the current OTEL context instance.\n * Returns a mock implementation if OTEL is not available.\n */\nexport function getOTELContext() {\n    return OTELProviderSingleton.getContextInstance();\n}\n/**\n * Initialize the global OTEL instances.\n * Should be called once when OTEL packages are available.\n */\nexport function setOTELInstances(otel) {\n    OTELProviderSingleton.initializeGlobalInstances(otel);\n}\n/**\n * Set a getter function for the default OTLP tracer provider.\n * This allows lazy initialization of the tracer provider.\n */\nexport function setDefaultOTLPTracerComponents(components) {\n    OTELProviderSingleton.setDefaultOTLPTracerComponents(components);\n}\n/**\n * Get the default OTLP tracer provider instance.\n * Returns undefined if not set.\n */\nexport function getDefaultOTLPTracerComponents() {\n    return OTELProviderSingleton.getDefaultOTLPTracerComponents();\n}\n",
    "import * as constants from \"./constants.js\";\nimport { getOTELTrace } from \"../../singletons/otel.js\";\nconst WELL_KNOWN_OPERATION_NAMES = {\n    llm: \"chat\",\n    tool: \"execute_tool\",\n    retriever: \"embeddings\",\n    embedding: \"embeddings\",\n    prompt: \"chat\",\n};\nfunction getOperationName(runType) {\n    return WELL_KNOWN_OPERATION_NAMES[runType] || runType;\n}\nexport class LangSmithToOTELTranslator {\n    constructor() {\n        Object.defineProperty(this, \"spans\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    exportBatch(operations, otelContextMap) {\n        for (const op of operations) {\n            try {\n                if (!op.run) {\n                    continue;\n                }\n                if (op.operation === \"post\") {\n                    const span = this.createSpanForRun(op, op.run, otelContextMap.get(op.id));\n                    if (span && !op.run.end_time) {\n                        this.spans.set(op.id, span);\n                    }\n                }\n                else {\n                    this.updateSpanForRun(op, op.run);\n                }\n            }\n            catch (e) {\n                console.error(`Error processing operation ${op.id}:`, e);\n            }\n        }\n    }\n    createSpanForRun(op, runInfo, otelContext) {\n        const activeSpan = otelContext && getOTELTrace().getSpan(otelContext);\n        if (!activeSpan) {\n            return;\n        }\n        try {\n            return this.finishSpanSetup(activeSpan, runInfo, op);\n        }\n        catch (e) {\n            console.error(`Failed to create span for run ${op.id}:`, e);\n            return undefined;\n        }\n    }\n    finishSpanSetup(span, runInfo, op) {\n        // Set all attributes\n        this.setSpanAttributes(span, runInfo, op);\n        // Set status based on error\n        if (runInfo.error) {\n            span.setStatus({ code: 2 }); // ERROR status\n            span.recordException(new Error(runInfo.error));\n        }\n        else {\n            span.setStatus({ code: 1 }); // OK status\n        }\n        // End the span if end_time is present\n        if (runInfo.end_time) {\n            span.end(new Date(runInfo.end_time));\n        }\n        return span;\n    }\n    updateSpanForRun(op, runInfo) {\n        try {\n            const span = this.spans.get(op.id);\n            if (!span) {\n                console.debug(`No span found for run ${op.id} during update`);\n                return;\n            }\n            // Update attributes\n            this.setSpanAttributes(span, runInfo, op);\n            // Update status based on error\n            if (runInfo.error) {\n                span.setStatus({ code: 2 }); // ERROR status\n                span.recordException(new Error(runInfo.error));\n            }\n            else {\n                span.setStatus({ code: 1 }); // OK status\n            }\n            // End the span if end_time is present\n            const endTime = runInfo.end_time;\n            if (endTime) {\n                span.end(new Date(endTime));\n                this.spans.delete(op.id);\n            }\n        }\n        catch (e) {\n            console.error(`Failed to update span for run ${op.id}:`, e);\n        }\n    }\n    extractModelName(runInfo) {\n        // Try to get model name from metadata\n        if (runInfo.extra?.metadata) {\n            const metadata = runInfo.extra.metadata;\n            // First check for ls_model_name in metadata\n            if (metadata.ls_model_name) {\n                return metadata.ls_model_name;\n            }\n            // Then check invocation_params for model info\n            if (metadata.invocation_params) {\n                const invocationParams = metadata.invocation_params;\n                if (invocationParams.model) {\n                    return invocationParams.model;\n                }\n                else if (invocationParams.model_name) {\n                    return invocationParams.model_name;\n                }\n            }\n        }\n        return;\n    }\n    setSpanAttributes(span, runInfo, op) {\n        if (\"run_type\" in runInfo && runInfo.run_type) {\n            span.setAttribute(constants.LANGSMITH_RUN_TYPE, runInfo.run_type);\n            // Set GenAI attributes according to OTEL semantic conventions\n            const operationName = getOperationName(runInfo.run_type || \"chain\");\n            span.setAttribute(constants.GEN_AI_OPERATION_NAME, operationName);\n        }\n        if (\"name\" in runInfo && runInfo.name) {\n            span.setAttribute(constants.LANGSMITH_NAME, runInfo.name);\n        }\n        if (\"session_id\" in runInfo && runInfo.session_id) {\n            span.setAttribute(constants.LANGSMITH_SESSION_ID, runInfo.session_id);\n        }\n        if (\"session_name\" in runInfo && runInfo.session_name) {\n            span.setAttribute(constants.LANGSMITH_SESSION_NAME, runInfo.session_name);\n        }\n        // Set gen_ai.system\n        this.setGenAiSystem(span, runInfo);\n        // Set model name if available\n        const modelName = this.extractModelName(runInfo);\n        if (modelName) {\n            span.setAttribute(constants.GEN_AI_REQUEST_MODEL, modelName);\n        }\n        // Set token usage information\n        if (\"prompt_tokens\" in runInfo &&\n            typeof runInfo.prompt_tokens === \"number\") {\n            span.setAttribute(constants.GEN_AI_USAGE_INPUT_TOKENS, runInfo.prompt_tokens);\n        }\n        if (\"completion_tokens\" in runInfo &&\n            typeof runInfo.completion_tokens === \"number\") {\n            span.setAttribute(constants.GEN_AI_USAGE_OUTPUT_TOKENS, runInfo.completion_tokens);\n        }\n        if (\"total_tokens\" in runInfo && typeof runInfo.total_tokens === \"number\") {\n            span.setAttribute(constants.GEN_AI_USAGE_TOTAL_TOKENS, runInfo.total_tokens);\n        }\n        // Set other parameters from invocation_params\n        this.setInvocationParameters(span, runInfo);\n        // Set metadata and tags if available\n        const metadata = runInfo.extra?.metadata || {};\n        for (const [key, value] of Object.entries(metadata)) {\n            if (value !== null && value !== undefined) {\n                span.setAttribute(`${constants.LANGSMITH_METADATA}.${key}`, String(value));\n            }\n        }\n        const tags = runInfo.tags;\n        if (tags && Array.isArray(tags)) {\n            span.setAttribute(constants.LANGSMITH_TAGS, tags.join(\", \"));\n        }\n        else if (tags) {\n            span.setAttribute(constants.LANGSMITH_TAGS, String(tags));\n        }\n        // Support additional serialized attributes, if present\n        if (\"serialized\" in runInfo && typeof runInfo.serialized === \"object\") {\n            const serialized = runInfo.serialized;\n            if (serialized.name) {\n                span.setAttribute(constants.GEN_AI_SERIALIZED_NAME, String(serialized.name));\n            }\n            if (serialized.signature) {\n                span.setAttribute(constants.GEN_AI_SERIALIZED_SIGNATURE, String(serialized.signature));\n            }\n            if (serialized.doc) {\n                span.setAttribute(constants.GEN_AI_SERIALIZED_DOC, String(serialized.doc));\n            }\n        }\n        // Set inputs/outputs if available\n        this.setIOAttributes(span, op);\n    }\n    setGenAiSystem(span, runInfo) {\n        // Default to \"langchain\" if we can't determine the system\n        let system = \"langchain\";\n        // Extract model name to determine the system\n        const modelName = this.extractModelName(runInfo);\n        if (modelName) {\n            const modelLower = modelName.toLowerCase();\n            if (modelLower.includes(\"anthropic\") || modelLower.startsWith(\"claude\")) {\n                system = \"anthropic\";\n            }\n            else if (modelLower.includes(\"bedrock\")) {\n                system = \"aws.bedrock\";\n            }\n            else if (modelLower.includes(\"azure\") &&\n                modelLower.includes(\"openai\")) {\n                system = \"az.ai.openai\";\n            }\n            else if (modelLower.includes(\"azure\") &&\n                modelLower.includes(\"inference\")) {\n                system = \"az.ai.inference\";\n            }\n            else if (modelLower.includes(\"cohere\")) {\n                system = \"cohere\";\n            }\n            else if (modelLower.includes(\"deepseek\")) {\n                system = \"deepseek\";\n            }\n            else if (modelLower.includes(\"gemini\")) {\n                system = \"gemini\";\n            }\n            else if (modelLower.includes(\"groq\")) {\n                system = \"groq\";\n            }\n            else if (modelLower.includes(\"watson\") || modelLower.includes(\"ibm\")) {\n                system = \"ibm.watsonx.ai\";\n            }\n            else if (modelLower.includes(\"mistral\")) {\n                system = \"mistral_ai\";\n            }\n            else if (modelLower.includes(\"gpt\") || modelLower.includes(\"openai\")) {\n                system = \"openai\";\n            }\n            else if (modelLower.includes(\"perplexity\") ||\n                modelLower.includes(\"sonar\")) {\n                system = \"perplexity\";\n            }\n            else if (modelLower.includes(\"vertex\")) {\n                system = \"vertex_ai\";\n            }\n            else if (modelLower.includes(\"xai\") || modelLower.includes(\"grok\")) {\n                system = \"xai\";\n            }\n        }\n        span.setAttribute(constants.GEN_AI_SYSTEM, system);\n    }\n    setInvocationParameters(span, runInfo) {\n        if (!runInfo.extra?.metadata?.invocation_params) {\n            return;\n        }\n        const invocationParams = runInfo.extra.metadata.invocation_params;\n        // Set relevant invocation parameters\n        if (invocationParams.max_tokens !== undefined) {\n            span.setAttribute(constants.GEN_AI_REQUEST_MAX_TOKENS, invocationParams.max_tokens);\n        }\n        if (invocationParams.temperature !== undefined) {\n            span.setAttribute(constants.GEN_AI_REQUEST_TEMPERATURE, invocationParams.temperature);\n        }\n        if (invocationParams.top_p !== undefined) {\n            span.setAttribute(constants.GEN_AI_REQUEST_TOP_P, invocationParams.top_p);\n        }\n        if (invocationParams.frequency_penalty !== undefined) {\n            span.setAttribute(constants.GEN_AI_REQUEST_FREQUENCY_PENALTY, invocationParams.frequency_penalty);\n        }\n        if (invocationParams.presence_penalty !== undefined) {\n            span.setAttribute(constants.GEN_AI_REQUEST_PRESENCE_PENALTY, invocationParams.presence_penalty);\n        }\n    }\n    setIOAttributes(span, op) {\n        if (op.run.inputs) {\n            try {\n                const inputs = op.run.inputs;\n                if (typeof inputs === \"object\" && inputs !== null) {\n                    if (inputs.model && Array.isArray(inputs.messages)) {\n                        span.setAttribute(constants.GEN_AI_REQUEST_MODEL, inputs.model);\n                    }\n                    // Set additional request attributes if available\n                    if (inputs.stream !== undefined) {\n                        span.setAttribute(constants.LANGSMITH_REQUEST_STREAMING, inputs.stream);\n                    }\n                    if (inputs.extra_headers) {\n                        span.setAttribute(constants.LANGSMITH_REQUEST_HEADERS, JSON.stringify(inputs.extra_headers));\n                    }\n                    if (inputs.extra_query) {\n                        span.setAttribute(constants.GEN_AI_REQUEST_EXTRA_QUERY, JSON.stringify(inputs.extra_query));\n                    }\n                    if (inputs.extra_body) {\n                        span.setAttribute(constants.GEN_AI_REQUEST_EXTRA_BODY, JSON.stringify(inputs.extra_body));\n                    }\n                }\n                span.setAttribute(constants.GENAI_PROMPT, JSON.stringify(inputs));\n            }\n            catch (e) {\n                console.debug(`Failed to process inputs for run ${op.id}`, e);\n            }\n        }\n        if (op.run.outputs) {\n            try {\n                const outputs = op.run.outputs;\n                // Extract token usage from outputs (for LLM runs)\n                const tokenUsage = this.getUnifiedRunTokens(outputs);\n                if (tokenUsage) {\n                    span.setAttribute(constants.GEN_AI_USAGE_INPUT_TOKENS, tokenUsage[0]);\n                    span.setAttribute(constants.GEN_AI_USAGE_OUTPUT_TOKENS, tokenUsage[1]);\n                    span.setAttribute(constants.GEN_AI_USAGE_TOTAL_TOKENS, tokenUsage[0] + tokenUsage[1]);\n                }\n                if (outputs && typeof outputs === \"object\") {\n                    if (outputs.model) {\n                        span.setAttribute(constants.GEN_AI_RESPONSE_MODEL, String(outputs.model));\n                    }\n                    // Extract additional response attributes\n                    if (outputs.id) {\n                        span.setAttribute(constants.GEN_AI_RESPONSE_ID, outputs.id);\n                    }\n                    if (outputs.choices && Array.isArray(outputs.choices)) {\n                        const finishReasons = outputs.choices\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            .map((choice) => choice.finish_reason)\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            .filter((reason) => reason)\n                            .map(String);\n                        if (finishReasons.length > 0) {\n                            span.setAttribute(constants.GEN_AI_RESPONSE_FINISH_REASONS, finishReasons.join(\", \"));\n                        }\n                    }\n                    if (outputs.service_tier) {\n                        span.setAttribute(constants.GEN_AI_RESPONSE_SERVICE_TIER, outputs.service_tier);\n                    }\n                    if (outputs.system_fingerprint) {\n                        span.setAttribute(constants.GEN_AI_RESPONSE_SYSTEM_FINGERPRINT, outputs.system_fingerprint);\n                    }\n                    if (outputs.usage_metadata &&\n                        typeof outputs.usage_metadata === \"object\") {\n                        const usageMetadata = outputs.usage_metadata;\n                        if (usageMetadata.input_token_details) {\n                            span.setAttribute(constants.GEN_AI_USAGE_INPUT_TOKEN_DETAILS, JSON.stringify(usageMetadata.input_token_details));\n                        }\n                        if (usageMetadata.output_token_details) {\n                            span.setAttribute(constants.GEN_AI_USAGE_OUTPUT_TOKEN_DETAILS, JSON.stringify(usageMetadata.output_token_details));\n                        }\n                    }\n                }\n                span.setAttribute(constants.GENAI_COMPLETION, JSON.stringify(outputs));\n            }\n            catch (e) {\n                console.debug(`Failed to process outputs for run ${op.id}`, e);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getUnifiedRunTokens(outputs) {\n        if (!outputs) {\n            return null;\n        }\n        // Search in non-generations lists\n        let tokenUsage = this.extractUnifiedRunTokens(outputs.usage_metadata);\n        if (tokenUsage) {\n            return tokenUsage;\n        }\n        // Find if direct kwarg in outputs\n        const keys = Object.keys(outputs);\n        for (const key of keys) {\n            const haystack = outputs[key];\n            if (!haystack || typeof haystack !== \"object\") {\n                continue;\n            }\n            tokenUsage = this.extractUnifiedRunTokens(haystack.usage_metadata);\n            if (tokenUsage) {\n                return tokenUsage;\n            }\n            if (haystack.lc === 1 &&\n                haystack.kwargs &&\n                typeof haystack.kwargs === \"object\") {\n                tokenUsage = this.extractUnifiedRunTokens(haystack.kwargs.usage_metadata);\n                if (tokenUsage) {\n                    return tokenUsage;\n                }\n            }\n        }\n        // Find in generations\n        const generations = outputs.generations || [];\n        if (!Array.isArray(generations)) {\n            return null;\n        }\n        const flatGenerations = Array.isArray(generations[0])\n            ? generations.flat()\n            : generations;\n        for (const generation of flatGenerations) {\n            if (typeof generation === \"object\" &&\n                generation.message &&\n                typeof generation.message === \"object\" &&\n                generation.message.kwargs &&\n                typeof generation.message.kwargs === \"object\") {\n                tokenUsage = this.extractUnifiedRunTokens(generation.message.kwargs.usage_metadata);\n                if (tokenUsage) {\n                    return tokenUsage;\n                }\n            }\n        }\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    extractUnifiedRunTokens(outputs) {\n        if (!outputs || typeof outputs !== \"object\") {\n            return null;\n        }\n        if (typeof outputs.input_tokens !== \"number\" ||\n            typeof outputs.output_tokens !== \"number\") {\n            return null;\n        }\n        return [outputs.input_tokens, outputs.output_tokens];\n    }\n}\n",
    "import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_RETRYABLE = [\n    429, // Too Many Requests\n    500, // Internal Server Error\n    502, // Bad Gateway\n    503, // Service Unavailable\n    504, // Gateway Timeout\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedResponseHook\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        if (\"default\" in PQueueMod) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod.default({\n                concurrency: this.maxConcurrency,\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod({ concurrency: this.maxConcurrency });\n        }\n        this.onFailedResponseHook = params?.onFailedResponseHook;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        const onFailedResponseHook = this.onFailedResponseHook;\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            async onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.name === \"TimeoutError\" ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                const response = error?.response;\n                if (onFailedResponseHook) {\n                    const handled = await onFailedResponseHook(response);\n                    if (handled) {\n                        return;\n                    }\n                }\n                const status = response?.status ?? error?.status;\n                if (status) {\n                    if (!STATUS_RETRYABLE.includes(+status)) {\n                        throw error;\n                    }\n                }\n            },\n            retries: this.maxRetries,\n            randomize: true,\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n}\n",
    "export function isLangChainMessage(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmessage) {\n    return typeof message?._getType === \"function\";\n}\nexport function convertLangChainMessageToExample(message) {\n    const converted = {\n        type: message._getType(),\n        data: { content: message.content },\n    };\n    // Check for presence of keys in additional_kwargs\n    if (message?.additional_kwargs &&\n        Object.keys(message.additional_kwargs).length > 0) {\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\n    }\n    return converted;\n}\n",
    "// Relaxed UUID validation regex (allows any valid UUID format including nil UUIDs)\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nexport function assertUuid(str, which) {\n    // Use relaxed regex validation instead of strict uuid.validate()\n    // This allows edge cases like nil UUIDs or test UUIDs that might not pass strict validation\n    if (!UUID_REGEX.test(str)) {\n        const msg = which !== undefined\n            ? `Invalid UUID for ${which}: ${str}`\n            : `Invalid UUID: ${str}`;\n        throw new Error(msg);\n    }\n    return str;\n}\n",
    "const warnedMessages = {};\nexport function warnOnce(message) {\n    if (!warnedMessages[message]) {\n        console.warn(message);\n        warnedMessages[message] = true;\n    }\n}\n",
    "import { parse as parseVersion } from \"semver\";\nexport function isVersionGreaterOrEqual(current_version, target_version) {\n    const current = parseVersion(current_version);\n    const target = parseVersion(target_version);\n    if (!current || !target) {\n        throw new Error(\"Invalid version format.\");\n    }\n    return current.compare(target) >= 0;\n}\nexport function parsePromptIdentifier(identifier) {\n    if (!identifier ||\n        identifier.split(\"/\").length > 2 ||\n        identifier.startsWith(\"/\") ||\n        identifier.endsWith(\"/\") ||\n        identifier.split(\":\").length > 2) {\n        throw new Error(`Invalid identifier format: ${identifier}`);\n    }\n    const [ownerNamePart, commitPart] = identifier.split(\":\");\n    const commit = commitPart || \"latest\";\n    if (ownerNamePart.includes(\"/\")) {\n        const [owner, name] = ownerNamePart.split(\"/\", 2);\n        if (!owner || !name) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [owner, name, commit];\n    }\n    else {\n        if (!ownerNamePart) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [\"-\", ownerNamePart, commit];\n    }\n}\n",
    "function getErrorStackTrace(e) {\n    if (typeof e !== \"object\" || e == null)\n        return undefined;\n    if (!(\"stack\" in e) || typeof e.stack !== \"string\")\n        return undefined;\n    let stack = e.stack;\n    const prevLine = `${e}`;\n    if (stack.startsWith(prevLine)) {\n        stack = stack.slice(prevLine.length);\n    }\n    if (stack.startsWith(\"\\n\")) {\n        stack = stack.slice(1);\n    }\n    return stack;\n}\nexport function printErrorStackTrace(e) {\n    const stack = getErrorStackTrace(e);\n    if (stack == null)\n        return;\n    console.error(stack);\n}\n/**\n * LangSmithConflictError\n *\n * Represents an error that occurs when there's a conflict during an operation,\n * typically corresponding to HTTP 409 status code responses.\n *\n * This error is thrown when an attempt to create or modify a resource conflicts\n * with the current state of the resource on the server. Common scenarios include:\n * - Attempting to create a resource that already exists\n * - Trying to update a resource that has been modified by another process\n * - Violating a uniqueness constraint in the data\n *\n * @extends Error\n *\n * @example\n * try {\n *   await createProject(\"existingProject\");\n * } catch (error) {\n *   if (error instanceof ConflictError) {\n *     console.log(\"A conflict occurred:\", error.message);\n *     // Handle the conflict, e.g., by suggesting a different project name\n *   } else {\n *     // Handle other types of errors\n *   }\n * }\n *\n * @property {string} name - Always set to 'ConflictError' for easy identification\n * @property {string} message - Detailed error message including server response\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n */\nexport class LangSmithConflictError extends Error {\n    constructor(message) {\n        super(message);\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = \"LangSmithConflictError\";\n        this.status = 409;\n    }\n}\n/**\n * Throws an appropriate error based on the response status and body.\n *\n * @param response - The fetch Response object\n * @param context - Additional context to include in the error message (e.g., operation being performed)\n * @throws {LangSmithConflictError} When the response status is 409\n * @throws {Error} For all other non-ok responses\n */\nexport async function raiseForStatus(response, context, consumeOnSuccess) {\n    let errorBody;\n    if (response.ok) {\n        // consume the response body to release the connection\n        // https://undici.nodejs.org/#/?id=garbage-collection\n        if (consumeOnSuccess) {\n            errorBody = await response.text();\n        }\n        return;\n    }\n    if (response.status === 403) {\n        try {\n            const errorData = await response.json();\n            const errorCode = errorData?.error;\n            if (errorCode === \"org_scoped_key_requires_workspace\") {\n                errorBody =\n                    \"This API key is org-scoped and requires workspace specification. \" +\n                        \"Please provide 'workspaceId' parameter, \" +\n                        \"or set LANGSMITH_WORKSPACE_ID environment variable.\";\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            const errorWithStatus = new Error(`${response.status} ${response.statusText}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            errorWithStatus.status = response?.status;\n            throw errorWithStatus;\n        }\n    }\n    if (errorBody === undefined) {\n        try {\n            errorBody = await response.text();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            errorBody = \"\";\n        }\n    }\n    const fullMessage = `Failed to ${context}. Received status [${response.status}]: ${response.statusText}. Message: ${errorBody}`;\n    if (response.status === 409) {\n        throw new LangSmithConflictError(fullMessage);\n    }\n    const err = new Error(fullMessage);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    err.status = response.status;\n    throw err;\n}\nconst ERR_CONFLICTING_ENDPOINTS = \"ERR_CONFLICTING_ENDPOINTS\";\nexport class ConflictingEndpointsError extends Error {\n    constructor() {\n        super(\"You cannot provide both LANGSMITH_ENDPOINT / LANGCHAIN_ENDPOINT \" +\n            \"and LANGSMITH_RUNS_ENDPOINTS.\");\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ERR_CONFLICTING_ENDPOINTS\n        });\n        this.name = \"ConflictingEndpointsError\"; // helpful in logs\n    }\n}\nexport function isConflictingEndpointsError(err) {\n    return (typeof err === \"object\" &&\n        err !== null &&\n        err.code === ERR_CONFLICTING_ENDPOINTS);\n}\n",
    "/* eslint-disable */\n// @ts-nocheck\nimport { getLangSmithEnvironmentVariable } from \"../../utils/env.js\";\nvar LIMIT_REPLACE_NODE = \"[...]\";\nvar CIRCULAR_REPLACE_NODE = { result: \"[Circular]\" };\nvar arr = [];\nvar replacerStack = [];\nconst encoder = new TextEncoder();\nfunction defaultOptions() {\n    return {\n        depthLimit: Number.MAX_SAFE_INTEGER,\n        edgesLimit: Number.MAX_SAFE_INTEGER,\n    };\n}\nfunction encodeString(str) {\n    return encoder.encode(str);\n}\n// Shared function to handle well-known types\nfunction serializeWellKnownTypes(val) {\n    if (val && typeof val === \"object\" && val !== null) {\n        if (val instanceof Map) {\n            return Object.fromEntries(val);\n        }\n        else if (val instanceof Set) {\n            return Array.from(val);\n        }\n        else if (val instanceof Date) {\n            return val.toISOString();\n        }\n        else if (val instanceof RegExp) {\n            return val.toString();\n        }\n        else if (val instanceof Error) {\n            return {\n                name: val.name,\n                message: val.message,\n            };\n        }\n    }\n    else if (typeof val === \"bigint\") {\n        return val.toString();\n    }\n    return val;\n}\n// Default replacer function to handle well-known types\nfunction createDefaultReplacer(userReplacer) {\n    return function (key, val) {\n        // Apply user replacer first if provided\n        if (userReplacer) {\n            const userResult = userReplacer.call(this, key, val);\n            // If user replacer returned undefined, fall back to our serialization\n            if (userResult !== undefined) {\n                return userResult;\n            }\n        }\n        // Fall back to our well-known type handling\n        return serializeWellKnownTypes(val);\n    };\n}\n// Regular stringify\nexport function serialize(obj, errorContext, replacer, spacer, options) {\n    try {\n        const str = JSON.stringify(obj, createDefaultReplacer(replacer), spacer);\n        return encodeString(str);\n    }\n    catch (e) {\n        // Fall back to more complex stringify if circular reference\n        if (!e.message?.includes(\"Converting circular structure to JSON\")) {\n            console.warn(`[WARNING]: LangSmith received unserializable value.${errorContext ? `\\nContext: ${errorContext}` : \"\"}`);\n            return encodeString(\"[Unserializable]\");\n        }\n        getLangSmithEnvironmentVariable(\"SUPPRESS_CIRCULAR_JSON_WARNINGS\") !==\n            \"true\" &&\n            console.warn(`[WARNING]: LangSmith received circular JSON. This will decrease tracer performance. ${errorContext ? `\\nContext: ${errorContext}` : \"\"}`);\n        if (typeof options === \"undefined\") {\n            options = defaultOptions();\n        }\n        decirc(obj, \"\", 0, [], undefined, 0, options);\n        let res;\n        try {\n            if (replacerStack.length === 0) {\n                res = JSON.stringify(obj, replacer, spacer);\n            }\n            else {\n                res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);\n            }\n        }\n        catch (_) {\n            return encodeString(\"[unable to serialize, circular reference is too complex to analyze]\");\n        }\n        finally {\n            while (arr.length !== 0) {\n                const part = arr.pop();\n                if (part.length === 4) {\n                    Object.defineProperty(part[0], part[1], part[3]);\n                }\n                else {\n                    part[0][part[1]] = part[2];\n                }\n            }\n        }\n        return encodeString(res);\n    }\n}\nfunction setReplace(replace, val, k, parent) {\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);\n    if (propertyDescriptor.get !== undefined) {\n        if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: replace });\n            arr.push([parent, k, val, propertyDescriptor]);\n        }\n        else {\n            replacerStack.push([val, k, replace]);\n        }\n    }\n    else {\n        parent[k] = replace;\n        arr.push([parent, k, val]);\n    }\n}\nfunction decirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                decirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            // Handle well-known types before Object.keys iteration\n            val = serializeWellKnownTypes(val);\n            var keys = Object.keys(val);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                decirc(val[key], key, i, stack, val, depth, options);\n            }\n        }\n        stack.pop();\n    }\n}\n// Stable-stringify\nfunction compareFunction(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction deterministicStringify(obj, replacer, spacer, options) {\n    if (typeof options === \"undefined\") {\n        options = defaultOptions();\n    }\n    var tmp = deterministicDecirc(obj, \"\", 0, [], undefined, 0, options) || obj;\n    var res;\n    try {\n        if (replacerStack.length === 0) {\n            res = JSON.stringify(tmp, replacer, spacer);\n        }\n        else {\n            res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);\n        }\n    }\n    catch (_) {\n        return JSON.stringify(\"[unable to serialize, circular reference is too complex to analyze]\");\n    }\n    finally {\n        // Ensure that we restore the object as it was.\n        while (arr.length !== 0) {\n            var part = arr.pop();\n            if (part.length === 4) {\n                Object.defineProperty(part[0], part[1], part[3]);\n            }\n            else {\n                part[0][part[1]] = part[2];\n            }\n        }\n    }\n    return res;\n}\nfunction deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        try {\n            if (typeof val.toJSON === \"function\") {\n                return;\n            }\n        }\n        catch (_) {\n            return;\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                deterministicDecirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            // Handle well-known types before Object.keys iteration\n            val = serializeWellKnownTypes(val);\n            // Create a temporary object in the required way\n            var tmp = {};\n            var keys = Object.keys(val).sort(compareFunction);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                deterministicDecirc(val[key], key, i, stack, val, depth, options);\n                tmp[key] = val[key];\n            }\n            if (typeof parent !== \"undefined\") {\n                arr.push([parent, k, val]);\n                parent[k] = tmp;\n            }\n            else {\n                return tmp;\n            }\n        }\n        stack.pop();\n    }\n}\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues(replacer) {\n    replacer =\n        typeof replacer !== \"undefined\"\n            ? replacer\n            : function (k, v) {\n                return v;\n            };\n    return function (key, val) {\n        if (replacerStack.length > 0) {\n            for (var i = 0; i < replacerStack.length; i++) {\n                var part = replacerStack[i];\n                if (part[1] === key && part[0] === val) {\n                    val = part[2];\n                    replacerStack.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        return replacer.call(this, key, val);\n    };\n}\n",
    "import * as uuid from \"uuid\";\nimport { LangSmithToOTELTranslator, } from \"./experimental/otel/translator.js\";\nimport { getDefaultOTLPTracerComponents, getOTELTrace, getOTELContext, } from \"./singletons/otel.js\";\nimport { AsyncCaller } from \"./utils/async_caller.js\";\nimport { convertLangChainMessageToExample, isLangChainMessage, } from \"./utils/messages.js\";\nimport { getEnvironmentVariable, getLangChainEnvVarsMetadata, getLangSmithEnvironmentVariable, getRuntimeEnvironment, getOtelEnabled, getEnv, } from \"./utils/env.js\";\nimport { __version__ } from \"./index.js\";\nimport { assertUuid } from \"./utils/_uuid.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { parsePromptIdentifier } from \"./utils/prompts.js\";\nimport { raiseForStatus } from \"./utils/error.js\";\nimport { _globalFetchImplementationIsNodeFetch, _getFetchImplementation, } from \"./singletons/fetch.js\";\nimport { serialize as serializePayloadForTracing } from \"./utils/fast-safe-stringify/index.js\";\nexport function mergeRuntimeEnvIntoRun(run) {\n    const runtimeEnv = getRuntimeEnvironment();\n    const envVars = getLangChainEnvVarsMetadata();\n    const extra = run.extra ?? {};\n    const metadata = extra.metadata;\n    run.extra = {\n        ...extra,\n        runtime: {\n            ...runtimeEnv,\n            ...extra?.runtime,\n        },\n        metadata: {\n            ...envVars,\n            ...(envVars.revision_id || (\"revision_id\" in run && run.revision_id)\n                ? {\n                    revision_id: (\"revision_id\" in run ? run.revision_id : undefined) ??\n                        envVars.revision_id,\n                }\n                : {}),\n            ...metadata,\n        },\n    };\n    return run;\n}\nconst getTracingSamplingRate = (configRate) => {\n    const samplingRateStr = configRate?.toString() ??\n        getLangSmithEnvironmentVariable(\"TRACING_SAMPLING_RATE\");\n    if (samplingRateStr === undefined) {\n        return undefined;\n    }\n    const samplingRate = parseFloat(samplingRateStr);\n    if (samplingRate < 0 || samplingRate > 1) {\n        throw new Error(`LANGSMITH_TRACING_SAMPLING_RATE must be between 0 and 1 if set. Got: ${samplingRate}`);\n    }\n    return samplingRate;\n};\n// utility functions\nconst isLocalhost = (url) => {\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\n};\nasync function toArray(iterable) {\n    const result = [];\n    for await (const item of iterable) {\n        result.push(item);\n    }\n    return result;\n}\nfunction trimQuotes(str) {\n    if (str === undefined) {\n        return undefined;\n    }\n    return str\n        .trim()\n        .replace(/^\"(.*)\"$/, \"$1\")\n        .replace(/^'(.*)'$/, \"$1\");\n}\nconst handle429 = async (response) => {\n    if (response?.status === 429) {\n        const retryAfter = parseInt(response.headers.get(\"retry-after\") ?? \"10\", 10) * 1000;\n        if (retryAfter > 0) {\n            await new Promise((resolve) => setTimeout(resolve, retryAfter));\n            // Return directly after calling this check\n            return true;\n        }\n    }\n    // Fall back to existing status checks\n    return false;\n};\nfunction _formatFeedbackScore(score) {\n    if (typeof score === \"number\") {\n        // Truncate at 4 decimal places\n        return Number(score.toFixed(4));\n    }\n    return score;\n}\nexport class AutoBatchQueue {\n    constructor() {\n        Object.defineProperty(this, \"items\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"sizeBytes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    peek() {\n        return this.items[0];\n    }\n    push(item) {\n        let itemPromiseResolve;\n        const itemPromise = new Promise((resolve) => {\n            // Setting itemPromiseResolve is synchronous with promise creation:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise\n            itemPromiseResolve = resolve;\n        });\n        const size = serializePayloadForTracing(item.item, `Serializing run with id: ${item.item.id}`).length;\n        this.items.push({\n            action: item.action,\n            payload: item.item,\n            otelContext: item.otelContext,\n            apiKey: item.apiKey,\n            apiUrl: item.apiUrl,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            itemPromiseResolve: itemPromiseResolve,\n            itemPromise,\n            size,\n        });\n        this.sizeBytes += size;\n        return itemPromise;\n    }\n    pop(upToSizeBytes) {\n        if (upToSizeBytes < 1) {\n            throw new Error(\"Number of bytes to pop off may not be less than 1.\");\n        }\n        const popped = [];\n        let poppedSizeBytes = 0;\n        // Pop items until we reach or exceed the size limit\n        while (poppedSizeBytes + (this.peek()?.size ?? 0) < upToSizeBytes &&\n            this.items.length > 0) {\n            const item = this.items.shift();\n            if (item) {\n                popped.push(item);\n                poppedSizeBytes += item.size;\n                this.sizeBytes -= item.size;\n            }\n        }\n        // If there is an item on the queue we were unable to pop,\n        // just return it as a single batch.\n        if (popped.length === 0 && this.items.length > 0) {\n            const item = this.items.shift();\n            popped.push(item);\n            poppedSizeBytes += item.size;\n            this.sizeBytes -= item.size;\n        }\n        return [\n            popped.map((it) => ({\n                action: it.action,\n                item: it.payload,\n                otelContext: it.otelContext,\n                apiKey: it.apiKey,\n                apiUrl: it.apiUrl,\n            })),\n            () => popped.forEach((it) => it.itemPromiseResolve()),\n        ];\n    }\n}\nexport const DEFAULT_UNCOMPRESSED_BATCH_SIZE_LIMIT_BYTES = 24 * 1024 * 1024;\nconst SERVER_INFO_REQUEST_TIMEOUT_MS = 10000;\nconst DEFAULT_API_URL = \"https://api.smith.langchain.com\";\nexport class Client {\n    get _fetch() {\n        return this.fetchImplementation || _getFetchImplementation(this.debug);\n    }\n    constructor(config = {}) {\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"webUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"workspaceId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"batchIngestCaller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout_ms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tenantId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"hideInputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hideOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingSampleRate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filteredPostUuids\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n        Object.defineProperty(this, \"autoBatchTracing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"autoBatchQueue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new AutoBatchQueue()\n        });\n        Object.defineProperty(this, \"autoBatchTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"autoBatchAggregationDelayMs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 250\n        });\n        Object.defineProperty(this, \"batchSizeBytesLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fetchOptions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"blockOnRootRunFinalization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGSMITH_TRACING_BACKGROUND\") === \"false\"\n        });\n        Object.defineProperty(this, \"traceBatchConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 5\n        });\n        Object.defineProperty(this, \"_serverInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"_getServerInfoPromise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"manualFlushMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"langSmithToOTELTranslator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fetchImplementation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"multipartStreamingDisabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"debug\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGSMITH_DEBUG\") === \"true\"\n        });\n        const defaultConfig = Client.getDefaultClientConfig();\n        this.tracingSampleRate = getTracingSamplingRate(config.tracingSamplingRate);\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\n        if (this.apiUrl.endsWith(\"/\")) {\n            this.apiUrl = this.apiUrl.slice(0, -1);\n        }\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\n        this.webUrl = trimQuotes(config.webUrl ?? defaultConfig.webUrl);\n        if (this.webUrl?.endsWith(\"/\")) {\n            this.webUrl = this.webUrl.slice(0, -1);\n        }\n        this.workspaceId = trimQuotes(config.workspaceId ?? getLangSmithEnvironmentVariable(\"WORKSPACE_ID\"));\n        this.timeout_ms = config.timeout_ms ?? 90_000;\n        this.caller = new AsyncCaller({\n            ...(config.callerOptions ?? {}),\n            maxRetries: 4,\n            debug: config.debug ?? this.debug,\n        });\n        this.traceBatchConcurrency =\n            config.traceBatchConcurrency ?? this.traceBatchConcurrency;\n        if (this.traceBatchConcurrency < 1) {\n            throw new Error(\"Trace batch concurrency must be positive.\");\n        }\n        this.debug = config.debug ?? this.debug;\n        this.fetchImplementation = config.fetchImplementation;\n        this.batchIngestCaller = new AsyncCaller({\n            maxRetries: 2,\n            maxConcurrency: this.traceBatchConcurrency,\n            ...(config.callerOptions ?? {}),\n            onFailedResponseHook: handle429,\n            debug: config.debug ?? this.debug,\n        });\n        this.hideInputs =\n            config.hideInputs ?? config.anonymizer ?? defaultConfig.hideInputs;\n        this.hideOutputs =\n            config.hideOutputs ?? config.anonymizer ?? defaultConfig.hideOutputs;\n        this.autoBatchTracing = config.autoBatchTracing ?? this.autoBatchTracing;\n        this.blockOnRootRunFinalization =\n            config.blockOnRootRunFinalization ?? this.blockOnRootRunFinalization;\n        this.batchSizeBytesLimit = config.batchSizeBytesLimit;\n        this.fetchOptions = config.fetchOptions || {};\n        this.manualFlushMode = config.manualFlushMode ?? this.manualFlushMode;\n        if (getOtelEnabled()) {\n            this.langSmithToOTELTranslator = new LangSmithToOTELTranslator();\n        }\n    }\n    static getDefaultClientConfig() {\n        const apiKey = getLangSmithEnvironmentVariable(\"API_KEY\");\n        const apiUrl = getLangSmithEnvironmentVariable(\"ENDPOINT\") ?? DEFAULT_API_URL;\n        const hideInputs = getLangSmithEnvironmentVariable(\"HIDE_INPUTS\") === \"true\";\n        const hideOutputs = getLangSmithEnvironmentVariable(\"HIDE_OUTPUTS\") === \"true\";\n        return {\n            apiUrl: apiUrl,\n            apiKey: apiKey,\n            webUrl: undefined,\n            hideInputs: hideInputs,\n            hideOutputs: hideOutputs,\n        };\n    }\n    getHostUrl() {\n        if (this.webUrl) {\n            return this.webUrl;\n        }\n        else if (isLocalhost(this.apiUrl)) {\n            this.webUrl = \"http://localhost:3000\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.endsWith(\"/api/v1\")) {\n            this.webUrl = this.apiUrl.replace(\"/api/v1\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.includes(\"/api\") &&\n            !this.apiUrl.split(\".\", 1)[0].endsWith(\"api\")) {\n            this.webUrl = this.apiUrl.replace(\"/api\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\n            this.webUrl = \"https://dev.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"eu\")) {\n            this.webUrl = \"https://eu.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"beta\")) {\n            this.webUrl = \"https://beta.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else {\n            this.webUrl = \"https://smith.langchain.com\";\n            return this.webUrl;\n        }\n    }\n    get headers() {\n        const headers = {\n            \"User-Agent\": `langsmith-js/${__version__}`,\n        };\n        if (this.apiKey) {\n            headers[\"x-api-key\"] = `${this.apiKey}`;\n        }\n        if (this.workspaceId) {\n            headers[\"x-tenant-id\"] = this.workspaceId;\n        }\n        return headers;\n    }\n    _getPlatformEndpointPath(path) {\n        // Check if apiUrl already ends with /v1 or /v1/ to avoid double /v1/v1/ paths\n        const needsV1Prefix = this.apiUrl.slice(-3) !== \"/v1\" && this.apiUrl.slice(-4) !== \"/v1/\";\n        return needsV1Prefix ? `/v1/platform/${path}` : `/platform/${path}`;\n    }\n    async processInputs(inputs) {\n        if (this.hideInputs === false) {\n            return inputs;\n        }\n        if (this.hideInputs === true) {\n            return {};\n        }\n        if (typeof this.hideInputs === \"function\") {\n            return this.hideInputs(inputs);\n        }\n        return inputs;\n    }\n    async processOutputs(outputs) {\n        if (this.hideOutputs === false) {\n            return outputs;\n        }\n        if (this.hideOutputs === true) {\n            return {};\n        }\n        if (typeof this.hideOutputs === \"function\") {\n            return this.hideOutputs(outputs);\n        }\n        return outputs;\n    }\n    async prepareRunCreateOrUpdateInputs(run) {\n        const runParams = { ...run };\n        if (runParams.inputs !== undefined) {\n            runParams.inputs = await this.processInputs(runParams.inputs);\n        }\n        if (runParams.outputs !== undefined) {\n            runParams.outputs = await this.processOutputs(runParams.outputs);\n        }\n        return runParams;\n    }\n    async _getResponse(path, queryParams) {\n        const paramsString = queryParams?.toString() ?? \"\";\n        const url = `${this.apiUrl}${path}?${paramsString}`;\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(url, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, `fetch ${path}`);\n            return res;\n        });\n        return response;\n    }\n    async _get(path, queryParams) {\n        const response = await this._getResponse(path, queryParams);\n        return response.json();\n    }\n    async *_getPaginated(path, queryParams = new URLSearchParams(), transform) {\n        let offset = Number(queryParams.get(\"offset\")) || 0;\n        const limit = Number(queryParams.get(\"limit\")) || 100;\n        while (true) {\n            queryParams.set(\"offset\", String(offset));\n            queryParams.set(\"limit\", String(limit));\n            const url = `${this.apiUrl}${path}?${queryParams}`;\n            const response = await this.caller.call(async () => {\n                const res = await this._fetch(url, {\n                    method: \"GET\",\n                    headers: this.headers,\n                    signal: AbortSignal.timeout(this.timeout_ms),\n                    ...this.fetchOptions,\n                });\n                await raiseForStatus(res, `fetch ${path}`);\n                return res;\n            });\n            const items = transform\n                ? transform(await response.json())\n                : await response.json();\n            if (items.length === 0) {\n                break;\n            }\n            yield items;\n            if (items.length < limit) {\n                break;\n            }\n            offset += items.length;\n        }\n    }\n    async *_getCursorPaginatedList(path, body = null, requestMethod = \"POST\", dataKey = \"runs\") {\n        const bodyParams = body ? { ...body } : {};\n        while (true) {\n            const body = JSON.stringify(bodyParams);\n            const response = await this.caller.call(async () => {\n                const res = await this._fetch(`${this.apiUrl}${path}`, {\n                    method: requestMethod,\n                    headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                    signal: AbortSignal.timeout(this.timeout_ms),\n                    ...this.fetchOptions,\n                    body,\n                });\n                await raiseForStatus(res, `fetch ${path}`);\n                return res;\n            });\n            const responseBody = await response.json();\n            if (!responseBody) {\n                break;\n            }\n            if (!responseBody[dataKey]) {\n                break;\n            }\n            yield responseBody[dataKey];\n            const cursors = responseBody.cursors;\n            if (!cursors) {\n                break;\n            }\n            if (!cursors.next) {\n                break;\n            }\n            bodyParams.cursor = cursors.next;\n        }\n    }\n    // Allows mocking for tests\n    _shouldSample() {\n        if (this.tracingSampleRate === undefined) {\n            return true;\n        }\n        return Math.random() < this.tracingSampleRate;\n    }\n    _filterForSampling(runs, patch = false) {\n        if (this.tracingSampleRate === undefined) {\n            return runs;\n        }\n        if (patch) {\n            const sampled = [];\n            for (const run of runs) {\n                if (!this.filteredPostUuids.has(run.trace_id)) {\n                    sampled.push(run);\n                }\n                else if (run.id === run.trace_id) {\n                    this.filteredPostUuids.delete(run.trace_id);\n                }\n            }\n            return sampled;\n        }\n        else {\n            // For new runs, sample at trace level to maintain consistency\n            const sampled = [];\n            for (const run of runs) {\n                const traceId = run.trace_id ?? run.id;\n                // If we've already made a decision about this trace, follow it\n                if (this.filteredPostUuids.has(traceId)) {\n                    continue;\n                }\n                // For new traces, apply sampling\n                if (run.id === traceId) {\n                    if (this._shouldSample()) {\n                        sampled.push(run);\n                    }\n                    else {\n                        this.filteredPostUuids.add(traceId);\n                    }\n                }\n                else {\n                    // Child runs follow their trace's sampling decision\n                    sampled.push(run);\n                }\n            }\n            return sampled;\n        }\n    }\n    async _getBatchSizeLimitBytes() {\n        const serverInfo = await this._ensureServerInfo();\n        return (this.batchSizeBytesLimit ??\n            serverInfo.batch_ingest_config?.size_limit_bytes ??\n            DEFAULT_UNCOMPRESSED_BATCH_SIZE_LIMIT_BYTES);\n    }\n    async _getDatasetExamplesMultiPartSupport() {\n        const serverInfo = await this._ensureServerInfo();\n        return (serverInfo.instance_flags?.dataset_examples_multipart_enabled ?? false);\n    }\n    drainAutoBatchQueue(batchSizeLimit) {\n        const promises = [];\n        while (this.autoBatchQueue.items.length > 0) {\n            const [batch, done] = this.autoBatchQueue.pop(batchSizeLimit);\n            if (!batch.length) {\n                done();\n                break;\n            }\n            const batchesByDestination = batch.reduce((acc, item) => {\n                const apiUrl = item.apiUrl ?? this.apiUrl;\n                const apiKey = item.apiKey ?? this.apiKey;\n                const isDefault = item.apiKey === this.apiKey && item.apiUrl === this.apiUrl;\n                const batchKey = isDefault ? \"default\" : `${apiUrl}|${apiKey}`;\n                if (!acc[batchKey]) {\n                    acc[batchKey] = [];\n                }\n                acc[batchKey].push(item);\n                return acc;\n            }, {});\n            const batchPromises = [];\n            for (const [batchKey, batch] of Object.entries(batchesByDestination)) {\n                const batchPromise = this._processBatch(batch, {\n                    apiUrl: batchKey === \"default\" ? undefined : batchKey.split(\"|\")[0],\n                    apiKey: batchKey === \"default\" ? undefined : batchKey.split(\"|\")[1],\n                });\n                batchPromises.push(batchPromise);\n            }\n            // Wait for all batches to complete, then call the overall done callback\n            const allBatchesPromise = Promise.all(batchPromises).finally(done);\n            promises.push(allBatchesPromise);\n        }\n        return Promise.all(promises);\n    }\n    async _processBatch(batch, options) {\n        if (!batch.length) {\n            return;\n        }\n        try {\n            if (this.langSmithToOTELTranslator !== undefined) {\n                this._sendBatchToOTELTranslator(batch);\n            }\n            else {\n                const ingestParams = {\n                    runCreates: batch\n                        .filter((item) => item.action === \"create\")\n                        .map((item) => item.item),\n                    runUpdates: batch\n                        .filter((item) => item.action === \"update\")\n                        .map((item) => item.item),\n                };\n                const serverInfo = await this._ensureServerInfo();\n                if (serverInfo?.batch_ingest_config?.use_multipart_endpoint) {\n                    const useGzip = serverInfo?.instance_flags?.gzip_body_enabled;\n                    await this.multipartIngestRuns(ingestParams, { ...options, useGzip });\n                }\n                else {\n                    await this.batchIngestRuns(ingestParams, options);\n                }\n            }\n        }\n        catch (e) {\n            console.error(\"Error exporting batch:\", e);\n        }\n    }\n    _sendBatchToOTELTranslator(batch) {\n        if (this.langSmithToOTELTranslator !== undefined) {\n            const otelContextMap = new Map();\n            const operations = [];\n            for (const item of batch) {\n                if (item.item.id && item.otelContext) {\n                    otelContextMap.set(item.item.id, item.otelContext);\n                    if (item.action === \"create\") {\n                        operations.push({\n                            operation: \"post\",\n                            id: item.item.id,\n                            trace_id: item.item.trace_id ?? item.item.id,\n                            run: item.item,\n                        });\n                    }\n                    else {\n                        operations.push({\n                            operation: \"patch\",\n                            id: item.item.id,\n                            trace_id: item.item.trace_id ?? item.item.id,\n                            run: item.item,\n                        });\n                    }\n                }\n            }\n            this.langSmithToOTELTranslator.exportBatch(operations, otelContextMap);\n        }\n    }\n    async processRunOperation(item) {\n        clearTimeout(this.autoBatchTimeout);\n        this.autoBatchTimeout = undefined;\n        item.item = mergeRuntimeEnvIntoRun(item.item);\n        const itemPromise = this.autoBatchQueue.push(item);\n        if (this.manualFlushMode) {\n            // Rely on manual flushing in serverless environments\n            return itemPromise;\n        }\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        if (this.autoBatchQueue.sizeBytes > sizeLimitBytes) {\n            void this.drainAutoBatchQueue(sizeLimitBytes);\n        }\n        if (this.autoBatchQueue.items.length > 0) {\n            this.autoBatchTimeout = setTimeout(() => {\n                this.autoBatchTimeout = undefined;\n                void this.drainAutoBatchQueue(sizeLimitBytes);\n            }, this.autoBatchAggregationDelayMs);\n        }\n        return itemPromise;\n    }\n    async _getServerInfo() {\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/info`, {\n                method: \"GET\",\n                headers: { Accept: \"application/json\" },\n                signal: AbortSignal.timeout(SERVER_INFO_REQUEST_TIMEOUT_MS),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"get server info\");\n            return res;\n        });\n        const json = await response.json();\n        if (this.debug) {\n            console.log(\"\\n=== LangSmith Server Configuration ===\\n\" +\n                JSON.stringify(json, null, 2) +\n                \"\\n\");\n        }\n        return json;\n    }\n    async _ensureServerInfo() {\n        if (this._getServerInfoPromise === undefined) {\n            this._getServerInfoPromise = (async () => {\n                if (this._serverInfo === undefined) {\n                    try {\n                        this._serverInfo = await this._getServerInfo();\n                    }\n                    catch (e) {\n                        console.warn(`[LANGSMITH]: Failed to fetch info on supported operations. Falling back to batch operations and default limits. Info: ${e.status ?? \"Unspecified status code\"} ${e.message}`);\n                    }\n                }\n                return this._serverInfo ?? {};\n            })();\n        }\n        return this._getServerInfoPromise.then((serverInfo) => {\n            if (this._serverInfo === undefined) {\n                this._getServerInfoPromise = undefined;\n            }\n            return serverInfo;\n        });\n    }\n    async _getSettings() {\n        if (!this.settings) {\n            this.settings = this._get(\"/settings\");\n        }\n        return await this.settings;\n    }\n    /**\n     * Flushes current queued traces.\n     */\n    async flush() {\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        await this.drainAutoBatchQueue(sizeLimitBytes);\n    }\n    _cloneCurrentOTELContext() {\n        const otel_trace = getOTELTrace();\n        const otel_context = getOTELContext();\n        if (this.langSmithToOTELTranslator !== undefined) {\n            const currentSpan = otel_trace.getActiveSpan();\n            if (currentSpan) {\n                return otel_trace.setSpan(otel_context.active(), currentSpan);\n            }\n        }\n        return undefined;\n    }\n    async createRun(run, options) {\n        if (!this._filterForSampling([run]).length) {\n            return;\n        }\n        const headers = {\n            ...this.headers,\n            \"Content-Type\": \"application/json\",\n        };\n        const session_name = run.project_name;\n        delete run.project_name;\n        const runCreate = await this.prepareRunCreateOrUpdateInputs({\n            session_name,\n            ...run,\n            start_time: run.start_time ?? Date.now(),\n        });\n        if (this.autoBatchTracing &&\n            runCreate.trace_id !== undefined &&\n            runCreate.dotted_order !== undefined) {\n            const otelContext = this._cloneCurrentOTELContext();\n            void this.processRunOperation({\n                action: \"create\",\n                item: runCreate,\n                otelContext,\n                apiKey: options?.apiKey,\n                apiUrl: options?.apiUrl,\n            }).catch(console.error);\n            return;\n        }\n        const mergedRunCreateParam = mergeRuntimeEnvIntoRun(runCreate);\n        if (options?.apiKey !== undefined) {\n            headers[\"x-api-key\"] = options.apiKey;\n        }\n        if (options?.workspaceId !== undefined) {\n            headers[\"x-tenant-id\"] = options.workspaceId;\n        }\n        const body = serializePayloadForTracing(mergedRunCreateParam, `Creating run with id: ${mergedRunCreateParam.id}`);\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${options?.apiUrl ?? this.apiUrl}/runs`, {\n                method: \"POST\",\n                headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"create run\", true);\n            return res;\n        });\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async batchIngestRuns({ runCreates, runUpdates, }, options) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        let preparedCreateParams = await Promise.all(runCreates?.map((create) => this.prepareRunCreateOrUpdateInputs(create)) ?? []);\n        let preparedUpdateParams = await Promise.all(runUpdates?.map((update) => this.prepareRunCreateOrUpdateInputs(update)) ?? []);\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        const rawBatch = {\n            post: preparedCreateParams,\n            patch: preparedUpdateParams,\n        };\n        if (!rawBatch.post.length && !rawBatch.patch.length) {\n            return;\n        }\n        const batchChunks = {\n            post: [],\n            patch: [],\n        };\n        for (const k of [\"post\", \"patch\"]) {\n            const key = k;\n            const batchItems = rawBatch[key].reverse();\n            let batchItem = batchItems.pop();\n            while (batchItem !== undefined) {\n                // Type is wrong but this is a deprecated code path anyway\n                batchChunks[key].push(batchItem);\n                batchItem = batchItems.pop();\n            }\n        }\n        if (batchChunks.post.length > 0 || batchChunks.patch.length > 0) {\n            const runIds = batchChunks.post\n                .map((item) => item.id)\n                .concat(batchChunks.patch.map((item) => item.id))\n                .join(\",\");\n            await this._postBatchIngestRuns(serializePayloadForTracing(batchChunks, `Ingesting runs with ids: ${runIds}`), options);\n        }\n    }\n    async _postBatchIngestRuns(body, options) {\n        const headers = {\n            ...this.headers,\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        if (options?.apiKey !== undefined) {\n            headers[\"x-api-key\"] = options.apiKey;\n        }\n        await this.batchIngestCaller.call(async () => {\n            const res = await this._fetch(`${options?.apiUrl ?? this.apiUrl}/runs/batch`, {\n                method: \"POST\",\n                headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"batch create run\", true);\n            return res;\n        });\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async multipartIngestRuns({ runCreates, runUpdates, }, options) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        // transform and convert to dicts\n        const allAttachments = {};\n        let preparedCreateParams = [];\n        for (const create of runCreates ?? []) {\n            const preparedCreate = await this.prepareRunCreateOrUpdateInputs(create);\n            if (preparedCreate.id !== undefined &&\n                preparedCreate.attachments !== undefined) {\n                allAttachments[preparedCreate.id] = preparedCreate.attachments;\n            }\n            delete preparedCreate.attachments;\n            preparedCreateParams.push(preparedCreate);\n        }\n        let preparedUpdateParams = [];\n        for (const update of runUpdates ?? []) {\n            preparedUpdateParams.push(await this.prepareRunCreateOrUpdateInputs(update));\n        }\n        // require trace_id and dotted_order\n        const invalidRunCreate = preparedCreateParams.find((runCreate) => {\n            return (runCreate.trace_id === undefined || runCreate.dotted_order === undefined);\n        });\n        if (invalidRunCreate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when creating a run`);\n        }\n        const invalidRunUpdate = preparedUpdateParams.find((runUpdate) => {\n            return (runUpdate.trace_id === undefined || runUpdate.dotted_order === undefined);\n        });\n        if (invalidRunUpdate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when updating a run`);\n        }\n        // combine post and patch dicts where possible\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        if (preparedCreateParams.length === 0 &&\n            preparedUpdateParams.length === 0) {\n            return;\n        }\n        // send the runs in multipart requests\n        const accumulatedContext = [];\n        const accumulatedParts = [];\n        for (const [method, payloads] of [\n            [\"post\", preparedCreateParams],\n            [\"patch\", preparedUpdateParams],\n        ]) {\n            for (const originalPayload of payloads) {\n                // collect fields to be sent as separate parts\n                const { inputs, outputs, events, extra, error, serialized, attachments, ...payload } = originalPayload;\n                const fields = { inputs, outputs, events, extra, error, serialized };\n                // encode the main run payload\n                const stringifiedPayload = serializePayloadForTracing(payload, `Serializing for multipart ingestion of run with id: ${payload.id}`);\n                accumulatedParts.push({\n                    name: `${method}.${payload.id}`,\n                    payload: new Blob([stringifiedPayload], {\n                        type: `application/json; length=${stringifiedPayload.length}`, // encoding=gzip\n                    }),\n                });\n                // encode the fields we collected\n                for (const [key, value] of Object.entries(fields)) {\n                    if (value === undefined) {\n                        continue;\n                    }\n                    const stringifiedValue = serializePayloadForTracing(value, `Serializing ${key} for multipart ingestion of run with id: ${payload.id}`);\n                    accumulatedParts.push({\n                        name: `${method}.${payload.id}.${key}`,\n                        payload: new Blob([stringifiedValue], {\n                            type: `application/json; length=${stringifiedValue.length}`,\n                        }),\n                    });\n                }\n                // encode the attachments\n                if (payload.id !== undefined) {\n                    const attachments = allAttachments[payload.id];\n                    if (attachments) {\n                        delete allAttachments[payload.id];\n                        for (const [name, attachment] of Object.entries(attachments)) {\n                            let contentType;\n                            let content;\n                            if (Array.isArray(attachment)) {\n                                [contentType, content] = attachment;\n                            }\n                            else {\n                                contentType = attachment.mimeType;\n                                content = attachment.data;\n                            }\n                            // Validate that the attachment name doesn't contain a '.'\n                            if (name.includes(\".\")) {\n                                console.warn(`Skipping attachment '${name}' for run ${payload.id}: Invalid attachment name. ` +\n                                    `Attachment names must not contain periods ('.'). Please rename the attachment and try again.`);\n                                continue;\n                            }\n                            accumulatedParts.push({\n                                name: `attachment.${payload.id}.${name}`,\n                                payload: new Blob([content], {\n                                    type: `${contentType}; length=${content.byteLength}`,\n                                }),\n                            });\n                        }\n                    }\n                }\n                // compute context\n                accumulatedContext.push(`trace=${payload.trace_id},id=${payload.id}`);\n            }\n        }\n        await this._sendMultipartRequest(accumulatedParts, accumulatedContext.join(\"; \"), options);\n    }\n    async _createNodeFetchBody(parts, boundary) {\n        // Create multipart form data manually using Blobs\n        const chunks = [];\n        for (const part of parts) {\n            // Add field boundary\n            chunks.push(new Blob([`--${boundary}\\r\\n`]));\n            chunks.push(new Blob([\n                `Content-Disposition: form-data; name=\"${part.name}\"\\r\\n`,\n                `Content-Type: ${part.payload.type}\\r\\n\\r\\n`,\n            ]));\n            chunks.push(part.payload);\n            chunks.push(new Blob([\"\\r\\n\"]));\n        }\n        // Add final boundary\n        chunks.push(new Blob([`--${boundary}--\\r\\n`]));\n        // Combine all chunks into a single Blob\n        const body = new Blob(chunks);\n        // Convert Blob to ArrayBuffer for compatibility\n        const arrayBuffer = await body.arrayBuffer();\n        return arrayBuffer;\n    }\n    async _createMultipartStream(parts, boundary) {\n        const encoder = new TextEncoder();\n        // Create a ReadableStream for streaming the multipart data\n        // Only do special handling if we're using node-fetch\n        const stream = new ReadableStream({\n            async start(controller) {\n                // Helper function to write a chunk to the stream\n                const writeChunk = async (chunk) => {\n                    if (typeof chunk === \"string\") {\n                        controller.enqueue(encoder.encode(chunk));\n                    }\n                    else {\n                        controller.enqueue(chunk);\n                    }\n                };\n                // Write each part to the stream\n                for (const part of parts) {\n                    // Write boundary and headers\n                    await writeChunk(`--${boundary}\\r\\n`);\n                    await writeChunk(`Content-Disposition: form-data; name=\"${part.name}\"\\r\\n`);\n                    await writeChunk(`Content-Type: ${part.payload.type}\\r\\n\\r\\n`);\n                    // Write the payload\n                    const payloadStream = part.payload.stream();\n                    const reader = payloadStream.getReader();\n                    try {\n                        let result;\n                        while (!(result = await reader.read()).done) {\n                            controller.enqueue(result.value);\n                        }\n                    }\n                    finally {\n                        reader.releaseLock();\n                    }\n                    await writeChunk(\"\\r\\n\");\n                }\n                // Write final boundary\n                await writeChunk(`--${boundary}--\\r\\n`);\n                controller.close();\n            },\n        });\n        return stream;\n    }\n    async _sendMultipartRequest(parts, context, options) {\n        // Create multipart form data boundary\n        const boundary = \"----LangSmithFormBoundary\" + Math.random().toString(36).slice(2);\n        const isNodeFetch = _globalFetchImplementationIsNodeFetch();\n        const buildBuffered = () => this._createNodeFetchBody(parts, boundary);\n        const buildStream = () => this._createMultipartStream(parts, boundary);\n        const sendWithRetry = async (bodyFactory) => {\n            return this.batchIngestCaller.call(async () => {\n                const body = await bodyFactory();\n                const headers = {\n                    ...this.headers,\n                    \"Content-Type\": `multipart/form-data; boundary=${boundary}`,\n                };\n                if (options?.apiKey !== undefined) {\n                    headers[\"x-api-key\"] = options.apiKey;\n                }\n                let transformedBody = body;\n                if (options?.useGzip &&\n                    typeof body === \"object\" &&\n                    \"pipeThrough\" in body) {\n                    transformedBody = body.pipeThrough(new CompressionStream(\"gzip\"));\n                    headers[\"Content-Encoding\"] = \"gzip\";\n                }\n                const response = await this._fetch(`${options?.apiUrl ?? this.apiUrl}/runs/multipart`, {\n                    method: \"POST\",\n                    headers,\n                    body: transformedBody,\n                    duplex: \"half\",\n                    signal: AbortSignal.timeout(this.timeout_ms),\n                    ...this.fetchOptions,\n                });\n                await raiseForStatus(response, `Failed to send multipart request`, true);\n                return response;\n            });\n        };\n        try {\n            let res;\n            let streamedAttempt = false;\n            // attempt stream only if not disabled and not using node-fetch or Bun\n            if (!isNodeFetch &&\n                !this.multipartStreamingDisabled &&\n                getEnv() !== \"bun\") {\n                streamedAttempt = true;\n                res = await sendWithRetry(buildStream);\n            }\n            else {\n                res = await sendWithRetry(buildBuffered);\n            }\n            // if stream fails, fallback to buffered body\n            if ((!this.multipartStreamingDisabled || streamedAttempt) &&\n                res.status === 422 &&\n                (options?.apiUrl ?? this.apiUrl) !== DEFAULT_API_URL) {\n                console.warn(`Streaming multipart upload to ${options?.apiUrl ?? this.apiUrl}/runs/multipart failed. ` +\n                    `This usually means the host does not support chunked uploads. ` +\n                    `Retrying with a buffered upload for operation \"${context}\".`);\n                // Disable streaming for future requests\n                this.multipartStreamingDisabled = true;\n                // retry with fully-buffered body\n                res = await sendWithRetry(buildBuffered);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            console.warn(`${e.message.trim()}\\n\\nContext: ${context}`);\n        }\n    }\n    async updateRun(runId, run, options) {\n        assertUuid(runId);\n        if (run.inputs) {\n            run.inputs = await this.processInputs(run.inputs);\n        }\n        if (run.outputs) {\n            run.outputs = await this.processOutputs(run.outputs);\n        }\n        // TODO: Untangle types\n        const data = { ...run, id: runId };\n        if (!this._filterForSampling([data], true).length) {\n            return;\n        }\n        if (this.autoBatchTracing &&\n            data.trace_id !== undefined &&\n            data.dotted_order !== undefined) {\n            const otelContext = this._cloneCurrentOTELContext();\n            if (run.end_time !== undefined &&\n                data.parent_run_id === undefined &&\n                this.blockOnRootRunFinalization &&\n                !this.manualFlushMode) {\n                // Trigger batches as soon as a root trace ends and wait to ensure trace finishes\n                // in serverless environments.\n                await this.processRunOperation({\n                    action: \"update\",\n                    item: data,\n                    otelContext,\n                    apiKey: options?.apiKey,\n                    apiUrl: options?.apiUrl,\n                }).catch(console.error);\n                return;\n            }\n            else {\n                void this.processRunOperation({\n                    action: \"update\",\n                    item: data,\n                    otelContext,\n                    apiKey: options?.apiKey,\n                    apiUrl: options?.apiUrl,\n                }).catch(console.error);\n            }\n            return;\n        }\n        const headers = {\n            ...this.headers,\n            \"Content-Type\": \"application/json\",\n        };\n        if (options?.apiKey !== undefined) {\n            headers[\"x-api-key\"] = options.apiKey;\n        }\n        if (options?.workspaceId !== undefined) {\n            headers[\"x-tenant-id\"] = options.workspaceId;\n        }\n        const body = serializePayloadForTracing(run, `Serializing payload to update run with id: ${runId}`);\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${options?.apiUrl ?? this.apiUrl}/runs/${runId}`, {\n                method: \"PATCH\",\n                headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update run\", true);\n            return res;\n        });\n    }\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\n        assertUuid(runId);\n        let run = await this._get(`/runs/${runId}`);\n        if (loadChildRuns) {\n            run = await this._loadChildRuns(run);\n        }\n        return run;\n    }\n    async getRunUrl({ runId, run, projectOpts, }) {\n        if (run !== undefined) {\n            let sessionId;\n            if (run.session_id) {\n                sessionId = run.session_id;\n            }\n            else if (projectOpts?.projectName) {\n                sessionId = (await this.readProject({ projectName: projectOpts?.projectName })).id;\n            }\n            else if (projectOpts?.projectId) {\n                sessionId = projectOpts?.projectId;\n            }\n            else {\n                const project = await this.readProject({\n                    projectName: getLangSmithEnvironmentVariable(\"PROJECT\") || \"default\",\n                });\n                sessionId = project.id;\n            }\n            const tenantId = await this._getTenantId();\n            return `${this.getHostUrl()}/o/${tenantId}/projects/p/${sessionId}/r/${run.id}?poll=true`;\n        }\n        else if (runId !== undefined) {\n            const run_ = await this.readRun(runId);\n            if (!run_.app_path) {\n                throw new Error(`Run ${runId} has no app_path`);\n            }\n            const baseUrl = this.getHostUrl();\n            return `${baseUrl}${run_.app_path}`;\n        }\n        else {\n            throw new Error(\"Must provide either runId or run\");\n        }\n    }\n    async _loadChildRuns(run) {\n        const childRuns = await toArray(this.listRuns({\n            isRoot: false,\n            projectId: run.session_id,\n            traceId: run.trace_id,\n        }));\n        const treemap = {};\n        const runs = {};\n        // TODO: make dotted order required when the migration finishes\n        childRuns.sort((a, b) => (a?.dotted_order ?? \"\").localeCompare(b?.dotted_order ?? \"\"));\n        for (const childRun of childRuns) {\n            if (childRun.parent_run_id === null ||\n                childRun.parent_run_id === undefined) {\n                throw new Error(`Child run ${childRun.id} has no parent`);\n            }\n            if (childRun.dotted_order?.startsWith(run.dotted_order ?? \"\") &&\n                childRun.id !== run.id) {\n                if (!(childRun.parent_run_id in treemap)) {\n                    treemap[childRun.parent_run_id] = [];\n                }\n                treemap[childRun.parent_run_id].push(childRun);\n                runs[childRun.id] = childRun;\n            }\n        }\n        run.child_runs = treemap[run.id] || [];\n        for (const runId in treemap) {\n            if (runId !== run.id) {\n                runs[runId].child_runs = treemap[runId];\n            }\n        }\n        return run;\n    }\n    /**\n     * List runs from the LangSmith server.\n     * @param projectId - The ID of the project to filter by.\n     * @param projectName - The name of the project to filter by.\n     * @param parentRunId - The ID of the parent run to filter by.\n     * @param traceId - The ID of the trace to filter by.\n     * @param referenceExampleId - The ID of the reference example to filter by.\n     * @param startTime - The start time to filter by.\n     * @param isRoot - Indicates whether to only return root runs.\n     * @param runType - The run type to filter by.\n     * @param error - Indicates whether to filter by error runs.\n     * @param id - The ID of the run to filter by.\n     * @param query - The query string to filter by.\n     * @param filter - The filter string to apply to the run spans.\n     * @param traceFilter - The filter string to apply on the root run of the trace.\n     * @param treeFilter - The filter string to apply on other runs in the trace.\n     * @param limit - The maximum number of runs to retrieve.\n     * @returns {AsyncIterable<Run>} - The runs.\n     *\n     * @example\n     * // List all runs in a project\n     * const projectRuns = client.listRuns({ projectName: \"<your_project>\" });\n     *\n     * @example\n     * // List LLM and Chat runs in the last 24 hours\n     * const todaysLLMRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   start_time: new Date(Date.now() - 24 * 60 * 60 * 1000),\n     *   run_type: \"llm\",\n     * });\n     *\n     * @example\n     * // List traces in a project\n     * const rootRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   execution_order: 1,\n     * });\n     *\n     * @example\n     * // List runs without errors\n     * const correctRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   error: false,\n     * });\n     *\n     * @example\n     * // List runs by run ID\n     * const runIds = [\n     *   \"a36092d2-4ad5-4fb4-9c0d-0dba9a2ed836\",\n     *   \"9398e6be-964f-4aa4-8ae9-ad78cd4b7074\",\n     * ];\n     * const selectedRuns = client.listRuns({ run_ids: runIds });\n     *\n     * @example\n     * // List all \"chain\" type runs that took more than 10 seconds and had `total_tokens` greater than 5000\n     * const chainRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(eq(run_type, \"chain\"), gt(latency, 10), gt(total_tokens, 5000))',\n     * });\n     *\n     * @example\n     * // List all runs called \"extractor\" whose root of the trace was assigned feedback \"user_score\" score of 1\n     * const goodExtractorRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'eq(name, \"extractor\")',\n     *   traceFilter: 'and(eq(feedback_key, \"user_score\"), eq(feedback_score, 1))',\n     * });\n     *\n     * @example\n     * // List all runs that started after a specific timestamp and either have \"error\" not equal to null or a \"Correctness\" feedback score equal to 0\n     * const complexRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(gt(start_time, \"2023-07-15T12:34:56Z\"), or(neq(error, null), and(eq(feedback_key, \"Correctness\"), eq(feedback_score, 0.0))))',\n     * });\n     *\n     * @example\n     * // List all runs where `tags` include \"experimental\" or \"beta\" and `latency` is greater than 2 seconds\n     * const taggedRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(or(has(tags, \"experimental\"), has(tags, \"beta\")), gt(latency, 2))',\n     * });\n     */\n    async *listRuns(props) {\n        const { projectId, projectName, parentRunId, traceId, referenceExampleId, startTime, executionOrder, isRoot, runType, error, id, query, filter, traceFilter, treeFilter, limit, select, order, } = props;\n        let projectIds = [];\n        if (projectId) {\n            projectIds = Array.isArray(projectId) ? projectId : [projectId];\n        }\n        if (projectName) {\n            const projectNames = Array.isArray(projectName)\n                ? projectName\n                : [projectName];\n            const projectIds_ = await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)));\n            projectIds.push(...projectIds_);\n        }\n        const default_select = [\n            \"app_path\",\n            \"completion_cost\",\n            \"completion_tokens\",\n            \"dotted_order\",\n            \"end_time\",\n            \"error\",\n            \"events\",\n            \"extra\",\n            \"feedback_stats\",\n            \"first_token_time\",\n            \"id\",\n            \"inputs\",\n            \"name\",\n            \"outputs\",\n            \"parent_run_id\",\n            \"parent_run_ids\",\n            \"prompt_cost\",\n            \"prompt_tokens\",\n            \"reference_example_id\",\n            \"run_type\",\n            \"session_id\",\n            \"start_time\",\n            \"status\",\n            \"tags\",\n            \"total_cost\",\n            \"total_tokens\",\n            \"trace_id\",\n        ];\n        const body = {\n            session: projectIds.length ? projectIds : null,\n            run_type: runType,\n            reference_example: referenceExampleId,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            execution_order: executionOrder,\n            parent_run: parentRunId,\n            start_time: startTime ? startTime.toISOString() : null,\n            error,\n            id,\n            limit,\n            trace: traceId,\n            select: select ? select : default_select,\n            is_root: isRoot,\n            order,\n        };\n        let runsYielded = 0;\n        for await (const runs of this._getCursorPaginatedList(\"/runs/query\", body)) {\n            if (limit) {\n                if (runsYielded >= limit) {\n                    break;\n                }\n                if (runs.length + runsYielded > limit) {\n                    const newRuns = runs.slice(0, limit - runsYielded);\n                    yield* newRuns;\n                    break;\n                }\n                runsYielded += runs.length;\n                yield* runs;\n            }\n            else {\n                yield* runs;\n            }\n        }\n    }\n    async *listGroupRuns(props) {\n        const { projectId, projectName, groupBy, filter, startTime, endTime, limit, offset, } = props;\n        const sessionId = projectId || (await this.readProject({ projectName })).id;\n        const baseBody = {\n            session_id: sessionId,\n            group_by: groupBy,\n            filter,\n            start_time: startTime ? startTime.toISOString() : null,\n            end_time: endTime ? endTime.toISOString() : null,\n            limit: Number(limit) || 100,\n        };\n        let currentOffset = Number(offset) || 0;\n        const path = \"/runs/group\";\n        const url = `${this.apiUrl}${path}`;\n        while (true) {\n            const currentBody = {\n                ...baseBody,\n                offset: currentOffset,\n            };\n            // Remove undefined values from the payload\n            const filteredPayload = Object.fromEntries(Object.entries(currentBody).filter(([_, value]) => value !== undefined));\n            const body = JSON.stringify(filteredPayload);\n            const response = await this.caller.call(async () => {\n                const res = await this._fetch(url, {\n                    method: \"POST\",\n                    headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                    signal: AbortSignal.timeout(this.timeout_ms),\n                    ...this.fetchOptions,\n                    body,\n                });\n                await raiseForStatus(res, `Failed to fetch ${path}`);\n                return res;\n            });\n            const items = await response.json();\n            const { groups, total } = items;\n            if (groups.length === 0) {\n                break;\n            }\n            for (const thread of groups) {\n                yield thread;\n            }\n            currentOffset += groups.length;\n            if (currentOffset >= total) {\n                break;\n            }\n        }\n    }\n    async getRunStats({ id, trace, parentRun, runType, projectNames, projectIds, referenceExampleIds, startTime, endTime, error, query, filter, traceFilter, treeFilter, isRoot, dataSourceType, }) {\n        let projectIds_ = projectIds || [];\n        if (projectNames) {\n            projectIds_ = [\n                ...(projectIds || []),\n                ...(await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)))),\n            ];\n        }\n        const payload = {\n            id,\n            trace,\n            parent_run: parentRun,\n            run_type: runType,\n            session: projectIds_,\n            reference_example: referenceExampleIds,\n            start_time: startTime,\n            end_time: endTime,\n            error,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            is_root: isRoot,\n            data_source_type: dataSourceType,\n        };\n        // Remove undefined values from the payload\n        const filteredPayload = Object.fromEntries(Object.entries(payload).filter(([_, value]) => value !== undefined));\n        const body = JSON.stringify(filteredPayload);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/runs/stats`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"get run stats\");\n            return res;\n        });\n        const result = await response.json();\n        return result;\n    }\n    async shareRun(runId, { shareId } = {}) {\n        const data = {\n            run_id: runId,\n            share_token: shareId || uuid.v4(),\n        };\n        assertUuid(runId);\n        const body = JSON.stringify(data);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/runs/${runId}/share`, {\n                method: \"PUT\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"share run\");\n            return res;\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            throw new Error(\"Invalid response from server\");\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async unshareRun(runId) {\n        assertUuid(runId);\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/runs/${runId}/share`, {\n                method: \"DELETE\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"unshare run\", true);\n            return res;\n        });\n    }\n    async readRunSharedLink(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/runs/${runId}/share`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"read run shared link\");\n            return res;\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            return undefined;\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async listSharedRuns(shareToken, { runIds, } = {}) {\n        const queryParams = new URLSearchParams({\n            share_token: shareToken,\n        });\n        if (runIds !== undefined) {\n            for (const runId of runIds) {\n                queryParams.append(\"id\", runId);\n            }\n        }\n        assertUuid(shareToken);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/public/${shareToken}/runs${queryParams}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"list shared runs\");\n            return res;\n        });\n        const runs = await response.json();\n        return runs;\n    }\n    async readDatasetSharedSchema(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${datasetId}/share`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"read dataset shared schema\");\n            return res;\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async shareDataset(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        const data = {\n            dataset_id: datasetId,\n        };\n        assertUuid(datasetId);\n        const body = JSON.stringify(data);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${datasetId}/share`, {\n                method: \"PUT\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"share dataset\");\n            return res;\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async unshareDataset(datasetId) {\n        assertUuid(datasetId);\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${datasetId}/share`, {\n                method: \"DELETE\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"unshare dataset\", true);\n            return res;\n        });\n    }\n    async readSharedDataset(shareToken) {\n        assertUuid(shareToken);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/public/${shareToken}/datasets`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"read shared dataset\");\n            return res;\n        });\n        const dataset = await response.json();\n        return dataset;\n    }\n    /**\n     * Get shared examples.\n     *\n     * @param {string} shareToken The share token to get examples for. A share token is the UUID (or LangSmith URL, including UUID) generated when explicitly marking an example as public.\n     * @param {Object} [options] Additional options for listing the examples.\n     * @param {string[] | undefined} [options.exampleIds] A list of example IDs to filter by.\n     * @returns {Promise<Example[]>} The shared examples.\n     */\n    async listSharedExamples(shareToken, options) {\n        const params = {};\n        if (options?.exampleIds) {\n            params.id = options.exampleIds;\n        }\n        const urlParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value]) => {\n            if (Array.isArray(value)) {\n                value.forEach((v) => urlParams.append(key, v));\n            }\n            else {\n                urlParams.append(key, value);\n            }\n        });\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/public/${shareToken}/examples?${urlParams.toString()}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"list shared examples\");\n            return res;\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            if (\"detail\" in result) {\n                throw new Error(`Failed to list shared examples.\\nStatus: ${response.status}\\nMessage: ${Array.isArray(result.detail)\n                    ? result.detail.join(\"\\n\")\n                    : \"Unspecified error\"}`);\n            }\n            throw new Error(`Failed to list shared examples: ${response.status} ${response.statusText}`);\n        }\n        return result.map((example) => ({\n            ...example,\n            _hostUrl: this.getHostUrl(),\n        }));\n    }\n    async createProject({ projectName, description = null, metadata = null, upsert = false, projectExtra = null, referenceDatasetId = null, }) {\n        const upsert_ = upsert ? `?upsert=true` : \"\";\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\n        const extra = projectExtra || {};\n        if (metadata) {\n            extra[\"metadata\"] = metadata;\n        }\n        const body = {\n            name: projectName,\n            extra,\n            description,\n        };\n        if (referenceDatasetId !== null) {\n            body[\"reference_dataset_id\"] = referenceDatasetId;\n        }\n        const serializedBody = JSON.stringify(body);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(endpoint, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: serializedBody,\n            });\n            await raiseForStatus(res, \"create project\");\n            return res;\n        });\n        const result = await response.json();\n        return result;\n    }\n    async updateProject(projectId, { name = null, description = null, metadata = null, projectExtra = null, endTime = null, }) {\n        const endpoint = `${this.apiUrl}/sessions/${projectId}`;\n        let extra = projectExtra;\n        if (metadata) {\n            extra = { ...(extra || {}), metadata };\n        }\n        const body = JSON.stringify({\n            name,\n            extra,\n            description,\n            end_time: endTime ? new Date(endTime).toISOString() : null,\n        });\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(endpoint, {\n                method: \"PATCH\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update project\");\n            return res;\n        });\n        const result = await response.json();\n        return result;\n    }\n    async hasProject({ projectId, projectName, }) {\n        // TODO: Add a head request\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}${path}?${params}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"has project\");\n            return res;\n        });\n        // consume the response body to release the connection\n        // https://undici.nodejs.org/#/?id=garbage-collection\n        try {\n            const result = await response.json();\n            if (!response.ok) {\n                return false;\n            }\n            // If it's OK and we're querying by name, need to check the list is not empty\n            if (Array.isArray(result)) {\n                return result.length > 0;\n            }\n            // projectId querying\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async readProject({ projectId, projectName, includeStats, }) {\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        if (includeStats !== undefined) {\n            params.append(\"include_stats\", includeStats.toString());\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async getProjectUrl({ projectId, projectName, }) {\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide either projectName or projectId\");\n        }\n        const project = await this.readProject({ projectId, projectName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/projects/p/${project.id}`;\n    }\n    async getDatasetUrl({ datasetId, datasetName, }) {\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const dataset = await this.readDataset({ datasetId, datasetName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/datasets/${dataset.id}`;\n    }\n    async _getTenantId() {\n        if (this._tenantId !== null) {\n            return this._tenantId;\n        }\n        const queryParams = new URLSearchParams({ limit: \"1\" });\n        for await (const projects of this._getPaginated(\"/sessions\", queryParams)) {\n            this._tenantId = projects[0].tenant_id;\n            return projects[0].tenant_id;\n        }\n        throw new Error(\"No projects found to resolve tenant.\");\n    }\n    async *listProjects({ projectIds, name, nameContains, referenceDatasetId, referenceDatasetName, includeStats, datasetVersion, referenceFree, metadata, } = {}) {\n        const params = new URLSearchParams();\n        if (projectIds !== undefined) {\n            for (const projectId of projectIds) {\n                params.append(\"id\", projectId);\n            }\n        }\n        if (name !== undefined) {\n            params.append(\"name\", name);\n        }\n        if (nameContains !== undefined) {\n            params.append(\"name_contains\", nameContains);\n        }\n        if (referenceDatasetId !== undefined) {\n            params.append(\"reference_dataset\", referenceDatasetId);\n        }\n        else if (referenceDatasetName !== undefined) {\n            const dataset = await this.readDataset({\n                datasetName: referenceDatasetName,\n            });\n            params.append(\"reference_dataset\", dataset.id);\n        }\n        if (includeStats !== undefined) {\n            params.append(\"include_stats\", includeStats.toString());\n        }\n        if (datasetVersion !== undefined) {\n            params.append(\"dataset_version\", datasetVersion);\n        }\n        if (referenceFree !== undefined) {\n            params.append(\"reference_free\", referenceFree.toString());\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const projects of this._getPaginated(\"/sessions\", params)) {\n            yield* projects;\n        }\n    }\n    async deleteProject({ projectId, projectName, }) {\n        let projectId_;\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        else if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId === undefined) {\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        else {\n            projectId_ = projectId;\n        }\n        assertUuid(projectId_);\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/sessions/${projectId_}`, {\n                method: \"DELETE\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, `delete session ${projectId_} (${projectName})`, true);\n            return res;\n        });\n    }\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\n        const url = `${this.apiUrl}/datasets/upload`;\n        const formData = new FormData();\n        formData.append(\"file\", csvFile, fileName);\n        inputKeys.forEach((key) => {\n            formData.append(\"input_keys\", key);\n        });\n        outputKeys.forEach((key) => {\n            formData.append(\"output_keys\", key);\n        });\n        if (description) {\n            formData.append(\"description\", description);\n        }\n        if (dataType) {\n            formData.append(\"data_type\", dataType);\n        }\n        if (name) {\n            formData.append(\"name\", name);\n        }\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(url, {\n                method: \"POST\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: formData,\n            });\n            await raiseForStatus(res, \"upload CSV\");\n            return res;\n        });\n        const result = await response.json();\n        return result;\n    }\n    async createDataset(name, { description, dataType, inputsSchema, outputsSchema, metadata, } = {}) {\n        const body = {\n            name,\n            description,\n            extra: metadata ? { metadata } : undefined,\n        };\n        if (dataType) {\n            body.data_type = dataType;\n        }\n        if (inputsSchema) {\n            body.inputs_schema_definition = inputsSchema;\n        }\n        if (outputsSchema) {\n            body.outputs_schema_definition = outputsSchema;\n        }\n        const serializedBody = JSON.stringify(body);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: serializedBody,\n            });\n            await raiseForStatus(res, \"create dataset\");\n            return res;\n        });\n        const result = await response.json();\n        return result;\n    }\n    async readDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        // limit to 1 result\n        const params = new URLSearchParams({ limit: \"1\" });\n        if (datasetId && datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId) {\n            assertUuid(datasetId);\n            path += `/${datasetId}`;\n        }\n        else if (datasetName) {\n            params.append(\"name\", datasetName);\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async hasDataset({ datasetId, datasetName, }) {\n        try {\n            await this.readDataset({ datasetId, datasetName });\n            return true;\n        }\n        catch (e) {\n            if (\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            e instanceof Error &&\n                e.message.toLocaleLowerCase().includes(\"not found\")) {\n                return false;\n            }\n            throw e;\n        }\n    }\n    async diffDatasetVersions({ datasetId, datasetName, fromVersion, toVersion, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const urlParams = new URLSearchParams({\n            from_version: typeof fromVersion === \"string\"\n                ? fromVersion\n                : fromVersion.toISOString(),\n            to_version: typeof toVersion === \"string\" ? toVersion : toVersion.toISOString(),\n        });\n        const response = await this._get(`/datasets/${datasetId_}/versions/diff`, urlParams);\n        return response;\n    }\n    async readDatasetOpenaiFinetuning({ datasetId, datasetName, }) {\n        const path = \"/datasets\";\n        if (datasetId !== undefined) {\n            // do nothing\n        }\n        else if (datasetName !== undefined) {\n            datasetId = (await this.readDataset({ datasetName })).id;\n        }\n        else {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const response = await this._getResponse(`${path}/${datasetId}/openai_ft`);\n        const datasetText = await response.text();\n        const dataset = datasetText\n            .trim()\n            .split(\"\\n\")\n            .map((line) => JSON.parse(line));\n        return dataset;\n    }\n    async *listDatasets({ limit = 100, offset = 0, datasetIds, datasetName, datasetNameContains, metadata, } = {}) {\n        const path = \"/datasets\";\n        const params = new URLSearchParams({\n            limit: limit.toString(),\n            offset: offset.toString(),\n        });\n        if (datasetIds !== undefined) {\n            for (const id_ of datasetIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        if (datasetNameContains !== undefined) {\n            params.append(\"name_contains\", datasetNameContains);\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const datasets of this._getPaginated(path, params)) {\n            yield* datasets;\n        }\n    }\n    /**\n     * Update a dataset\n     * @param props The dataset details to update\n     * @returns The updated dataset\n     */\n    async updateDataset(props) {\n        const { datasetId, datasetName, ...update } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const body = JSON.stringify(update);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${_datasetId}`, {\n                method: \"PATCH\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update dataset\");\n            return res;\n        });\n        return (await response.json());\n    }\n    /**\n     * Updates a tag on a dataset.\n     *\n     * If the tag is already assigned to a different version of this dataset,\n     * the tag will be moved to the new version. The as_of parameter is used to\n     * determine which version of the dataset to apply the new tags to.\n     *\n     * It must be an exact version of the dataset to succeed. You can\n     * use the \"readDatasetVersion\" method to find the exact version\n     * to apply the tags to.\n     * @param params.datasetId The ID of the dataset to update. Must be provided if \"datasetName\" is not provided.\n     * @param params.datasetName The name of the dataset to update. Must be provided if \"datasetId\" is not provided.\n     * @param params.asOf The timestamp of the dataset to apply the new tags to.\n     * @param params.tag The new tag to apply to the dataset.\n     */\n    async updateDatasetTag(props) {\n        const { datasetId, datasetName, asOf, tag } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const body = JSON.stringify({\n            as_of: typeof asOf === \"string\" ? asOf : asOf.toISOString(),\n            tag,\n        });\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${_datasetId}/tags`, {\n                method: \"PUT\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update dataset tags\", true);\n            return res;\n        });\n    }\n    async deleteDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        let datasetId_ = datasetId;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        if (datasetId_ !== undefined) {\n            assertUuid(datasetId_);\n            path += `/${datasetId_}`;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        await this.caller.call(async () => {\n            const res = await this._fetch(this.apiUrl + path, {\n                method: \"DELETE\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, `delete ${path}`, true);\n            return res;\n        });\n    }\n    async indexDataset({ datasetId, datasetName, tag, }) {\n        let datasetId_ = datasetId;\n        if (!datasetId_ && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ && datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (!datasetId_) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            tag: tag,\n        };\n        const body = JSON.stringify(data);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${datasetId_}/index`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"index dataset\");\n            return res;\n        });\n        await response.json();\n    }\n    /**\n     * Lets you run a similarity search query on a dataset.\n     *\n     * Requires the dataset to be indexed. Please see the `indexDataset` method to set up indexing.\n     *\n     * @param inputs      The input on which to run the similarity search. Must have the\n     *                    same schema as the dataset.\n     *\n     * @param datasetId   The dataset to search for similar examples.\n     *\n     * @param limit       The maximum number of examples to return. Will return the top `limit` most\n     *                    similar examples in order of most similar to least similar. If no similar\n     *                    examples are found, random examples will be returned.\n     *\n     * @param filter      A filter string to apply to the search. Only examples will be returned that\n     *                    match the filter string. Some examples of filters\n     *\n     *                    - eq(metadata.mykey, \"value\")\n     *                    - and(neq(metadata.my.nested.key, \"value\"), neq(metadata.mykey, \"value\"))\n     *                    - or(eq(metadata.mykey, \"value\"), eq(metadata.mykey, \"othervalue\"))\n     *\n     * @returns           A list of similar examples.\n     *\n     *\n     * @example\n     * dataset_id = \"123e4567-e89b-12d3-a456-426614174000\"\n     * inputs = {\"text\": \"How many people live in Berlin?\"}\n     * limit = 5\n     * examples = await client.similarExamples(inputs, dataset_id, limit)\n     */\n    async similarExamples(inputs, datasetId, limit, { filter, } = {}) {\n        const data = {\n            limit: limit,\n            inputs: inputs,\n        };\n        if (filter !== undefined) {\n            data[\"filter\"] = filter;\n        }\n        assertUuid(datasetId);\n        const body = JSON.stringify(data);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${datasetId}/search`, {\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                method: \"POST\",\n                body,\n            });\n            await raiseForStatus(res, \"fetch similar examples\");\n            return res;\n        });\n        const result = await response.json();\n        return result[\"examples\"];\n    }\n    async createExample(inputsOrUpdate, outputs, options) {\n        if (isExampleCreate(inputsOrUpdate)) {\n            if (outputs !== undefined || options !== undefined) {\n                throw new Error(\"Cannot provide outputs or options when using ExampleCreate object\");\n            }\n        }\n        let datasetId_ = outputs ? options?.datasetId : inputsOrUpdate.dataset_id;\n        const datasetName_ = outputs\n            ? options?.datasetName\n            : inputsOrUpdate.dataset_name;\n        if (datasetId_ === undefined && datasetName_ === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName: datasetName_ });\n            datasetId_ = dataset.id;\n        }\n        const createdAt_ = (outputs ? options?.createdAt : inputsOrUpdate.created_at) || new Date();\n        let data;\n        if (!isExampleCreate(inputsOrUpdate)) {\n            data = {\n                inputs: inputsOrUpdate,\n                outputs,\n                created_at: createdAt_?.toISOString(),\n                id: options?.exampleId,\n                metadata: options?.metadata,\n                split: options?.split,\n                source_run_id: options?.sourceRunId,\n                use_source_run_io: options?.useSourceRunIO,\n                use_source_run_attachments: options?.useSourceRunAttachments,\n                attachments: options?.attachments,\n            };\n        }\n        else {\n            data = inputsOrUpdate;\n        }\n        const response = await this._uploadExamplesMultipart(datasetId_, [data]);\n        const example = await this.readExample(response.example_ids?.[0] ?? uuid.v4());\n        return example;\n    }\n    async createExamples(propsOrUploads) {\n        if (Array.isArray(propsOrUploads)) {\n            if (propsOrUploads.length === 0) {\n                return [];\n            }\n            const uploads = propsOrUploads;\n            let datasetId_ = uploads[0].dataset_id;\n            const datasetName_ = uploads[0].dataset_name;\n            if (datasetId_ === undefined && datasetName_ === undefined) {\n                throw new Error(\"Must provide either datasetName or datasetId\");\n            }\n            else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n                throw new Error(\"Must provide either datasetName or datasetId, not both\");\n            }\n            else if (datasetId_ === undefined) {\n                const dataset = await this.readDataset({ datasetName: datasetName_ });\n                datasetId_ = dataset.id;\n            }\n            const response = await this._uploadExamplesMultipart(datasetId_, uploads);\n            const examples = await Promise.all(response.example_ids.map((id) => this.readExample(id)));\n            return examples;\n        }\n        const { inputs, outputs, metadata, splits, sourceRunIds, useSourceRunIOs, useSourceRunAttachments, attachments, exampleIds, datasetId, datasetName, } = propsOrUploads;\n        if (inputs === undefined) {\n            throw new Error(\"Must provide inputs when using legacy parameters\");\n        }\n        let datasetId_ = datasetId;\n        const datasetName_ = datasetName;\n        if (datasetId_ === undefined && datasetName_ === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName: datasetName_ });\n            datasetId_ = dataset.id;\n        }\n        const formattedExamples = inputs.map((input, idx) => {\n            return {\n                dataset_id: datasetId_,\n                inputs: input,\n                outputs: outputs?.[idx],\n                metadata: metadata?.[idx],\n                split: splits?.[idx],\n                id: exampleIds?.[idx],\n                attachments: attachments?.[idx],\n                source_run_id: sourceRunIds?.[idx],\n                use_source_run_io: useSourceRunIOs?.[idx],\n                use_source_run_attachments: useSourceRunAttachments?.[idx],\n            };\n        });\n        const response = await this._uploadExamplesMultipart(datasetId_, formattedExamples);\n        const examples = await Promise.all(response.example_ids.map((id) => this.readExample(id)));\n        return examples;\n    }\n    async createLLMExample(input, generation, options) {\n        return this.createExample({ input }, { output: generation }, options);\n    }\n    async createChatExample(input, generations, options) {\n        const finalInput = input.map((message) => {\n            if (isLangChainMessage(message)) {\n                return convertLangChainMessageToExample(message);\n            }\n            return message;\n        });\n        const finalOutput = isLangChainMessage(generations)\n            ? convertLangChainMessageToExample(generations)\n            : generations;\n        return this.createExample({ input: finalInput }, { output: finalOutput }, options);\n    }\n    async readExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const rawExample = await this._get(path);\n        const { attachment_urls, ...rest } = rawExample;\n        const example = rest;\n        if (attachment_urls) {\n            example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                acc[key.slice(\"attachment.\".length)] = {\n                    presigned_url: value.presigned_url,\n                    mime_type: value.mime_type,\n                };\n                return acc;\n            }, {});\n        }\n        return example;\n    }\n    async *listExamples({ datasetId, datasetName, exampleIds, asOf, splits, inlineS3Urls, metadata, limit, offset, filter, includeAttachments, } = {}) {\n        let datasetId_;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            datasetId_ = datasetId;\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            throw new Error(\"Must provide a datasetName or datasetId\");\n        }\n        const params = new URLSearchParams({ dataset: datasetId_ });\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const inlineS3Urls_ = inlineS3Urls ?? true;\n        params.append(\"inline_s3_urls\", inlineS3Urls_.toString());\n        if (exampleIds !== undefined) {\n            for (const id_ of exampleIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (splits !== undefined) {\n            for (const split of splits) {\n                params.append(\"splits\", split);\n            }\n        }\n        if (metadata !== undefined) {\n            const serializedMetadata = JSON.stringify(metadata);\n            params.append(\"metadata\", serializedMetadata);\n        }\n        if (limit !== undefined) {\n            params.append(\"limit\", limit.toString());\n        }\n        if (offset !== undefined) {\n            params.append(\"offset\", offset.toString());\n        }\n        if (filter !== undefined) {\n            params.append(\"filter\", filter);\n        }\n        if (includeAttachments === true) {\n            [\"attachment_urls\", \"outputs\", \"metadata\"].forEach((field) => params.append(\"select\", field));\n        }\n        let i = 0;\n        for await (const rawExamples of this._getPaginated(\"/examples\", params)) {\n            for (const rawExample of rawExamples) {\n                const { attachment_urls, ...rest } = rawExample;\n                const example = rest;\n                if (attachment_urls) {\n                    example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                        acc[key.slice(\"attachment.\".length)] = {\n                            presigned_url: value.presigned_url,\n                            mime_type: value.mime_type || undefined,\n                        };\n                        return acc;\n                    }, {});\n                }\n                yield example;\n                i++;\n            }\n            if (limit !== undefined && i >= limit) {\n                break;\n            }\n        }\n    }\n    async deleteExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        await this.caller.call(async () => {\n            const res = await this._fetch(this.apiUrl + path, {\n                method: \"DELETE\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, `delete ${path}`, true);\n            return res;\n        });\n    }\n    async updateExample(exampleIdOrUpdate, update) {\n        let exampleId;\n        if (update) {\n            exampleId = exampleIdOrUpdate;\n        }\n        else {\n            exampleId = exampleIdOrUpdate.id;\n        }\n        assertUuid(exampleId);\n        let updateToUse;\n        if (update) {\n            updateToUse = { id: exampleId, ...update };\n        }\n        else {\n            updateToUse = exampleIdOrUpdate;\n        }\n        let datasetId;\n        if (updateToUse.dataset_id !== undefined) {\n            datasetId = updateToUse.dataset_id;\n        }\n        else {\n            const example = await this.readExample(exampleId);\n            datasetId = example.dataset_id;\n        }\n        return this._updateExamplesMultipart(datasetId, [updateToUse]);\n    }\n    async updateExamples(update) {\n        // We will naively get dataset id from first example and assume it works for all\n        let datasetId;\n        if (update[0].dataset_id === undefined) {\n            const example = await this.readExample(update[0].id);\n            datasetId = example.dataset_id;\n        }\n        else {\n            datasetId = update[0].dataset_id;\n        }\n        return this._updateExamplesMultipart(datasetId, update);\n    }\n    /**\n     * Get dataset version by closest date or exact tag.\n     *\n     * Use this to resolve the nearest version to a given timestamp or for a given tag.\n     *\n     * @param options The options for getting the dataset version\n     * @param options.datasetId The ID of the dataset\n     * @param options.datasetName The name of the dataset\n     * @param options.asOf The timestamp of the dataset to retrieve\n     * @param options.tag The tag of the dataset to retrieve\n     * @returns The dataset version\n     */\n    async readDatasetVersion({ datasetId, datasetName, asOf, tag, }) {\n        let resolvedDatasetId;\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            resolvedDatasetId = dataset.id;\n        }\n        else {\n            resolvedDatasetId = datasetId;\n        }\n        assertUuid(resolvedDatasetId);\n        if ((asOf && tag) || (!asOf && !tag)) {\n            throw new Error(\"Exactly one of asOf and tag must be specified.\");\n        }\n        const params = new URLSearchParams();\n        if (asOf !== undefined) {\n            params.append(\"as_of\", typeof asOf === \"string\" ? asOf : asOf.toISOString());\n        }\n        if (tag !== undefined) {\n            params.append(\"tag\", tag);\n        }\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${resolvedDatasetId}/version?${params.toString()}`, {\n                method: \"GET\",\n                headers: { ...this.headers },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"read dataset version\");\n            return res;\n        });\n        return await response.json();\n    }\n    async listDatasetSplits({ datasetId, datasetName, asOf, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const params = new URLSearchParams();\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const response = await this._get(`/datasets/${datasetId_}/splits`, params);\n        return response;\n    }\n    async updateDatasetSplits({ datasetId, datasetName, splitName, exampleIds, remove = false, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            split_name: splitName,\n            examples: exampleIds.map((id) => {\n                assertUuid(id);\n                return id;\n            }),\n            remove,\n        };\n        const body = JSON.stringify(data);\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/${datasetId_}/splits`, {\n                method: \"PUT\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update dataset splits\", true);\n            return res;\n        });\n    }\n    /**\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\n     */\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, referenceExample, } = { loadChildRuns: false }) {\n        warnOnce(\"This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\");\n        let run_;\n        if (typeof run === \"string\") {\n            run_ = await this.readRun(run, { loadChildRuns });\n        }\n        else if (typeof run === \"object\" && \"id\" in run) {\n            run_ = run;\n        }\n        else {\n            throw new Error(`Invalid run type: ${typeof run}`);\n        }\n        if (run_.reference_example_id !== null &&\n            run_.reference_example_id !== undefined) {\n            referenceExample = await this.readExample(run_.reference_example_id);\n        }\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\n        const [_, feedbacks] = await this._logEvaluationFeedback(feedbackResult, run_, sourceInfo);\n        return feedbacks[0];\n    }\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"api\", sourceRunId, feedbackId, feedbackConfig, projectId, comparativeExperimentId, }) {\n        if (!runId && !projectId) {\n            throw new Error(\"One of runId or projectId must be provided\");\n        }\n        if (runId && projectId) {\n            throw new Error(\"Only one of runId or projectId can be provided\");\n        }\n        const feedback_source = {\n            type: feedbackSourceType ?? \"api\",\n            metadata: sourceInfo ?? {},\n        };\n        if (sourceRunId !== undefined &&\n            feedback_source?.metadata !== undefined &&\n            !feedback_source.metadata[\"__run\"]) {\n            feedback_source.metadata[\"__run\"] = { run_id: sourceRunId };\n        }\n        if (feedback_source?.metadata !== undefined &&\n            feedback_source.metadata[\"__run\"]?.run_id !== undefined) {\n            assertUuid(feedback_source.metadata[\"__run\"].run_id);\n        }\n        const feedback = {\n            id: feedbackId ?? uuid.v4(),\n            run_id: runId,\n            key,\n            score: _formatFeedbackScore(score),\n            value,\n            correction,\n            comment,\n            feedback_source: feedback_source,\n            comparative_experiment_id: comparativeExperimentId,\n            feedbackConfig,\n            session_id: projectId,\n        };\n        const body = JSON.stringify(feedback);\n        const url = `${this.apiUrl}/feedback`;\n        await this.caller.call(async () => {\n            const res = await this._fetch(url, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"create feedback\", true);\n            return res;\n        });\n        return feedback;\n    }\n    async updateFeedback(feedbackId, { score, value, correction, comment, }) {\n        const feedbackUpdate = {};\n        if (score !== undefined && score !== null) {\n            feedbackUpdate[\"score\"] = _formatFeedbackScore(score);\n        }\n        if (value !== undefined && value !== null) {\n            feedbackUpdate[\"value\"] = value;\n        }\n        if (correction !== undefined && correction !== null) {\n            feedbackUpdate[\"correction\"] = correction;\n        }\n        if (comment !== undefined && comment !== null) {\n            feedbackUpdate[\"comment\"] = comment;\n        }\n        assertUuid(feedbackId);\n        const body = JSON.stringify(feedbackUpdate);\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/feedback/${feedbackId}`, {\n                method: \"PATCH\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update feedback\", true);\n            return res;\n        });\n    }\n    async readFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this._get(path);\n        return response;\n    }\n    async deleteFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        await this.caller.call(async () => {\n            const res = await this._fetch(this.apiUrl + path, {\n                method: \"DELETE\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, `delete ${path}`, true);\n            return res;\n        });\n    }\n    async *listFeedback({ runIds, feedbackKeys, feedbackSourceTypes, } = {}) {\n        const queryParams = new URLSearchParams();\n        if (runIds) {\n            for (const runId of runIds) {\n                assertUuid(runId);\n                queryParams.append(\"run\", runId);\n            }\n        }\n        if (feedbackKeys) {\n            for (const key of feedbackKeys) {\n                queryParams.append(\"key\", key);\n            }\n        }\n        if (feedbackSourceTypes) {\n            for (const type of feedbackSourceTypes) {\n                queryParams.append(\"source\", type);\n            }\n        }\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\n            yield* feedbacks;\n        }\n    }\n    /**\n     * Creates a presigned feedback token and URL.\n     *\n     * The token can be used to authorize feedback metrics without\n     * needing an API key. This is useful for giving browser-based\n     * applications the ability to submit feedback without needing\n     * to expose an API key.\n     *\n     * @param runId The ID of the run.\n     * @param feedbackKey The feedback key.\n     * @param options Additional options for the token.\n     * @param options.expiration The expiration time for the token.\n     *\n     * @returns A promise that resolves to a FeedbackIngestToken.\n     */\n    async createPresignedFeedbackToken(runId, feedbackKey, { expiration, feedbackConfig, } = {}) {\n        const body = {\n            run_id: runId,\n            feedback_key: feedbackKey,\n            feedback_config: feedbackConfig,\n        };\n        if (expiration) {\n            if (typeof expiration === \"string\") {\n                body[\"expires_at\"] = expiration;\n            }\n            else if (expiration?.hours || expiration?.minutes || expiration?.days) {\n                body[\"expires_in\"] = expiration;\n            }\n        }\n        else {\n            body[\"expires_in\"] = {\n                hours: 3,\n            };\n        }\n        const serializedBody = JSON.stringify(body);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/feedback/tokens`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: serializedBody,\n            });\n            await raiseForStatus(res, \"create presigned feedback token\");\n            return res;\n        });\n        return await response.json();\n    }\n    async createComparativeExperiment({ name, experimentIds, referenceDatasetId, createdAt, description, metadata, id, }) {\n        if (experimentIds.length === 0) {\n            throw new Error(\"At least one experiment is required\");\n        }\n        if (!referenceDatasetId) {\n            referenceDatasetId = (await this.readProject({\n                projectId: experimentIds[0],\n            })).reference_dataset_id;\n        }\n        if (!referenceDatasetId == null) {\n            throw new Error(\"A reference dataset is required\");\n        }\n        const body = {\n            id,\n            name,\n            experiment_ids: experimentIds,\n            reference_dataset_id: referenceDatasetId,\n            description,\n            created_at: (createdAt ?? new Date())?.toISOString(),\n            extra: {},\n        };\n        if (metadata)\n            body.extra[\"metadata\"] = metadata;\n        const serializedBody = JSON.stringify(body);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/datasets/comparative`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: serializedBody,\n            });\n            await raiseForStatus(res, \"create comparative experiment\");\n            return res;\n        });\n        return response.json();\n    }\n    /**\n     * Retrieves a list of presigned feedback tokens for a given run ID.\n     * @param runId The ID of the run.\n     * @returns An async iterable of FeedbackIngestToken objects.\n     */\n    async *listPresignedFeedbackTokens(runId) {\n        assertUuid(runId);\n        const params = new URLSearchParams({ run_id: runId });\n        for await (const tokens of this._getPaginated(\"/feedback/tokens\", params)) {\n            yield* tokens;\n        }\n    }\n    _selectEvalResults(results) {\n        let results_;\n        if (\"results\" in results) {\n            results_ = results.results;\n        }\n        else if (Array.isArray(results)) {\n            results_ = results;\n        }\n        else {\n            results_ = [results];\n        }\n        return results_;\n    }\n    async _logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const evalResults = this._selectEvalResults(evaluatorResponse);\n        const feedbacks = [];\n        for (const res of evalResults) {\n            let sourceInfo_ = sourceInfo || {};\n            if (res.evaluatorInfo) {\n                sourceInfo_ = { ...res.evaluatorInfo, ...sourceInfo_ };\n            }\n            let runId_ = null;\n            if (res.targetRunId) {\n                runId_ = res.targetRunId;\n            }\n            else if (run) {\n                runId_ = run.id;\n            }\n            feedbacks.push(await this.createFeedback(runId_, res.key, {\n                score: res.score,\n                value: res.value,\n                comment: res.comment,\n                correction: res.correction,\n                sourceInfo: sourceInfo_,\n                sourceRunId: res.sourceRunId,\n                feedbackConfig: res.feedbackConfig,\n                feedbackSourceType: \"model\",\n            }));\n        }\n        return [evalResults, feedbacks];\n    }\n    async logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const [results] = await this._logEvaluationFeedback(evaluatorResponse, run, sourceInfo);\n        return results;\n    }\n    /**\n     * API for managing annotation queues\n     */\n    /**\n     * List the annotation queues on the LangSmith API.\n     * @param options - The options for listing annotation queues\n     * @param options.queueIds - The IDs of the queues to filter by\n     * @param options.name - The name of the queue to filter by\n     * @param options.nameContains - The substring that the queue name should contain\n     * @param options.limit - The maximum number of queues to return\n     * @returns An iterator of AnnotationQueue objects\n     */\n    async *listAnnotationQueues(options = {}) {\n        const { queueIds, name, nameContains, limit } = options;\n        const params = new URLSearchParams();\n        if (queueIds) {\n            queueIds.forEach((id, i) => {\n                assertUuid(id, `queueIds[${i}]`);\n                params.append(\"ids\", id);\n            });\n        }\n        if (name)\n            params.append(\"name\", name);\n        if (nameContains)\n            params.append(\"name_contains\", nameContains);\n        params.append(\"limit\", (limit !== undefined ? Math.min(limit, 100) : 100).toString());\n        let count = 0;\n        for await (const queues of this._getPaginated(\"/annotation-queues\", params)) {\n            yield* queues;\n            count++;\n            if (limit !== undefined && count >= limit)\n                break;\n        }\n    }\n    /**\n     * Create an annotation queue on the LangSmith API.\n     * @param options - The options for creating an annotation queue\n     * @param options.name - The name of the annotation queue\n     * @param options.description - The description of the annotation queue\n     * @param options.queueId - The ID of the annotation queue\n     * @returns The created AnnotationQueue object\n     */\n    async createAnnotationQueue(options) {\n        const { name, description, queueId, rubricInstructions } = options;\n        const body = {\n            name,\n            description,\n            id: queueId || uuid.v4(),\n            rubric_instructions: rubricInstructions,\n        };\n        const serializedBody = JSON.stringify(Object.fromEntries(Object.entries(body).filter(([_, v]) => v !== undefined)));\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/annotation-queues`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: serializedBody,\n            });\n            await raiseForStatus(res, \"create annotation queue\");\n            return res;\n        });\n        return response.json();\n    }\n    /**\n     * Read an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to read\n     * @returns The AnnotationQueueWithDetails object\n     */\n    async readAnnotationQueue(queueId) {\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"read annotation queue\");\n            return res;\n        });\n        return response.json();\n    }\n    /**\n     * Update an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to update\n     * @param options - The options for updating the annotation queue\n     * @param options.name - The new name for the annotation queue\n     * @param options.description - The new description for the annotation queue\n     */\n    async updateAnnotationQueue(queueId, options) {\n        const { name, description, rubricInstructions } = options;\n        const body = JSON.stringify({\n            name,\n            description,\n            rubric_instructions: rubricInstructions,\n        });\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n                method: \"PATCH\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update annotation queue\", true);\n            return res;\n        });\n    }\n    /**\n     * Delete an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to delete\n     */\n    async deleteAnnotationQueue(queueId) {\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n                method: \"DELETE\",\n                headers: { ...this.headers, Accept: \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"delete annotation queue\", true);\n            return res;\n        });\n    }\n    /**\n     * Add runs to an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue\n     * @param runIds - The IDs of the runs to be added to the annotation queue\n     */\n    async addRunsToAnnotationQueue(queueId, runIds) {\n        const body = JSON.stringify(runIds.map((id, i) => assertUuid(id, `runIds[${i}]`).toString()));\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"add runs to annotation queue\", true);\n            return res;\n        });\n    }\n    /**\n     * Get a run from an annotation queue at the specified index.\n     * @param queueId - The ID of the annotation queue\n     * @param index - The index of the run to retrieve\n     * @returns A Promise that resolves to a RunWithAnnotationQueueInfo object\n     * @throws {Error} If the run is not found at the given index or for other API-related errors\n     */\n    async getRunFromAnnotationQueue(queueId, index) {\n        const baseUrl = `/annotation-queues/${assertUuid(queueId, \"queueId\")}/run`;\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}${baseUrl}/${index}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"get run from annotation queue\");\n            return res;\n        });\n        return response.json();\n    }\n    /**\n     * Delete a run from an an annotation queue.\n     * @param queueId - The ID of the annotation queue to delete the run from\n     * @param queueRunId - The ID of the run to delete from the annotation queue\n     */\n    async deleteRunFromAnnotationQueue(queueId, queueRunId) {\n        await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs/${assertUuid(queueRunId, \"queueRunId\")}`, {\n                method: \"DELETE\",\n                headers: { ...this.headers, Accept: \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"delete run from annotation queue\", true);\n            return res;\n        });\n    }\n    /**\n     * Get the size of an annotation queue.\n     * @param queueId - The ID of the annotation queue\n     */\n    async getSizeFromAnnotationQueue(queueId) {\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/size`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"get size from annotation queue\");\n            return res;\n        });\n        return response.json();\n    }\n    async _currentTenantIsOwner(owner) {\n        const settings = await this._getSettings();\n        return owner == \"-\" || settings.tenant_handle === owner;\n    }\n    async _ownerConflictError(action, owner) {\n        const settings = await this._getSettings();\n        return new Error(`Cannot ${action} for another tenant.\\n\n      Current tenant: ${settings.tenant_handle}\\n\n      Requested tenant: ${owner}`);\n    }\n    async _getLatestCommitHash(promptOwnerAndName) {\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/commits/${promptOwnerAndName}/?limit=${1}&offset=${0}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"get latest commit hash\");\n            return res;\n        });\n        const json = await response.json();\n        if (json.commits.length === 0) {\n            return undefined;\n        }\n        return json.commits[0].commit_hash;\n    }\n    async _likeOrUnlikePrompt(promptIdentifier, like) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const body = JSON.stringify({ like: like });\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/likes/${owner}/${promptName}`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, `${like ? \"like\" : \"unlike\"} prompt`);\n            return res;\n        });\n        return response.json();\n    }\n    async _getPromptUrl(promptIdentifier) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}/${commitHash.substring(0, 8)}`;\n            }\n            else {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}`;\n            }\n        }\n        else {\n            const settings = await this._getSettings();\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/prompts/${promptName}/${commitHash.substring(0, 8)}?organizationId=${settings.id}`;\n            }\n            else {\n                return `${this.getHostUrl()}/prompts/${promptName}?organizationId=${settings.id}`;\n            }\n        }\n    }\n    async promptExists(promptIdentifier) {\n        const prompt = await this.getPrompt(promptIdentifier);\n        return !!prompt;\n    }\n    async likePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, true);\n    }\n    async unlikePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, false);\n    }\n    async *listCommits(promptOwnerAndName) {\n        for await (const commits of this._getPaginated(`/commits/${promptOwnerAndName}/`, new URLSearchParams(), (res) => res.commits)) {\n            yield* commits;\n        }\n    }\n    async *listPrompts(options) {\n        const params = new URLSearchParams();\n        params.append(\"sort_field\", options?.sortField ?? \"updated_at\");\n        params.append(\"sort_direction\", \"desc\");\n        params.append(\"is_archived\", (!!options?.isArchived).toString());\n        if (options?.isPublic !== undefined) {\n            params.append(\"is_public\", options.isPublic.toString());\n        }\n        if (options?.query) {\n            params.append(\"query\", options.query);\n        }\n        for await (const prompts of this._getPaginated(\"/repos\", params, (res) => res.repos)) {\n            yield* prompts;\n        }\n    }\n    async getPrompt(promptIdentifier) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/repos/${owner}/${promptName}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            if (res?.status === 404) {\n                return null;\n            }\n            await raiseForStatus(res, \"get prompt\");\n            return res;\n        });\n        const result = await response?.json();\n        if (result?.repo) {\n            return result.repo;\n        }\n        else {\n            return null;\n        }\n    }\n    async createPrompt(promptIdentifier, options) {\n        const settings = await this._getSettings();\n        if (options?.isPublic && !settings.tenant_handle) {\n            throw new Error(`Cannot create a public prompt without first\\n\n        creating a LangChain Hub handle.\n        You can add a handle by creating a public prompt at:\\n\n        https://smith.langchain.com/prompts`);\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"create a prompt\", owner);\n        }\n        const data = {\n            repo_handle: promptName,\n            ...(options?.description && { description: options.description }),\n            ...(options?.readme && { readme: options.readme }),\n            ...(options?.tags && { tags: options.tags }),\n            is_public: !!options?.isPublic,\n        };\n        const body = JSON.stringify(data);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/repos/`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"create prompt\");\n            return res;\n        });\n        const { repo } = await response.json();\n        return repo;\n    }\n    async createCommit(promptIdentifier, object, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const resolvedParentCommitHash = options?.parentCommitHash === \"latest\" || !options?.parentCommitHash\n            ? await this._getLatestCommitHash(`${owner}/${promptName}`)\n            : options?.parentCommitHash;\n        const payload = {\n            manifest: JSON.parse(JSON.stringify(object)),\n            parent_commit: resolvedParentCommitHash,\n        };\n        const body = JSON.stringify(payload);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/commits/${owner}/${promptName}`, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"create commit\");\n            return res;\n        });\n        const result = await response.json();\n        return this._getPromptUrl(`${owner}/${promptName}${result.commit_hash ? `:${result.commit_hash}` : \"\"}`);\n    }\n    /**\n     * Update examples with attachments using multipart form data.\n     * @param updates List of ExampleUpdateWithAttachments objects to upsert\n     * @returns Promise with the update response\n     */\n    async updateExamplesMultipart(datasetId, updates = []) {\n        return this._updateExamplesMultipart(datasetId, updates);\n    }\n    async _updateExamplesMultipart(datasetId, updates = []) {\n        if (!(await this._getDatasetExamplesMultiPartSupport())) {\n            throw new Error(\"Your LangSmith deployment does not allow using the multipart examples endpoint, please upgrade your deployment to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of updates) {\n            const exampleId = example.id;\n            // Prepare the main example body\n            const exampleBody = {\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n            };\n            // Add main example data\n            const stringifiedExample = serializePayloadForTracing(exampleBody, `Serializing body for example with id: ${exampleId}`);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs if present\n            if (example.inputs) {\n                const stringifiedInputs = serializePayloadForTracing(example.inputs, `Serializing inputs for example with id: ${exampleId}`);\n                const inputsBlob = new Blob([stringifiedInputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.inputs`, inputsBlob);\n            }\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = serializePayloadForTracing(example.outputs, `Serializing outputs whle updating example with id: ${exampleId}`);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n            if (example.attachments_operations) {\n                const stringifiedAttachmentsOperations = serializePayloadForTracing(example.attachments_operations, `Serializing attachments while updating example with id: ${exampleId}`);\n                const attachmentsOperationsBlob = new Blob([stringifiedAttachmentsOperations], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.attachments_operations`, attachmentsOperationsBlob);\n            }\n        }\n        const datasetIdToUse = datasetId ?? updates[0]?.dataset_id;\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}${this._getPlatformEndpointPath(`datasets/${datasetIdToUse}/examples`)}`, {\n                method: \"PATCH\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: formData,\n            });\n            await raiseForStatus(res, \"update examples\");\n            return res;\n        });\n        return response.json();\n    }\n    /**\n     * Upload examples with attachments using multipart form data.\n     * @param uploads List of ExampleUploadWithAttachments objects to upload\n     * @returns Promise with the upload response\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, please use `createExamples` instead\n     */\n    async uploadExamplesMultipart(datasetId, uploads = []) {\n        return this._uploadExamplesMultipart(datasetId, uploads);\n    }\n    async _uploadExamplesMultipart(datasetId, uploads = []) {\n        if (!(await this._getDatasetExamplesMultiPartSupport())) {\n            throw new Error(\"Your LangSmith deployment does not allow using the multipart examples endpoint, please upgrade your deployment to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of uploads) {\n            const exampleId = (example.id ?? uuid.v4()).toString();\n            // Prepare the main example body\n            const exampleBody = {\n                created_at: example.created_at,\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n                ...(example.source_run_id && { source_run_id: example.source_run_id }),\n                ...(example.use_source_run_io && {\n                    use_source_run_io: example.use_source_run_io,\n                }),\n                ...(example.use_source_run_attachments && {\n                    use_source_run_attachments: example.use_source_run_attachments,\n                }),\n            };\n            // Add main example data\n            const stringifiedExample = serializePayloadForTracing(exampleBody, `Serializing body for uploaded example with id: ${exampleId}`);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs if present\n            if (example.inputs) {\n                const stringifiedInputs = serializePayloadForTracing(example.inputs, `Serializing inputs for uploaded example with id: ${exampleId}`);\n                const inputsBlob = new Blob([stringifiedInputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.inputs`, inputsBlob);\n            }\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = serializePayloadForTracing(example.outputs, `Serializing outputs for uploaded example with id: ${exampleId}`);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n        }\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}${this._getPlatformEndpointPath(`datasets/${datasetId}/examples`)}`, {\n                method: \"POST\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: formData,\n            });\n            await raiseForStatus(res, \"upload examples\");\n            return res;\n        });\n        return response.json();\n    }\n    async updatePrompt(promptIdentifier, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"update a prompt\", owner);\n        }\n        const payload = {};\n        if (options?.description !== undefined)\n            payload.description = options.description;\n        if (options?.readme !== undefined)\n            payload.readme = options.readme;\n        if (options?.tags !== undefined)\n            payload.tags = options.tags;\n        if (options?.isPublic !== undefined)\n            payload.is_public = options.isPublic;\n        if (options?.isArchived !== undefined)\n            payload.is_archived = options.isArchived;\n        // Check if payload is empty\n        if (Object.keys(payload).length === 0) {\n            throw new Error(\"No valid update options provided\");\n        }\n        const body = JSON.stringify(payload);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/repos/${owner}/${promptName}`, {\n                method: \"PATCH\",\n                headers: {\n                    ...this.headers,\n                    \"Content-Type\": \"application/json\",\n                },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body,\n            });\n            await raiseForStatus(res, \"update prompt\");\n            return res;\n        });\n        return response.json();\n    }\n    async deletePrompt(promptIdentifier) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"delete a prompt\", owner);\n        }\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/repos/${owner}/${promptName}`, {\n                method: \"DELETE\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"delete prompt\");\n            return res;\n        });\n        return response.json();\n    }\n    async pullPromptCommit(promptIdentifier, options) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(async () => {\n            const res = await this._fetch(`${this.apiUrl}/commits/${owner}/${promptName}/${commitHash}${options?.includeModel ? \"?include_model=true\" : \"\"}`, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"pull prompt commit\");\n            return res;\n        });\n        const result = await response.json();\n        return {\n            owner,\n            repo: promptName,\n            commit_hash: result.commit_hash,\n            manifest: result.manifest,\n            examples: result.examples,\n        };\n    }\n    /**\n     * This method should not be used directly, use `import { pull } from \"langchain/hub\"` instead.\n     * Using this method directly returns the JSON string of the prompt rather than a LangChain object.\n     * @private\n     */\n    async _pullPrompt(promptIdentifier, options) {\n        const promptObject = await this.pullPromptCommit(promptIdentifier, {\n            includeModel: options?.includeModel,\n        });\n        const prompt = JSON.stringify(promptObject.manifest);\n        return prompt;\n    }\n    async pushPrompt(promptIdentifier, options) {\n        // Create or update prompt metadata\n        if (await this.promptExists(promptIdentifier)) {\n            if (options && Object.keys(options).some((key) => key !== \"object\")) {\n                await this.updatePrompt(promptIdentifier, {\n                    description: options?.description,\n                    readme: options?.readme,\n                    tags: options?.tags,\n                    isPublic: options?.isPublic,\n                });\n            }\n        }\n        else {\n            await this.createPrompt(promptIdentifier, {\n                description: options?.description,\n                readme: options?.readme,\n                tags: options?.tags,\n                isPublic: options?.isPublic,\n            });\n        }\n        if (!options?.object) {\n            return await this._getPromptUrl(promptIdentifier);\n        }\n        // Create a commit with the new manifest\n        const url = await this.createCommit(promptIdentifier, options?.object, {\n            parentCommitHash: options?.parentCommitHash,\n        });\n        return url;\n    }\n    /**\n     * Clone a public dataset to your own langsmith tenant.\n     * This operation is idempotent. If you already have a dataset with the given name,\n     * this function will do nothing.\n  \n     * @param {string} tokenOrUrl The token of the public dataset to clone.\n     * @param {Object} [options] Additional options for cloning the dataset.\n     * @param {string} [options.sourceApiUrl] The URL of the langsmith server where the data is hosted. Defaults to the API URL of your current client.\n     * @param {string} [options.datasetName] The name of the dataset to create in your tenant. Defaults to the name of the public dataset.\n     * @returns {Promise<void>}\n     */\n    async clonePublicDataset(tokenOrUrl, options = {}) {\n        const { sourceApiUrl = this.apiUrl, datasetName } = options;\n        const [parsedApiUrl, tokenUuid] = this.parseTokenOrUrl(tokenOrUrl, sourceApiUrl);\n        const sourceClient = new Client({\n            apiUrl: parsedApiUrl,\n            // Placeholder API key not needed anymore in most cases, but\n            // some private deployments may have API key-based rate limiting\n            // that would cause this to fail if we provide no value.\n            apiKey: \"placeholder\",\n        });\n        const ds = await sourceClient.readSharedDataset(tokenUuid);\n        const finalDatasetName = datasetName || ds.name;\n        try {\n            if (await this.hasDataset({ datasetId: finalDatasetName })) {\n                console.log(`Dataset ${finalDatasetName} already exists in your tenant. Skipping.`);\n                return;\n            }\n        }\n        catch (_) {\n            // `.hasDataset` will throw an error if the dataset does not exist.\n            // no-op in that case\n        }\n        // Fetch examples first, then create the dataset\n        const examples = await sourceClient.listSharedExamples(tokenUuid);\n        const dataset = await this.createDataset(finalDatasetName, {\n            description: ds.description,\n            dataType: ds.data_type || \"kv\",\n            inputsSchema: ds.inputs_schema_definition ?? undefined,\n            outputsSchema: ds.outputs_schema_definition ?? undefined,\n        });\n        try {\n            await this.createExamples({\n                inputs: examples.map((e) => e.inputs),\n                outputs: examples.flatMap((e) => (e.outputs ? [e.outputs] : [])),\n                datasetId: dataset.id,\n            });\n        }\n        catch (e) {\n            console.error(`An error occurred while creating dataset ${finalDatasetName}. ` +\n                \"You should delete it manually.\");\n            throw e;\n        }\n    }\n    parseTokenOrUrl(urlOrToken, apiUrl, numParts = 2, kind = \"dataset\") {\n        // Try parsing as UUID\n        try {\n            assertUuid(urlOrToken); // Will throw if it's not a UUID.\n            return [apiUrl, urlOrToken];\n        }\n        catch (_) {\n            // no-op if it's not a uuid\n        }\n        // Parse as URL\n        try {\n            const parsedUrl = new URL(urlOrToken);\n            const pathParts = parsedUrl.pathname\n                .split(\"/\")\n                .filter((part) => part !== \"\");\n            if (pathParts.length >= numParts) {\n                const tokenUuid = pathParts[pathParts.length - numParts];\n                return [apiUrl, tokenUuid];\n            }\n            else {\n                throw new Error(`Invalid public ${kind} URL: ${urlOrToken}`);\n            }\n        }\n        catch (error) {\n            throw new Error(`Invalid public ${kind} URL or token: ${urlOrToken}`);\n        }\n    }\n    /**\n     * Awaits all pending trace batches. Useful for environments where\n     * you need to be sure that all tracing requests finish before execution ends,\n     * such as serverless environments.\n     *\n     * @example\n     * ```\n     * import { Client } from \"langsmith\";\n     *\n     * const client = new Client();\n     *\n     * try {\n     *   // Tracing happens here\n     *   ...\n     * } finally {\n     *   await client.awaitPendingTraceBatches();\n     * }\n     * ```\n     *\n     * @returns A promise that resolves once all currently pending traces have sent.\n     */\n    async awaitPendingTraceBatches() {\n        if (this.manualFlushMode) {\n            console.warn(\"[WARNING]: When tracing in manual flush mode, you must call `await client.flush()` manually to submit trace batches.\");\n            return Promise.resolve();\n        }\n        await Promise.all([\n            ...this.autoBatchQueue.items.map(({ itemPromise }) => itemPromise),\n            this.batchIngestCaller.queue.onIdle(),\n        ]);\n        if (this.langSmithToOTELTranslator !== undefined) {\n            await getDefaultOTLPTracerComponents()?.DEFAULT_LANGSMITH_SPAN_PROCESSOR?.forceFlush();\n        }\n    }\n}\nfunction isExampleCreate(input) {\n    return \"dataset_id\" in input || \"dataset_name\" in input;\n}\n",
    "import { getLangSmithEnvironmentVariable } from \"./utils/env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\"TRACING_V2\", \"TRACING\"];\n    return !!envVars.find((envVar) => getLangSmithEnvironmentVariable(envVar) === \"true\");\n};\n",
    "export const _LC_CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\n",
    "import * as uuid from \"uuid\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { isConflictingEndpointsError, ConflictingEndpointsError, } from \"./utils/error.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nimport { getEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { getDefaultProjectName } from \"./utils/project.js\";\nimport { getLangSmithEnvironmentVariable } from \"./utils/env.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n    // Date only has millisecond precision, so we use the microseconds to break\n    // possible ties, avoiding incorrect run order\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    const microsecondPrecisionDatestring = `${new Date(epoch)\n        .toISOString()\n        .slice(0, -1)}${paddedOrder}Z`;\n    return {\n        dottedOrder: stripNonAlphanumeric(microsecondPrecisionDatestring) + runId,\n        microsecondPrecisionDatestring,\n    };\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n    constructor(metadata, tags, project_name, replicas) {\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.metadata = metadata;\n        this.tags = tags;\n        this.project_name = project_name;\n        this.replicas = replicas;\n    }\n    static fromHeader(value) {\n        const items = value.split(\",\");\n        let metadata = {};\n        let tags = [];\n        let project_name;\n        let replicas;\n        for (const item of items) {\n            const [key, uriValue] = item.split(\"=\");\n            const value = decodeURIComponent(uriValue);\n            if (key === \"langsmith-metadata\") {\n                metadata = JSON.parse(value);\n            }\n            else if (key === \"langsmith-tags\") {\n                tags = value.split(\",\");\n            }\n            else if (key === \"langsmith-project\") {\n                project_name = value;\n            }\n            else if (key === \"langsmith-replicas\") {\n                replicas = JSON.parse(value);\n            }\n        }\n        return new Baggage(metadata, tags, project_name, replicas);\n    }\n    toHeader() {\n        const items = [];\n        if (this.metadata && Object.keys(this.metadata).length > 0) {\n            items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n        }\n        if (this.tags && this.tags.length > 0) {\n            items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n        }\n        if (this.project_name) {\n            items.push(`langsmith-project=${encodeURIComponent(this.project_name)}`);\n        }\n        return items.join(\",\");\n    }\n}\nexport class RunTree {\n    constructor(originalConfig) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dotted_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Attachments associated with the run.\n         * Each entry is a tuple of [mime_type, bytes]\n         */\n        Object.defineProperty(this, \"attachments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Projects to replicate this run to with optional updates.\n         */\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_serialized_start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If you pass in a run tree directly, return a shallow clone\n        if (isRunTree(originalConfig)) {\n            Object.assign(this, { ...originalConfig });\n            return;\n        }\n        const defaultConfig = RunTree.getDefaultConfig();\n        const { metadata, ...config } = originalConfig;\n        const client = config.client ?? RunTree.getSharedClient();\n        const dedupedMetadata = {\n            ...metadata,\n            ...config?.extra?.metadata,\n        };\n        config.extra = { ...config.extra, metadata: dedupedMetadata };\n        Object.assign(this, { ...defaultConfig, ...config, client });\n        if (!this.trace_id) {\n            if (this.parent_run) {\n                this.trace_id = this.parent_run.trace_id ?? this.id;\n            }\n            else {\n                this.trace_id = this.id;\n            }\n        }\n        this.replicas = _ensureWriteReplicas(this.replicas);\n        this.execution_order ??= 1;\n        this.child_execution_order ??= 1;\n        if (!this.dotted_order) {\n            const { dottedOrder, microsecondPrecisionDatestring } = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n            if (this.parent_run) {\n                this.dotted_order = this.parent_run.dotted_order + \".\" + dottedOrder;\n            }\n            else {\n                this.dotted_order = dottedOrder;\n            }\n            this._serialized_start_time = microsecondPrecisionDatestring;\n        }\n    }\n    set metadata(metadata) {\n        this.extra = {\n            ...this.extra,\n            metadata: {\n                ...this.extra?.metadata,\n                ...metadata,\n            },\n        };\n    }\n    get metadata() {\n        return this.extra?.metadata;\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            run_type: \"chain\",\n            project_name: getDefaultProjectName(),\n            child_runs: [],\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n        };\n    }\n    static getSharedClient() {\n        if (!RunTree.sharedClient) {\n            RunTree.sharedClient = new Client();\n        }\n        return RunTree.sharedClient;\n    }\n    createChild(config) {\n        const child_execution_order = this.child_execution_order + 1;\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            replicas: this.replicas,\n            client: this.client,\n            tracingEnabled: this.tracingEnabled,\n            execution_order: child_execution_order,\n            child_execution_order: child_execution_order,\n        });\n        // Copy context vars over into the new run tree.\n        if (_LC_CONTEXT_VARIABLES_KEY in this) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            child[_LC_CONTEXT_VARIABLES_KEY] =\n                this[_LC_CONTEXT_VARIABLES_KEY];\n        }\n        const LC_CHILD = Symbol.for(\"lc:child_config\");\n        const presentConfig = config.extra?.[LC_CHILD] ??\n            this.extra[LC_CHILD];\n        // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n        if (isRunnableConfigLike(presentConfig)) {\n            const newConfig = { ...presentConfig };\n            const callbacks = isCallbackManagerLike(newConfig.callbacks)\n                ? newConfig.callbacks.copy?.()\n                : undefined;\n            if (callbacks) {\n                // update the parent run id\n                Object.assign(callbacks, { _parentRunId: child.id });\n                // only populate if we're in a newer LC.JS version\n                callbacks.handlers\n                    ?.find(isLangChainTracerLike)\n                    ?.updateFromRunTree?.(child);\n                newConfig.callbacks = callbacks;\n            }\n            child.extra[LC_CHILD] = newConfig;\n        }\n        // propagate child_execution_order upwards\n        const visited = new Set();\n        let current = this;\n        while (current != null && !visited.has(current.id)) {\n            visited.add(current.id);\n            current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n            current = current.parent_run;\n        }\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now(), metadata) {\n        this.outputs = this.outputs ?? outputs;\n        this.error = this.error ?? error;\n        this.end_time = this.end_time ?? endTime;\n        if (metadata && Object.keys(metadata).length > 0) {\n            this.extra = this.extra\n                ? { ...this.extra, metadata: { ...this.extra.metadata, ...metadata } }\n                : { metadata };\n        }\n    }\n    _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        // Avoid overwriting the runtime environment if it's already set\n        if (runExtra?.runtime?.library === undefined) {\n            if (!runExtra.runtime) {\n                runExtra.runtime = {};\n            }\n            if (runtimeEnv) {\n                for (const [k, v] of Object.entries(runtimeEnv)) {\n                    if (!runExtra.runtime[k]) {\n                        runExtra.runtime[k] = v;\n                    }\n                }\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = run.child_runs.map((child_run) => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id ?? run.parent_run_id;\n            child_runs = [];\n        }\n        return {\n            id: run.id,\n            name: run.name,\n            start_time: run._serialized_start_time ?? run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            tags: run.tags,\n            attachments: run.attachments,\n            events: run.events,\n        };\n    }\n    _remapForProject(projectName, runtimeEnv, excludeChildRuns = true) {\n        const baseRun = this._convertToCreate(this, runtimeEnv, excludeChildRuns);\n        if (projectName === this.project_name) {\n            return baseRun;\n        }\n        // Create a deterministic UUID mapping for this project\n        const createRemappedId = (originalId) => {\n            return uuid.v5(`${originalId}:${projectName}`, uuid.v5.DNS);\n        };\n        // Remap the current run's ID\n        const newId = createRemappedId(baseRun.id);\n        const newTraceId = baseRun.trace_id\n            ? createRemappedId(baseRun.trace_id)\n            : undefined;\n        const newParentRunId = baseRun.parent_run_id\n            ? createRemappedId(baseRun.parent_run_id)\n            : undefined;\n        let newDottedOrder;\n        if (baseRun.dotted_order) {\n            const segments = _parseDottedOrder(baseRun.dotted_order);\n            const rebuilt = [];\n            // Process all segments except the last one\n            for (let i = 0; i < segments.length - 1; i++) {\n                const [timestamp, segmentId] = segments[i];\n                const remappedId = createRemappedId(segmentId);\n                rebuilt.push(timestamp.toISOString().replace(/[-:]/g, \"\").replace(\".\", \"\") +\n                    remappedId);\n            }\n            // Process the last segment with the new run ID\n            const [lastTimestamp] = segments[segments.length - 1];\n            rebuilt.push(lastTimestamp.toISOString().replace(/[-:]/g, \"\").replace(\".\", \"\") +\n                newId);\n            newDottedOrder = rebuilt.join(\".\");\n        }\n        else {\n            newDottedOrder = undefined;\n        }\n        const remappedRun = {\n            ...baseRun,\n            id: newId,\n            trace_id: newTraceId,\n            parent_run_id: newParentRunId,\n            dotted_order: newDottedOrder,\n            session_name: projectName,\n        };\n        return remappedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        try {\n            const runtimeEnv = getRuntimeEnvironment();\n            if (this.replicas && this.replicas.length > 0) {\n                for (const { projectName, apiKey, apiUrl, workspaceId } of this\n                    .replicas) {\n                    const runCreate = this._remapForProject(projectName ?? this.project_name, runtimeEnv, true);\n                    await this.client.createRun(runCreate, {\n                        apiKey,\n                        apiUrl,\n                        workspaceId,\n                    });\n                }\n            }\n            else {\n                const runCreate = this._convertToCreate(this, runtimeEnv, excludeChildRuns);\n                await this.client.createRun(runCreate);\n            }\n            if (!excludeChildRuns) {\n                warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n                for (const childRun of this.child_runs) {\n                    await childRun.postRun(false);\n                }\n            }\n        }\n        catch (error) {\n            console.error(`Error in postRun for run ${this.id}:`, error);\n        }\n    }\n    async patchRun(options) {\n        if (this.replicas && this.replicas.length > 0) {\n            for (const { projectName, apiKey, apiUrl, workspaceId, updates } of this\n                .replicas) {\n                const runData = this._remapForProject(projectName ?? this.project_name);\n                const updatePayload = {\n                    id: runData.id,\n                    outputs: runData.outputs,\n                    error: runData.error,\n                    parent_run_id: runData.parent_run_id,\n                    session_name: runData.session_name,\n                    reference_example_id: runData.reference_example_id,\n                    end_time: runData.end_time,\n                    dotted_order: runData.dotted_order,\n                    trace_id: runData.trace_id,\n                    events: runData.events,\n                    tags: runData.tags,\n                    extra: runData.extra,\n                    attachments: this.attachments,\n                    ...updates,\n                };\n                // Important that inputs is not a key in the run update\n                // if excluded because it will overwrite the run create if the\n                // two operations are merged during batching\n                if (!options?.excludeInputs) {\n                    updatePayload.inputs = runData.inputs;\n                }\n                await this.client.updateRun(runData.id, updatePayload, {\n                    apiKey,\n                    apiUrl,\n                    workspaceId,\n                });\n            }\n        }\n        else {\n            try {\n                const runUpdate = {\n                    end_time: this.end_time,\n                    error: this.error,\n                    outputs: this.outputs,\n                    parent_run_id: this.parent_run?.id ?? this.parent_run_id,\n                    reference_example_id: this.reference_example_id,\n                    extra: this.extra,\n                    events: this.events,\n                    dotted_order: this.dotted_order,\n                    trace_id: this.trace_id,\n                    tags: this.tags,\n                    attachments: this.attachments,\n                    session_name: this.project_name,\n                };\n                // Important that inputs is not a key in the run update\n                // if excluded because it will overwrite the run create if the\n                // two operations are merged during batching\n                if (!options?.excludeInputs) {\n                    runUpdate.inputs = this.inputs;\n                }\n                await this.client.updateRun(this.id, runUpdate);\n            }\n            catch (error) {\n                console.error(`Error in patchRun for run ${this.id}`, error);\n            }\n        }\n    }\n    toJSON() {\n        return this._convertToCreate(this, undefined, false);\n    }\n    /**\n     * Add an event to the run tree.\n     * @param event - A single event or string to add\n     */\n    addEvent(event) {\n        if (!this.events) {\n            this.events = [];\n        }\n        if (typeof event === \"string\") {\n            this.events.push({\n                name: \"event\",\n                time: new Date().toISOString(),\n                message: event,\n            });\n        }\n        else {\n            this.events.push({\n                ...event,\n                time: event.time ?? new Date().toISOString(),\n            });\n        }\n    }\n    static fromRunnableConfig(parentConfig, props) {\n        // We only handle the callback manager case for now\n        const callbackManager = parentConfig?.callbacks;\n        let parentRun;\n        let projectName;\n        let client;\n        let tracingEnabled = isTracingEnabled();\n        if (callbackManager) {\n            const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n            const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name == \"langchain_tracer\");\n            parentRun = langChainTracer?.getRun?.(parentRunId);\n            projectName = langChainTracer?.projectName;\n            client = langChainTracer?.client;\n            tracingEnabled = tracingEnabled || !!langChainTracer;\n        }\n        if (!parentRun) {\n            return new RunTree({\n                ...props,\n                client,\n                tracingEnabled,\n                project_name: projectName,\n            });\n        }\n        const parentRunTree = new RunTree({\n            name: parentRun.name,\n            id: parentRun.id,\n            trace_id: parentRun.trace_id,\n            dotted_order: parentRun.dotted_order,\n            client,\n            tracingEnabled,\n            project_name: projectName,\n            tags: [\n                ...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? [])),\n            ],\n            extra: {\n                metadata: {\n                    ...parentRun?.extra?.metadata,\n                    ...parentConfig?.metadata,\n                },\n            },\n        });\n        return parentRunTree.createChild(props);\n    }\n    static fromDottedOrder(dottedOrder) {\n        return this.fromHeaders({ \"langsmith-trace\": dottedOrder });\n    }\n    static fromHeaders(headers, inheritArgs) {\n        const rawHeaders = \"get\" in headers && typeof headers.get === \"function\"\n            ? {\n                \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n                baggage: headers.get(\"baggage\"),\n            }\n            : headers;\n        const headerTrace = rawHeaders[\"langsmith-trace\"];\n        if (!headerTrace || typeof headerTrace !== \"string\")\n            return undefined;\n        const parentDottedOrder = headerTrace.trim();\n        const parsedDottedOrder = parentDottedOrder.split(\".\").map((part) => {\n            const [strTime, uuid] = part.split(\"Z\");\n            return { strTime, time: Date.parse(strTime + \"Z\"), uuid };\n        });\n        const traceId = parsedDottedOrder[0].uuid;\n        const config = {\n            ...inheritArgs,\n            name: inheritArgs?.[\"name\"] ?? \"parent\",\n            run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n            start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n            id: parsedDottedOrder.at(-1)?.uuid,\n            trace_id: traceId,\n            dotted_order: parentDottedOrder,\n        };\n        if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n            const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n            config.metadata = baggage.metadata;\n            config.tags = baggage.tags;\n            config.project_name = baggage.project_name;\n            config.replicas = baggage.replicas;\n        }\n        return new RunTree(config);\n    }\n    toHeaders(headers) {\n        const result = {\n            \"langsmith-trace\": this.dotted_order,\n            baggage: new Baggage(this.extra?.metadata, this.tags, this.project_name, this.replicas).toHeader(),\n        };\n        if (headers) {\n            for (const [key, value] of Object.entries(result)) {\n                headers.set(key, value);\n            }\n        }\n        return result;\n    }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: null\n});\nexport function isRunTree(x) {\n    return (x != null &&\n        typeof x.createChild === \"function\" &&\n        typeof x.postRun === \"function\");\n}\nfunction isLangChainTracerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        typeof x.name === \"string\" &&\n        x.name === \"langchain_tracer\");\n}\nfunction containsLangChainTracerLike(x) {\n    return (Array.isArray(x) && x.some((callback) => isLangChainTracerLike(callback)));\n}\nfunction isCallbackManagerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        Array.isArray(x.handlers));\n}\nexport function isRunnableConfigLike(x) {\n    // Check that it's an object with a callbacks arg\n    // that has either a CallbackManagerLike object with a langchain tracer within it\n    // or an array with a LangChainTracerLike object within it\n    return (x != null &&\n        typeof x.callbacks === \"object\" &&\n        // Callback manager with a langchain tracer\n        (containsLangChainTracerLike(x.callbacks?.handlers) ||\n            // Or it's an array with a LangChainTracerLike object within it\n            containsLangChainTracerLike(x.callbacks)));\n}\nfunction _parseDottedOrder(dottedOrder) {\n    const parts = dottedOrder.split(\".\");\n    return parts.map((part) => {\n        const timestampStr = part.slice(0, -36);\n        const uuidStr = part.slice(-36);\n        // Parse timestamp: \"%Y%m%dT%H%M%S%fZ\" format\n        // Example: \"20231215T143045123456Z\"\n        const year = parseInt(timestampStr.slice(0, 4));\n        const month = parseInt(timestampStr.slice(4, 6)) - 1; // JS months are 0-indexed\n        const day = parseInt(timestampStr.slice(6, 8));\n        const hour = parseInt(timestampStr.slice(9, 11));\n        const minute = parseInt(timestampStr.slice(11, 13));\n        const second = parseInt(timestampStr.slice(13, 15));\n        const microsecond = parseInt(timestampStr.slice(15, 21));\n        const timestamp = new Date(year, month, day, hour, minute, second, microsecond / 1000);\n        return [timestamp, uuidStr];\n    });\n}\nfunction _getWriteReplicasFromEnv() {\n    const envVar = getEnvironmentVariable(\"LANGSMITH_RUNS_ENDPOINTS\");\n    if (!envVar)\n        return [];\n    try {\n        const parsed = JSON.parse(envVar);\n        if (Array.isArray(parsed)) {\n            const replicas = [];\n            for (const item of parsed) {\n                if (typeof item !== \"object\" || item === null) {\n                    console.warn(`Invalid item type in LANGSMITH_RUNS_ENDPOINTS: ` +\n                        `expected object, got ${typeof item}`);\n                    continue;\n                }\n                if (typeof item.api_url !== \"string\") {\n                    console.warn(`Invalid api_url type in LANGSMITH_RUNS_ENDPOINTS: ` +\n                        `expected string, got ${typeof item.api_url}`);\n                    continue;\n                }\n                if (typeof item.api_key !== \"string\") {\n                    console.warn(`Invalid api_key type in LANGSMITH_RUNS_ENDPOINTS: ` +\n                        `expected string, got ${typeof item.api_key}`);\n                    continue;\n                }\n                replicas.push({\n                    apiUrl: item.api_url.replace(/\\/$/, \"\"),\n                    apiKey: item.api_key,\n                });\n            }\n            return replicas;\n        }\n        else if (typeof parsed === \"object\" && parsed !== null) {\n            _checkEndpointEnvUnset(parsed);\n            const replicas = [];\n            for (const [url, key] of Object.entries(parsed)) {\n                const cleanUrl = url.replace(/\\/$/, \"\");\n                if (typeof key === \"string\") {\n                    replicas.push({\n                        apiUrl: cleanUrl,\n                        apiKey: key,\n                    });\n                }\n                else {\n                    console.warn(`Invalid value type in LANGSMITH_RUNS_ENDPOINTS for URL ${url}: ` +\n                        `expected string, got ${typeof key}`);\n                    continue;\n                }\n            }\n            return replicas;\n        }\n        else {\n            console.warn(\"Invalid LANGSMITH_RUNS_ENDPOINTS – must be valid JSON array of \" +\n                `objects with api_url and api_key properties, or object mapping url->apiKey, got ${typeof parsed}`);\n            return [];\n        }\n    }\n    catch (e) {\n        if (isConflictingEndpointsError(e)) {\n            throw e;\n        }\n        console.warn(\"Invalid LANGSMITH_RUNS_ENDPOINTS – must be valid JSON array of \" +\n            \"objects with api_url and api_key properties, or object mapping url->apiKey\");\n        return [];\n    }\n}\nfunction _ensureWriteReplicas(replicas) {\n    // If null -> fetch from env\n    if (replicas) {\n        return replicas.map((replica) => {\n            if (Array.isArray(replica)) {\n                return {\n                    projectName: replica[0],\n                    updates: replica[1],\n                };\n            }\n            return replica;\n        });\n    }\n    return _getWriteReplicasFromEnv();\n}\nfunction _checkEndpointEnvUnset(parsed) {\n    if (Object.keys(parsed).length > 0 &&\n        getLangSmithEnvironmentVariable(\"ENDPOINT\")) {\n        throw new ConflictingEndpointsError();\n    }\n}\n",
    "import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n",
    "import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nexport class Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * A manual list of keys that should be serialized.\n     * If not overridden, all fields passed into the constructor will be serialized.\n     */\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (this.lc_serializable_keys !== undefined) {\n            this.lc_kwargs = Object.fromEntries(Object.entries(kwargs || {}).filter(([key]) => this.lc_serializable_keys?.includes(key)));\n        }\n        else {\n            this.lc_kwargs = kwargs ?? {};\n        }\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n",
    "export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" && navigator.userAgent.includes(\"jsdom\"));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\n/**\n * @deprecated Use getRuntimeEnvironmentSync instead\n */\nexport async function getRuntimeEnvironment() {\n    return getRuntimeEnvironmentSync();\n}\nexport function getRuntimeEnvironmentSync() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        if (typeof process !== \"undefined\") {\n            // eslint-disable-next-line no-process-env\n            return process.env?.[name];\n        }\n        else if (isDeno()) {\n            return Deno?.env.get(name);\n        }\n        else {\n            return undefined;\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n",
    "import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\nexport function callbackHandlerPrefersStreaming(x) {\n    return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreCustomEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"raiseError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.ignoreCustomEvent =\n                input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n            this.raiseError = input.raiseError ?? this.raiseError;\n            this.awaitHandlers =\n                this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\nexport const isBaseCallbackHandler = (x) => {\n    const callbackHandler = x;\n    return (callbackHandler !== undefined &&\n        typeof callbackHandler.copy === \"function\" &&\n        typeof callbackHandler.name === \"string\" &&\n        typeof callbackHandler.awaitHandlers === \"boolean\");\n};\n",
    "import { RunTree, convertToDottedOrderFormat } from \"langsmith/run_trees\";\nimport { BaseCallbackHandler, } from \"../callbacks/base.js\";\nimport { getRuntimeEnvironmentSync } from \"../utils/env.js\";\n// TODO: Remove and just use base LangSmith Run type\nconst convertRunTreeToRun = (runTree) => {\n    if (!runTree) {\n        return undefined;\n    }\n    // Important that we return the raw run tree object since the reference\n    // is mutated in other places.\n    // TODO: Remove places where this is being done.\n    // eslint-disable-next-line no-param-reassign\n    runTree.events = runTree.events ?? [];\n    // eslint-disable-next-line no-param-reassign\n    runTree.child_runs = runTree.child_runs ?? [];\n    // TODO: Remove this cast and just use the LangSmith RunTree type.\n    return runTree;\n};\nfunction convertRunToRunTree(run, parentRun) {\n    if (!run) {\n        return undefined;\n    }\n    return new RunTree({\n        ...run,\n        start_time: run._serialized_start_time ?? run.start_time,\n        parent_run: convertRunToRunTree(parentRun),\n        child_runs: run.child_runs\n            .map((r) => convertRunToRunTree(r))\n            .filter((r) => r !== undefined),\n        extra: {\n            ...run.extra,\n            runtime: getRuntimeEnvironmentSync(),\n        },\n        tracingEnabled: false,\n    });\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nexport function isBaseTracer(x) {\n    return typeof x._addRunToRunMap === \"function\";\n}\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        /** @deprecated Use `runTreeMap` instead. */\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"runTreeMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"usesRunTreeMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    copy() {\n        return this;\n    }\n    getRunById(runId) {\n        if (runId === undefined) {\n            return undefined;\n        }\n        return this.usesRunTreeMap\n            ? convertRunTreeToRun(this.runTreeMap.get(runId))\n            : this.runMap.get(runId);\n    }\n    stringifyError(error) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (error instanceof Error) {\n            return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n        }\n        if (typeof error === \"string\") {\n            return error;\n        }\n        return `${error}`;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    _addRunToRunMap(run) {\n        const { dottedOrder: currentDottedOrder, microsecondPrecisionDatestring } = convertToDottedOrderFormat(new Date(run.start_time).getTime(), run.id, run.execution_order);\n        const storedRun = { ...run };\n        const parentRun = this.getRunById(storedRun.parent_run_id);\n        if (storedRun.parent_run_id !== undefined) {\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                    storedRun._serialized_start_time = microsecondPrecisionDatestring;\n                }\n                else {\n                    // This can happen naturally for callbacks added within a run\n                    // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n                }\n            }\n            else {\n                // This can happen naturally for callbacks added within a run\n                // console.debug(\n                //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n                // );\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n            storedRun._serialized_start_time = microsecondPrecisionDatestring;\n        }\n        if (this.usesRunTreeMap) {\n            const runTree = convertRunToRunTree(storedRun, parentRun);\n            if (runTree !== undefined) {\n                this.runTreeMap.set(storedRun.id, runTree);\n            }\n        }\n        else {\n            this.runMap.set(storedRun.id, storedRun);\n        }\n        return storedRun;\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.getRunById(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        await this.onRunUpdate?.(run);\n        if (this.usesRunTreeMap) {\n            this.runTreeMap.delete(run.id);\n        }\n        else {\n            this.runMap.delete(run.id);\n        }\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.getRunById(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    /**\n     * Create and add a run to the run map for LLM start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chat model start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId, _parentRunId, _tags, extraParams) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId, _parentRunId, _tags, extraParams) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chain start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name);\n        await this.onRunCreate?.(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.getRunById(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.getRunById(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for tool start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    /**\n     * Create and add a run to the run map for retriever start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n        return run;\n    }\n}\n",
    "import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./base.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction formatKVMapItem(value) {\n    if (typeof value === \"string\") {\n        return value.trim();\n    }\n    if (value === null || value === undefined) {\n        return value;\n    }\n    return tryJsonStringify(value, value.toString());\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${formatKVMapItem(run.inputs.input)}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${formatKVMapItem(run.outputs?.output)}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n",
    "export function _isToolCall(toolCall) {\n    return !!(toolCall &&\n        typeof toolCall === \"object\" &&\n        \"type\" in toolCall &&\n        toolCall.type === \"tool_call\");\n}\nexport function _configHasToolCallId(config) {\n    return !!(config &&\n        typeof config === \"object\" &&\n        \"toolCall\" in config &&\n        config.toolCall != null &&\n        typeof config.toolCall === \"object\" &&\n        \"id\" in config.toolCall &&\n        typeof config.toolCall.id === \"string\");\n}\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nexport class ToolInputParsingException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n",
    "export function parseJsonMarkdown(s, parser = parsePartialJson) {\n    // eslint-disable-next-line no-param-reassign\n    s = s.trim();\n    const firstFenceIndex = s.indexOf(\"```\");\n    if (firstFenceIndex === -1) {\n        return parser(s);\n    }\n    let contentAfterFence = s.substring(firstFenceIndex + 3);\n    if (contentAfterFence.startsWith(\"json\\n\")) {\n        contentAfterFence = contentAfterFence.substring(5);\n    }\n    else if (contentAfterFence.startsWith(\"json\")) {\n        contentAfterFence = contentAfterFence.substring(4);\n    }\n    else if (contentAfterFence.startsWith(\"\\n\")) {\n        contentAfterFence = contentAfterFence.substring(1);\n    }\n    const closingFenceIndex = contentAfterFence.indexOf(\"```\");\n    let finalContent = contentAfterFence;\n    if (closingFenceIndex !== -1) {\n        finalContent = contentAfterFence.substring(0, closingFenceIndex);\n    }\n    return parser(finalContent.trim());\n}\n// Adapted from https://github.com/KillianLucas/open-interpreter/blob/main/interpreter/core/llm/utils/parse_partial_json.py\n// MIT License\nexport function parsePartialJson(s) {\n    // If the input is undefined, return null to indicate failure.\n    if (typeof s === \"undefined\") {\n        return null;\n    }\n    // Attempt to parse the string as-is.\n    try {\n        return JSON.parse(s);\n    }\n    catch (error) {\n        // Pass\n    }\n    // Initialize variables.\n    let new_s = \"\";\n    const stack = [];\n    let isInsideString = false;\n    let escaped = false;\n    // Process each character in the string one at a time.\n    for (let char of s) {\n        if (isInsideString) {\n            if (char === '\"' && !escaped) {\n                isInsideString = false;\n            }\n            else if (char === \"\\n\" && !escaped) {\n                char = \"\\\\n\"; // Replace the newline character with the escape sequence.\n            }\n            else if (char === \"\\\\\") {\n                escaped = !escaped;\n            }\n            else {\n                escaped = false;\n            }\n        }\n        else {\n            if (char === '\"') {\n                isInsideString = true;\n                escaped = false;\n            }\n            else if (char === \"{\") {\n                stack.push(\"}\");\n            }\n            else if (char === \"[\") {\n                stack.push(\"]\");\n            }\n            else if (char === \"}\" || char === \"]\") {\n                if (stack && stack[stack.length - 1] === char) {\n                    stack.pop();\n                }\n                else {\n                    // Mismatched closing character; the input is malformed.\n                    return null;\n                }\n            }\n        }\n        // Append the processed character to the new string.\n        new_s += char;\n    }\n    // If we're still inside a string at the end of processing,\n    // we need to close the string.\n    if (isInsideString) {\n        new_s += '\"';\n    }\n    // Close any remaining open structures in the reverse order that they were opened.\n    for (let i = stack.length - 1; i >= 0; i -= 1) {\n        new_s += stack[i];\n    }\n    // Attempt to parse the modified string as JSON.\n    try {\n        return JSON.parse(new_s);\n    }\n    catch (error) {\n        // If we still can't parse the string as JSON, return null to indicate failure.\n        return null;\n    }\n}\n",
    "export function isDataContentBlock(content_block) {\n    return (typeof content_block === \"object\" &&\n        content_block !== null &&\n        \"type\" in content_block &&\n        typeof content_block.type === \"string\" &&\n        \"source_type\" in content_block &&\n        (content_block.source_type === \"url\" ||\n            content_block.source_type === \"base64\" ||\n            content_block.source_type === \"text\" ||\n            content_block.source_type === \"id\"));\n}\nexport function isURLContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"url\" &&\n        \"url\" in content_block &&\n        typeof content_block.url === \"string\");\n}\nexport function isBase64ContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"base64\" &&\n        \"data\" in content_block &&\n        typeof content_block.data === \"string\");\n}\nexport function isPlainTextContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"text\" &&\n        \"text\" in content_block &&\n        typeof content_block.text === \"string\");\n}\nexport function isIDContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"id\" &&\n        \"id\" in content_block &&\n        typeof content_block.id === \"string\");\n}\nexport function convertToOpenAIImageBlock(content_block) {\n    if (isDataContentBlock(content_block)) {\n        if (content_block.source_type === \"url\") {\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: content_block.url,\n                },\n            };\n        }\n        if (content_block.source_type === \"base64\") {\n            if (!content_block.mime_type) {\n                throw new Error(\"mime_type key is required for base64 data.\");\n            }\n            const mime_type = content_block.mime_type;\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: `data:${mime_type};base64,${content_block.data}`,\n                },\n            };\n        }\n    }\n    throw new Error(\"Unsupported source type. Only 'url' and 'base64' are supported.\");\n}\n/**\n * Utility function for ChatModelProviders. Parses a mime type into a type, subtype, and parameters.\n *\n * @param mime_type - The mime type to parse.\n * @returns An object containing the type, subtype, and parameters.\n */\nexport function parseMimeType(mime_type) {\n    const parts = mime_type.split(\";\")[0].split(\"/\");\n    if (parts.length !== 2) {\n        throw new Error(`Invalid mime type: \"${mime_type}\" - does not match type/subtype format.`);\n    }\n    const type = parts[0].trim();\n    const subtype = parts[1].trim();\n    if (type === \"\" || subtype === \"\") {\n        throw new Error(`Invalid mime type: \"${mime_type}\" - type or subtype is empty.`);\n    }\n    const parameters = {};\n    for (const parameterKvp of mime_type.split(\";\").slice(1)) {\n        const parameterParts = parameterKvp.split(\"=\");\n        if (parameterParts.length !== 2) {\n            throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n        }\n        const key = parameterParts[0].trim();\n        const value = parameterParts[1].trim();\n        if (key === \"\") {\n            throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n        }\n        parameters[key] = value;\n    }\n    return {\n        type,\n        subtype,\n        parameters,\n    };\n}\n/**\n * Utility function for ChatModelProviders. Parses a base64 data URL into a typed array or string.\n *\n * @param dataUrl - The base64 data URL to parse.\n * @param asTypedArray - Whether to return the data as a typed array.\n * @returns The parsed data and mime type, or undefined if the data URL is invalid.\n */\nexport function parseBase64DataUrl({ dataUrl: data_url, asTypedArray = false, }) {\n    const formatMatch = data_url.match(/^data:(\\w+\\/\\w+);base64,([A-Za-z0-9+/]+=*)$/);\n    let mime_type;\n    if (formatMatch) {\n        mime_type = formatMatch[1].toLowerCase();\n        const data = asTypedArray\n            ? Uint8Array.from(atob(formatMatch[2]), (c) => c.charCodeAt(0))\n            : formatMatch[2];\n        return {\n            mime_type,\n            data,\n        };\n    }\n    return undefined;\n}\n/**\n * Convert from a standard data content block to a provider's proprietary data content block format.\n *\n * Don't override this method. Instead, override the more specific conversion methods and use this\n * method unmodified.\n *\n * @param block - The standard data content block to convert.\n * @returns The provider data content block.\n * @throws An error if the standard data content block type is not supported.\n */\nexport function convertToProviderContentBlock(block, converter) {\n    if (block.type === \"text\") {\n        if (!converter.fromStandardTextBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardTextBlock\\` method.`);\n        }\n        return converter.fromStandardTextBlock(block);\n    }\n    if (block.type === \"image\") {\n        if (!converter.fromStandardImageBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardImageBlock\\` method.`);\n        }\n        return converter.fromStandardImageBlock(block);\n    }\n    if (block.type === \"audio\") {\n        if (!converter.fromStandardAudioBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardAudioBlock\\` method.`);\n        }\n        return converter.fromStandardAudioBlock(block);\n    }\n    if (block.type === \"file\") {\n        if (!converter.fromStandardFileBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardFileBlock\\` method.`);\n        }\n        return converter.fromStandardFileBlock(block);\n    }\n    throw new Error(`Unable to convert content block type '${block.type}' to provider-specific format: not recognized.`);\n}\n",
    "import { Serializable } from \"../load/serializable.js\";\nimport { isDataContentBlock, } from \"./content_blocks.js\";\nexport function mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (firstContent === \"\") {\n            return secondContent;\n        }\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else if (Array.isArray(secondContent) &&\n            secondContent.some((c) => isDataContentBlock(c))) {\n            return [\n                {\n                    type: \"text\",\n                    source_type: \"text\",\n                    text: firstContent,\n                },\n                ...secondContent,\n            ];\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return (_mergeLists(firstContent, secondContent) ?? [\n            ...firstContent,\n            ...secondContent,\n        ]);\n    }\n    else {\n        if (secondContent === \"\") {\n            return firstContent;\n        }\n        else if (Array.isArray(firstContent) &&\n            firstContent.some((c) => isDataContentBlock(c))) {\n            return [\n                ...firstContent,\n                {\n                    type: \"file\",\n                    source_type: \"text\",\n                    text: secondContent,\n                },\n            ];\n        }\n        else {\n            return [...firstContent, { type: \"text\", text: secondContent }];\n        }\n    }\n}\n/**\n * 'Merge' two statuses. If either value passed is 'error', it will return 'error'. Else\n * it will return 'success'.\n *\n * @param {\"success\" | \"error\" | undefined} left The existing value to 'merge' with the new value.\n * @param {\"success\" | \"error\" | undefined} right The new value to 'merge' with the existing value\n * @returns {\"success\" | \"error\"} The 'merged' value.\n */\nexport function _mergeStatus(left, right) {\n    if (left === \"error\" || right === \"error\") {\n        return \"error\";\n    }\n    return \"success\";\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringifyWithDepthLimit(obj, depthLimit) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function helper(obj, currentDepth) {\n        if (typeof obj !== \"object\" || obj === null || obj === undefined) {\n            return obj;\n        }\n        if (currentDepth >= depthLimit) {\n            if (Array.isArray(obj)) {\n                return \"[Array]\";\n            }\n            return \"[Object]\";\n        }\n        if (Array.isArray(obj)) {\n            return obj.map((item) => helper(item, currentDepth + 1));\n        }\n        const result = {};\n        for (const key of Object.keys(obj)) {\n            result[key] = helper(obj[key], currentDepth + 1);\n        }\n        return result;\n    }\n    return JSON.stringify(helper(obj, 0), null, 2);\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport class BaseMessage extends Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            additional_kwargs: \"additional_kwargs\",\n            response_metadata: \"response_metadata\",\n        };\n    }\n    /**\n     * Get text content of the message.\n     */\n    get text() {\n        if (typeof this.content === \"string\") {\n            return this.content;\n        }\n        if (!Array.isArray(this.content))\n            return \"\";\n        return this.content\n            .map((c) => {\n            if (typeof c === \"string\")\n                return c;\n            if (c.type === \"text\")\n                return c.text;\n            return \"\";\n        })\n            .join(\"\");\n    }\n    /** The type of the message. */\n    getType() {\n        return this._getType();\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                content: fields,\n                additional_kwargs: kwargs,\n                response_metadata: {},\n            };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        if (!fields.response_metadata) {\n            // eslint-disable-next-line no-param-reassign\n            fields.response_metadata = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Response metadata. For example: response headers, logprobs, token counts, model name. */\n        Object.defineProperty(this, \"response_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * An optional unique identifier for the message. This should ideally be\n         * provided by the provider/model which created the message.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n        this.response_metadata = fields.response_metadata;\n        this.id = fields.id;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n    static lc_name() {\n        return \"BaseMessage\";\n    }\n    // Can't be protected for silly reasons\n    get _printableFields() {\n        return {\n            id: this.id,\n            content: this.content,\n            name: this.name,\n            additional_kwargs: this.additional_kwargs,\n            response_metadata: this.response_metadata,\n        };\n    }\n    // this private method is used to update the ID for the runtime\n    // value as well as in lc_kwargs for serialisation\n    _updateId(value) {\n        this.id = value;\n        // lc_attributes wouldn't work here, because jest compares the\n        // whole object\n        this.lc_kwargs.id = value;\n    }\n    get [Symbol.toStringTag]() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this.constructor.lc_name();\n    }\n    // Override the default behavior of console.log\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth) {\n        if (depth === null) {\n            return this;\n        }\n        const printable = stringifyWithDepthLimit(this._printableFields, Math.max(4, depth));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return `${this.constructor.lc_name()} ${printable}`;\n    }\n}\nexport function isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\nexport function _mergeDicts(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nleft, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nright\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const merged = { ...left };\n    for (const [key, value] of Object.entries(right)) {\n        if (merged[key] == null) {\n            merged[key] = value;\n        }\n        else if (value == null) {\n            continue;\n        }\n        else if (typeof merged[key] !== typeof value ||\n            Array.isArray(merged[key]) !== Array.isArray(value)) {\n            throw new Error(`field[${key}] already exists in the message chunk, but with a different type.`);\n        }\n        else if (typeof merged[key] === \"string\") {\n            if (key === \"type\") {\n                // Do not merge 'type' fields\n                continue;\n            }\n            else if ([\"id\", \"name\", \"output_version\", \"model_provider\"].includes(key)) {\n                // Keep the incoming value for these fields\n                merged[key] = value;\n            }\n            else {\n                merged[key] += value;\n            }\n        }\n        else if (typeof merged[key] === \"object\" && !Array.isArray(merged[key])) {\n            merged[key] = _mergeDicts(merged[key], value);\n        }\n        else if (Array.isArray(merged[key])) {\n            merged[key] = _mergeLists(merged[key], value);\n        }\n        else if (merged[key] === value) {\n            continue;\n        }\n        else {\n            console.warn(`field[${key}] already exists in this message chunk and value has unsupported type.`);\n        }\n    }\n    return merged;\n}\nexport function _mergeLists(left, right) {\n    if (left === undefined && right === undefined) {\n        return undefined;\n    }\n    else if (left === undefined || right === undefined) {\n        return left || right;\n    }\n    else {\n        const merged = [...left];\n        for (const item of right) {\n            if (typeof item === \"object\" &&\n                item !== null &&\n                \"index\" in item &&\n                typeof item.index === \"number\") {\n                const toMerge = merged.findIndex((leftItem) => {\n                    const isObject = typeof leftItem === \"object\";\n                    const indiciesMatch = \"index\" in leftItem && leftItem.index === item.index;\n                    const idsMatch = \"id\" in leftItem && \"id\" in item && leftItem?.id === item?.id;\n                    const eitherItemMissingID = !(\"id\" in leftItem) ||\n                        !leftItem?.id ||\n                        !(\"id\" in item) ||\n                        !item?.id;\n                    return isObject && indiciesMatch && (idsMatch || eitherItemMissingID);\n                });\n                if (toMerge !== -1 &&\n                    typeof merged[toMerge] === \"object\" &&\n                    merged[toMerge] !== null) {\n                    merged[toMerge] = _mergeDicts(merged[toMerge], item);\n                }\n                else {\n                    merged.push(item);\n                }\n            }\n            else if (typeof item === \"object\" &&\n                item !== null &&\n                \"text\" in item &&\n                item.text === \"\") {\n                // No-op - skip empty text blocks\n                continue;\n            }\n            else {\n                merged.push(item);\n            }\n        }\n        return merged;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeObj(left, right) {\n    if (!left && !right) {\n        throw new Error(\"Cannot merge two undefined objects.\");\n    }\n    if (!left || !right) {\n        return left || right;\n    }\n    else if (typeof left !== typeof right) {\n        throw new Error(`Cannot merge objects of different types.\\nLeft ${typeof left}\\nRight ${typeof right}`);\n    }\n    else if (typeof left === \"string\" && typeof right === \"string\") {\n        return (left + right);\n    }\n    else if (Array.isArray(left) && Array.isArray(right)) {\n        return _mergeLists(left, right);\n    }\n    else if (typeof left === \"object\" && typeof right === \"object\") {\n        return _mergeDicts(left, right);\n    }\n    else if (left === right) {\n        return left;\n    }\n    else {\n        throw new Error(`Can not merge objects of different types.\\nLeft ${left}\\nRight ${right}`);\n    }\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport class BaseMessageChunk extends BaseMessage {\n}\nexport function _isMessageFieldWithRole(x) {\n    return typeof x.role === \"string\";\n}\nexport function isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nexport function isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\n",
    "import { parsePartialJson } from \"../utils/json.js\";\nimport { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeLists, } from \"./base.js\";\nimport { defaultToolCallParser, } from \"./tool.js\";\n/**\n * Represents an AI message in a conversation.\n */\nexport class AIMessage extends BaseMessage {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                additional_kwargs: kwargs ?? {},\n            };\n        }\n        else {\n            initParams = fields;\n            const rawToolCalls = initParams.additional_kwargs?.tool_calls;\n            const toolCalls = initParams.tool_calls;\n            if (!(rawToolCalls == null) &&\n                rawToolCalls.length > 0 &&\n                (toolCalls === undefined || toolCalls.length === 0)) {\n                console.warn([\n                    \"New LangChain packages are available that more efficiently handle\",\n                    \"tool calling.\\n\\nPlease upgrade your packages to versions that set\",\n                    \"message tool calls. e.g., `yarn add @langchain/anthropic`,\",\n                    \"yarn add @langchain/openai`, etc.\",\n                ].join(\" \"));\n            }\n            try {\n                if (!(rawToolCalls == null) && toolCalls === undefined) {\n                    const [toolCalls, invalidToolCalls] = defaultToolCallParser(rawToolCalls);\n                    initParams.tool_calls = toolCalls ?? [];\n                    initParams.invalid_tool_calls = invalidToolCalls ?? [];\n                }\n                else {\n                    initParams.tool_calls = initParams.tool_calls ?? [];\n                    initParams.invalid_tool_calls = initParams.invalid_tool_calls ?? [];\n                }\n            }\n            catch (e) {\n                // Do nothing if parsing fails\n                initParams.tool_calls = [];\n                initParams.invalid_tool_calls = [];\n            }\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof initParams !== \"string\") {\n            this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n            this.invalid_tool_calls =\n                initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        }\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    static lc_name() {\n        return \"AIMessage\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n}\nexport function isAIMessage(x) {\n    return x._getType() === \"ai\";\n}\nexport function isAIMessageChunk(x) {\n    return x._getType() === \"ai\";\n}\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nexport class AIMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else if (fields.tool_call_chunks === undefined) {\n            initParams = {\n                ...fields,\n                tool_calls: fields.tool_calls ?? [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        else {\n            const groupedToolCallChunks = fields.tool_call_chunks.reduce((acc, chunk) => {\n                const matchedChunkIndex = acc.findIndex(([match]) => {\n                    // If chunk has an id and index, match if both are present\n                    if (\"id\" in chunk &&\n                        chunk.id &&\n                        \"index\" in chunk &&\n                        chunk.index !== undefined) {\n                        return chunk.id === match.id && chunk.index === match.index;\n                    }\n                    // If chunk has an id, we match on id\n                    if (\"id\" in chunk && chunk.id) {\n                        return chunk.id === match.id;\n                    }\n                    // If chunk has an index, we match on index\n                    if (\"index\" in chunk && chunk.index !== undefined) {\n                        return chunk.index === match.index;\n                    }\n                    return false;\n                });\n                if (matchedChunkIndex !== -1) {\n                    acc[matchedChunkIndex].push(chunk);\n                }\n                else {\n                    acc.push([chunk]);\n                }\n                return acc;\n            }, []);\n            const toolCalls = [];\n            const invalidToolCalls = [];\n            for (const chunks of groupedToolCallChunks) {\n                let parsedArgs = {};\n                const name = chunks[0]?.name ?? \"\";\n                const joinedArgs = chunks.map((c) => c.args || \"\").join(\"\");\n                const argsStr = joinedArgs.length ? joinedArgs : \"{}\";\n                const id = chunks[0]?.id;\n                try {\n                    parsedArgs = parsePartialJson(argsStr);\n                    if (!id ||\n                        parsedArgs === null ||\n                        typeof parsedArgs !== \"object\" ||\n                        Array.isArray(parsedArgs)) {\n                        throw new Error(\"Malformed tool call chunk args.\");\n                    }\n                    toolCalls.push({\n                        name,\n                        args: parsedArgs,\n                        id,\n                        type: \"tool_call\",\n                    });\n                }\n                catch (e) {\n                    invalidToolCalls.push({\n                        name,\n                        args: argsStr,\n                        id,\n                        error: \"Malformed args.\",\n                        type: \"invalid_tool_call\",\n                    });\n                }\n            }\n            initParams = {\n                ...fields,\n                tool_calls: toolCalls,\n                invalid_tool_calls: invalidToolCalls,\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // Must redeclare tool call fields since there is no multiple inheritance in JS.\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tool_call_chunks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_chunks =\n            initParams.tool_call_chunks ?? this.tool_call_chunks;\n        this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n        this.invalid_tool_calls =\n            initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n            tool_call_chunks: \"tool_call_chunks\",\n        };\n    }\n    static lc_name() {\n        return \"AIMessageChunk\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            tool_call_chunks: this.tool_call_chunks,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n    concat(chunk) {\n        const combinedFields = {\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            tool_call_chunks: [],\n            id: this.id ?? chunk.id,\n        };\n        if (this.tool_call_chunks !== undefined ||\n            chunk.tool_call_chunks !== undefined) {\n            const rawToolCalls = _mergeLists(this.tool_call_chunks, chunk.tool_call_chunks);\n            if (rawToolCalls !== undefined && rawToolCalls.length > 0) {\n                combinedFields.tool_call_chunks = rawToolCalls;\n            }\n        }\n        if (this.usage_metadata !== undefined ||\n            chunk.usage_metadata !== undefined) {\n            const inputTokenDetails = {\n                ...((this.usage_metadata?.input_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.input_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.input_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_read !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_read !==\n                        undefined) && {\n                    cache_read: (this.usage_metadata?.input_token_details?.cache_read ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_read ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_creation !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_creation !==\n                        undefined) && {\n                    cache_creation: (this.usage_metadata?.input_token_details?.cache_creation ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_creation ?? 0),\n                }),\n            };\n            const outputTokenDetails = {\n                ...((this.usage_metadata?.output_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.output_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.output_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.output_token_details?.reasoning !==\n                    undefined ||\n                    chunk.usage_metadata?.output_token_details?.reasoning !==\n                        undefined) && {\n                    reasoning: (this.usage_metadata?.output_token_details?.reasoning ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.reasoning ?? 0),\n                }),\n            };\n            const left = this.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const right = chunk.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const usage_metadata = {\n                input_tokens: left.input_tokens + right.input_tokens,\n                output_tokens: left.output_tokens + right.output_tokens,\n                total_tokens: left.total_tokens + right.total_tokens,\n                // Do not include `input_token_details` / `output_token_details` keys in combined fields\n                // unless their values are defined.\n                ...(Object.keys(inputTokenDetails).length > 0 && {\n                    input_token_details: inputTokenDetails,\n                }),\n                ...(Object.keys(outputTokenDetails).length > 0 && {\n                    output_token_details: outputTokenDetails,\n                }),\n            };\n            combinedFields.usage_metadata = usage_metadata;\n        }\n        return new AIMessageChunk(combinedFields);\n    }\n}\n",
    "import { addLangChainErrorFields } from \"../errors/index.js\";\nimport { _isToolCall } from \"../tools/utils.js\";\nimport { AIMessage, AIMessageChunk } from \"./ai.js\";\nimport { isBaseMessage, _isMessageFieldWithRole, } from \"./base.js\";\nimport { ChatMessage, ChatMessageChunk, } from \"./chat.js\";\nimport { FunctionMessage, FunctionMessageChunk, } from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { RemoveMessage } from \"./modifier.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolMessage, } from \"./tool.js\";\nfunction _coerceToolCall(toolCall) {\n    if (_isToolCall(toolCall)) {\n        return toolCall;\n    }\n    else if (typeof toolCall.id === \"string\" &&\n        toolCall.type === \"function\" &&\n        typeof toolCall.function === \"object\" &&\n        toolCall.function !== null &&\n        \"arguments\" in toolCall.function &&\n        typeof toolCall.function.arguments === \"string\" &&\n        \"name\" in toolCall.function &&\n        typeof toolCall.function.name === \"string\") {\n        // Handle OpenAI tool call format\n        return {\n            id: toolCall.id,\n            args: JSON.parse(toolCall.function.arguments),\n            name: toolCall.function.name,\n            type: \"tool_call\",\n        };\n    }\n    else {\n        // TODO: Throw an error?\n        return toolCall;\n    }\n}\nfunction isSerializedConstructor(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        x.lc === 1 &&\n        Array.isArray(x.id) &&\n        x.kwargs != null &&\n        typeof x.kwargs === \"object\");\n}\nfunction _constructMessageFromParams(params) {\n    let type;\n    let rest;\n    // Support serialized messages\n    if (isSerializedConstructor(params)) {\n        const className = params.id.at(-1);\n        if (className === \"HumanMessage\" || className === \"HumanMessageChunk\") {\n            type = \"user\";\n        }\n        else if (className === \"AIMessage\" || className === \"AIMessageChunk\") {\n            type = \"assistant\";\n        }\n        else if (className === \"SystemMessage\" ||\n            className === \"SystemMessageChunk\") {\n            type = \"system\";\n        }\n        else if (className === \"FunctionMessage\" ||\n            className === \"FunctionMessageChunk\") {\n            type = \"function\";\n        }\n        else if (className === \"ToolMessage\" ||\n            className === \"ToolMessageChunk\") {\n            type = \"tool\";\n        }\n        else {\n            type = \"unknown\";\n        }\n        rest = params.kwargs;\n    }\n    else {\n        const { type: extractedType, ...otherParams } = params;\n        type = extractedType;\n        rest = otherParams;\n    }\n    if (type === \"human\" || type === \"user\") {\n        return new HumanMessage(rest);\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        const { tool_calls: rawToolCalls, ...other } = rest;\n        if (!Array.isArray(rawToolCalls)) {\n            return new AIMessage(rest);\n        }\n        const tool_calls = rawToolCalls.map(_coerceToolCall);\n        return new AIMessage({ ...other, tool_calls });\n    }\n    else if (type === \"system\") {\n        return new SystemMessage(rest);\n    }\n    else if (type === \"developer\") {\n        return new SystemMessage({\n            ...rest,\n            additional_kwargs: {\n                ...rest.additional_kwargs,\n                __openai_role__: \"developer\",\n            },\n        });\n    }\n    else if (type === \"tool\" && \"tool_call_id\" in rest) {\n        return new ToolMessage({\n            ...rest,\n            content: rest.content,\n            tool_call_id: rest.tool_call_id,\n            name: rest.name,\n        });\n    }\n    else if (type === \"remove\" && \"id\" in rest && typeof rest.id === \"string\") {\n        return new RemoveMessage({ ...rest, id: rest.id });\n    }\n    else {\n        const error = addLangChainErrorFields(new Error(`Unable to coerce message from array: only human, AI, system, developer, or tool message coercion is currently supported.\\n\\nReceived: ${JSON.stringify(params, null, 2)}`), \"MESSAGE_COERCION_FAILURE\");\n        throw error;\n    }\n}\nexport function coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new HumanMessage(messageLike);\n    }\n    else if (isBaseMessage(messageLike)) {\n        return messageLike;\n    }\n    if (Array.isArray(messageLike)) {\n        const [type, content] = messageLike;\n        return _constructMessageFromParams({ type, content });\n    }\n    else if (_isMessageFieldWithRole(messageLike)) {\n        const { role: type, ...rest } = messageLike;\n        return _constructMessageFromParams({ ...rest, type });\n    }\n    else {\n        return _constructMessageFromParams(messageLike);\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        const readableContent = typeof m.content === \"string\"\n            ? m.content\n            : JSON.stringify(m.content, null, 2);\n        string_messages.push(`${role}: ${nameStr}${readableContent}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nexport function mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new AIMessage(storedMessage.data);\n        case \"system\":\n            return new SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new ToolMessage(storedMessage.data);\n        case \"generic\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\nexport function convertToChunk(message) {\n    const type = message._getType();\n    if (type === \"human\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new HumanMessageChunk({ ...message });\n    }\n    else if (type === \"ai\") {\n        let aiChunkFields = {\n            ...message,\n        };\n        if (\"tool_calls\" in aiChunkFields) {\n            aiChunkFields = {\n                ...aiChunkFields,\n                tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n                    ...tc,\n                    type: \"tool_call_chunk\",\n                    index: undefined,\n                    args: JSON.stringify(tc.args),\n                })),\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new AIMessageChunk({ ...aiChunkFields });\n    }\n    else if (type === \"system\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new SystemMessageChunk({ ...message });\n    }\n    else if (type === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new FunctionMessageChunk({ ...message });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    }\n    else if (ChatMessage.isInstance(message)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new ChatMessageChunk({ ...message });\n    }\n    else {\n        throw new Error(\"Unknown message type.\");\n    }\n}\n",
    "import { Client } from \"langsmith\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nlet client;\nexport const getDefaultLangChainClientSingleton = () => {\n    if (client === undefined) {\n        const clientParams = getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n            ? {\n                // LangSmith has its own backgrounding system\n                blockOnRootRunFinalization: true,\n            }\n            : {};\n        client = new Client(clientParams);\n    }\n    return client;\n};\nexport const setDefaultLangChainClientSingleton = (newClient) => {\n    client = newClient;\n};\n",
    "import { getDefaultProjectName, } from \"langsmith\";\nimport { RunTree } from \"langsmith/run_trees\";\nimport { getCurrentRunTree } from \"langsmith/singletons/traceable\";\nimport { BaseTracer } from \"./base.js\";\nimport { getDefaultLangChainClientSingleton } from \"../singletons/tracer.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"usesRunTreeMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        const { exampleId, projectName, client, replicas } = fields;\n        this.projectName = projectName ?? getDefaultProjectName();\n        this.replicas = replicas;\n        this.exampleId = exampleId;\n        this.client = client ?? getDefaultLangChainClientSingleton();\n        const traceableTree = LangChainTracer.getTraceableRunTree();\n        if (traceableTree) {\n            this.updateFromRunTree(traceableTree);\n        }\n    }\n    async persistRun(_run) { }\n    async onRunCreate(run) {\n        const runTree = this.getRunTreeWithTracingConfig(run.id);\n        await runTree?.postRun();\n    }\n    async onRunUpdate(run) {\n        const runTree = this.getRunTreeWithTracingConfig(run.id);\n        await runTree?.patchRun();\n    }\n    getRun(id) {\n        return this.runTreeMap.get(id);\n    }\n    updateFromRunTree(runTree) {\n        this.runTreeMap.set(runTree.id, runTree);\n        let rootRun = runTree;\n        const visited = new Set();\n        while (rootRun.parent_run) {\n            if (visited.has(rootRun.id))\n                break;\n            visited.add(rootRun.id);\n            if (!rootRun.parent_run)\n                break;\n            rootRun = rootRun.parent_run;\n        }\n        visited.clear();\n        const queue = [rootRun];\n        while (queue.length > 0) {\n            const current = queue.shift();\n            if (!current || visited.has(current.id))\n                continue;\n            visited.add(current.id);\n            this.runTreeMap.set(current.id, current);\n            if (current.child_runs) {\n                queue.push(...current.child_runs);\n            }\n        }\n        this.client = runTree.client ?? this.client;\n        this.replicas = runTree.replicas ?? this.replicas;\n        this.projectName = runTree.project_name ?? this.projectName;\n        this.exampleId = runTree.reference_example_id ?? this.exampleId;\n    }\n    getRunTreeWithTracingConfig(id) {\n        const runTree = this.runTreeMap.get(id);\n        if (!runTree)\n            return undefined;\n        return new RunTree({\n            ...runTree,\n            client: this.client,\n            project_name: this.projectName,\n            replicas: this.replicas,\n            reference_example_id: this.exampleId,\n            tracingEnabled: true,\n        });\n    }\n    static getTraceableRunTree() {\n        try {\n            return (\n            // The type cast here provides forward compatibility. Old versions of LangSmith will just\n            // ignore the permitAbsentRunTree arg.\n            getCurrentRunTree(true));\n        }\n        catch {\n            return undefined;\n        }\n    }\n}\n",
    "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport PQueueMod from \"p-queue\";\nimport { getGlobalAsyncLocalStorageInstance } from \"./async_local_storage/globals.js\";\nimport { getDefaultLangChainClientSingleton } from \"./tracer.js\";\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\nexport function getQueue() {\n    if (typeof queue === \"undefined\") {\n        queue = createQueue();\n    }\n    return queue;\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promiseFn Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        // Clear config since callbacks are not part of the root run\n        // Avoid using global singleton due to circuluar dependency issues\n        const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n        if (asyncLocalStorageInstance !== undefined) {\n            await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n        }\n        else {\n            await promiseFn();\n        }\n    }\n    else {\n        queue = getQueue();\n        void queue.add(async () => {\n            const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n            if (asyncLocalStorageInstance !== undefined) {\n                await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n            }\n            else {\n                await promiseFn();\n            }\n        });\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport async function awaitAllCallbacks() {\n    const defaultClient = getDefaultLangChainClientSingleton();\n    await Promise.allSettled([\n        typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve(),\n        defaultClient.awaitPendingTraceBatches(),\n    ]);\n}\n",
    "export const TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nexport const _CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\nexport const setGlobalAsyncLocalStorageInstance = (instance) => {\n    globalThis[TRACING_ALS_KEY] = instance;\n};\nexport const getGlobalAsyncLocalStorageInstance = () => {\n    return globalThis[TRACING_ALS_KEY];\n};\n",
    "import { getEnvironmentVariable } from \"./env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGSMITH_TRACING\",\n        \"LANGCHAIN_TRACING\",\n    ];\n    return !!envVars.find((envVar) => getEnvironmentVariable(envVar) === \"true\");\n};\n",
    "import { isRunTree, RunTree } from \"langsmith/run_trees\";\nimport { _CONTEXT_VARIABLES_KEY, getGlobalAsyncLocalStorageInstance, } from \"./globals.js\";\n/**\n * Set a context variable. Context variables are scoped to any\n * child runnables called by the current runnable, or globally if set outside\n * of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n * @param value The value to set.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContextVariable(name, value) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        throw new Error(`Internal error: Global shared async local storage instance has not been initialized.`);\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    const contextVars = { ...runTree?.[_CONTEXT_VARIABLES_KEY] };\n    contextVars[name] = value;\n    let newValue = {};\n    if (isRunTree(runTree)) {\n        newValue = new RunTree(runTree);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newValue[_CONTEXT_VARIABLES_KEY] = contextVars;\n    asyncLocalStorageInstance.enterWith(newValue);\n}\n/**\n * Get the value of a previously set context variable. Context variables\n * are scoped to any child runnables called by the current runnable,\n * or globally if set outside of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getContextVariable(name) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        return undefined;\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    return runTree?.[_CONTEXT_VARIABLES_KEY]?.[name];\n}\nconst LC_CONFIGURE_HOOKS_KEY = Symbol(\"lc:configure_hooks\");\nexport const _getConfigureHooks = () => getContextVariable(LC_CONFIGURE_HOOKS_KEY) || [];\n/**\n * Register a callback configure hook to automatically add callback handlers to all runs.\n *\n * There are two ways to use this:\n *\n * 1. Using a context variable:\n *    - Set `contextVar` to specify the variable name\n *    - Use `setContextVariable()` to store your handler instance\n *\n * 2. Using an environment variable:\n *    - Set both `envVar` and `handlerClass`\n *    - The handler will be instantiated when the env var is set to \"true\".\n *\n * @example\n * ```typescript\n * // Method 1: Using context variable\n * import {\n *   registerConfigureHook,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const tracer = new MyCallbackHandler();\n * registerConfigureHook({\n *   contextVar: \"my_tracer\",\n * });\n * setContextVariable(\"my_tracer\", tracer);\n *\n * // ...run code here\n *\n * // Method 2: Using environment variable\n * registerConfigureHook({\n *   handlerClass: MyCallbackHandler,\n *   envVar: \"MY_TRACER_ENABLED\",\n * });\n * process.env.MY_TRACER_ENABLED = \"true\";\n *\n * // ...run code here\n * ```\n *\n * @param config Configuration object for the hook\n * @param config.contextVar Name of the context variable containing the handler instance\n * @param config.inheritable Whether child runs should inherit this handler\n * @param config.handlerClass Optional callback handler class (required if using envVar)\n * @param config.envVar Optional environment variable name to control handler activation\n */\nexport const registerConfigureHook = (config) => {\n    if (config.envVar && !config.handlerClass) {\n        throw new Error(\"If envVar is set, handlerClass must also be set to a non-None value.\");\n    }\n    setContextVariable(LC_CONFIGURE_HOOKS_KEY, [..._getConfigureHooks(), config]);\n};\n",
    "import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, isBaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { getBufferString } from \"../messages/utils.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer, } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nimport { isTracingEnabled } from \"../utils/callbacks.js\";\nimport { isBaseTracer } from \"../tracers/base.js\";\nimport { getContextVariable, _getConfigureHooks, } from \"../singletons/async_local_storage/context.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nexport class BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    get parentRunId() {\n        return this._parentRunId;\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, _runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleCustomEvent?.(eventName, data, this.runId, this.tags, this.metadata);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ model: \"gpt-4o-mini\", temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId() {\n        return this._parentRunId;\n    }\n    async handleLLMStart(llm, prompts, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForLLMStart(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForChatModelStart(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreChain) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForChainStart(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreAgent) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForToolStart(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreRetriever) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForRetrieverStart(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreCustomEvent) {\n                try {\n                    await handler.handleCustomEvent?.(eventName, data, runId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        return this._configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options);\n    }\n    // TODO: Deprecate async method in favor of this one.\n    static _configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = LangChainTracer.getTraceableRunTree()?.tracingEnabled ||\n            isTracingEnabled();\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    const tracerV2 = new LangChainTracer();\n                    callbackManager.addHandler(tracerV2, true);\n                }\n            }\n            if (tracingV2Enabled) {\n                // handoff between langchain and langsmith/traceable\n                // override the parent run ID\n                const implicitRunTree = LangChainTracer.getTraceableRunTree();\n                if (implicitRunTree && callbackManager._parentRunId === undefined) {\n                    callbackManager._parentRunId = implicitRunTree.id;\n                    const tracerV2 = callbackManager.handlers.find((handler) => handler.name === \"langchain_tracer\");\n                    tracerV2?.updateFromRunTree(implicitRunTree);\n                }\n            }\n        }\n        for (const { contextVar, inheritable = true, handlerClass, envVar, } of _getConfigureHooks()) {\n            const createIfNotInContext = envVar && getEnvironmentVariable(envVar) === \"true\" && handlerClass;\n            let handler;\n            const contextVarValue = contextVar !== undefined ? getContextVariable(contextVar) : undefined;\n            if (contextVarValue && isBaseCallbackHandler(contextVarValue)) {\n                handler = contextVarValue;\n            }\n            else if (createIfNotInContext) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                handler = new handlerClass({});\n            }\n            if (handler !== undefined) {\n                if (!callbackManager) {\n                    callbackManager = new CallbackManager();\n                }\n                if (!callbackManager.handlers.some((h) => h.name === handler.name)) {\n                    callbackManager.addHandler(handler, inheritable);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nexport function ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @deprecated Use [`traceable`](https://docs.smith.langchain.com/observability/how_to_guides/tracing/annotate_code)\n * from \"langsmith\" instead.\n */\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n",
    "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RunTree } from \"langsmith\";\nimport { getGlobalAsyncLocalStorageInstance, setGlobalAsyncLocalStorageInstance, _CONTEXT_VARIABLES_KEY, } from \"./globals.js\";\nimport { CallbackManager } from \"../../callbacks/manager.js\";\nexport class MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_store, callback) {\n        return callback();\n    }\n    enterWith(_store) {\n        return undefined;\n    }\n}\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nconst LC_CHILD_KEY = Symbol.for(\"lc:child_config\");\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        return getGlobalAsyncLocalStorageInstance() ?? mockAsyncLocalStorage;\n    }\n    getRunnableConfig() {\n        const storage = this.getInstance();\n        // this has the runnable config\n        // which means that we should also have an instance of a LangChainTracer\n        // with the run map prepopulated\n        return storage.getStore()?.extra?.[LC_CHILD_KEY];\n    }\n    runWithConfig(config, callback, avoidCreatingRootRunTree) {\n        const callbackManager = CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n        const storage = this.getInstance();\n        const previousValue = storage.getStore();\n        const parentRunId = callbackManager?.getParentRunId();\n        const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name === \"langchain_tracer\");\n        let runTree;\n        if (langChainTracer && parentRunId) {\n            runTree = langChainTracer.getRunTreeWithTracingConfig(parentRunId);\n        }\n        else if (!avoidCreatingRootRunTree) {\n            runTree = new RunTree({\n                name: \"<runnable_lambda>\",\n                tracingEnabled: false,\n            });\n        }\n        if (runTree) {\n            runTree.extra = { ...runTree.extra, [LC_CHILD_KEY]: config };\n        }\n        if (previousValue !== undefined &&\n            previousValue[_CONTEXT_VARIABLES_KEY] !== undefined) {\n            if (runTree === undefined) {\n                runTree = {};\n            }\n            runTree[_CONTEXT_VARIABLES_KEY] =\n                previousValue[_CONTEXT_VARIABLES_KEY];\n        }\n        return storage.run(runTree, callback);\n    }\n    initializeGlobalInstance(instance) {\n        if (getGlobalAsyncLocalStorageInstance() === undefined) {\n            setGlobalAsyncLocalStorageInstance(instance);\n        }\n    }\n}\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport { AsyncLocalStorageProviderSingleton };\n",
    "import { CallbackManager, ensureHandler } from \"../callbacks/manager.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nexport const DEFAULT_RECURSION_LIMIT = 25;\nexport async function getCallbackManagerForConfig(config) {\n    return CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n}\nexport function mergeConfigs(...configs) {\n    // We do not want to call ensureConfig on the empty state here as this may cause\n    // double loading of callbacks if async local storage is being used.\n    const copy = {};\n    for (const options of configs.filter((c) => !!c)) {\n        for (const key of Object.keys(options)) {\n            if (key === \"metadata\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"tags\") {\n                const baseKeys = copy[key] ?? [];\n                copy[key] = [...new Set(baseKeys.concat(options[key] ?? []))];\n            }\n            else if (key === \"configurable\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"timeout\") {\n                if (copy.timeout === undefined) {\n                    copy.timeout = options.timeout;\n                }\n                else if (options.timeout !== undefined) {\n                    copy.timeout = Math.min(copy.timeout, options.timeout);\n                }\n            }\n            else if (key === \"signal\") {\n                if (copy.signal === undefined) {\n                    copy.signal = options.signal;\n                }\n                else if (options.signal !== undefined) {\n                    if (\"any\" in AbortSignal) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        copy.signal = AbortSignal.any([\n                            copy.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        copy.signal = options.signal;\n                    }\n                }\n            }\n            else if (key === \"callbacks\") {\n                const baseCallbacks = copy.callbacks;\n                const providedCallbacks = options.callbacks;\n                // callbacks can be either undefined, Array<handler> or manager\n                // so merging two callbacks values has 6 cases\n                if (Array.isArray(providedCallbacks)) {\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        copy.callbacks = baseCallbacks.concat(providedCallbacks);\n                    }\n                    else {\n                        // baseCallbacks is a manager\n                        const manager = baseCallbacks.copy();\n                        for (const callback of providedCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                }\n                else if (providedCallbacks) {\n                    // providedCallbacks is a manager\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        const manager = providedCallbacks.copy();\n                        for (const callback of baseCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                    else {\n                        // baseCallbacks is also a manager\n                        copy.callbacks = new CallbackManager(providedCallbacks._parentRunId, {\n                            handlers: baseCallbacks.handlers.concat(providedCallbacks.handlers),\n                            inheritableHandlers: baseCallbacks.inheritableHandlers.concat(providedCallbacks.inheritableHandlers),\n                            tags: Array.from(new Set(baseCallbacks.tags.concat(providedCallbacks.tags))),\n                            inheritableTags: Array.from(new Set(baseCallbacks.inheritableTags.concat(providedCallbacks.inheritableTags))),\n                            metadata: {\n                                ...baseCallbacks.metadata,\n                                ...providedCallbacks.metadata,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const typedKey = key;\n                copy[typedKey] = options[typedKey] ?? copy[typedKey];\n            }\n        }\n    }\n    return copy;\n}\nconst PRIMITIVES = new Set([\"string\", \"number\", \"boolean\"]);\n/**\n * Ensure that a passed config is an object with all required keys present.\n */\nexport function ensureConfig(config) {\n    const implicitConfig = AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    let empty = {\n        tags: [],\n        metadata: {},\n        recursionLimit: 25,\n        runId: undefined,\n    };\n    if (implicitConfig) {\n        // Don't allow runId and runName to be loaded implicitly, as this can cause\n        // child runs to improperly inherit their parents' run ids.\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { runId, runName, ...rest } = implicitConfig;\n        empty = Object.entries(rest).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (config) {\n        empty = Object.entries(config).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (empty?.configurable) {\n        for (const key of Object.keys(empty.configurable)) {\n            if (PRIMITIVES.has(typeof empty.configurable[key]) &&\n                !empty.metadata?.[key]) {\n                if (!empty.metadata) {\n                    empty.metadata = {};\n                }\n                empty.metadata[key] = empty.configurable[key];\n            }\n        }\n    }\n    if (empty.timeout !== undefined) {\n        if (empty.timeout <= 0) {\n            throw new Error(\"Timeout must be a positive number\");\n        }\n        const timeoutSignal = AbortSignal.timeout(empty.timeout);\n        if (empty.signal !== undefined) {\n            if (\"any\" in AbortSignal) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                empty.signal = AbortSignal.any([empty.signal, timeoutSignal]);\n            }\n        }\n        else {\n            empty.signal = timeoutSignal;\n        }\n        delete empty.timeout;\n    }\n    return empty;\n}\n/**\n * Helper function that patches runnable configs with updated properties.\n */\nexport function patchConfig(config = {}, { callbacks, maxConcurrency, recursionLimit, runName, configurable, runId, } = {}) {\n    const newConfig = ensureConfig(config);\n    if (callbacks !== undefined) {\n        /**\n         * If we're replacing callbacks we need to unset runName\n         * since that should apply only to the same run as the original callbacks\n         */\n        delete newConfig.runName;\n        newConfig.callbacks = callbacks;\n    }\n    if (recursionLimit !== undefined) {\n        newConfig.recursionLimit = recursionLimit;\n    }\n    if (maxConcurrency !== undefined) {\n        newConfig.maxConcurrency = maxConcurrency;\n    }\n    if (runName !== undefined) {\n        newConfig.runName = runName;\n    }\n    if (configurable !== undefined) {\n        newConfig.configurable = { ...newConfig.configurable, ...configurable };\n    }\n    if (runId !== undefined) {\n        delete newConfig.runId;\n    }\n    return newConfig;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function pickRunnableConfigKeys(config) {\n    return config\n        ? {\n            configurable: config.configurable,\n            recursionLimit: config.recursionLimit,\n            callbacks: config.callbacks,\n            tags: config.tags,\n            metadata: config.metadata,\n            maxConcurrency: config.maxConcurrency,\n            timeout: config.timeout,\n            signal: config.signal,\n        }\n        : undefined;\n}\n",
    "export async function raceWithSignal(promise, signal) {\n    if (signal === undefined) {\n        return promise;\n    }\n    let listener;\n    return Promise.race([\n        promise.catch((err) => {\n            if (!signal?.aborted) {\n                throw err;\n            }\n            else {\n                return undefined;\n            }\n        }),\n        new Promise((_, reject) => {\n            listener = () => {\n                reject(new Error(\"Aborted\"));\n            };\n            signal.addEventListener(\"abort\", listener);\n            // Must be here inside the promise to avoid a race condition\n            if (signal.aborted) {\n                reject(new Error(\"Aborted\"));\n            }\n        }),\n    ]).finally(() => signal.removeEventListener(\"abort\", listener));\n}\n",
    "import { pickRunnableConfigKeys } from \"../runnables/config.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { raceWithSignal } from \"./signal.js\";\n/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport class IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.reader.releaseLock(); // release lock when stream becomes closed\n                return {\n                    done: true,\n                    value: undefined,\n                };\n            }\n            else {\n                return {\n                    done: false,\n                    value: result.value,\n                };\n            }\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        // If wrapped in a Node stream, cancel is already called.\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        return { done: true, value: undefined };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async throw(e) {\n        this.ensureReader();\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        throw e;\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n            cancel() {\n                reader.releaseLock();\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                    controller.close();\n                }\n                // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n                controller.enqueue(value);\n            },\n            async cancel(reason) {\n                await generator.return(reason);\n            },\n        });\n    }\n}\nexport function atee(iter, length = 2) {\n    const buffers = Array.from({ length }, () => []);\n    return buffers.map(async function* makeIter(buffer) {\n        while (true) {\n            if (buffer.length === 0) {\n                const result = await iter.next();\n                for (const buffer of buffers) {\n                    buffer.push(result);\n                }\n            }\n            else if (buffer[0].done) {\n                return;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield buffer.shift().value;\n            }\n        }\n    });\n}\nexport function concat(first, second) {\n    if (Array.isArray(first) && Array.isArray(second)) {\n        return first.concat(second);\n    }\n    else if (typeof first === \"string\" && typeof second === \"string\") {\n        return (first + second);\n    }\n    else if (typeof first === \"number\" && typeof second === \"number\") {\n        return (first + second);\n    }\n    else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in first &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof first.concat === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return first.concat(second);\n    }\n    else if (typeof first === \"object\" && typeof second === \"object\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const chunk = { ...first };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (const [key, value] of Object.entries(second)) {\n            if (key in chunk && !Array.isArray(chunk[key])) {\n                chunk[key] = concat(chunk[key], value);\n            }\n            else {\n                chunk[key] = value;\n            }\n        }\n        return chunk;\n    }\n    else {\n        throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n    }\n}\nexport class AsyncGeneratorWithSetup {\n    constructor(params) {\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signal\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResult\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResultUsed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.generator = params.generator;\n        this.config = params.config;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.signal = params.signal ?? this.config?.signal;\n        // setup is a promise that resolves only after the first iterator value\n        // is available. this is useful when setup of several piped generators\n        // needs to happen in logical order, ie. in the order in which input to\n        // to each generator is available.\n        this.setup = new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(params.config), async () => {\n                this.firstResult = params.generator.next();\n                if (params.startSetup) {\n                    this.firstResult.then(params.startSetup).then(resolve, reject);\n                }\n                else {\n                    this.firstResult.then((_result) => resolve(undefined), reject);\n                }\n            }, true);\n        });\n    }\n    async next(...args) {\n        this.signal?.throwIfAborted();\n        if (!this.firstResultUsed) {\n            this.firstResultUsed = true;\n            return this.firstResult;\n        }\n        return AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(this.config), this.signal\n            ? async () => {\n                return raceWithSignal(this.generator.next(...args), this.signal);\n            }\n            : async () => {\n                return this.generator.next(...args);\n            }, true);\n    }\n    async return(value) {\n        return this.generator.return(value);\n    }\n    async throw(e) {\n        return this.generator.throw(e);\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n}\nexport async function pipeGeneratorWithSetup(to, generator, startSetup, signal, ...args) {\n    const gen = new AsyncGeneratorWithSetup({\n        generator,\n        startSetup,\n        signal,\n    });\n    const setup = await gen.setup;\n    return { output: to(gen, setup, ...args), setup };\n}\n",
    "import { applyPatch, } from \"../utils/fast-json-patch/index.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nexport class RunLogPatch {\n    constructor(fields) {\n        Object.defineProperty(this, \"ops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.ops = fields.ops ?? [];\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch({}, ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport class RunLog extends RunLogPatch {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.state = fields.state;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch(this.state, other.ops);\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\n    }\n    static fromRunLogPatch(patch) {\n        const states = applyPatch({}, patch.ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops: patch.ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport const isLogStreamHandler = (handler) => handler.name === \"log_stream_tracer\";\n/**\n * Extract standardized inputs from a run.\n *\n * Standardizes the inputs based on the type of the runnable used.\n *\n * @param run - Run object\n * @param schemaFormat - The schema format to use.\n *\n * @returns Valid inputs are only dict. By conventions, inputs always represented\n * invocation using named arguments.\n * A null means that the input is not yet known!\n */\nasync function _getStandardizedInputs(run, schemaFormat) {\n    if (schemaFormat === \"original\") {\n        throw new Error(\"Do not assign inputs with original schema drop the key for now. \" +\n            \"When inputs are added to streamLog they should be added with \" +\n            \"standardized schema for streaming events.\");\n    }\n    const { inputs } = run;\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return inputs;\n    }\n    if (Object.keys(inputs).length === 1 && inputs?.input === \"\") {\n        return undefined;\n    }\n    // new style chains\n    // These nest an additional 'input' key inside the 'inputs' to make sure\n    // the input is always a dict. We need to unpack and user the inner value.\n    // We should try to fix this in Runnables and callbacks/tracers\n    // Runnables should be using a null type here not a placeholder\n    // dict.\n    return inputs.input;\n}\nasync function _getStandardizedOutputs(run, schemaFormat) {\n    const { outputs } = run;\n    if (schemaFormat === \"original\") {\n        // Return the old schema, without standardizing anything\n        return outputs;\n    }\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return outputs;\n    }\n    // TODO: Remove this hacky check\n    if (outputs !== undefined &&\n        Object.keys(outputs).length === 1 &&\n        outputs?.output !== undefined) {\n        return outputs.output;\n    }\n    return outputs;\n}\nfunction isChatGenerationChunk(x) {\n    return x !== undefined && x.message !== undefined;\n}\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class LogStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_schemaFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"original\"\n        });\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyMapByRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"counterMapByRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"log_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this._schemaFormat = fields?._schemaFormat ?? this._schemaFormat;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        if (run.id === this.rootId) {\n            return false;\n        }\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.run_type);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.run_type);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, output) {\n        // Tap an output async iterator to stream its values to the log.\n        for await (const chunk of output) {\n            // root run is handled in .streamLog()\n            if (runId !== this.rootId) {\n                // if we can't find the run silently ignore\n                // eg. because this run wasn't included in the log\n                const key = this.keyMapByRunId[runId];\n                if (key) {\n                    await this.writer.write(new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: `/logs/${key}/streamed_output/-`,\n                                value: chunk,\n                            },\n                        ],\n                    }));\n                }\n            }\n            yield chunk;\n        }\n    }\n    async onRunCreate(run) {\n        if (this.rootId === undefined) {\n            this.rootId = run.id;\n            await this.writer.write(new RunLogPatch({\n                ops: [\n                    {\n                        op: \"replace\",\n                        path: \"\",\n                        value: {\n                            id: run.id,\n                            name: run.name,\n                            type: run.run_type,\n                            streamed_output: [],\n                            final_output: undefined,\n                            logs: {},\n                        },\n                    },\n                ],\n            }));\n        }\n        if (!this._includeRun(run)) {\n            return;\n        }\n        if (this.counterMapByRunName[run.name] === undefined) {\n            this.counterMapByRunName[run.name] = 0;\n        }\n        this.counterMapByRunName[run.name] += 1;\n        const count = this.counterMapByRunName[run.name];\n        this.keyMapByRunId[run.id] =\n            count === 1 ? run.name : `${run.name}:${count}`;\n        const logEntry = {\n            id: run.id,\n            name: run.name,\n            type: run.run_type,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            start_time: new Date(run.start_time).toISOString(),\n            streamed_output: [],\n            streamed_output_str: [],\n            final_output: undefined,\n            end_time: undefined,\n        };\n        if (this._schemaFormat === \"streaming_events\") {\n            logEntry.inputs = await _getStandardizedInputs(run, this._schemaFormat);\n        }\n        await this.writer.write(new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${this.keyMapByRunId[run.id]}`,\n                    value: logEntry,\n                },\n            ],\n        }));\n    }\n    async onRunUpdate(run) {\n        try {\n            const runName = this.keyMapByRunId[run.id];\n            if (runName === undefined) {\n                return;\n            }\n            const ops = [];\n            if (this._schemaFormat === \"streaming_events\") {\n                ops.push({\n                    op: \"replace\",\n                    path: `/logs/${runName}/inputs`,\n                    value: await _getStandardizedInputs(run, this._schemaFormat),\n                });\n            }\n            ops.push({\n                op: \"add\",\n                path: `/logs/${runName}/final_output`,\n                value: await _getStandardizedOutputs(run, this._schemaFormat),\n            });\n            if (run.end_time !== undefined) {\n                ops.push({\n                    op: \"add\",\n                    path: `/logs/${runName}/end_time`,\n                    value: new Date(run.end_time).toISOString(),\n                });\n            }\n            const patch = new RunLogPatch({ ops });\n            await this.writer.write(patch);\n        }\n        finally {\n            if (run.id === this.rootId) {\n                const patch = new RunLogPatch({\n                    ops: [\n                        {\n                            op: \"replace\",\n                            path: \"/final_output\",\n                            value: await _getStandardizedOutputs(run, this._schemaFormat),\n                        },\n                    ],\n                });\n                await this.writer.write(patch);\n                if (this.autoClose) {\n                    await this.writer.close();\n                }\n            }\n        }\n    }\n    async onLLMNewToken(run, token, kwargs) {\n        const runName = this.keyMapByRunId[run.id];\n        if (runName === undefined) {\n            return;\n        }\n        // TODO: Remove hack\n        const isChatModel = run.inputs.messages !== undefined;\n        let streamedOutputValue;\n        if (isChatModel) {\n            if (isChatGenerationChunk(kwargs?.chunk)) {\n                streamedOutputValue = kwargs?.chunk;\n            }\n            else {\n                streamedOutputValue = new AIMessageChunk({\n                    id: `run-${run.id}`,\n                    content: token,\n                });\n            }\n        }\n        else {\n            streamedOutputValue = token;\n        }\n        const patch = new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output_str/-`,\n                    value: token,\n                },\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output/-`,\n                    value: streamedOutputValue,\n                },\n            ],\n        });\n        await this.writer.write(patch);\n    }\n}\n",
    "export const RUN_KEY = \"__run\";\n/**\n * Chunk of a single generation. Used for streaming.\n */\nexport class GenerationChunk {\n    constructor(fields) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"generationInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = fields.text;\n        this.generationInfo = fields.generationInfo;\n    }\n    concat(chunk) {\n        return new GenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n        });\n    }\n}\nexport class ChatGenerationChunk extends GenerationChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.message = fields.message;\n    }\n    concat(chunk) {\n        return new ChatGenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n            message: this.message.concat(chunk.message),\n        });\n    }\n}\n",
    "import { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\nimport { GenerationChunk } from \"../outputs.js\";\nfunction assignName({ name, serialized, }) {\n    if (name !== undefined) {\n        return name;\n    }\n    if (serialized?.name !== undefined) {\n        return serialized.name;\n    }\n    else if (serialized?.id !== undefined && Array.isArray(serialized?.id)) {\n        return serialized.id[serialized.id.length - 1];\n    }\n    return \"Unnamed\";\n}\nexport const isStreamEventsHandler = (handler) => handler.name === \"event_stream_tracer\";\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class EventStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"runInfoMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"tappedPromises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"event_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.runType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.runType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, outputStream) {\n        const firstChunk = await outputStream.next();\n        if (firstChunk.done) {\n            return;\n        }\n        const runInfo = this.runInfoMap.get(runId);\n        // Run has finished, don't issue any stream events.\n        // An example of this is for runnables that use the default\n        // implementation of .stream(), which delegates to .invoke()\n        // and calls .onChainEnd() before passing it to the iterator.\n        if (runInfo === undefined) {\n            yield firstChunk.value;\n            return;\n        }\n        // Match format from handlers below\n        function _formatOutputChunk(eventType, data) {\n            if (eventType === \"llm\" && typeof data === \"string\") {\n                return new GenerationChunk({ text: data });\n            }\n            return data;\n        }\n        let tappedPromise = this.tappedPromises.get(runId);\n        // if we are the first to tap, issue stream events\n        if (tappedPromise === undefined) {\n            let tappedPromiseResolver;\n            tappedPromise = new Promise((resolve) => {\n                tappedPromiseResolver = resolve;\n            });\n            this.tappedPromises.set(runId, tappedPromise);\n            try {\n                const event = {\n                    event: `on_${runInfo.runType}_stream`,\n                    run_id: runId,\n                    name: runInfo.name,\n                    tags: runInfo.tags,\n                    metadata: runInfo.metadata,\n                    data: {},\n                };\n                await this.send({\n                    ...event,\n                    data: {\n                        chunk: _formatOutputChunk(runInfo.runType, firstChunk.value),\n                    },\n                }, runInfo);\n                yield firstChunk.value;\n                for await (const chunk of outputStream) {\n                    // Don't yield tool and retriever stream events\n                    if (runInfo.runType !== \"tool\" && runInfo.runType !== \"retriever\") {\n                        await this.send({\n                            ...event,\n                            data: {\n                                chunk: _formatOutputChunk(runInfo.runType, chunk),\n                            },\n                        }, runInfo);\n                    }\n                    yield chunk;\n                }\n            }\n            finally {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tappedPromiseResolver();\n                // Don't delete from the promises map to keep track of which runs have been tapped.\n            }\n        }\n        else {\n            // otherwise just pass through\n            yield firstChunk.value;\n            for await (const chunk of outputStream) {\n                yield chunk;\n            }\n        }\n    }\n    async send(payload, run) {\n        if (this._includeRun(run)) {\n            await this.writer.write(payload);\n        }\n    }\n    async sendEndEvent(payload, run) {\n        const tappedPromise = this.tappedPromises.get(payload.run_id);\n        if (tappedPromise !== undefined) {\n            void tappedPromise.then(() => {\n                void this.send(payload, run);\n            });\n        }\n        else {\n            await this.send(payload, run);\n        }\n    }\n    async onLLMStart(run) {\n        const runName = assignName(run);\n        const runType = run.inputs.messages !== undefined ? \"chat_model\" : \"llm\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: run.inputs,\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        const eventName = `on_${runType}_start`;\n        await this.send({\n            event: eventName,\n            data: {\n                input: run.inputs,\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onLLMNewToken(run, token, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    kwargs) {\n        const runInfo = this.runInfoMap.get(run.id);\n        let chunk;\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMNewToken: Run ID ${run.id} not found in run map.`);\n        }\n        // Top-level streaming events are covered by tapOutputIterable\n        if (this.runInfoMap.size === 1) {\n            return;\n        }\n        if (runInfo.runType === \"chat_model\") {\n            eventName = \"on_chat_model_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new AIMessageChunk({ content: token, id: `run-${run.id}` });\n            }\n            else {\n                chunk = kwargs.chunk.message;\n            }\n        }\n        else if (runInfo.runType === \"llm\") {\n            eventName = \"on_llm_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new GenerationChunk({ text: token });\n            }\n            else {\n                chunk = kwargs.chunk;\n            }\n        }\n        else {\n            throw new Error(`Unexpected run type ${runInfo.runType}`);\n        }\n        await this.send({\n            event: eventName,\n            data: {\n                chunk,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onLLMEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const generations = run.outputs?.generations;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let output;\n        if (runInfo.runType === \"chat_model\") {\n            for (const generation of generations ?? []) {\n                if (output !== undefined) {\n                    break;\n                }\n                output = generation[0]?.message;\n            }\n            eventName = \"on_chat_model_end\";\n        }\n        else if (runInfo.runType === \"llm\") {\n            output = {\n                generations: generations?.map((generation) => {\n                    return generation.map((chunk) => {\n                        return {\n                            text: chunk.text,\n                            generationInfo: chunk.generationInfo,\n                        };\n                    });\n                }),\n                llmOutput: run.outputs?.llmOutput ?? {},\n            };\n            eventName = \"on_llm_end\";\n        }\n        else {\n            throw new Error(`onLLMEnd: Unexpected run type: ${runInfo.runType}`);\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onChainStart(run) {\n        const runName = assignName(run);\n        const runType = run.run_type ?? \"chain\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: run.run_type,\n        };\n        let eventData = {};\n        // Workaround Runnable core code not sending input when transform streaming.\n        if (run.inputs.input === \"\" && Object.keys(run.inputs).length === 1) {\n            eventData = {};\n            runInfo.inputs = {};\n        }\n        else if (run.inputs.input !== undefined) {\n            eventData.input = run.inputs.input;\n            runInfo.inputs = run.inputs.input;\n        }\n        else {\n            eventData.input = run.inputs;\n            runInfo.inputs = run.inputs;\n        }\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: `on_${runType}_start`,\n            data: eventData,\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onChainEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onChainEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const eventName = `on_${run.run_type}_end`;\n        const inputs = run.inputs ?? runInfo.inputs ?? {};\n        const outputs = run.outputs?.output ?? run.outputs;\n        const data = {\n            output: outputs,\n            input: inputs,\n        };\n        if (inputs.input && Object.keys(inputs).length === 1) {\n            data.input = inputs.input;\n            runInfo.inputs = inputs.input;\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data,\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolStart(run) {\n        const runName = assignName(run);\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: \"tool\",\n            inputs: run.inputs ?? {},\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_tool_start\",\n            data: {\n                input: run.inputs ?? {},\n            },\n            name: runName,\n            run_id: run.id,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} not found in run map.`);\n        }\n        if (runInfo.inputs === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} is a tool call, and is expected to have traced inputs.`);\n        }\n        const output = run.outputs?.output === undefined ? run.outputs : run.outputs.output;\n        await this.sendEndEvent({\n            event: \"on_tool_end\",\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onRetrieverStart(run) {\n        const runName = assignName(run);\n        const runType = \"retriever\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: {\n                query: run.inputs.query,\n            },\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_retriever_start\",\n            data: {\n                input: {\n                    query: run.inputs.query,\n                },\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onRetrieverEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onRetrieverEnd: Run ID ${run.id} not found in run map.`);\n        }\n        await this.sendEndEvent({\n            event: \"on_retriever_end\",\n            data: {\n                output: run.outputs?.documents ?? run.outputs,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleCustomEvent(eventName, data, runId) {\n        const runInfo = this.runInfoMap.get(runId);\n        if (runInfo === undefined) {\n            throw new Error(`handleCustomEvent: Run ID ${runId} not found in run map.`);\n        }\n        await this.send({\n            event: \"on_custom_event\",\n            run_id: runId,\n            name: eventName,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n            data,\n        }, runInfo);\n    }\n    async finish() {\n        const pendingPromises = [...this.tappedPromises.values()];\n        void Promise.all(pendingPromises).finally(() => {\n            void this.writer.close();\n        });\n    }\n}\n",
    "import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400, // Bad Request\n    401, // Unauthorized\n    402, // Payment Required\n    403, // Forbidden\n    404, // Not Found\n    405, // Method Not Allowed\n    406, // Not Acceptable\n    407, // Proxy Authentication Required\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue = (\"default\" in PQueueMod ? PQueueMod.default : PQueueMod);\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n",
    "import { BaseTracer } from \"./base.js\";\nexport class RootListenersTracer extends BaseTracer {\n    constructor({ config, onStart, onEnd, onError, }) {\n        super({ _awaitHandler: true });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RootListenersTracer\"\n        });\n        /** The Run's ID. Type UUID */\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnStart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnEnd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.config = config;\n        this.argOnStart = onStart;\n        this.argOnEnd = onEnd;\n        this.argOnError = onError;\n    }\n    /**\n     * This is a legacy method only called once for an entire run tree\n     * therefore not useful here\n     * @param {Run} _ Not used\n     */\n    persistRun(_) {\n        return Promise.resolve();\n    }\n    async onRunCreate(run) {\n        if (this.rootId) {\n            return;\n        }\n        this.rootId = run.id;\n        if (this.argOnStart) {\n            await this.argOnStart(run, this.config);\n        }\n    }\n    async onRunUpdate(run) {\n        if (run.id !== this.rootId) {\n            return;\n        }\n        if (!run.error) {\n            if (this.argOnEnd) {\n                await this.argOnEnd(run, this.config);\n            }\n        }\n        else if (this.argOnError) {\n            await this.argOnError(run, this.config);\n        }\n    }\n}\n",
    "// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing) {\n    return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n    constructor(fields) {\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.includeNames = fields.includeNames;\n        this.includeTypes = fields.includeTypes;\n        this.includeTags = fields.includeTags;\n        this.excludeNames = fields.excludeNames;\n        this.excludeTypes = fields.excludeTypes;\n        this.excludeTags = fields.excludeTags;\n    }\n    includeEvent(event, rootType) {\n        let include = this.includeNames === undefined &&\n            this.includeTypes === undefined &&\n            this.includeTags === undefined;\n        const eventTags = event.tags ?? [];\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(event.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(rootType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include || eventTags.some((tag) => this.includeTags?.includes(tag));\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(event.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(rootType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n}\n",
    "function _escapeNodeLabel(nodeLabel) {\n    // Escapes the node label for Mermaid syntax.\n    return nodeLabel.replace(/[^a-zA-Z-_0-9]/g, \"_\");\n}\nconst MARKDOWN_SPECIAL_CHARS = [\"*\", \"_\", \"`\"];\nfunction _generateMermaidGraphStyles(nodeColors) {\n    let styles = \"\";\n    for (const [className, color] of Object.entries(nodeColors)) {\n        styles += `\\tclassDef ${className} ${color};\\n`;\n    }\n    return styles;\n}\n/**\n * Draws a Mermaid graph using the provided graph data\n */\nexport function drawMermaid(nodes, edges, config) {\n    const { firstNode, lastNode, nodeColors, withStyles = true, curveStyle = \"linear\", wrapLabelNWords = 9, } = config ?? {};\n    // Initialize Mermaid graph configuration\n    let mermaidGraph = withStyles\n        ? `%%{init: {'flowchart': {'curve': '${curveStyle}'}}}%%\\ngraph TD;\\n`\n        : \"graph TD;\\n\";\n    if (withStyles) {\n        // Node formatting templates\n        const defaultClassLabel = \"default\";\n        const formatDict = {\n            [defaultClassLabel]: \"{0}({1})\",\n        };\n        if (firstNode !== undefined) {\n            formatDict[firstNode] = \"{0}([{1}]):::first\";\n        }\n        if (lastNode !== undefined) {\n            formatDict[lastNode] = \"{0}([{1}]):::last\";\n        }\n        // Add nodes to the graph\n        for (const [key, node] of Object.entries(nodes)) {\n            const nodeName = node.name.split(\":\").pop() ?? \"\";\n            const label = MARKDOWN_SPECIAL_CHARS.some((char) => nodeName.startsWith(char) && nodeName.endsWith(char))\n                ? `<p>${nodeName}</p>`\n                : nodeName;\n            let finalLabel = label;\n            if (Object.keys(node.metadata ?? {}).length) {\n                finalLabel += `<hr/><small><em>${Object.entries(node.metadata ?? {})\n                    .map(([k, v]) => `${k} = ${v}`)\n                    .join(\"\\n\")}</em></small>`;\n            }\n            const nodeLabel = (formatDict[key] ?? formatDict[defaultClassLabel])\n                .replace(\"{0}\", _escapeNodeLabel(key))\n                .replace(\"{1}\", finalLabel);\n            mermaidGraph += `\\t${nodeLabel}\\n`;\n        }\n    }\n    // Group edges by their common prefixes\n    const edgeGroups = {};\n    for (const edge of edges) {\n        const srcParts = edge.source.split(\":\");\n        const tgtParts = edge.target.split(\":\");\n        const commonPrefix = srcParts\n            .filter((src, i) => src === tgtParts[i])\n            .join(\":\");\n        if (!edgeGroups[commonPrefix]) {\n            edgeGroups[commonPrefix] = [];\n        }\n        edgeGroups[commonPrefix].push(edge);\n    }\n    const seenSubgraphs = new Set();\n    function addSubgraph(edges, prefix) {\n        const selfLoop = edges.length === 1 && edges[0].source === edges[0].target;\n        if (prefix && !selfLoop) {\n            const subgraph = prefix.split(\":\").pop();\n            if (seenSubgraphs.has(subgraph)) {\n                throw new Error(`Found duplicate subgraph '${subgraph}' -- this likely means that ` +\n                    \"you're reusing a subgraph node with the same name. \" +\n                    \"Please adjust your graph to have subgraph nodes with unique names.\");\n            }\n            seenSubgraphs.add(subgraph);\n            mermaidGraph += `\\tsubgraph ${subgraph}\\n`;\n        }\n        for (const edge of edges) {\n            const { source, target, data, conditional } = edge;\n            let edgeLabel = \"\";\n            if (data !== undefined) {\n                let edgeData = data;\n                const words = edgeData.split(\" \");\n                if (words.length > wrapLabelNWords) {\n                    edgeData = Array.from({ length: Math.ceil(words.length / wrapLabelNWords) }, (_, i) => words\n                        .slice(i * wrapLabelNWords, (i + 1) * wrapLabelNWords)\n                        .join(\" \")).join(\"&nbsp;<br>&nbsp;\");\n                }\n                edgeLabel = conditional\n                    ? ` -. &nbsp;${edgeData}&nbsp; .-> `\n                    : ` -- &nbsp;${edgeData}&nbsp; --> `;\n            }\n            else {\n                edgeLabel = conditional ? \" -.-> \" : \" --> \";\n            }\n            mermaidGraph += `\\t${_escapeNodeLabel(source)}${edgeLabel}${_escapeNodeLabel(target)};\\n`;\n        }\n        // Recursively add nested subgraphs\n        for (const nestedPrefix in edgeGroups) {\n            if (nestedPrefix.startsWith(`${prefix}:`) && nestedPrefix !== prefix) {\n                addSubgraph(edgeGroups[nestedPrefix], nestedPrefix);\n            }\n        }\n        if (prefix && !selfLoop) {\n            mermaidGraph += \"\\tend\\n\";\n        }\n    }\n    // Start with the top-level edges (no common prefix)\n    addSubgraph(edgeGroups[\"\"] ?? [], \"\");\n    // Add remaining subgraphs\n    for (const prefix in edgeGroups) {\n        if (!prefix.includes(\":\") && prefix !== \"\") {\n            addSubgraph(edgeGroups[prefix], prefix);\n        }\n    }\n    // Add custom styles for nodes\n    if (withStyles) {\n        mermaidGraph += _generateMermaidGraphStyles(nodeColors ?? {});\n    }\n    return mermaidGraph;\n}\n/**\n * @deprecated Use `drawMermaidImage` instead.\n */\nexport async function drawMermaidPng(mermaidSyntax, config) {\n    return drawMermaidImage(mermaidSyntax, {\n        ...config,\n        imageType: \"png\",\n    });\n}\n/**\n * Renders Mermaid graph using the Mermaid.INK API.\n *\n * @example\n * ```javascript\n * const image = await drawMermaidImage(mermaidSyntax, {\n *   backgroundColor: \"white\",\n *   imageType: \"png\",\n * });\n * fs.writeFileSync(\"image.png\", image);\n * ```\n *\n * @param mermaidSyntax - The Mermaid syntax to render.\n * @param config - The configuration for the image.\n * @returns The image as a Blob.\n */\nexport async function drawMermaidImage(mermaidSyntax, config) {\n    let backgroundColor = config?.backgroundColor ?? \"white\";\n    const imageType = config?.imageType ?? \"png\";\n    // Use btoa for compatibility, assume ASCII\n    const mermaidSyntaxEncoded = btoa(mermaidSyntax);\n    // Check if the background color is a hexadecimal color code using regex\n    if (backgroundColor !== undefined) {\n        const hexColorPattern = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n        if (!hexColorPattern.test(backgroundColor)) {\n            backgroundColor = `!${backgroundColor}`;\n        }\n    }\n    const imageUrl = `https://mermaid.ink/img/${mermaidSyntaxEncoded}?bgColor=${backgroundColor}&type=${imageType}`;\n    const res = await fetch(imageUrl);\n    if (!res.ok) {\n        throw new Error([\n            `Failed to render the graph using the Mermaid.INK API.`,\n            `Status code: ${res.status}`,\n            `Status text: ${res.statusText}`,\n        ].join(\"\\n\"));\n    }\n    const content = await res.blob();\n    return content;\n}\n",
    "import { toJSONSchema } from \"zod/v4/core\";\nimport { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { dereference } from \"@cfworker/json-schema\";\nimport { isZodSchemaV3, isZodSchemaV4, interopZodObjectStrict, isZodObjectV4, interopZodTransformInputSchema, } from \"./types/zod.js\";\nexport { deepCompareStrict, Validator } from \"@cfworker/json-schema\";\n/**\n * Converts a Zod schema or JSON schema to a JSON schema.\n * @param schema - The schema to convert.\n * @returns The converted schema.\n */\nexport function toJsonSchema(schema) {\n    if (isZodSchemaV4(schema)) {\n        const inputSchema = interopZodTransformInputSchema(schema, true);\n        if (isZodObjectV4(inputSchema)) {\n            const strictSchema = interopZodObjectStrict(inputSchema, true);\n            return toJSONSchema(strictSchema);\n        }\n        else {\n            return toJSONSchema(schema);\n        }\n    }\n    if (isZodSchemaV3(schema)) {\n        return zodToJsonSchema(schema);\n    }\n    return schema;\n}\n/**\n * Validates if a JSON schema validates only strings. May return false negatives in some edge cases\n * (like recursive or unresolvable refs).\n *\n * @param schema - The schema to validate.\n * @returns `true` if the schema validates only strings, `false` otherwise.\n */\nexport function validatesOnlyStrings(schema) {\n    // Null, undefined, or empty schema\n    if (!schema ||\n        typeof schema !== \"object\" ||\n        Object.keys(schema).length === 0 ||\n        Array.isArray(schema)) {\n        return false; // Validates anything, not just strings\n    }\n    // Explicit type constraint\n    if (\"type\" in schema) {\n        if (typeof schema.type === \"string\") {\n            return schema.type === \"string\";\n        }\n        if (Array.isArray(schema.type)) {\n            // not sure why someone would do `\"type\": [\"string\"]` or especially `\"type\": [\"string\",\n            // \"string\", \"string\", ...]` but we're not here to judge\n            return schema.type.every((t) => t === \"string\");\n        }\n        return false; // Invalid or non-string type\n    }\n    // Enum with only string values\n    if (\"enum\" in schema) {\n        return (Array.isArray(schema.enum) &&\n            schema.enum.length > 0 &&\n            schema.enum.every((val) => typeof val === \"string\"));\n    }\n    // String constant\n    if (\"const\" in schema) {\n        return typeof schema.const === \"string\";\n    }\n    // Schema combinations\n    if (\"allOf\" in schema && Array.isArray(schema.allOf)) {\n        // If any subschema validates only strings, then the overall schema validates only strings\n        return schema.allOf.some((subschema) => validatesOnlyStrings(subschema));\n    }\n    if ((\"anyOf\" in schema && Array.isArray(schema.anyOf)) ||\n        (\"oneOf\" in schema && Array.isArray(schema.oneOf))) {\n        const subschemas = (\"anyOf\" in schema ? schema.anyOf : schema.oneOf);\n        // All subschemas must validate only strings\n        return (subschemas.length > 0 &&\n            subschemas.every((subschema) => validatesOnlyStrings(subschema)));\n    }\n    // We're not going to try on this one, it's too complex - we just assume if it has a \"not\" key and hasn't matched one of the above checks, it's not a string schema.\n    if (\"not\" in schema) {\n        return false; // The not case can validate non-strings\n    }\n    if (\"$ref\" in schema && typeof schema.$ref === \"string\") {\n        const ref = schema.$ref;\n        const resolved = dereference(schema);\n        if (resolved[ref]) {\n            return validatesOnlyStrings(resolved[ref]);\n        }\n        return false;\n    }\n    // ignore recursive refs and other cases where type is omitted for now\n    // ignore other cases for now where type is omitted\n    return false;\n}\n",
    "export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n    openAiAnyTypeName: \"OpenAiAnyType\"\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n",
    "import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        flags: { hasReferencedOpenAiAnyType: false },\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n",
    "export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n",
    "export const getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\n",
    "import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef(refs);\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef(refs);\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef(refs);\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef(refs);\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n",
    "import { getRelativePath } from \"../getRelativePath.js\";\nexport function parseAnyDef(refs) {\n    if (refs.target !== \"openAi\") {\n        return {};\n    }\n    const anyDefinitionPath = [\n        ...refs.basePath,\n        refs.definitionPath,\n        refs.openAiAnyTypeName,\n    ];\n    refs.flags.hasReferencedOpenAiAnyType = true;\n    return {\n        $ref: refs.$refStrategy === \"relative\"\n            ? getRelativePath(anyDefinitionPath, refs.currentPath)\n            : anyDefinitionPath.join(\"/\"),\n    };\n}\n",
    "import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n",
    "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n",
    "export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n",
    "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n",
    "import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : parseAnyDef(refs);\n}\n",
    "export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n",
    "export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n",
    "import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? parseAnyDef(refs),\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n",
    "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || parseAnyDef(refs);\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || parseAnyDef(refs);\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n",
    "export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n",
    "import { parseAnyDef } from \"./any.js\";\nexport function parseNeverDef(refs) {\n    return refs.target === \"openAi\"\n        ? undefined\n        : {\n            not: parseAnyDef({\n                ...refs,\n                currentPath: [...refs.currentPath, \"not\"],\n            }),\n        };\n}\n",
    "export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n",
    "import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n",
    "import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef._def.typeName === \"ZodOptional\") {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = parseDef(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return parseDef(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: parseAnyDef(refs),\n                },\n                innerSchema,\n            ],\n        }\n        : parseAnyDef(refs);\n};\n",
    "import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n",
    "import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n",
    "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n",
    "import { parseAnyDef } from \"./any.js\";\nexport function parseUndefinedDef(refs) {\n    return {\n        not: parseAnyDef(refs),\n    };\n}\n",
    "import { parseAnyDef } from \"./any.js\";\nexport function parseUnknownDef(refs) {\n    return parseAnyDef(refs);\n}\n",
    "import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n",
    "import { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nimport { getRelativePath } from \"./getRelativePath.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return parseAnyDef(refs);\n            }\n            return refs.$refStrategy === \"seen\" ? parseAnyDef(refs) : undefined;\n        }\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n",
    "import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    let definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? parseAnyDef(refs),\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? parseAnyDef(refs);\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    if (refs.flags.hasReferencedOpenAiAnyType) {\n        if (!definitions) {\n            definitions = {};\n        }\n        if (!definitions[refs.openAiAnyTypeName]) {\n            definitions[refs.openAiAnyTypeName] = {\n                // Skipping \"object\" as no properties can be defined and additionalProperties must be \"false\"\n                type: [\"string\", \"number\", \"integer\", \"boolean\", \"array\", \"null\"],\n                items: {\n                    $ref: refs.$refStrategy === \"relative\"\n                        ? \"1\"\n                        : [\n                            ...refs.basePath,\n                            refs.definitionPath,\n                            refs.openAiAnyTypeName,\n                        ].join(\"/\"),\n                },\n            };\n        }\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n",
    "import { parse, parseAsync, globalRegistry, util, clone, _unknown, _never, $ZodUnknown, $ZodNever, $ZodOptional, } from \"zod/v4/core\";\nexport function isZodSchemaV4(schema) {\n    if (typeof schema !== \"object\" || schema === null) {\n        return false;\n    }\n    const obj = schema;\n    if (!(\"_zod\" in obj)) {\n        return false;\n    }\n    const zod = obj._zod;\n    return (typeof zod === \"object\" &&\n        zod !== null &&\n        \"def\" in zod);\n}\nexport function isZodSchemaV3(schema) {\n    if (typeof schema !== \"object\" || schema === null) {\n        return false;\n    }\n    const obj = schema;\n    if (!(\"_def\" in obj) || \"_zod\" in obj) {\n        return false;\n    }\n    const def = obj._def;\n    return (typeof def === \"object\" &&\n        def != null &&\n        \"typeName\" in def);\n}\n/** Backward compatible isZodSchema for Zod 3 */\nexport function isZodSchema(schema) {\n    if (isZodSchemaV4(schema)) {\n        console.warn(\"[WARNING] Attempting to use Zod 4 schema in a context where Zod 3 schema is expected. This may cause unexpected behavior.\");\n    }\n    return isZodSchemaV3(schema);\n}\n/**\n * Given either a Zod schema, or plain object, determine if the input is a Zod schema.\n *\n * @param {unknown} input\n * @returns {boolean} Whether or not the provided input is a Zod schema.\n */\nexport function isInteropZodSchema(input) {\n    if (!input) {\n        return false;\n    }\n    if (typeof input !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(input)) {\n        return false;\n    }\n    if (isZodSchemaV4(input) ||\n        isZodSchemaV3(input)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Asynchronously parses the input using the provided Zod schema (v3 or v4) and returns a safe parse result.\n * This function handles both Zod v3 and v4 schemas, returning a result object indicating success or failure.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {Promise<InteropZodSafeParseResult<T>>} A promise that resolves to a safe parse result object.\n * @throws {Error} If the schema is not a recognized Zod v3 or v4 schema.\n */\nexport async function interopSafeParseAsync(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        try {\n            const data = await parseAsync(schema, input);\n            return {\n                success: true,\n                data,\n            };\n        }\n        catch (error) {\n            return {\n                success: false,\n                error: error,\n            };\n        }\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.safeParse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Asynchronously parses the input using the provided Zod schema (v3 or v4) and returns the parsed value.\n * Throws an error if parsing fails or if the schema is not a recognized Zod v3 or v4 schema.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {Promise<T>} A promise that resolves to the parsed value.\n * @throws {Error} If parsing fails or the schema is not a recognized Zod v3 or v4 schema.\n */\nexport async function interopParseAsync(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        return parse(schema, input);\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.parse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Safely parses the input using the provided Zod schema (v3 or v4) and returns a result object\n * indicating success or failure. This function is compatible with both Zod v3 and v4 schemas.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {InteropZodSafeParseResult<T>} An object with either the parsed data (on success)\n *   or the error (on failure).\n * @throws {Error} If the schema is not a recognized Zod v3 or v4 schema.\n */\nexport function interopSafeParse(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        try {\n            const data = parse(schema, input);\n            return {\n                success: true,\n                data,\n            };\n        }\n        catch (error) {\n            return {\n                success: false,\n                error: error,\n            };\n        }\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.safeParse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Parses the input using the provided Zod schema (v3 or v4) and returns the parsed value.\n * Throws an error if parsing fails or if the schema is not a recognized Zod v3 or v4 schema.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {T} The parsed value.\n * @throws {Error} If parsing fails or the schema is not a recognized Zod v3 or v4 schema.\n */\nexport function interopParse(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        return parse(schema, input);\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.parse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Retrieves the description from a schema definition (v3, v4, or plain object), if available.\n *\n * @param {unknown} schema - The schema to extract the description from.\n * @returns {string | undefined} The description of the schema, or undefined if not present.\n */\nexport function getSchemaDescription(schema) {\n    if (isZodSchemaV4(schema)) {\n        return globalRegistry.get(schema)?.description;\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.description;\n    }\n    if (\"description\" in schema && typeof schema.description === \"string\") {\n        return schema.description;\n    }\n    return undefined;\n}\n/**\n * Determines if the provided Zod schema is \"shapeless\".\n * A shapeless schema is one that does not define any object shape,\n * such as ZodString, ZodNumber, ZodBoolean, ZodAny, etc.\n * For ZodObject, it must have no shape keys to be considered shapeless.\n * ZodRecord schemas are considered shapeless since they define dynamic\n * key-value mappings without fixed keys.\n *\n * @param schema The Zod schema to check.\n * @returns {boolean} True if the schema is shapeless, false otherwise.\n */\nexport function isShapelessZodSchema(schema) {\n    if (!isInteropZodSchema(schema)) {\n        return false;\n    }\n    // Check for v3 schemas\n    if (isZodSchemaV3(schema)) {\n        // @ts-expect-error - zod v3 types are not compatible with zod v4 types\n        const def = schema._def;\n        // ZodObject is only shaped if it has actual shape keys\n        if (def.typeName === \"ZodObject\") {\n            const obj = schema;\n            return !obj.shape || Object.keys(obj.shape).length === 0;\n        }\n        // ZodRecord is shapeless (dynamic key-value mapping)\n        if (def.typeName === \"ZodRecord\") {\n            return true;\n        }\n    }\n    // Check for v4 schemas\n    if (isZodSchemaV4(schema)) {\n        const def = schema._zod.def;\n        // Object type is only shaped if it has actual shape keys\n        if (def.type === \"object\") {\n            const obj = schema;\n            return !obj.shape || Object.keys(obj.shape).length === 0;\n        }\n        // Record type is shapeless (dynamic key-value mapping)\n        if (def.type === \"record\") {\n            return true;\n        }\n    }\n    // For other schemas, check if they have a `shape` property\n    // If they don't have shape, they're likely shapeless\n    if (typeof schema === \"object\" && schema !== null && !(\"shape\" in schema)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Determines if the provided Zod schema should be treated as a simple string schema\n * that maps to DynamicTool. This aligns with the type-level constraint of\n * InteropZodType<string | undefined> which only matches basic string schemas.\n * If the provided schema is just z.string(), we can make the determination that\n * the tool is just a generic string tool that doesn't require any input validation.\n *\n * This function only returns true for basic ZodString schemas, including:\n * - Basic string schemas (z.string())\n * - String schemas with validations (z.string().min(1), z.string().email(), etc.)\n *\n * This function returns false for everything else, including:\n * - String schemas with defaults (z.string().default(\"value\"))\n * - Branded string schemas (z.string().brand<\"UserId\">())\n * - String schemas with catch operations (z.string().catch(\"default\"))\n * - Optional/nullable string schemas (z.string().optional())\n * - Transformed schemas (z.string().transform() or z.object().transform())\n * - Object or record schemas, even if they're empty\n * - Any other schema type\n *\n * @param schema The Zod schema to check.\n * @returns {boolean} True if the schema is a basic ZodString, false otherwise.\n */\nexport function isSimpleStringZodSchema(schema) {\n    if (!isInteropZodSchema(schema)) {\n        return false;\n    }\n    // For v3 schemas\n    if (isZodSchemaV3(schema)) {\n        // @ts-expect-error - zod v3 types are not compatible with zod v4 types\n        const def = schema._def;\n        // Only accept basic ZodString\n        return def.typeName === \"ZodString\";\n    }\n    // For v4 schemas\n    if (isZodSchemaV4(schema)) {\n        const def = schema._zod.def;\n        // Only accept basic string type\n        return def.type === \"string\";\n    }\n    return false;\n}\nexport function isZodObjectV3(obj) {\n    // Zod v3 object schemas have _def.typeName === \"ZodObject\"\n    if (typeof obj === \"object\" &&\n        obj !== null &&\n        \"_def\" in obj &&\n        typeof obj._def === \"object\" &&\n        obj._def !== null &&\n        \"typeName\" in obj._def &&\n        obj._def.typeName === \"ZodObject\") {\n        return true;\n    }\n    return false;\n}\nexport function isZodObjectV4(obj) {\n    if (!isZodSchemaV4(obj))\n        return false;\n    // Zod v4 object schemas have _zod.def.type === \"object\"\n    if (typeof obj === \"object\" &&\n        obj !== null &&\n        \"_zod\" in obj &&\n        typeof obj._zod === \"object\" &&\n        obj._zod !== null &&\n        \"def\" in obj._zod &&\n        typeof obj._zod.def === \"object\" &&\n        obj._zod.def !== null &&\n        \"type\" in obj._zod.def &&\n        obj._zod.def.type === \"object\") {\n        return true;\n    }\n    return false;\n}\nexport function isZodArrayV4(obj) {\n    if (!isZodSchemaV4(obj))\n        return false;\n    // Zod v4 array schemas have _zod.def.type === \"array\"\n    if (typeof obj === \"object\" &&\n        obj !== null &&\n        \"_zod\" in obj &&\n        typeof obj._zod === \"object\" &&\n        obj._zod !== null &&\n        \"def\" in obj._zod &&\n        typeof obj._zod.def === \"object\" &&\n        obj._zod.def !== null &&\n        \"type\" in obj._zod.def &&\n        obj._zod.def.type === \"array\") {\n        return true;\n    }\n    return false;\n}\n/**\n * Determines if the provided value is an InteropZodObject (Zod v3 or v4 object schema).\n *\n * @param obj The value to check.\n * @returns {boolean} True if the value is a Zod v3 or v4 object schema, false otherwise.\n */\nexport function isInteropZodObject(obj) {\n    if (isZodObjectV3(obj))\n        return true;\n    if (isZodObjectV4(obj))\n        return true;\n    return false;\n}\n/**\n * Retrieves the shape (fields) of a Zod object schema, supporting both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @returns {InteropZodObjectShape<T>} The shape of the object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function getInteropZodObjectShape(schema) {\n    if (isZodSchemaV3(schema)) {\n        return schema.shape;\n    }\n    if (isZodSchemaV4(schema)) {\n        return schema._zod.def.shape;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Extends a Zod object schema with additional fields, supporting both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {InteropZodObjectShape} extension - The fields to add to the schema.\n * @returns {InteropZodObject} The extended Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function extendInteropZodObject(schema, extension) {\n    if (isZodSchemaV3(schema)) {\n        return schema.extend(extension);\n    }\n    if (isZodSchemaV4(schema)) {\n        return util.extend(schema, extension);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a partial version of a Zod object schema, making all fields optional.\n * Supports both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @returns {InteropZodObject} The partial Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectPartial(schema) {\n    if (isZodSchemaV3(schema)) {\n        // z3: .partial() exists and works as expected\n        return schema.partial();\n    }\n    if (isZodSchemaV4(schema)) {\n        // z4: util.partial exists and works as expected\n        return util.partial($ZodOptional, schema, undefined);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a strict version of a Zod object schema, disallowing unknown keys.\n * Supports both Zod v3 and v4 object schemas. If `recursive` is true, applies strictness\n * recursively to all nested object schemas and arrays of object schemas.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {boolean} [recursive=false] - Whether to apply strictness recursively to nested objects/arrays.\n * @returns {InteropZodObject} The strict Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectStrict(schema, recursive = false) {\n    if (isZodSchemaV3(schema)) {\n        // TODO: v3 schemas aren't recursively handled here\n        // (currently not necessary since zodToJsonSchema handles this)\n        return schema.strict();\n    }\n    if (isZodObjectV4(schema)) {\n        const outputShape = schema._zod.def.shape;\n        if (recursive) {\n            for (const [key, keySchema] of Object.entries(schema._zod.def.shape)) {\n                // If the shape key is a v4 object schema, we need to make it strict\n                if (isZodObjectV4(keySchema)) {\n                    const outputSchema = interopZodObjectStrict(keySchema, recursive);\n                    outputShape[key] = outputSchema;\n                }\n                // If the shape key is a v4 array schema, we need to make the element\n                // schema strict if it's an object schema\n                else if (isZodArrayV4(keySchema)) {\n                    let elementSchema = keySchema._zod.def.element;\n                    if (isZodObjectV4(elementSchema)) {\n                        elementSchema = interopZodObjectStrict(elementSchema, recursive);\n                    }\n                    outputShape[key] = clone(keySchema, {\n                        ...keySchema._zod.def,\n                        element: elementSchema,\n                    });\n                }\n                // Otherwise, just use the keySchema\n                else {\n                    outputShape[key] = keySchema;\n                }\n                // Assign meta fields to the keySchema\n                const meta = globalRegistry.get(keySchema);\n                if (meta)\n                    globalRegistry.add(outputShape[key], meta);\n            }\n        }\n        const modifiedSchema = clone(schema, {\n            ...schema._zod.def,\n            shape: outputShape,\n            catchall: _never($ZodNever),\n        });\n        const meta = globalRegistry.get(schema);\n        if (meta)\n            globalRegistry.add(modifiedSchema, meta);\n        return modifiedSchema;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a passthrough version of a Zod object schema, allowing unknown keys.\n * Supports both Zod v3 and v4 object schemas. If `recursive` is true, applies passthrough\n * recursively to all nested object schemas and arrays of object schemas.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {boolean} [recursive=false] - Whether to apply passthrough recursively to nested objects/arrays.\n * @returns {InteropZodObject} The passthrough Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectPassthrough(schema, recursive = false) {\n    if (isZodObjectV3(schema)) {\n        // TODO: v3 schemas aren't recursively handled here\n        // (currently not necessary since zodToJsonSchema handles this)\n        return schema.passthrough();\n    }\n    if (isZodObjectV4(schema)) {\n        const outputShape = schema._zod.def.shape;\n        if (recursive) {\n            for (const [key, keySchema] of Object.entries(schema._zod.def.shape)) {\n                // If the shape key is a v4 object schema, we need to make it passthrough\n                if (isZodObjectV4(keySchema)) {\n                    const outputSchema = interopZodObjectPassthrough(keySchema, recursive);\n                    outputShape[key] = outputSchema;\n                }\n                // If the shape key is a v4 array schema, we need to make the element\n                // schema passthrough if it's an object schema\n                else if (isZodArrayV4(keySchema)) {\n                    let elementSchema = keySchema._zod.def.element;\n                    if (isZodObjectV4(elementSchema)) {\n                        elementSchema = interopZodObjectPassthrough(elementSchema, recursive);\n                    }\n                    outputShape[key] = clone(keySchema, {\n                        ...keySchema._zod.def,\n                        element: elementSchema,\n                    });\n                }\n                // Otherwise, just use the keySchema\n                else {\n                    outputShape[key] = keySchema;\n                }\n                // Assign meta fields to the keySchema\n                const meta = globalRegistry.get(keySchema);\n                if (meta)\n                    globalRegistry.add(outputShape[key], meta);\n            }\n        }\n        const modifiedSchema = clone(schema, {\n            ...schema._zod.def,\n            shape: outputShape,\n            catchall: _unknown($ZodUnknown),\n        });\n        const meta = globalRegistry.get(schema);\n        if (meta)\n            globalRegistry.add(modifiedSchema, meta);\n        return modifiedSchema;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a getter function for the default value of a Zod schema, if one is defined.\n * Supports both Zod v3 and v4 schemas. If the schema has a default value,\n * the returned function will return that value when called. If no default is defined,\n * returns undefined.\n *\n * @template T - The type of the Zod schema.\n * @param {T} schema - The Zod schema instance (either v3 or v4).\n * @returns {(() => InferInteropZodOutput<T>) | undefined} A function that returns the default value, or undefined if no default is set.\n */\nexport function getInteropZodDefaultGetter(schema) {\n    if (isZodSchemaV3(schema)) {\n        try {\n            const defaultValue = schema.parse(undefined);\n            return () => defaultValue;\n        }\n        catch {\n            return undefined;\n        }\n    }\n    if (isZodSchemaV4(schema)) {\n        try {\n            const defaultValue = parse(schema, undefined);\n            return () => defaultValue;\n        }\n        catch {\n            return undefined;\n        }\n    }\n    return undefined;\n}\nfunction isZodTransformV3(schema) {\n    return (isZodSchemaV3(schema) &&\n        \"typeName\" in schema._def &&\n        schema._def.typeName === \"ZodEffects\");\n}\nfunction isZodTransformV4(schema) {\n    return isZodSchemaV4(schema) && schema._zod.def.type === \"pipe\";\n}\n/**\n * Returns the input type of a Zod transform schema, for both v3 and v4.\n * If the schema is not a transform, returns undefined. If `recursive` is true,\n * recursively processes nested object schemas and arrays of object schemas.\n *\n * @param schema - The Zod schema instance (v3 or v4)\n * @param {boolean} [recursive=false] - Whether to recursively process nested objects/arrays.\n * @returns The input Zod schema of the transform, or undefined if not a transform\n */\nexport function interopZodTransformInputSchema(schema, recursive = false) {\n    // Zod v3: ._def.schema is the input schema for ZodEffects (transform)\n    if (isZodSchemaV3(schema)) {\n        if (isZodTransformV3(schema)) {\n            return interopZodTransformInputSchema(schema._def.schema, recursive);\n        }\n        // TODO: v3 schemas aren't recursively handled here\n        // (currently not necessary since zodToJsonSchema handles this)\n        return schema;\n    }\n    // Zod v4: _def.type is the input schema for ZodEffects (transform)\n    if (isZodSchemaV4(schema)) {\n        let outputSchema = schema;\n        if (isZodTransformV4(schema)) {\n            outputSchema = interopZodTransformInputSchema(schema._zod.def.in, recursive);\n        }\n        if (recursive) {\n            // Handle nested object schemas\n            if (isZodObjectV4(outputSchema)) {\n                const outputShape = outputSchema._zod.def.shape;\n                for (const [key, keySchema] of Object.entries(outputSchema._zod.def.shape)) {\n                    outputShape[key] = interopZodTransformInputSchema(keySchema, recursive);\n                }\n                outputSchema = clone(outputSchema, {\n                    ...outputSchema._zod.def,\n                    shape: outputShape,\n                });\n            }\n            // Handle nested array schemas\n            else if (isZodArrayV4(outputSchema)) {\n                const elementSchema = interopZodTransformInputSchema(outputSchema._zod.def.element, recursive);\n                outputSchema = clone(outputSchema, {\n                    ...outputSchema._zod.def,\n                    element: elementSchema,\n                });\n            }\n        }\n        const meta = globalRegistry.get(schema);\n        if (meta)\n            globalRegistry.add(outputSchema, meta);\n        return outputSchema;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n",
    "import { v4 as uuidv4, validate as isUuid } from \"uuid\";\nimport { isRunnableInterface } from \"./utils.js\";\nimport { drawMermaid, drawMermaidPng } from \"./graph_mermaid.js\";\nimport { toJsonSchema } from \"../utils/json_schema.js\";\nfunction nodeDataStr(id, data) {\n    if (id !== undefined && !isUuid(id)) {\n        return id;\n    }\n    else if (isRunnableInterface(data)) {\n        try {\n            let dataStr = data.getName();\n            dataStr = dataStr.startsWith(\"Runnable\")\n                ? dataStr.slice(\"Runnable\".length)\n                : dataStr;\n            return dataStr;\n        }\n        catch (error) {\n            return data.getName();\n        }\n    }\n    else {\n        return data.name ?? \"UnknownSchema\";\n    }\n}\nfunction nodeDataJson(node) {\n    // if node.data implements Runnable\n    if (isRunnableInterface(node.data)) {\n        return {\n            type: \"runnable\",\n            data: {\n                id: node.data.lc_id,\n                name: node.data.getName(),\n            },\n        };\n    }\n    else {\n        return {\n            type: \"schema\",\n            data: { ...toJsonSchema(node.data.schema), title: node.data.name },\n        };\n    }\n}\nexport class Graph {\n    constructor(params) {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.nodes = params?.nodes ?? this.nodes;\n        this.edges = params?.edges ?? this.edges;\n    }\n    // Convert the graph to a JSON-serializable format.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        const stableNodeIds = {};\n        Object.values(this.nodes).forEach((node, i) => {\n            stableNodeIds[node.id] = isUuid(node.id) ? i : node.id;\n        });\n        return {\n            nodes: Object.values(this.nodes).map((node) => ({\n                id: stableNodeIds[node.id],\n                ...nodeDataJson(node),\n            })),\n            edges: this.edges.map((edge) => {\n                const item = {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                };\n                if (typeof edge.data !== \"undefined\") {\n                    item.data = edge.data;\n                }\n                if (typeof edge.conditional !== \"undefined\") {\n                    item.conditional = edge.conditional;\n                }\n                return item;\n            }),\n        };\n    }\n    addNode(data, id, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata) {\n        if (id !== undefined && this.nodes[id] !== undefined) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        const nodeId = id ?? uuidv4();\n        const node = {\n            id: nodeId,\n            data,\n            name: nodeDataStr(id, data),\n            metadata,\n        };\n        this.nodes[nodeId] = node;\n        return node;\n    }\n    removeNode(node) {\n        // Remove the node from the nodes map\n        delete this.nodes[node.id];\n        // Filter out edges connected to the node\n        this.edges = this.edges.filter((edge) => edge.source !== node.id && edge.target !== node.id);\n    }\n    addEdge(source, target, data, conditional) {\n        if (this.nodes[source.id] === undefined) {\n            throw new Error(`Source node ${source.id} not in graph`);\n        }\n        if (this.nodes[target.id] === undefined) {\n            throw new Error(`Target node ${target.id} not in graph`);\n        }\n        const edge = {\n            source: source.id,\n            target: target.id,\n            data,\n            conditional,\n        };\n        this.edges.push(edge);\n        return edge;\n    }\n    firstNode() {\n        return _firstNode(this);\n    }\n    lastNode() {\n        return _lastNode(this);\n    }\n    /**\n     * Add all nodes and edges from another graph.\n     * Note this doesn't check for duplicates, nor does it connect the graphs.\n     */\n    extend(graph, prefix = \"\") {\n        let finalPrefix = prefix;\n        const nodeIds = Object.values(graph.nodes).map((node) => node.id);\n        if (nodeIds.every(isUuid)) {\n            finalPrefix = \"\";\n        }\n        const prefixed = (id) => {\n            return finalPrefix ? `${finalPrefix}:${id}` : id;\n        };\n        Object.entries(graph.nodes).forEach(([key, value]) => {\n            this.nodes[prefixed(key)] = { ...value, id: prefixed(key) };\n        });\n        const newEdges = graph.edges.map((edge) => {\n            return {\n                ...edge,\n                source: prefixed(edge.source),\n                target: prefixed(edge.target),\n            };\n        });\n        // Add all edges from the other graph\n        this.edges = [...this.edges, ...newEdges];\n        const first = graph.firstNode();\n        const last = graph.lastNode();\n        return [\n            first ? { id: prefixed(first.id), data: first.data } : undefined,\n            last ? { id: prefixed(last.id), data: last.data } : undefined,\n        ];\n    }\n    trimFirstNode() {\n        const firstNode = this.firstNode();\n        if (firstNode && _firstNode(this, [firstNode.id])) {\n            this.removeNode(firstNode);\n        }\n    }\n    trimLastNode() {\n        const lastNode = this.lastNode();\n        if (lastNode && _lastNode(this, [lastNode.id])) {\n            this.removeNode(lastNode);\n        }\n    }\n    /**\n     * Return a new graph with all nodes re-identified,\n     * using their unique, readable names where possible.\n     */\n    reid() {\n        const nodeLabels = Object.fromEntries(Object.values(this.nodes).map((node) => [node.id, node.name]));\n        const nodeLabelCounts = new Map();\n        Object.values(nodeLabels).forEach((label) => {\n            nodeLabelCounts.set(label, (nodeLabelCounts.get(label) || 0) + 1);\n        });\n        const getNodeId = (nodeId) => {\n            const label = nodeLabels[nodeId];\n            if (isUuid(nodeId) && nodeLabelCounts.get(label) === 1) {\n                return label;\n            }\n            else {\n                return nodeId;\n            }\n        };\n        return new Graph({\n            nodes: Object.fromEntries(Object.entries(this.nodes).map(([id, node]) => [\n                getNodeId(id),\n                { ...node, id: getNodeId(id) },\n            ])),\n            edges: this.edges.map((edge) => ({\n                ...edge,\n                source: getNodeId(edge.source),\n                target: getNodeId(edge.target),\n            })),\n        });\n    }\n    drawMermaid(params) {\n        const { withStyles, curveStyle, nodeColors = {\n            default: \"fill:#f2f0ff,line-height:1.2\",\n            first: \"fill-opacity:0\",\n            last: \"fill:#bfb6fc\",\n        }, wrapLabelNWords, } = params ?? {};\n        const graph = this.reid();\n        const firstNode = graph.firstNode();\n        const lastNode = graph.lastNode();\n        return drawMermaid(graph.nodes, graph.edges, {\n            firstNode: firstNode?.id,\n            lastNode: lastNode?.id,\n            withStyles,\n            curveStyle,\n            nodeColors,\n            wrapLabelNWords,\n        });\n    }\n    async drawMermaidPng(params) {\n        const mermaidSyntax = this.drawMermaid(params);\n        return drawMermaidPng(mermaidSyntax, {\n            backgroundColor: params?.backgroundColor,\n        });\n    }\n}\n/**\n * Find the single node that is not a target of any edge.\n * Exclude nodes/sources with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the origin.\n */\nfunction _firstNode(graph, exclude = []) {\n    const targets = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.source))\n        .map((edge) => edge.target));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !targets.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n/**\n * Find the single node that is not a source of any edge.\n * Exclude nodes/targets with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the destination.\n */\nfunction _lastNode(graph, exclude = []) {\n    const sources = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.target))\n        .map((edge) => edge.source));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !sources.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n",
    "import { IterableReadableStream } from \"../utils/stream.js\";\nexport function convertToHttpEventStream(stream) {\n    const encoder = new TextEncoder();\n    const finalStream = new ReadableStream({\n        async start(controller) {\n            for await (const chunk of stream) {\n                controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n            }\n            controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n            controller.close();\n        },\n    });\n    return IterableReadableStream.fromReadableStream(finalStream);\n}\n",
    "import { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { pickRunnableConfigKeys } from \"./config.js\";\nexport function isIterableIterator(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.iterator] === \"function\" &&\n        // avoid detecting array/set as iterator\n        typeof thing.next === \"function\");\n}\nexport const isIterator = (x) => x != null &&\n    typeof x === \"object\" &&\n    \"next\" in x &&\n    typeof x.next === \"function\";\nexport function isAsyncIterable(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.asyncIterator] ===\n            \"function\");\n}\nexport function* consumeIteratorInContext(context, iter) {\n    while (true) {\n        const { value, done } = AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iter.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\nexport async function* consumeAsyncIterableInContext(context, iter) {\n    const iterator = iter[Symbol.asyncIterator]();\n    while (true) {\n        const { value, done } = await AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iterator.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\n",
    "import { Runnable } from \"../runnables/base.js\";\n/**\n * Abstract base class for document transformation systems.\n *\n * A document transformation system takes an array of Documents and returns an\n * array of transformed Documents. These arrays do not necessarily have to have\n * the same length.\n *\n * One example of this is a text splitter that splits a large document into\n * many smaller documents.\n */\nexport class BaseDocumentTransformer extends Runnable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"documents\", \"transformers\"]\n        });\n    }\n    /**\n     * Method to invoke the document transformation. This method calls the\n     * transformDocuments method with the provided input.\n     * @param input The input documents to be transformed.\n     * @param _options Optional configuration object to customize the behavior of callbacks.\n     * @returns A Promise that resolves to the transformed documents.\n     */\n    invoke(input, _options) {\n        return this.transformDocuments(input);\n    }\n}\n/**\n * Class for document transformers that return exactly one transformed document\n * for each input document.\n */\nexport class MappingDocumentTransformer extends BaseDocumentTransformer {\n    async transformDocuments(documents) {\n        const newDocuments = [];\n        for (const document of documents) {\n            const transformedDocument = await this._transformDocument(document);\n            newDocuments.push(transformedDocument);\n        }\n        return newDocuments;\n    }\n}\n",
    "import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\": {\n      return \"cl100k_base\";\n    }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-2024-11-20\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"gpt-4o-search-preview\":\n    case \"gpt-4o-search-preview-2025-03-11\":\n    case \"gpt-4o-mini-search-preview\":\n    case \"gpt-4o-mini-search-preview-2025-03-11\":\n    case \"gpt-4o-audio-preview\":\n    case \"gpt-4o-audio-preview-2024-12-17\":\n    case \"gpt-4o-audio-preview-2024-10-01\":\n    case \"gpt-4o-mini-audio-preview\":\n    case \"gpt-4o-mini-audio-preview-2024-12-17\":\n    case \"o1\":\n    case \"o1-2024-12-17\":\n    case \"o1-mini\":\n    case \"o1-mini-2024-09-12\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-pro\":\n    case \"o1-pro-2025-03-19\":\n    case \"o3\":\n    case \"o3-2025-04-16\":\n    case \"o3-mini\":\n    case \"o3-mini-2025-01-31\":\n    case \"o4-mini\":\n    case \"o4-mini-2025-04-16\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\":\n    case \"gpt-4o-realtime-preview-2024-12-17\":\n    case \"gpt-4o-mini-realtime-preview\":\n    case \"gpt-4o-mini-realtime-preview-2024-12-17\":\n    case \"gpt-4.1\":\n    case \"gpt-4.1-2025-04-14\":\n    case \"gpt-4.1-mini\":\n    case \"gpt-4.1-mini-2025-04-14\":\n    case \"gpt-4.1-nano\":\n    case \"gpt-4.1-nano-2025-04-14\":\n    case \"gpt-4.5-preview\":\n    case \"gpt-4.5-preview-2025-02-27\":\n    case \"gpt-5\":\n    case \"gpt-5-2025-08-07\":\n    case \"gpt-5-nano\":\n    case \"gpt-5-nano-2025-08-07\":\n    case \"gpt-5-mini\":\n    case \"gpt-5-mini-2025-08-07\":\n    case \"gpt-5-chat-latest\": {\n      return \"o200k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n",
    "import { Document, BaseDocumentTransformer } from \"@langchain/core/documents\";\nimport { getEncoding } from \"@langchain/core/utils/tiktoken\";\nexport class TextSplitter extends BaseDocumentTransformer {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"document_transformers\", \"text_splitters\"]\n        });\n        Object.defineProperty(this, \"chunkSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1000\n        });\n        Object.defineProperty(this, \"chunkOverlap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 200\n        });\n        Object.defineProperty(this, \"keepSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lengthFunction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chunkSize = fields?.chunkSize ?? this.chunkSize;\n        this.chunkOverlap = fields?.chunkOverlap ?? this.chunkOverlap;\n        this.keepSeparator = fields?.keepSeparator ?? this.keepSeparator;\n        this.lengthFunction =\n            fields?.lengthFunction ?? ((text) => text.length);\n        if (this.chunkOverlap >= this.chunkSize) {\n            throw new Error(\"Cannot have chunkOverlap >= chunkSize\");\n        }\n    }\n    async transformDocuments(documents, chunkHeaderOptions = {}) {\n        return this.splitDocuments(documents, chunkHeaderOptions);\n    }\n    splitOnSeparator(text, separator) {\n        let splits;\n        if (separator) {\n            if (this.keepSeparator) {\n                const regexEscapedSeparator = separator.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n                splits = text.split(new RegExp(`(?=${regexEscapedSeparator})`));\n            }\n            else {\n                splits = text.split(separator);\n            }\n        }\n        else {\n            splits = text.split(\"\");\n        }\n        return splits.filter((s) => s !== \"\");\n    }\n    async createDocuments(texts, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadatas = [], chunkHeaderOptions = {}) {\n        // if no metadata is provided, we create an empty one for each text\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const _metadatas = metadatas.length > 0\n            ? metadatas\n            : [...Array(texts.length)].map(() => ({}));\n        const { chunkHeader = \"\", chunkOverlapHeader = \"(cont'd) \", appendChunkOverlapHeader = false, } = chunkHeaderOptions;\n        const documents = new Array();\n        for (let i = 0; i < texts.length; i += 1) {\n            const text = texts[i];\n            let lineCounterIndex = 1;\n            let prevChunk = null;\n            let indexPrevChunk = -1;\n            for (const chunk of await this.splitText(text)) {\n                let pageContent = chunkHeader;\n                // we need to count the \\n that are in the text before getting removed by the splitting\n                const indexChunk = text.indexOf(chunk, indexPrevChunk + 1);\n                if (prevChunk === null) {\n                    const newLinesBeforeFirstChunk = this.numberOfNewLines(text, 0, indexChunk);\n                    lineCounterIndex += newLinesBeforeFirstChunk;\n                }\n                else {\n                    const indexEndPrevChunk = indexPrevChunk + (await this.lengthFunction(prevChunk));\n                    if (indexEndPrevChunk < indexChunk) {\n                        const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexEndPrevChunk, indexChunk);\n                        lineCounterIndex += numberOfIntermediateNewLines;\n                    }\n                    else if (indexEndPrevChunk > indexChunk) {\n                        const numberOfIntermediateNewLines = this.numberOfNewLines(text, indexChunk, indexEndPrevChunk);\n                        lineCounterIndex -= numberOfIntermediateNewLines;\n                    }\n                    if (appendChunkOverlapHeader) {\n                        pageContent += chunkOverlapHeader;\n                    }\n                }\n                const newLinesCount = this.numberOfNewLines(chunk);\n                const loc = _metadatas[i].loc && typeof _metadatas[i].loc === \"object\"\n                    ? { ..._metadatas[i].loc }\n                    : {};\n                loc.lines = {\n                    from: lineCounterIndex,\n                    to: lineCounterIndex + newLinesCount,\n                };\n                const metadataWithLinesNumber = {\n                    ..._metadatas[i],\n                    loc,\n                };\n                pageContent += chunk;\n                documents.push(new Document({\n                    pageContent,\n                    metadata: metadataWithLinesNumber,\n                }));\n                lineCounterIndex += newLinesCount;\n                prevChunk = chunk;\n                indexPrevChunk = indexChunk;\n            }\n        }\n        return documents;\n    }\n    numberOfNewLines(text, start, end) {\n        const textSection = text.slice(start, end);\n        return (textSection.match(/\\n/g) || []).length;\n    }\n    async splitDocuments(documents, chunkHeaderOptions = {}) {\n        const selectedDocuments = documents.filter((doc) => doc.pageContent !== undefined);\n        const texts = selectedDocuments.map((doc) => doc.pageContent);\n        const metadatas = selectedDocuments.map((doc) => doc.metadata);\n        return this.createDocuments(texts, metadatas, chunkHeaderOptions);\n    }\n    joinDocs(docs, separator) {\n        const text = docs.join(separator).trim();\n        return text === \"\" ? null : text;\n    }\n    async mergeSplits(splits, separator) {\n        const docs = [];\n        const currentDoc = [];\n        let total = 0;\n        for (const d of splits) {\n            const _len = await this.lengthFunction(d);\n            if (total + _len + currentDoc.length * separator.length >\n                this.chunkSize) {\n                if (total > this.chunkSize) {\n                    console.warn(`Created a chunk of size ${total}, +\nwhich is longer than the specified ${this.chunkSize}`);\n                }\n                if (currentDoc.length > 0) {\n                    const doc = this.joinDocs(currentDoc, separator);\n                    if (doc !== null) {\n                        docs.push(doc);\n                    }\n                    // Keep on popping if:\n                    // - we have a larger chunk than in the chunk overlap\n                    // - or if we still have any chunks and the length is long\n                    while (total > this.chunkOverlap ||\n                        (total + _len + currentDoc.length * separator.length >\n                            this.chunkSize &&\n                            total > 0)) {\n                        total -= await this.lengthFunction(currentDoc[0]);\n                        currentDoc.shift();\n                    }\n                }\n            }\n            currentDoc.push(d);\n            total += _len;\n        }\n        const doc = this.joinDocs(currentDoc, separator);\n        if (doc !== null) {\n            docs.push(doc);\n        }\n        return docs;\n    }\n}\nexport class CharacterTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"CharacterTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\n\\n\"\n        });\n        this.separator = fields?.separator ?? this.separator;\n    }\n    async splitText(text) {\n        // First we naively split the large input into a bunch of smaller ones.\n        const splits = this.splitOnSeparator(text, this.separator);\n        return this.mergeSplits(splits, this.keepSeparator ? \"\" : this.separator);\n    }\n}\nexport const SupportedTextSplitterLanguages = [\n    \"cpp\",\n    \"go\",\n    \"java\",\n    \"js\",\n    \"php\",\n    \"proto\",\n    \"python\",\n    \"rst\",\n    \"ruby\",\n    \"rust\",\n    \"scala\",\n    \"swift\",\n    \"markdown\",\n    \"latex\",\n    \"html\",\n    \"sol\",\n];\nexport class RecursiveCharacterTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"RecursiveCharacterTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separators\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"\\n\\n\", \"\\n\", \" \", \"\"]\n        });\n        this.separators = fields?.separators ?? this.separators;\n        this.keepSeparator = fields?.keepSeparator ?? true;\n    }\n    async _splitText(text, separators) {\n        const finalChunks = [];\n        // Get appropriate separator to use\n        let separator = separators[separators.length - 1];\n        let newSeparators;\n        for (let i = 0; i < separators.length; i += 1) {\n            const s = separators[i];\n            if (s === \"\") {\n                separator = s;\n                break;\n            }\n            if (text.includes(s)) {\n                separator = s;\n                newSeparators = separators.slice(i + 1);\n                break;\n            }\n        }\n        // Now that we have the separator, split the text\n        const splits = this.splitOnSeparator(text, separator);\n        // Now go merging things, recursively splitting longer texts.\n        let goodSplits = [];\n        const _separator = this.keepSeparator ? \"\" : separator;\n        for (const s of splits) {\n            if ((await this.lengthFunction(s)) < this.chunkSize) {\n                goodSplits.push(s);\n            }\n            else {\n                if (goodSplits.length) {\n                    const mergedText = await this.mergeSplits(goodSplits, _separator);\n                    finalChunks.push(...mergedText);\n                    goodSplits = [];\n                }\n                if (!newSeparators) {\n                    finalChunks.push(s);\n                }\n                else {\n                    const otherInfo = await this._splitText(s, newSeparators);\n                    finalChunks.push(...otherInfo);\n                }\n            }\n        }\n        if (goodSplits.length) {\n            const mergedText = await this.mergeSplits(goodSplits, _separator);\n            finalChunks.push(...mergedText);\n        }\n        return finalChunks;\n    }\n    async splitText(text) {\n        return this._splitText(text, this.separators);\n    }\n    static fromLanguage(language, options) {\n        return new RecursiveCharacterTextSplitter({\n            ...options,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(language),\n        });\n    }\n    static getSeparatorsForLanguage(language) {\n        if (language === \"cpp\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along function definitions\n                \"\\nvoid \",\n                \"\\nint \",\n                \"\\nfloat \",\n                \"\\ndouble \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"go\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                \"\\nvar \",\n                \"\\nconst \",\n                \"\\ntype \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"java\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along method definitions\n                \"\\npublic \",\n                \"\\nprotected \",\n                \"\\nprivate \",\n                \"\\nstatic \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"js\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                \"\\nconst \",\n                \"\\nlet \",\n                \"\\nvar \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                \"\\ndefault \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"php\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nforeach \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"proto\") {\n            return [\n                // Split along message definitions\n                \"\\nmessage \",\n                // Split along service definitions\n                \"\\nservice \",\n                // Split along enum definitions\n                \"\\nenum \",\n                // Split along option definitions\n                \"\\noption \",\n                // Split along import statements\n                \"\\nimport \",\n                // Split along syntax declarations\n                \"\\nsyntax \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"python\") {\n            return [\n                // First, try to split along class definitions\n                \"\\nclass \",\n                \"\\ndef \",\n                \"\\n\\tdef \",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rst\") {\n            return [\n                // Split along section titles\n                \"\\n===\\n\",\n                \"\\n---\\n\",\n                \"\\n***\\n\",\n                // Split along directive markers\n                \"\\n.. \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"ruby\") {\n            return [\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nunless \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\ndo \",\n                \"\\nbegin \",\n                \"\\nrescue \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rust\") {\n            return [\n                // Split along function definitions\n                \"\\nfn \",\n                \"\\nconst \",\n                \"\\nlet \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\nloop \",\n                \"\\nmatch \",\n                \"\\nconst \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"scala\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nobject \",\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nval \",\n                \"\\nvar \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nmatch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"swift\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"markdown\") {\n            return [\n                // First, try to split along Markdown headings (starting with level 2)\n                \"\\n## \",\n                \"\\n### \",\n                \"\\n#### \",\n                \"\\n##### \",\n                \"\\n###### \",\n                // Note the alternative syntax for headings (below) is not handled here\n                // Heading level 2\n                // ---------------\n                // End of code block\n                \"```\\n\\n\",\n                // Horizontal lines\n                \"\\n\\n***\\n\\n\",\n                \"\\n\\n---\\n\\n\",\n                \"\\n\\n___\\n\\n\",\n                // Note that this splitter doesn't handle horizontal lines defined\n                // by *three or more* of ***, ---, or ___, but this is not handled\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"latex\") {\n            return [\n                // First, try to split along Latex sections\n                \"\\n\\\\chapter{\",\n                \"\\n\\\\section{\",\n                \"\\n\\\\subsection{\",\n                \"\\n\\\\subsubsection{\",\n                // Now split by environments\n                \"\\n\\\\begin{enumerate}\",\n                \"\\n\\\\begin{itemize}\",\n                \"\\n\\\\begin{description}\",\n                \"\\n\\\\begin{list}\",\n                \"\\n\\\\begin{quote}\",\n                \"\\n\\\\begin{quotation}\",\n                \"\\n\\\\begin{verse}\",\n                \"\\n\\\\begin{verbatim}\",\n                // Now split by math environments\n                \"\\n\\\\begin{align}\",\n                \"$$\",\n                \"$\",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"html\") {\n            return [\n                // First, try to split along HTML tags\n                \"<body>\",\n                \"<div>\",\n                \"<p>\",\n                \"<br>\",\n                \"<li>\",\n                \"<h1>\",\n                \"<h2>\",\n                \"<h3>\",\n                \"<h4>\",\n                \"<h5>\",\n                \"<h6>\",\n                \"<span>\",\n                \"<table>\",\n                \"<tr>\",\n                \"<td>\",\n                \"<th>\",\n                \"<ul>\",\n                \"<ol>\",\n                \"<header>\",\n                \"<footer>\",\n                \"<nav>\",\n                // Head\n                \"<head>\",\n                \"<style>\",\n                \"<script>\",\n                \"<meta>\",\n                \"<title>\",\n                // Normal type of lines\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"sol\") {\n            return [\n                // Split along compiler informations definitions\n                \"\\npragma \",\n                \"\\nusing \",\n                // Split along contract definitions\n                \"\\ncontract \",\n                \"\\ninterface \",\n                \"\\nlibrary \",\n                // Split along method definitions\n                \"\\nconstructor \",\n                \"\\ntype \",\n                \"\\nfunction \",\n                \"\\nevent \",\n                \"\\nmodifier \",\n                \"\\nerror \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo while \",\n                \"\\nassembly \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else {\n            throw new Error(`Language ${language} is not supported.`);\n        }\n    }\n}\n/**\n * Implementation of splitter which looks at tokens.\n */\nexport class TokenTextSplitter extends TextSplitter {\n    static lc_name() {\n        return \"TokenTextSplitter\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"encodingName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"allowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"disallowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tokenizer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.encodingName = fields?.encodingName ?? \"gpt2\";\n        this.allowedSpecial = fields?.allowedSpecial ?? [];\n        this.disallowedSpecial = fields?.disallowedSpecial ?? \"all\";\n    }\n    async splitText(text) {\n        if (!this.tokenizer) {\n            this.tokenizer = await getEncoding(this.encodingName);\n        }\n        const splits = [];\n        const input_ids = this.tokenizer.encode(text, this.allowedSpecial, this.disallowedSpecial);\n        let start_idx = 0;\n        while (start_idx < input_ids.length) {\n            if (start_idx > 0) {\n                start_idx -= this.chunkOverlap;\n            }\n            const end_idx = Math.min(start_idx + this.chunkSize, input_ids.length);\n            const chunk_ids = input_ids.slice(start_idx, end_idx);\n            splits.push(this.tokenizer.decode(chunk_ids));\n            start_idx = end_idx;\n        }\n        return splits;\n    }\n}\nexport class MarkdownTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"markdown\"),\n        });\n    }\n}\nexport class LatexTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"latex\"),\n        });\n    }\n}\n",
    "import { RecursiveCharacterTextSplitter } from 'langchain/text_splitter';\nimport Handlebars from 'handlebars';\nimport { names, uniqueNamesGenerator } from 'unique-names-generator';\nimport { z } from 'zod';\n\nimport logger from './logger';\nimport { getEnv } from './utils/environment';\nimport type { Content, Entity, IAgentRuntime, Memory, State, TemplateType } from './types';\nimport { ModelType, UUID, ContentType } from './types';\n\n// Text Utils\n\n/**\n * Convert all double-brace bindings in a Handlebars template\n * to triple-brace bindings, so the output is NOT HTML-escaped.\n *\n * - Ignores block/partial/comment tags that start with # / ! >.\n * - Ignores the else keyword.\n * - Ignores bindings that are already triple-braced.\n *\n * @param  tpl  Handlebars template source\n * @return      Transformed template\n */\nfunction upgradeDoubleToTriple(tpl: string) {\n  return tpl.replace(\n    // ────────╮ negative-LB: not already \"{{{\"\n    //          │   {{     ─ opening braces\n    //          │    ╰──── negative-LA: not {, #, /, !, >\n    //          ▼\n    /(?<!{){{(?![{#\\/!>])([\\s\\S]*?)}}/g,\n    (_match: string, inner: string) => {\n      // keep the block keyword {{else}} unchanged\n      if (inner.trim() === 'else') return `{{${inner}}}`;\n      return `{{{${inner}}}}`;\n    }\n  );\n}\n\n/**\n * Composes a context string by replacing placeholders in a template with corresponding values from the state.\n *\n * This function takes a template string with placeholders in the format `{{placeholder}}` and a state object.\n * It replaces each placeholder with the value from the state object that matches the placeholder's name.\n * If a matching key is not found in the state object for a given placeholder, the placeholder is replaced with an empty string.\n *\n * @param {Object} params - The parameters for composing the context.\n * @param {State} params.state - The state object containing values to replace the placeholders in the template.\n * @param {TemplateType} params.template - The template string or function containing placeholders to be replaced with state values.\n * @returns {string} The composed context string with placeholders replaced by corresponding state values.\n *\n * @example\n * // Given a state object and a template\n * const state = { userName: \"Alice\", userAge: 30 };\n * const template = \"Hello, {{userName}}! You are {{userAge}} years old\";\n *\n * // Composing the context with simple string replacement will result in:\n * // \"Hello, Alice! You are 30 years old.\"\n * const contextSimple = composePromptFromState({ state, template });\n *\n * // Using composePromptFromState with a template function for dynamic template\n * const template = ({ state }) => {\n * const tone = Math.random() > 0.5 ? \"kind\" : \"rude\";\n *   return `Hello, {{userName}}! You are {{userAge}} years old. Be ${tone}`;\n * };\n * const contextSimple = composePromptFromState({ state, template });\n */\n\n/**\n * Function to compose a prompt using a provided template and state.\n * It compiles the template (upgrading double braces to triple braces for non-HTML escaping)\n * and then populates it with values from the state. Additionally, it processes the\n * resulting string with `composeRandomUser` to replace placeholders like `{{nameX}}`.\n *\n * @param {Object} options - Object containing state and template information.\n * @param {State} options.state - The state object containing values to fill the template.\n * @param {TemplateType} options.template - The template string or function to be used for composing the prompt.\n * @returns {string} The composed prompt output, with state values and random user names populated.\n */\nexport const composePrompt = ({\n  state,\n  template,\n}: {\n  state: { [key: string]: string };\n  template: TemplateType;\n}) => {\n  const templateStr = typeof template === 'function' ? template({ state }) : template;\n  const templateFunction = Handlebars.compile(upgradeDoubleToTriple(templateStr));\n  const output = composeRandomUser(templateFunction(state), 10);\n  return output;\n};\n\n/**\n * Function to compose a prompt using a provided template and state.\n *\n * @param {Object} options - Object containing state and template information.\n * @param {State} options.state - The state object containing values to fill the template.\n * @param {TemplateType} options.template - The template to be used for composing the prompt.\n * @returns {string} The composed prompt output.\n */\nexport const composePromptFromState = ({\n  state,\n  template,\n}: {\n  state: State;\n  template: TemplateType;\n}) => {\n  const templateStr = typeof template === 'function' ? template({ state }) : template;\n  const templateFunction = Handlebars.compile(upgradeDoubleToTriple(templateStr));\n\n  // get any keys that are in state but are not named text, values or data\n  const stateKeys = Object.keys(state);\n  const filteredKeys = stateKeys.filter((key) => !['text', 'values', 'data'].includes(key));\n\n  // this flattens out key/values in text/values/data\n  const filteredState = filteredKeys.reduce((acc: Record<string, any>, key) => {\n    acc[key] = state[key];\n    return acc;\n  }, {});\n\n  // and then we flat state.values again\n  const output = composeRandomUser(templateFunction({ ...filteredState, ...state.values }), 10);\n  return output;\n};\n\n/**\n * Adds a header to a body of text.\n *\n * This function takes a header string and a body string and returns a new string with the header prepended to the body.\n * If the body string is empty, the header is returned as is.\n *\n * @param {string} header - The header to add to the body.\n * @param {string} body - The body to which to add the header.\n * @returns {string} The body with the header prepended.\n *\n * @example\n * // Given a header and a body\n * const header = \"Header\";\n * const body = \"Body\";\n *\n * // Adding the header to the body will result in:\n * // \"Header\\nBody\"\n * const text = addHeader(header, body);\n */\nexport const addHeader = (header: string, body: string) => {\n  return body.length > 0 ? `${header ? `${header}\\n` : header}${body}\\n` : '';\n};\n\n/**\n * Generates a string with random user names populated in a template.\n *\n * This function generates random user names and populates placeholders\n * in the provided template with these names. Placeholders in the template should follow the format `{{userX}}`\n * where `X` is the position of the user (e.g., `{{name1}}`, `{{name2}}`).\n *\n * @param {string} template - The template string containing placeholders for random user names.\n * @param {number} length - The number of random user names to generate.\n * @returns {string} The template string with placeholders replaced by random user names.\n *\n * @example\n * // Given a template and a length\n * const template = \"Hello, {{name1}}! Meet {{name2}} and {{name3}}.\";\n * const length = 3;\n *\n * // Composing the random user string will result in:\n * // \"Hello, John! Meet Alice and Bob.\"\n * const result = composeRandomUser(template, length);\n */\nconst composeRandomUser = (template: string, length: number) => {\n  const exampleNames = Array.from({ length }, () =>\n    uniqueNamesGenerator({ dictionaries: [names] })\n  );\n  let result = template;\n  for (let i = 0; i < exampleNames.length; i++) {\n    result = result.replaceAll(`{{name${i + 1}}}`, exampleNames[i]);\n  }\n\n  return result;\n};\n\nexport const formatPosts = ({\n  messages,\n  entities,\n  conversationHeader = true,\n}: {\n  messages: Memory[];\n  entities: Entity[];\n  conversationHeader?: boolean;\n}) => {\n  // Group messages by roomId\n  const groupedMessages: { [roomId: string]: Memory[] } = {};\n  messages.forEach((message) => {\n    if (message.roomId) {\n      if (!groupedMessages[message.roomId]) {\n        groupedMessages[message.roomId] = [];\n      }\n      groupedMessages[message.roomId].push(message);\n    }\n  });\n\n  // Sort messages within each roomId by createdAt (oldest to newest)\n  Object.values(groupedMessages).forEach((roomMessages) => {\n    roomMessages.sort((a, b) => (a.createdAt || 0) - (b.createdAt || 0));\n  });\n\n  // Sort rooms by the newest message's createdAt\n  const sortedRooms = Object.entries(groupedMessages).sort(\n    ([, messagesA], [, messagesB]) =>\n      (messagesB[messagesB.length - 1]?.createdAt || 0) -\n      (messagesA[messagesA.length - 1]?.createdAt || 0)\n  );\n\n  const formattedPosts = sortedRooms.map(([roomId, roomMessages]) => {\n    const messageStrings = roomMessages\n      .filter((message: Memory) => message.entityId)\n      .map((message: Memory) => {\n        const entity = entities.find((entity: Entity) => entity.id === message.entityId);\n        if (!entity) {\n          logger.warn({ entityId: message.entityId }, 'core::prompts:formatPosts - no entity for');\n        }\n        // TODO: These are okay but not great\n        const userName = entity?.names[0] || 'Unknown User';\n        const displayName = entity?.names[0] || 'unknown';\n\n        return `Name: ${userName} (@${displayName} EntityID:${message.entityId})\nMessageID: ${message.id}${message.content.inReplyTo ? `\\nIn reply to: ${message.content.inReplyTo}` : ''}\nSource: ${message.content.source}\nDate: ${formatTimestamp(message.createdAt || 0)}\nText:\n${message.content.text}`;\n      });\n\n    const header = conversationHeader ? `Conversation: ${roomId.slice(-5)}\\n` : '';\n    return `${header}${messageStrings.join('\\n\\n')}`;\n  });\n\n  return formattedPosts.join('\\n\\n');\n};\n\n/**\n * Format messages into a string\n * @param {Object} params - The formatting parameters\n * @param {Memory[]} params.messages - List of messages to format\n * @param {Entity[]} params.entities - List of entities for name resolution\n * @returns {string} Formatted message string with timestamps and user information\n */\nexport const formatMessages = ({\n  messages,\n  entities,\n}: {\n  messages: Memory[];\n  entities: Entity[];\n}) => {\n  const messageStrings = messages\n    .reverse()\n    .filter((message: Memory) => message.entityId)\n    .map((message: Memory) => {\n      const messageText = (message.content as Content).text;\n\n      const messageActions = (message.content as Content).actions;\n      const messageThought = (message.content as Content).thought;\n      const formattedName =\n        entities.find((entity: Entity) => entity.id === message.entityId)?.names[0] ||\n        'Unknown User';\n\n      const attachments = (message.content as Content).attachments;\n\n      const attachmentString =\n        attachments && attachments.length > 0\n          ? ` (Attachments: ${attachments\n              .map((media) => {\n                const lines = [`[${media.id} - ${media.title} (${media.url})]`];\n                if (media.text) lines.push(`Text: ${media.text}`);\n                if (media.description) lines.push(`Description: ${media.description}`);\n                return lines.join('\\n');\n              })\n              .join(\n                // Use comma separator only if all attachments are single-line (no text/description)\n                attachments.every((media) => !media.text && !media.description) ? ', ' : '\\n'\n              )})`\n          : null;\n\n      const messageTime = new Date(message.createdAt || 0);\n      const hours = messageTime.getHours().toString().padStart(2, '0');\n      const minutes = messageTime.getMinutes().toString().padStart(2, '0');\n      const timeString = `${hours}:${minutes}`;\n\n      const timestamp = formatTimestamp(message.createdAt || 0);\n\n      // const shortId = message.entityId.slice(-5);\n\n      const thoughtString = messageThought\n        ? `(${formattedName}'s internal thought: ${messageThought})`\n        : null;\n\n      const timestampString = `${timeString} (${timestamp}) [${message.entityId}]`;\n      const textString = messageText ? `${timestampString} ${formattedName}: ${messageText}` : null;\n      const actionString =\n        messageActions && messageActions.length > 0\n          ? `${\n              textString ? '' : timestampString\n            } (${formattedName}'s actions: ${messageActions.join(', ')})`\n          : null;\n\n      // for each thought, action, text or attachment, add a new line, with text first, then thought, then action, then attachment\n      const messageString = [textString, thoughtString, actionString, attachmentString]\n        .filter(Boolean)\n        .join('\\n');\n\n      return messageString;\n    })\n    .join('\\n');\n  return messageStrings;\n};\n\nexport const formatTimestamp = (messageDate: number) => {\n  const now = new Date();\n  const diff = now.getTime() - messageDate;\n\n  const absDiff = Math.abs(diff);\n  const seconds = Math.floor(absDiff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  if (absDiff < 60000) {\n    return 'just now';\n  }\n  if (minutes < 60) {\n    return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\n  }\n  if (hours < 24) {\n    return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\n  }\n  return `${days} day${days !== 1 ? 's' : ''} ago`;\n};\n\nconst jsonBlockPattern = /```json\\n([\\s\\S]*?)\\n```/;\n\n/**\n * Parses key-value pairs from a simple XML structure within a given text.\n * It looks for an XML block (e.g., <response>...</response>) and extracts\n * text content from direct child elements (e.g., <key>value</key>).\n *\n * Note: This uses regex and is suitable for simple, predictable XML structures.\n * For complex XML, a proper parsing library is recommended.\n *\n * @param text - The input text containing the XML structure.\n * @returns An object with key-value pairs extracted from the XML, or null if parsing fails.\n */\nexport function parseKeyValueXml(text: string): Record<string, any> | null {\n  if (!text) return null;\n\n  // First, try to find a specific <response> block (the one we actually want)\n  // Use a more permissive regex to handle cases where there might be multiple XML blocks\n  let xmlBlockMatch = text.match(/<response>([\\s\\S]*?)<\\/response>/);\n  let xmlContent: string;\n\n  if (xmlBlockMatch) {\n    xmlContent = xmlBlockMatch[1];\n    logger.debug('Found response XML block');\n  } else {\n    // Fall back: perform a linear scan to find the first simple XML element and its matching close tag\n    // This avoids potentially expensive backtracking on crafted inputs\n    const findFirstXmlBlock = (input: string): { tag: string; content: string } | null => {\n      let i = 0;\n      const length = input.length;\n      while (i < length) {\n        const openIdx = input.indexOf('<', i);\n        if (openIdx === -1) break;\n        // Skip closing tags and comments/decls\n        if (\n          input.startsWith('</', openIdx) ||\n          input.startsWith('<!--', openIdx) ||\n          input.startsWith('<?', openIdx)\n        ) {\n          i = openIdx + 1;\n          continue;\n        }\n        // Extract tag name [letters, digits, dash, underscore]\n        let j = openIdx + 1;\n        let tag = '';\n        while (j < length) {\n          const ch = input[j];\n          if (/^[A-Za-z0-9_-]$/.test(ch)) {\n            tag += ch;\n            j++;\n            continue;\n          }\n          break;\n        }\n        if (!tag) {\n          i = openIdx + 1;\n          continue;\n        }\n        // Find end of start tag '>' (skip attributes if present)\n        const startTagEnd = input.indexOf('>', j);\n        if (startTagEnd === -1) break;\n        // Self-closing tag? tolerate whitespace before '/>'\n        const startTagText = input.slice(openIdx, startTagEnd + 1);\n        if (/\\/\\s*>$/.test(startTagText)) {\n          i = startTagEnd + 1;\n          continue;\n        }\n        const closeSeq = `</${tag}>`;\n        // Implement nested tag counting for same-named tags\n        let depth = 1;\n        let searchStart = startTagEnd + 1;\n        while (depth > 0 && searchStart < length) {\n          const nextOpen = input.indexOf(`<${tag}`, searchStart);\n          const nextClose = input.indexOf(closeSeq, searchStart);\n          if (nextClose === -1) {\n            break;\n          }\n          if (nextOpen !== -1 && nextOpen < nextClose) {\n            // Determine if the next open is self-closing; if so, do not increase depth\n            const nestedStartEnd = input.indexOf('>', nextOpen + 1);\n            if (nestedStartEnd === -1) {\n              break;\n            }\n            const nestedStartText = input.slice(nextOpen, nestedStartEnd + 1);\n            if (/\\/\\s*>$/.test(nestedStartText)) {\n              // self-closing; skip without changing depth\n              searchStart = nestedStartEnd + 1;\n            } else {\n              depth++;\n              searchStart = nestedStartEnd + 1;\n            }\n          } else {\n            depth--;\n            searchStart = nextClose + closeSeq.length;\n          }\n        }\n        if (depth === 0) {\n          const closeIdx = searchStart - closeSeq.length;\n          const inner = input.slice(startTagEnd + 1, closeIdx);\n          return { tag, content: inner };\n        }\n        i = startTagEnd + 1;\n      }\n      return null;\n    };\n\n    const fb = findFirstXmlBlock(text);\n    if (!fb) {\n      logger.warn('Could not find XML block in text');\n      logger.debug({ textPreview: text.substring(0, 200) + '...' }, 'Text content');\n      return null;\n    }\n    xmlContent = fb.content;\n    logger.debug(`Found XML block with tag: ${fb.tag}`);\n  }\n\n  const result: Record<string, any> = {};\n\n  // Safer linear scan to extract direct child <key>value</key> elements\n  // Avoids potentially expensive backtracking from broad regexes\n  const extractDirectChildren = (input: string): Array<{ key: string; value: string }> => {\n    const pairs: Array<{ key: string; value: string }> = [];\n    const length = input.length;\n    let i = 0;\n\n    while (i < length) {\n      const openIdx = input.indexOf('<', i);\n      if (openIdx === -1) break;\n\n      // Skip closing tags and comments/decls\n      if (\n        input.startsWith('</', openIdx) ||\n        input.startsWith('<!--', openIdx) ||\n        input.startsWith('<?', openIdx)\n      ) {\n        i = openIdx + 1;\n        continue;\n      }\n\n      // Extract tag name [letters, digits, dash, underscore]\n      let j = openIdx + 1;\n      let tag = '';\n      while (j < length) {\n        const ch = input[j];\n        if (/^[A-Za-z0-9_-]$/.test(ch)) {\n          tag += ch;\n          j++;\n          continue;\n        }\n        break;\n      }\n      if (!tag) {\n        i = openIdx + 1;\n        continue;\n      }\n\n      // Find end of start tag '>' (skip attributes if present)\n      const startTagEnd = input.indexOf('>', j);\n      if (startTagEnd === -1) break;\n\n      // Self-closing tag? tolerate whitespace before '/>'\n      const startTagText = input.slice(openIdx, startTagEnd + 1);\n      if (/\\/\\s*>$/.test(startTagText)) {\n        i = startTagEnd + 1;\n        continue;\n      }\n\n      // Find the matching close tag, handling nested tags with the same name\n      const closeSeq = `</${tag}>`;\n      let depth = 1;\n      let searchStart = startTagEnd + 1;\n      while (depth > 0 && searchStart < length) {\n        const nextOpen = input.indexOf(`<${tag}`, searchStart);\n        const nextClose = input.indexOf(closeSeq, searchStart);\n        if (nextClose === -1) {\n          break;\n        }\n        if (nextOpen !== -1 && nextOpen < nextClose) {\n          const nestedStartEnd = input.indexOf('>', nextOpen + 1);\n          if (nestedStartEnd === -1) {\n            break;\n          }\n          const nestedStartText = input.slice(nextOpen, nestedStartEnd + 1);\n          if (!/\\/\\s*>$/.test(nestedStartText)) {\n            depth++;\n          }\n          searchStart = nestedStartEnd + 1;\n        } else {\n          depth--;\n          searchStart = nextClose + closeSeq.length;\n        }\n      }\n      if (depth !== 0) {\n        // Unbalanced tag, advance to avoid infinite loops\n        i = startTagEnd + 1;\n        continue;\n      }\n\n      const closeIdx = searchStart - closeSeq.length;\n      const innerRaw = input.slice(startTagEnd + 1, closeIdx);\n\n      // Basic unescaping for common XML entities (add more as needed)\n      const unescaped = innerRaw\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&amp;/g, '&')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, \"'\")\n        .trim();\n\n      pairs.push({ key: tag, value: unescaped });\n      // Move cursor past this element to avoid processing nested children as direct siblings\n      i = searchStart;\n    }\n\n    return pairs;\n  };\n\n  const children = extractDirectChildren(xmlContent);\n  for (const { key, value } of children) {\n    if (key === 'actions' || key === 'providers' || key === 'evaluators') {\n      result[key] = value ? value.split(',').map((s) => s.trim()) : [];\n    } else if (key === 'simple') {\n      result[key] = value.toLowerCase() === 'true';\n    } else {\n      result[key] = value;\n    }\n  }\n\n  // Return null if no key-value pairs were found\n  if (Object.keys(result).length === 0) {\n    logger.warn('No key-value pairs extracted from XML content');\n    logger.debug({ xmlPreview: xmlContent.substring(0, 200) + '...' }, 'XML content was');\n    return null;\n  }\n\n  return result;\n}\n\n/**\n * Parses a JSON object from a given text. The function looks for a JSON block wrapped in triple backticks\n * with `json` language identifier, and if not found, it searches for an object pattern within the text.\n * It then attempts to parse the JSON string into a JavaScript object. If parsing is successful and the result\n * is an object (but not an array), it returns the object; otherwise, it tries to parse an array if the result\n * is an array, or returns null if parsing is unsuccessful or the result is neither an object nor an array.\n *\n * @param text - The input text from which to extract and parse the JSON object.\n * @returns An object parsed from the JSON string if successful; otherwise, null or the result of parsing an array.\n */\nexport function parseJSONObjectFromText(text: string): Record<string, any> | null {\n  let jsonData = null;\n  const jsonBlockMatch = text.match(jsonBlockPattern);\n\n  try {\n    if (jsonBlockMatch) {\n      // Parse the JSON from inside the code block\n      jsonData = JSON.parse(normalizeJsonString(jsonBlockMatch[1].trim()));\n    } else {\n      // Try to parse the text directly if it's not in a code block\n      jsonData = JSON.parse(normalizeJsonString(text.trim()));\n    }\n  } catch (_e) {\n    // logger.warn(\"Could not parse text as JSON, returning null\");\n    return null; // Keep null return on error\n  }\n\n  // Ensure we have a non-null object that's not an array\n  if (jsonData && typeof jsonData === 'object' && !Array.isArray(jsonData)) {\n    return jsonData;\n  }\n\n  // logger.warn(\"Could not parse text as JSON object, returning null\");\n  return null; // Return null if not a valid object\n}\n\n/**\n * Normalizes a JSON-like string by correcting formatting issues:\n * - Removes extra spaces after '{' and before '}'.\n * - Wraps unquoted values in double quotes.\n * - Converts single-quoted values to double-quoted.\n * - Ensures consistency in key-value formatting.\n * - Normalizes mixed adjacent quote pairs.\n *\n * This is useful for cleaning up improperly formatted JSON strings\n * before parsing them into valid JSON.\n *\n * @param str - The JSON-like string to normalize.\n * @returns A properly formatted JSON string.\n */\n\nexport const normalizeJsonString = (str: string) => {\n  // Remove extra spaces after '{' and before '}'\n  str = str.replace(/\\{\\s+/, '{').replace(/\\s+\\}/, '}').trim();\n\n  // \"key\": unquotedValue → \"key\": \"unquotedValue\"\n  str = str.replace(/(\"[\\w\\d_-]+\")\\s*: \\s*(?!\"|\\[)([\\s\\S]+?)(?=(,\\s*\"|\\}$))/g, '$1: \"$2\"');\n\n  // \"key\": 'value' → \"key\": \"value\"\n  str = str.replace(/\"([^\"]+)\"\\s*:\\s*'([^']*)'/g, (_, key, value) => `\"${key}\": \"${value}\"`);\n\n  // \"key\": someWord → \"key\": \"someWord\"\n  str = str.replace(/(\"[\\w\\d_-]+\")\\s*:\\s*([A-Za-z_]+)(?![\"\\w])/g, '$1: \"$2\"');\n\n  return str;\n};\n\n// why is this here? maybe types.ts is more appropriate\n// and shouldn't the name include x/twitter\n/*\nexport type ActionResponse = {\n  like: boolean;\n  retweet: boolean;\n  quote?: boolean;\n  reply?: boolean;\n};\n*/\n\n/**\n * Truncate text to fit within the character limit, ensuring it ends at a complete sentence.\n */\nexport function truncateToCompleteSentence(text: string, maxLength: number): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n\n  // Attempt to truncate at the last period within the limit\n  const lastPeriodIndex = text.lastIndexOf('.', maxLength - 1);\n  if (lastPeriodIndex !== -1) {\n    const truncatedAtPeriod = text.slice(0, lastPeriodIndex + 1).trim();\n    if (truncatedAtPeriod.length > 0) {\n      return truncatedAtPeriod;\n    }\n  }\n\n  // If no period, truncate to the nearest whitespace within the limit\n  const lastSpaceIndex = text.lastIndexOf(' ', maxLength - 1);\n  if (lastSpaceIndex !== -1) {\n    const truncatedAtSpace = text.slice(0, lastSpaceIndex).trim();\n    if (truncatedAtSpace.length > 0) {\n      return `${truncatedAtSpace}...`;\n    }\n  }\n\n  // Fallback: Hard truncate and add ellipsis\n  const hardTruncated = text.slice(0, maxLength - 3).trim();\n  return `${hardTruncated}...`;\n}\n\nexport async function splitChunks(content: string, chunkSize = 512, bleed = 20): Promise<string[]> {\n  logger.debug('[splitChunks] Starting text split');\n\n  const characterstoTokens = 3.5;\n\n  const textSplitter = new RecursiveCharacterTextSplitter({\n    chunkSize: Number(Math.floor(chunkSize * characterstoTokens)),\n    chunkOverlap: Number(Math.floor(bleed * characterstoTokens)),\n  });\n\n  const chunks = await textSplitter.splitText(content);\n  logger.debug(\n    {\n      numberOfChunks: chunks.length,\n      averageChunkSize: chunks.reduce((acc, chunk) => acc + chunk.length, 0) / chunks.length,\n    },\n    '[splitChunks] Split complete'\n  );\n\n  return chunks;\n}\n\n/**\n * Trims the provided text prompt to a specified token limit using a tokenizer model and type.\n */\nexport async function trimTokens(prompt: string, maxTokens: number, runtime: IAgentRuntime) {\n  if (!prompt) throw new Error('Trim tokens received a null prompt');\n\n  // if prompt is less than of maxtokens / 5, skip\n  if (prompt.length < maxTokens / 5) return prompt;\n\n  if (maxTokens <= 0) throw new Error('maxTokens must be positive');\n\n  const tokens = await runtime.useModel(ModelType.TEXT_TOKENIZER_ENCODE, {\n    prompt,\n  });\n\n  // If already within limits, return unchanged\n  if (tokens.length <= maxTokens) {\n    return prompt;\n  }\n\n  // Keep the most recent tokens by slicing from the end\n  const truncatedTokens = tokens.slice(-maxTokens);\n\n  // Decode back to text\n  return await runtime.useModel(ModelType.TEXT_TOKENIZER_DECODE, {\n    tokens: truncatedTokens,\n  });\n}\n\nexport function safeReplacer() {\n  const seen = new WeakSet();\n  return function (_key: string, value: any) {\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]';\n      }\n      seen.add(value);\n    }\n    return value;\n  };\n}\n\n/**\n * Parses a string to determine its boolean equivalent.\n *\n * Recognized affirmative values: \"YES\", \"Y\", \"TRUE\", \"T\", \"1\", \"ON\", \"ENABLE\"\n * Recognized negative values: \"NO\", \"N\", \"FALSE\", \"F\", \"0\", \"OFF\", \"DISABLE\"\n *\n * @param {string | undefined | null} value - The input text to parse\n * @returns {boolean} - Returns `true` for affirmative inputs, `false` for negative or unrecognized inputs\n */\nexport function parseBooleanFromText(value: string | undefined | null): boolean {\n  if (!value) return false;\n\n  const affirmative = ['YES', 'Y', 'TRUE', 'T', '1', 'ON', 'ENABLE'];\n  const negative = ['NO', 'N', 'FALSE', 'F', '0', 'OFF', 'DISABLE'];\n\n  const normalizedText = value.trim().toUpperCase();\n\n  if (affirmative.includes(normalizedText)) {\n    return true;\n  }\n  if (negative.includes(normalizedText)) {\n    return false;\n  }\n\n  // For environment variables, we'll treat unrecognized values as false\n  return false;\n}\n\n// UUID Utils\n\nconst uuidSchema = z.string().uuid() as z.ZodType<UUID>;\n\n/**\n * Validates a UUID value.\n *\n * @param {unknown} value - The value to validate.\n * @returns {UUID | null} Returns the validated UUID value or null if validation fails.\n */\nexport function validateUuid(value: unknown): UUID | null {\n  const result = uuidSchema.safeParse(value);\n  return result.success ? result.data : null;\n}\n\n/**\n * Converts a string or number to a UUID.\n *\n * @param {string | number} target - The string or number to convert to a UUID.\n * @returns {UUID} The UUID generated from the input target.\n * @throws {TypeError} Throws an error if the input target is not a string.\n */\nexport function stringToUuid(target: string | number): UUID {\n  if (typeof target === 'number') {\n    target = (target as number).toString();\n  }\n\n  if (typeof target !== 'string') {\n    throw TypeError('Value must be string');\n  }\n\n  // If already a UUID, return as-is to avoid re-hashing\n  const maybeUuid = validateUuid(target);\n  if (maybeUuid) return maybeUuid;\n\n  const escapedStr = encodeURIComponent(target);\n\n  // Deterministic UUID derived from SHA-1(escapedStr)\n  // Use WebCrypto if available (sync via cache), otherwise pure JS\n  const digest = getCachedSha1(escapedStr); // 20 bytes\n  const bytes = digest.slice(0, 16);\n\n  // Set RFC4122 variant bits: 10xxxxxx\n  bytes[8] = (bytes[8] & 0x3f) | 0x80;\n  // Set custom version nibble to 0x0 to indicate legacy/custom (matches prior tests expecting '0')\n  bytes[6] = (bytes[6] & 0x0f) | 0x00;\n\n  return bytesToUuid(bytes) as UUID;\n}\n\n/**\n * Pre-warm the SHA-1 cache with common values using WebCrypto\n * Call this during initialization to improve performance\n */\nexport async function prewarmUuidCache(values: string[]): Promise<void> {\n  if (!checkWebCrypto()) return;\n\n  const promises = values.map(async (value) => {\n    const escapedStr = encodeURIComponent(value);\n    const digest = await sha1BytesAsync(escapedStr);\n    sha1Cache.set(escapedStr, digest);\n  });\n\n  await Promise.all(promises);\n}\n\n// Cache for SHA-1 digests to enable synchronous WebCrypto usage\nconst sha1Cache = new Map<string, Uint8Array>();\nlet webCryptoAvailable: boolean | null = null;\n\n/**\n * Check if WebCrypto is available for SHA-1\n */\nfunction checkWebCrypto(): boolean {\n  if (webCryptoAvailable !== null) return webCryptoAvailable;\n\n  try {\n    // Check for crypto.subtle (WebCrypto API)\n    if (\n      typeof globalThis !== 'undefined' &&\n      globalThis.crypto &&\n      globalThis.crypto.subtle &&\n      typeof globalThis.crypto.subtle.digest === 'function'\n    ) {\n      webCryptoAvailable = true;\n      return true;\n    }\n  } catch {\n    // Ignore errors\n  }\n\n  webCryptoAvailable = false;\n  return false;\n}\n\n/**\n * Get SHA-1 digest using cache for synchronous operation\n * Uses WebCrypto when available (via background pre-computation), falls back to pure JS\n */\nfunction getCachedSha1(message: string): Uint8Array {\n  // Check cache first\n  const cached = sha1Cache.get(message);\n  if (cached) return cached;\n\n  // Use synchronous pure JS implementation for immediate result\n  const digest = sha1Bytes(message);\n  sha1Cache.set(message, digest);\n\n  // Asynchronously compute with WebCrypto for next time (if available)\n  if (checkWebCrypto()) {\n    sha1BytesAsync(message)\n      .then((webDigest) => {\n        // Update cache with WebCrypto result (should be identical)\n        sha1Cache.set(message, webDigest);\n      })\n      .catch(() => {\n        // Ignore errors, we already have the pure JS result\n      });\n  }\n\n  // Limit cache size to prevent memory leaks\n  if (sha1Cache.size > 10000) {\n    // Remove oldest entries (first ones in iteration order)\n    const keysToDelete = Array.from(sha1Cache.keys()).slice(0, 5000);\n    keysToDelete.forEach((key) => sha1Cache.delete(key));\n  }\n\n  return digest;\n}\n\n/**\n * Async SHA-1 using WebCrypto when available\n * This can be used to pre-warm the cache\n */\nasync function sha1BytesAsync(message: string): Promise<Uint8Array> {\n  if (checkWebCrypto()) {\n    try {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(message);\n      const hashBuffer = await globalThis.crypto.subtle.digest('SHA-1', data);\n      return new Uint8Array(hashBuffer);\n    } catch {\n      // Fall through to pure JS\n    }\n  }\n\n  // Fallback to pure JS implementation\n  return sha1Bytes(message);\n}\n\n/**\n * Minimal SHA-1 implementation returning raw bytes.\n * Source adapted from public-domain references for portability (browser/Node).\n * Used as fallback when WebCrypto is not available.\n */\nfunction sha1Bytes(message: string): Uint8Array {\n  const bytes = utf8Encode(message);\n  const ml = bytes.length;\n\n  // Pre-processing (padding)\n  const withOne = new Uint8Array(((ml + 9 + 63) >>> 6) << 6); // multiple of 64\n  withOne.set(bytes);\n  withOne[ml] = 0x80;\n  const bitLen = ml * 8;\n  // Append length as 64-bit big-endian\n  const dv = new DataView(withOne.buffer);\n  dv.setUint32(withOne.length - 4, bitLen >>> 0, false);\n  dv.setUint32(withOne.length - 8, Math.floor(bitLen / 2 ** 32) >>> 0, false);\n\n  // Initialize hash values\n  let h0 = 0x67452301;\n  let h1 = 0xefcdab89;\n  let h2 = 0x98badcfe;\n  let h3 = 0x10325476;\n  let h4 = 0xc3d2e1f0;\n\n  const w = new Uint32Array(80);\n\n  for (let i = 0; i < withOne.length; i += 64) {\n    // Break chunk into sixteen 32-bit big-endian words\n    for (let j = 0; j < 16; j++) {\n      w[j] = dv.getUint32(i + j * 4, false);\n    }\n    // Extend to 80 words\n    for (let j = 16; j < 80; j++) {\n      const t = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n      w[j] = (t << 1) | (t >>> 31);\n    }\n\n    // Initialize working vars\n    let a = h0;\n    let b = h1;\n    let c = h2;\n    let d = h3;\n    let e = h4;\n\n    for (let j = 0; j < 80; j++) {\n      let f: number;\n      let k: number;\n      if (j < 20) {\n        f = (b & c) | (~b & d);\n        k = 0x5a827999;\n      } else if (j < 40) {\n        f = b ^ c ^ d;\n        k = 0x6ed9eba1;\n      } else if (j < 60) {\n        f = (b & c) | (b & d) | (c & d);\n        k = 0x8f1bbcdc;\n      } else {\n        f = b ^ c ^ d;\n        k = 0xca62c1d6;\n      }\n      const temp = (((a << 5) | (a >>> 27)) + f + e + k + w[j]) >>> 0;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = temp;\n    }\n\n    h0 = (h0 + a) >>> 0;\n    h1 = (h1 + b) >>> 0;\n    h2 = (h2 + c) >>> 0;\n    h3 = (h3 + d) >>> 0;\n    h4 = (h4 + e) >>> 0;\n  }\n\n  const out = new Uint8Array(20);\n  const outDv = new DataView(out.buffer);\n  outDv.setUint32(0, h0, false);\n  outDv.setUint32(4, h1, false);\n  outDv.setUint32(8, h2, false);\n  outDv.setUint32(12, h3, false);\n  outDv.setUint32(16, h4, false);\n  return out;\n}\n\nfunction utf8Encode(str: string): Uint8Array {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n  // Fallback\n  const utf8: number[] = [];\n  for (let i = 0; i < str.length; i++) {\n    let charcode = str.charCodeAt(i);\n    if (charcode < 0x80) utf8.push(charcode);\n    else if (charcode < 0x800) {\n      utf8.push(0xc0 | (charcode >> 6), 0x80 | (charcode & 0x3f));\n    } else if (charcode < 0xd800 || charcode >= 0xe000) {\n      utf8.push(0xe0 | (charcode >> 12), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));\n    } else {\n      // surrogate pair\n      i++;\n      // UTF-16 to Unicode code point\n      const codePoint = 0x10000 + (((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n      utf8.push(\n        0xf0 | (codePoint >> 18),\n        0x80 | ((codePoint >> 12) & 0x3f),\n        0x80 | ((codePoint >> 6) & 0x3f),\n        0x80 | (codePoint & 0x3f)\n      );\n    }\n  }\n  return new Uint8Array(utf8);\n}\n\nfunction bytesToUuid(bytes: Uint8Array): string {\n  const hex: string[] = [];\n  for (let i = 0; i < bytes.length; i++) {\n    const h = bytes[i].toString(16).padStart(2, '0');\n    hex.push(h);\n  }\n  // Format: 8-4-4-4-12 hexadecimal digits\n  return (\n    hex.slice(0, 4).join('') +\n    '-' +\n    hex.slice(4, 6).join('') +\n    '-' +\n    hex.slice(6, 8).join('') +\n    '-' +\n    hex.slice(8, 10).join('') +\n    '-' +\n    hex.slice(10, 16).join('')\n  );\n}\n\nexport const getContentTypeFromMimeType = (mimeType: string): ContentType | undefined => {\n  if (mimeType.startsWith('image/')) return ContentType.IMAGE;\n  if (mimeType.startsWith('video/')) return ContentType.VIDEO;\n  if (mimeType.startsWith('audio/')) return ContentType.AUDIO;\n  if (mimeType.includes('pdf') || mimeType.includes('document') || mimeType.startsWith('text/')) {\n    return ContentType.DOCUMENT;\n  }\n  return undefined;\n};\n\nexport function getLocalServerUrl(path: string): string {\n  const port = getEnv('SERVER_PORT', '3000');\n  return `http://localhost:${port}${path}`;\n}\n",
    "/**\n * Browser and Node.js compatible environment variable abstraction\n * This module provides a unified interface for accessing environment variables\n * that works in both browser and Node.js environments.\n */\n\n/**\n * Type representing the runtime environment\n */\nexport type RuntimeEnvironment = 'node' | 'browser' | 'unknown';\n\n/**\n * Interface for environment configuration\n */\nexport interface EnvironmentConfig {\n  [key: string]: string | boolean | number | undefined;\n}\n\n/**\n * Detect the current runtime environment\n */\nexport function detectEnvironment(): RuntimeEnvironment {\n  // Check for Node.js\n  if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n    return 'node';\n  }\n\n  // Check for browser\n  if (\n    typeof globalThis !== 'undefined' &&\n    typeof (globalThis as any).window !== 'undefined' &&\n    typeof (globalThis as any).window.document !== 'undefined'\n  ) {\n    return 'browser';\n  }\n\n  return 'unknown';\n}\n\n/**\n * Environment variable storage for browser environments\n */\nclass BrowserEnvironmentStore {\n  private store: EnvironmentConfig = {};\n\n  constructor() {\n    // Load from window.ENV if available (common pattern for browser apps)\n    if (\n      typeof globalThis !== 'undefined' &&\n      (globalThis as any).window &&\n      (globalThis as any).window.ENV\n    ) {\n      this.store = { ...(globalThis as any).window.ENV };\n    }\n\n    // Also check for __ENV__ (another common pattern)\n    if (typeof globalThis !== 'undefined' && (globalThis as any).__ENV__) {\n      this.store = { ...this.store, ...(globalThis as any).__ENV__ };\n    }\n  }\n\n  get(key: string): string | undefined {\n    const value = this.store[key];\n    return value !== undefined ? String(value) : undefined;\n  }\n\n  set(key: string, value: string | boolean | number): void {\n    this.store[key] = value;\n  }\n\n  has(key: string): boolean {\n    return key in this.store;\n  }\n\n  getAll(): EnvironmentConfig {\n    return { ...this.store };\n  }\n}\n\n/**\n * Environment abstraction class\n */\nclass Environment {\n  private runtime: RuntimeEnvironment;\n  private browserStore?: BrowserEnvironmentStore;\n  private cache: Map<string, string | undefined> = new Map();\n\n  constructor() {\n    this.runtime = detectEnvironment();\n\n    if (this.runtime === 'browser') {\n      this.browserStore = new BrowserEnvironmentStore();\n    }\n  }\n\n  /**\n   * Get the current runtime environment\n   */\n  getRuntime(): RuntimeEnvironment {\n    return this.runtime;\n  }\n\n  /**\n   * Check if running in Node.js\n   */\n  isNode(): boolean {\n    return this.runtime === 'node';\n  }\n\n  /**\n   * Check if running in browser\n   */\n  isBrowser(): boolean {\n    return this.runtime === 'browser';\n  }\n\n  /**\n   * Get an environment variable\n   */\n  get(key: string, defaultValue?: string): string | undefined {\n    // Check cache first\n    if (this.cache.has(key)) {\n      const cached = this.cache.get(key);\n      return cached === undefined && defaultValue !== undefined ? defaultValue : cached;\n    }\n\n    let value: string | undefined;\n\n    switch (this.runtime) {\n      case 'node':\n        // In Node.js, use process.env\n        if (typeof process !== 'undefined' && process.env) {\n          value = process.env[key];\n        }\n        break;\n\n      case 'browser':\n        // In browser, use our store\n        if (this.browserStore) {\n          value = this.browserStore.get(key);\n        }\n        break;\n\n      default:\n        value = undefined;\n    }\n\n    // Cache the result\n    this.cache.set(key, value);\n\n    return value === undefined && defaultValue !== undefined ? defaultValue : value;\n  }\n\n  /**\n   * Set an environment variable (mainly for browser/testing)\n   */\n  set(key: string, value: string | boolean | number): void {\n    const stringValue = String(value);\n\n    // Clear cache\n    this.cache.delete(key);\n\n    switch (this.runtime) {\n      case 'node':\n        if (typeof process !== 'undefined' && process.env) {\n          process.env[key] = stringValue;\n        }\n        break;\n\n      case 'browser':\n        if (this.browserStore) {\n          this.browserStore.set(key, value);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Check if an environment variable exists\n   */\n  has(key: string): boolean {\n    const value = this.get(key);\n    return value !== undefined;\n  }\n\n  /**\n   * Get all environment variables (filtered for safety)\n   */\n  getAll(): EnvironmentConfig {\n    switch (this.runtime) {\n      case 'node':\n        if (typeof process !== 'undefined' && process.env) {\n          return { ...process.env };\n        }\n        break;\n\n      case 'browser':\n        if (this.browserStore) {\n          return this.browserStore.getAll();\n        }\n        break;\n    }\n\n    return {};\n  }\n\n  /**\n   * Get a boolean environment variable\n   */\n  getBoolean(key: string, defaultValue = false): boolean {\n    const value = this.get(key);\n\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    // Common truthy values\n    return ['true', '1', 'yes', 'on'].includes(value.toLowerCase());\n  }\n\n  /**\n   * Get a number environment variable\n   */\n  getNumber(key: string, defaultValue?: number): number | undefined {\n    const value = this.get(key);\n\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    const parsed = Number(value);\n    return isNaN(parsed) ? defaultValue : parsed;\n  }\n\n  /**\n   * Clear the cache (useful for testing)\n   */\n  clearCache(): void {\n    this.cache.clear();\n  }\n}\n\n/**\n * Singleton instance of the Environment class\n */\nlet environmentInstance: Environment | null = null;\n\n/**\n * Get the singleton Environment instance\n */\nexport function getEnvironment(): Environment {\n  if (!environmentInstance) {\n    environmentInstance = new Environment();\n  }\n  return environmentInstance;\n}\n\n/**\n * Convenience function to get an environment variable\n */\nexport function getEnv(key: string, defaultValue?: string): string | undefined {\n  return getEnvironment().get(key, defaultValue);\n}\n\n/**\n * Convenience function to set an environment variable\n */\nexport function setEnv(key: string, value: string | boolean | number): void {\n  getEnvironment().set(key, value);\n}\n\n/**\n * Convenience function to check if an environment variable exists\n */\nexport function hasEnv(key: string): boolean {\n  return getEnvironment().has(key);\n}\n\n/**\n * Convenience function to get a boolean environment variable\n */\nexport function getBooleanEnv(key: string, defaultValue = false): boolean {\n  return getEnvironment().getBoolean(key, defaultValue);\n}\n\n/**\n * Convenience function to get a number environment variable\n */\nexport function getNumberEnv(key: string, defaultValue?: number): number | undefined {\n  return getEnvironment().getNumber(key, defaultValue);\n}\n\n/**\n * Initialize browser environment with config\n * This should be called early in browser apps to set up environment\n */\nexport function initBrowserEnvironment(config: EnvironmentConfig): void {\n  const env = getEnvironment();\n  if (env.isBrowser()) {\n    Object.entries(config).forEach(([key, value]) => {\n      if (value !== undefined) {\n        env.set(key, value);\n      }\n    });\n  }\n}\n\n/**\n * Export the current runtime for convenience\n */\nexport const currentRuntime = detectEnvironment();\n\n/**\n * Re-export the Environment class for advanced usage\n */\nexport { Environment };\n",
    "import { filterByLabel, filterByLevel, filterByNamespace, render } from './functions/index.js';\nexport default class Tools {\n    /**\n     * Reference to the global store.\n     */\n    globalStore;\n    constructor(globalStore) {\n        this.globalStore = globalStore;\n    }\n    /**\n     * Clears the console.\n     */\n    clear() {\n        console.clear();\n    }\n    /**\n     * Rerenders all logs that match the label filter.\n     */\n    filterByLabel(label) {\n        const logs = filterByLabel(label, this.globalStore.cache);\n        logs.forEach((log) => {\n            render(log);\n        });\n    }\n    /**\n     * Rerenders all logs that match the namespace filter.\n     */\n    filterByNamespace(...namespace) {\n        const logs = filterByNamespace(namespace, this.globalStore.cache);\n        logs.forEach((log) => {\n            render(log);\n        });\n    }\n    /**\n     * Rerenders all logs that match the level selector.\n     */\n    filterByLevel(level) {\n        const logs = filterByLevel(level, this.globalStore.cache);\n        logs.forEach((log) => {\n            render(log);\n        });\n    }\n    /**\n     * Rerenders all logs that have been cached.\n     */\n    renderAll() {\n        this.globalStore.cache.forEach((log) => {\n            render(log);\n        });\n    }\n}\n",
    "import { defaultConfiguration } from './constants.js';\nimport { normalizeLevelSelector } from './functions/index.js';\nimport Tools from './tools.js';\nexport default class AdzeGlobal {\n    /**\n     * Global Adze configuration overrides.\n     */\n    config;\n    /**\n     * Incrementing ID counter for identifying logs.\n     */\n    pidCounter = 1;\n    /**\n     * All log labels.\n     */\n    labels = new Map();\n    /**\n     * Counter for incrementing listener IDs.\n     */\n    _listenerCounter = 0;\n    /**\n     * Map of log levels to log listeners\n     */\n    _levelsToListeners = new Map();\n    /**\n     * Cache of logs that have been terminated.\n     */\n    _cache = [];\n    constructor(configuration = {}) {\n        this.config = configuration;\n    }\n    /**\n     * Returns the cache of logs that have been terminated.\n     */\n    get cache() {\n        return this._cache;\n    }\n    /**\n     * Get the global Adze configuration overrides.\n     */\n    get configuration() {\n        return this.config;\n    }\n    /**\n     * Get the next process ID.\n     */\n    get pid() {\n        const current = this.pidCounter;\n        this.pidCounter++;\n        return current;\n    }\n    /**\n     * Tools for rerendering and filtering cached logs.\n     */\n    get tools() {\n        return new Tools(this);\n    }\n    /**\n     * Adds a log to the log cache.\n     */\n    addLogToCache(log) {\n        if (this._cache.length < (this.config.cacheSize ?? 300)) {\n            this._cache.push(log);\n        }\n    }\n    /**\n     * Clears the log cache.\n     */\n    clearCache() {\n        this._cache = [];\n    }\n    /**\n     * Get a label by name.\n     */\n    getLabel(name) {\n        return this.labels.get(name);\n    }\n    /**\n     * Sets a new label or overwrites an existing one.\n     */\n    setLabel(name, label) {\n        this.labels.set(name, label);\n    }\n    /**\n     * Adds a log listener that will be called after a log has been terminated.\n     */\n    addListener(levels, listener) {\n        const id = (this._listenerCounter += 1);\n        const normalizedLevels = normalizeLevelSelector({ ...defaultConfiguration.levels, ...(this.config.levels ?? {}) }, levels);\n        normalizedLevels.forEach((level) => {\n            if (this._levelsToListeners.has(level)) {\n                const levelContainer = this._levelsToListeners.get(level);\n                levelContainer.set(id, listener);\n            }\n            else {\n                this._levelsToListeners.set(level, new Map([[id, listener]]));\n            }\n        });\n        return id;\n    }\n    /**\n     * Removes a log listener by its ID.\n     */\n    removeListener(id) {\n        this._levelsToListeners.forEach((levelContainer) => {\n            levelContainer.delete(id);\n        });\n    }\n    /**\n     * Returns an array of log listener callback functions.\n     */\n    getListeners(level) {\n        return Array.from(this._levelsToListeners.get(level)?.values() ?? []);\n    }\n}\n",
    "import AdzeGlobal from '../adze-global.js';\n/**\n * Initialize the global log store for Adze. This is used for creating global configuration\n * overrides, storing labels, and optionally caching logs.\n */\nexport function setup(cfg) {\n    globalThis.$adzeGlobal = new AdzeGlobal(cfg);\n    return globalThis.$adzeGlobal;\n}\n/**\n * Gets the global store context or initializes a new one if it doesn't exist.\n */\nexport function getGlobal(cfg) {\n    const store = globalThis.$adzeGlobal;\n    if (isGlobalInitialized(store)) {\n        return store;\n    }\n    const globalCtxt = new AdzeGlobal(cfg);\n    globalThis.$adzeGlobal = globalCtxt;\n    return globalCtxt;\n}\n/**\n * Removes the global log store from the environment.\n */\nexport function teardown() {\n    if (isGlobalInitialized(globalThis.$adzeGlobal)) {\n        delete globalThis.$adzeGlobal;\n    }\n}\n/**\n * Adze global store has been instantiated.\n */\nexport function isGlobalInitialized(global) {\n    return global instanceof AdzeGlobal;\n}\n/**\n * Validates that the current environment is `Window`.\n */\nexport function isBrowser() {\n    return (typeof window !== 'undefined' &&\n        typeof window.location !== 'undefined' &&\n        typeof window.navigator.userAgent !== 'undefined' &&\n        !isDeno());\n}\n/**\n * Validates that the current environment is Deno.\n */\nexport function isDeno() {\n    // @ts-expect-error Deno is not defined in other environments\n    return typeof Deno !== 'undefined';\n}\n/**\n * TypeGuard to determine if the env value is the Window object.\n */\nexport function envIsWindow(_) {\n    return isBrowser();\n}\n/**\n * Determines if the current environment is an Adze test environment.\n */\nexport function isTestEnvironment() {\n    let urlAdzeEnvTest = false;\n    if (isBrowser()) {\n        const urlParams = new URLSearchParams(globalThis.location.search);\n        urlAdzeEnvTest = urlParams.get('ADZE_ENV') === 'test';\n    }\n    return globalThis.$ADZE_ENV === 'test' || urlAdzeEnvTest;\n}\n/**\n * Validates the current environment is Chrome.\n */\nexport function isChrome() {\n    const _glbl = globalThis;\n    if (envIsWindow(_glbl)) {\n        return _glbl.navigator.userAgent.includes('Chrome');\n    }\n    return false;\n}\n/**\n * Validates the current environment is Firefox.\n */\nexport function isFirefox() {\n    const _glbl = globalThis;\n    if (envIsWindow(_glbl)) {\n        return _glbl.navigator.userAgent.includes('Firefox');\n    }\n    return false;\n}\n/**\n * Validates the current environment is Safari.\n */\nexport function isSafari() {\n    const _glbl = globalThis;\n    if (envIsWindow(_glbl)) {\n        return _glbl.navigator.userAgent.includes('Safari') && !isChrome();\n    }\n    return false;\n}\n",
    "import { methodsWithArgs, specialMethods, specialMethodsWithArgsAndLeader, specialMethodsWithoutArgs, } from '../constants.js';\n/**\n * Type guard to validate that the value is a string.\n */\nexport function isString(value) {\n    return Object.prototype.toString.call(value) === '[object String]';\n}\n/**\n * Type guard that validates that an object contains all of the specified properties.\n */\nexport function hasOwnProperties(obj, props) {\n    return !props.map((prop) => obj[prop] !== undefined).includes(false);\n}\n/**\n * Type Guard to validate that the value is a number.\n */\nexport function isNumber(value) {\n    // Number(null) returns 0 😭\n    return value !== null && typeof value === 'number' && !isNaN(Number(value));\n}\n/**\n * Type guard to determine if a console method is a common method.\n */\nexport function isMethodWithArgs(value) {\n    return methodsWithArgs.includes(value);\n}\n/**\n * Type guard to determine if a console method is a common method.\n */\nexport function isMethodWithoutArgs(value) {\n    return specialMethodsWithoutArgs.includes(value);\n}\n/**\n * Type guard to determine if a console method is a special method.\n */\nexport function isSpecialMethod(value) {\n    return specialMethods.includes(value);\n}\n/**\n * Type guard to determine if a console method is a special method with a leader.\n */\nexport function isSpecialMethodWithLeader(value) {\n    return specialMethodsWithArgsAndLeader.includes(value);\n}\n/**\n * Type guard to determine if the value is an array of strings.\n */\nexport function isStringArray(value) {\n    return value.every((v) => isString(v));\n}\n/**\n * Type guard to determine if the value is a range tuple.\n */\nexport function isRange(value) {\n    return Array.isArray(value) && value.length === 3 && value[1] === '-';\n}\n/**\n * Validate that a log namespace is allowed.\n */\nexport function isNamespaceAllowed(allowed, ns) {\n    if (Array.isArray(allowed)) {\n        return allowed.includes(ns);\n    }\n    return false;\n}\n",
    "import { envIsWindow } from './global.js';\nimport { isNumber } from './type-guards.js';\n/**\n * Generates a stacktrace and returns it.\n */\nexport function stacktrace() {\n    return Error().stack?.replace(/^Error\\n/, '\\n');\n}\n/**\n * Gets a URLSearchParams object of the current URL.\n */\nexport function getSearchParams() {\n    const ctxt = globalThis;\n    if (envIsWindow(ctxt)) {\n        return new URLSearchParams(ctxt.location.search.substring(1));\n    }\n}\n/**\n * Returns the active level number from the provided level identifier.\n */\nexport function getActiveLevel(cfg) {\n    if (isNumber(cfg.activeLevel))\n        return cfg.activeLevel;\n    return cfg.levels[cfg.activeLevel].level;\n}\n/**\n * Adds a leading zero to a number if it is less than 10.\n */\nexport function leadingZero(num) {\n    return (num < 10 ? '0' : '') + `${num}`;\n}\n",
    "import * as _picocolors from 'picocolors';\n//@ts-expect-error - This is workaround for not having picocolors exported as esm module.\nexport const picocolors = (_picocolors.default ?? _picocolors);\n",
    "import { picocolors } from './picocolors-loader.js';\n/**\n * Capitalizes the first character of the provided string.\n */\nexport function initialCaps(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n/**\n * Get all of the available level numbers.\n */\nexport function allLevels(levels) {\n    return Object.values(levels).map((level) => level.level);\n}\n/**\n * Make a range of numbers from the start to the end.\n */\nexport function makeRange(allLevels, start, end) {\n    return allLevels.filter((level) => level >= start && level <= end);\n}\n/**\n * Add spaces to the end of a log title to make them all align.\n */\nexport function addPadding(str, withEmoji = false, emoji) {\n    const len = withEmoji && emoji ? 9 + emoji.length : 9;\n    const diff = len - str.length;\n    let padded = str;\n    for (let i = 0; i <= diff; i += 1) {\n        padded += ' ';\n    }\n    return padded;\n}\n/**\n * Applies array of console styles to the provided string. An optional terminal color fidelity\n * value can be passed to enable different color fidelities for different terminals.\n *\n * Refer to https://github.com/alexeyraspopov/picocolors#usage\n */\nexport function applyStyles(str, styles) {\n    // Force console colors\n    return styles.reduce((acc, style) => {\n        return picocolors[style](acc);\n    }, str);\n}\n/**\n * Render a log from its log data.\n */\nexport function render(log) {\n    if (log.data) {\n        console[log.data.method](...log.data.message);\n    }\n}\n/**\n * Removes empty strings from a message array.\n */\nexport function cleanMessage(message) {\n    return message.filter((msg) => msg !== '');\n}\n/**\n * Determines if the provided value is an object.\n */\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null;\n}\n",
    "import { isNumber, isRange, isString, isStringArray } from './type-guards.js';\nimport { allLevels, makeRange } from './util.js';\n/**\n * Normalize a level filter value to an array of log level numbers.\n */\nexport function normalizeLevelSelector(levels, selector) {\n    // If all, return numbers for all levels.\n    if (selector === '*')\n        return Object.values(levels).map((lvl) => lvl.level);\n    // If it's a string, convert it to a number and coerce it to a number array.\n    if (isString(selector)) {\n        // it's actually not always truthy eslint... you fool...\n        return [levels[selector].level];\n    }\n    // If it's a number, coerce it to a number array.\n    if (isNumber(selector))\n        return [selector];\n    // Is the provided value a range?\n    if (isRange(selector)) {\n        // If they are strings, convert them to numbers and return the number range.\n        if (isStringArray(selector)) {\n            const start = levels[selector[0]].level;\n            const end = levels[selector[2]].level;\n            return makeRange(allLevels(levels), start, end);\n        }\n        return makeRange(allLevels(levels), selector[0], selector[2]);\n    }\n    // Return array of matching numbers for the provided levels.\n    if (Array.isArray(selector) && isStringArray(selector)) {\n        return selector.map((f) => levels[f].level);\n    }\n    // If no other condition is met, return the provided array of numbers.\n    return selector;\n}\n/**\n * Is the provided level filtered out?\n */\nexport function failsLevelSelector(type, levels, level) {\n    // If the filter is an empty array, then no levels are filtered.\n    if (levels.length === 0)\n        return false;\n    // If the level is not in the provided levels, then it is filtered.\n    return type === 'include' ? !levels.includes(level) : levels.includes(level);\n}\n/**\n * Allow only values that are in the include list. If no values are found in the include list,\n * the result is false.\n */\nexport function isNotIncluded(source, values) {\n    if (source.length === 0)\n        return false;\n    if (source.length > 0 && values.length === 0)\n        return true;\n    return !values.map((v) => source.includes(v)).includes(true);\n}\n/**\n * Allow only values that are not in the exclude list. If one or more values are found in the\n * exclude list, the result is false.\n */\nexport function isExcluded(source, values) {\n    if (source.length === 0)\n        return false;\n    if (source.length > 0 && values.length === 0)\n        return true;\n    return values.map((v) => source.includes(v)).includes(true);\n}\n/**\n * Returns an array of Log instances that have the provided label.\n */\nexport function filterByLabel(label, logs) {\n    return logs.filter((log) => log.data?.label?.name === label);\n}\n/**\n * Filters an array of Log instances that contain the provided namespaces.\n */\nexport function filterByNamespace(namespace, logs) {\n    return logs.filter((log) => {\n        if (log.data?.namespace) {\n            const isMatched = log.data.namespace\n                .map((ns) => namespace.includes(ns))\n                .includes(true);\n            return isMatched;\n        }\n        return false;\n    });\n}\nexport function filterByLevel(level, logs) {\n    return logs.filter((log) => {\n        const levels = normalizeLevelSelector(log.configuration.levels, level);\n        if (log.data?.level === undefined)\n            return false;\n        return failsLevelSelector('exclude', levels, log.data.level);\n    });\n}\n",
    "/**\n * Formats an array of namespace values into a display string for printing.\n */\nexport function formatNamespace(ns) {\n    if (ns && ns.length > 0) {\n        return ns.reduce((acc, name) => `${acc}#${name} `, '');\n    }\n    return '';\n}\n/**\n * Formats label text for printing.\n */\nexport function formatLabel(lbl) {\n    return lbl ? `[${lbl.name}] ` : '';\n}\n/**\n * Formats the log count for printing.\n */\nexport function formatCount(count) {\n    return count !== undefined ? `(Count: ${count}) ` : '';\n}\n/**\n * Formats the assertion result for printing.\n */\nexport function formatAssert(expression, withEmoji) {\n    return expression !== undefined && !expression\n        ? `${withEmoji ? '❌ ' : ''}Assertion failed:`\n        : '';\n}\n/**\n * Formats the if statement result for printing.\n */\nexport function formatIf(expression, withEmoji) {\n    return expression !== undefined && expression\n        ? `${withEmoji ? '✅ ' : ''}Expression passed:`\n        : '';\n}\n",
    "export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n",
    "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n",
    "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n",
    "import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n",
    "import { Configuration } from '../configuration.js';\nimport structuredClone from '@ungap/structured-clone';\n/**\n * A mixin function for creating a sealed log instance that inherits properties from the parent.\n */\nexport function SealedLog(Base, cfg, mods, modifierQueue) {\n    const { formatters, middleware = [], ...cfgWithoutFormatters } = cfg.exportValues();\n    const sealing = class Sealing extends Base {\n        _cfg = new Configuration({\n            ...structuredClone(cfgWithoutFormatters),\n            formatters: { ...formatters },\n            middleware: [...middleware],\n        });\n        _modifierData = structuredClone(mods);\n        modifierQueue = [...modifierQueue];\n    };\n    const sealed = sealing;\n    return sealed;\n}\n",
    "/**\n * Takes an HrTime tuple and converts it into a human-readable formatted\n * string in the format of `{sec}s {ms}ms`.\n */\nexport function formatTime([sec, nano]) {\n    return `${sec}s ${nano / 1000000}ms`;\n}\n/**\n * Generates the current execution time.\n */\nexport function captureTimeNow() {\n    return formatTime(hrtime());\n}\n/**\n * Browser implementation of the node hrtime function for recording elapsed time.\n */\nexport function hrtime(prev) {\n    const time = performance.now() * 0.001;\n    const seconds = Math.floor(time);\n    const nanoseconds = Math.floor((time % 1) * 1000000000);\n    // If a previous value has been provided\n    if (prev === undefined) {\n        return [seconds, nanoseconds];\n    }\n    let secondsDiff = seconds - prev[0];\n    let nanosecondsDiff = nanoseconds - prev[1];\n    if (nanosecondsDiff < 0) {\n        secondsDiff -= 1;\n        nanosecondsDiff += 1e9;\n    }\n    return [secondsDiff, nanosecondsDiff];\n}\n/**\n * Generates an ISO-8601 formatted string with timezone offset.\n */\nexport function dateFormatISO(date) {\n    const pad = (n) => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n    const tzOffset = -date.getTimezoneOffset();\n    const diff = tzOffset >= 0 ? '+' : '-';\n    const timezone = `${diff}${pad(tzOffset / 60)}:${pad(tzOffset % 60)}`;\n    return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}T${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}${timezone}`;\n}\n/**\n * Generates a timestamp in the common log format (`'dd/MMM/yyyy:HH:mm:ss xx'`).\n */\nexport function dateFormatCommon(date) {\n    const pad = (num, size = 2) => String(num).padStart(size, '0');\n    const day = pad(date.getDate()); // dd\n    const monthNames = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n    ];\n    const month = monthNames[date.getMonth()]; // MMM\n    const year = date.getFullYear(); // yyyy\n    const hours = pad(date.getHours()); // HH\n    const minutes = pad(date.getMinutes()); // mm\n    const seconds = pad(date.getSeconds()); // ss\n    // Timezone offset in ±HHMM format (xx)\n    const tzOffset = -date.getTimezoneOffset(); // in minutes\n    const sign = tzOffset >= 0 ? '+' : '-';\n    const absOffset = Math.abs(tzOffset);\n    const tzHours = pad(Math.floor(absOffset / 60));\n    const tzMinutes = pad(absOffset % 60);\n    const timezone = `${sign}${tzHours}${tzMinutes}`; // xx\n    return `${day}/${month}/${year}:${hours}:${minutes}:${seconds} ${timezone}`;\n}\n",
    "import { dateFormatISO, getActiveLevel, isBrowser, isMethodWithArgs, isSpecialMethod, isSpecialMethodWithLeader, } from '../functions/index.js';\nimport { failsLevelSelector, normalizeLevelSelector, isNotIncluded, isExcluded, } from '../functions/filters.js';\n/**\n * The base class for all adze log formatters.\n */\nexport default class Formatter {\n    /**\n     * The configuration for the adze log.\n     */\n    cfg;\n    /**\n     * The log level configuration.\n     */\n    level;\n    /**\n     * The default timestamp formatter. Override this to customize for your own formatter.\n     */\n    timestampFormatFunction = (date) => dateFormatISO(date);\n    constructor(cfg, level) {\n        this.cfg = cfg;\n        this.level = level;\n    }\n    /**\n     * Returns the timestamp formatter override function or the timestamp formatter function from\n     * this formatter instance.\n     */\n    get timestampFormatter() {\n        return this.cfg.timestampFormatter ? this.cfg.timestampFormatter : this.timestampFormatFunction;\n    }\n    /**\n     * Entry point to printing logs.\n     */\n    print(mods, timestamp, args) {\n        // Do not print the log if its log level is higher than the active level.\n        if (this.level.level > getActiveLevel(this.cfg))\n            return [];\n        if (this.failsFilters(mods))\n            return [];\n        if (mods.assertion === true)\n            return [];\n        if (mods.if === false)\n            return [];\n        if (mods.method && !isSpecialMethodWithLeader(mods.method)) {\n            if (isSpecialMethod(mods.method) && isMethodWithArgs(mods.method))\n                return args;\n        }\n        // Select the appropriate formatter method on the environment.\n        const message = isBrowser()\n            ? this.formatBrowser(mods, timestamp, args)\n            : this.formatServer(mods, timestamp, args);\n        if (mods.stacktrace)\n            message.push(mods.stacktrace);\n        return message;\n    }\n    failsFilters(mods) {\n        if (this.failsLevelSelector())\n            return true;\n        if (this.failsNamespacesFilter(mods))\n            return true;\n        if (this.failsLabelsFilter(mods))\n            return true;\n        return false;\n    }\n    /**\n     * Validate that if a level filter is set the log passes the filter.\n     */\n    failsLevelSelector() {\n        if (this.cfg.filters?.levels === undefined)\n            return false;\n        const normalizedLevelSelector = normalizeLevelSelector(this.cfg.levels, this.cfg.filters.levels.values);\n        if (failsLevelSelector(this.cfg.filters.levels.type, normalizedLevelSelector, this.level.level))\n            return true;\n        return false;\n    }\n    /**\n     * Validate that if a namespaces filter is set the log passes the filter.\n     */\n    failsNamespacesFilter(mods) {\n        if (this.cfg.filters?.namespaces === undefined)\n            return false;\n        if (this.cfg.filters.namespaces.values.length > 0 && mods.namespace === undefined)\n            return true;\n        if (this.cfg.filters.namespaces.type === 'include') {\n            const namespaces = mods.namespace ?? [];\n            return isNotIncluded(this.cfg.filters.namespaces.values, namespaces);\n        }\n        const namespaces = mods.namespace ?? [];\n        return isExcluded(this.cfg.filters.namespaces.values, namespaces);\n    }\n    /**\n     * Validate that if a labels filter is set the log passes the filter.\n     */\n    failsLabelsFilter(mods) {\n        if (this.cfg.filters?.labels === undefined)\n            return false;\n        if (this.cfg.filters.labels.values.length > 0 && mods.label === undefined)\n            return true;\n        const label = mods.label ? [mods.label.name] : [];\n        if (this.cfg.filters.labels.type === 'include') {\n            return isNotIncluded(this.cfg.filters.labels.values, label);\n        }\n        return isExcluded(this.cfg.filters.labels.values, label);\n    }\n}\n",
    "import Formatter from '../formatter.js';\nimport { dateFormatCommon } from '../../functions/index.js';\n/**\n * Formats log messages according to the common log standard.\n *\n * https://en.wikipedia.org/wiki/Common_Log_Format\n */\nexport default class CommonFormatter extends Formatter {\n    /**\n     * Format the date in the strftime format.\n     *\n     * - strftime pattern: `%d/%b/%Y:%H:%M:%S %z`\n     * - date-fns pattern: `dd/MMM/yyyy:HH:mm:ss xx`\n     */\n    timestampFormatFunction = (date) => dateFormatCommon(date);\n    /**\n     * Format the log message for the browser.\n     */\n    formatBrowser(mods, timestamp, args) {\n        return this.formatMessage(mods, timestamp, args);\n    }\n    /**\n     * Format the log message for the server environment.\n     */\n    formatServer(mods, timestamp, args) {\n        return this.formatMessage(mods, timestamp, args);\n    }\n    /**\n     * Format the log message according to the common log format.\n     *\n     * **Example:** 127.0.0.1 user-identifier frank [10/Oct/2000:13:55:36 -0700] \"GET /apache_pb.gif HTTP/1.0\" 200 2326\n     */\n    formatMessage(_, timestamp, args) {\n        if (this.cfg.meta.hostname === undefined) {\n            console.warn(new Error(\"Adze: 'hostname' is required for the common log format. Please provide this value in your log's meta data.\"));\n        }\n        const hostname = this.cfg.meta.hostname;\n        const ident = this.cfg.meta.ident ?? '-';\n        const user = this.cfg.meta.user ?? '-';\n        const firstArg = args[0];\n        return [`${hostname} ${ident} ${user} [${timestamp}] ${firstArg}`];\n    }\n}\n",
    "import CommonFormatter from './common.js';\nexport * from './types.js';\nexport { CommonFormatter };\nexport default CommonFormatter;\n",
    "/**\n * Validates that the log meta data contains the required fields for a JSON log.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasRequiredFields(meta) {\n    return typeof meta.name === 'string' && typeof meta.hostname === 'string';\n}\n",
    "import Formatter from '../formatter.js';\nimport { hasRequiredFields } from './type-guards.js';\nimport { dateFormatISO, getGlobal } from '../../functions/index.js';\n/**\n * Formats log messages in machine-readable JSON format.\n */\nexport default class JsonFormatter extends Formatter {\n    /**\n     * Format the date in the ISO8601 format by default.\n     */\n    timestampFormatFunction = (date) => dateFormatISO(date);\n    /**\n     * Format the log message for the browser.\n     */\n    formatBrowser(mods, timestamp, args) {\n        return this.formatMessage(mods, timestamp, args);\n    }\n    /**\n     * Format the log message for the server.\n     */\n    formatServer(mods, timestamp, args) {\n        return this.formatMessage(mods, timestamp, args);\n    }\n    /**\n     * Format the log message for NDJSON lines.\n     */\n    formatMessage(mods, timestamp, _args) {\n        const global = getGlobal();\n        const args = [..._args];\n        const msg = args.shift();\n        if (hasRequiredFields(this.cfg.meta)) {\n            const { src, err, req_id, req, res, latency, hostname, name, ...meta } = this.cfg\n                .meta;\n            const { namespace, label } = mods;\n            const json = {\n                v: 1,\n                level: this.level.level,\n                levelName: this.level.levelName,\n                name,\n                hostname,\n                msg: msg,\n                args,\n                pid: global.pid,\n                time: timestamp,\n                meta: Object.keys(meta).length > 0 ? meta : undefined,\n                namespace,\n                label: label?.name,\n                src,\n                err,\n                req_id,\n                req,\n                res,\n                latency,\n            };\n            return [JSON.stringify(json)];\n        }\n        console.warn(new Error('Adze: Required fields are missing from the log meta for generating a JSON log.'));\n        return [...args];\n    }\n}\n",
    "import JsonFormatter from './json.js';\nexport * from './functions.js';\nexport * from './types.js';\nexport { JsonFormatter };\nexport default JsonFormatter;\n",
    "import Formatter from '../formatter.js';\nimport { addPadding, applyStyles, formatAssert, formatCount, formatIf, formatLabel, formatNamespace, initialCaps, } from '../../functions/index.js';\n/**\n * Formats log messages in a pretty, human-readable manner.\n */\nexport default class PrettyFormatter extends Formatter {\n    /**\n     * Format the log message for the browser.\n     */\n    formatBrowser(mods, timestamp, args) {\n        const leader = this.formatLeader();\n        const meta = this.formatMeta(mods, timestamp);\n        if (this.cfg.withEmoji) {\n            return [leader, 'font-size: 12px;', this.level.style, meta, ...args];\n        }\n        return [leader, this.level.style, meta, ...args];\n    }\n    /**\n     * Format the log message for the server environment.\n     */\n    formatServer(mods, timestamp, args) {\n        const message = [];\n        const leaderRaw = addPadding(this.formatLeader(false), this.cfg.withEmoji, this.level.emoji);\n        const leader = `${leaderRaw} `;\n        const meta = this.formatMeta(mods, timestamp);\n        const styledLeader = applyStyles(leader, this.level.terminalStyle);\n        message.push(styledLeader);\n        meta !== '' ? message.push(meta) : null;\n        return [styledLeader, meta, ...args];\n    }\n    /**\n     * Returns a formatted leader string.\n     */\n    formatLeader(isBrowser = true) {\n        const tag = isBrowser ? '%c' : '';\n        const name = ' ' + initialCaps(this.level.levelName);\n        if (this.cfg.withEmoji) {\n            return `${tag}${this.formatEmoji(isBrowser)}${tag}${name}`;\n        }\n        return `${tag}${name}`;\n    }\n    /**\n     * Formats the emoji if it is enabled.\n     */\n    formatEmoji(isBrowser) {\n        const space = isBrowser ? ' ' : '';\n        return this.level.emoji ? `${this.level.emoji}${space}` : '';\n    }\n    /**\n     * Returns a formatted log meta data string. This is not data defined by the meta modifier.\n     */\n    formatMeta(mods, timestamp) {\n        const ts = this.cfg.showTimestamp ? `${timestamp} ` : '';\n        const ns = formatNamespace(mods.namespace);\n        const lbl = formatLabel(mods.label);\n        const time = this.formatTime(mods);\n        const cnt = formatCount(mods.label?.count);\n        const asrt = formatAssert(mods.assertion, this.cfg.withEmoji);\n        const _if = formatIf(mods.if, this.cfg.withEmoji);\n        const tst = asrt !== '' ? asrt : _if !== '' ? _if : '';\n        return ts + ns + lbl + time + cnt + tst;\n    }\n    /**\n     * Formats the time elapsed string.\n     */\n    formatTime(mods) {\n        const timeLeader = this.cfg.withEmoji ? '⏱ ' : 'Time elapsed: ';\n        if (mods.timeNow) {\n            return `(${timeLeader}${mods.timeNow})`;\n        }\n        return mods.label?.timeElapsed ? `(${timeLeader}${mods.label.timeElapsed})` : '';\n    }\n}\n",
    "import PrettyFormatter from './pretty.js';\nexport { PrettyFormatter };\nexport default PrettyFormatter;\n",
    "import Formatter from '../formatter.js';\nimport { dateFormatISO, isNumber, isObject, isString } from '../../functions/index.js';\n/**\n * Formats log messages for stdout lines.\n *\n * **Example:** `[2013-01-04T19:01:18.241Z]  INFO: myapp/40208 on banana.local: hi`\n */\nexport default class StandardFormatter extends Formatter {\n    /**\n     * Format the date in the ISO8601 format by default.\n     */\n    timestampFormatFunction = (date) => dateFormatISO(date);\n    /**\n     * Format the log message for the browser.\n     */\n    formatBrowser(mods, timestamp, args) {\n        return this.formatMessage(timestamp, mods, args);\n    }\n    /**\n     * Format the log message for the server.\n     */\n    formatServer(mods, timestamp, args) {\n        return this.formatMessage(timestamp, mods, args);\n    }\n    /**\n     * Format the log message for stdout lines.\n     */\n    formatMessage(timestamp, mods, args) {\n        let leader = '';\n        const { appname, hostname, port } = this.cfg.meta;\n        const _port = isNumber(port) ? `/${port}` : '';\n        const appPort = isString(appname) ? `${appname}${_port}` : '';\n        const _host = isString(hostname) ? ` on ${hostname}: ` : '';\n        const namespace = this.formatNamespace(mods.namespace);\n        const label = mods.label ? `[${mods.label.name}] ` : '';\n        leader = `${appPort}${_host}${namespace}${label}`;\n        return [\n            `[${timestamp}] ${this.level.levelName.toUpperCase()}: ${leader}${args[0]} `,\n            args\n                .map((arg) => (isObject(arg) ? JSON.stringify(arg) : arg))\n                .slice(1)\n                .join(' '),\n        ];\n    }\n    /**\n     * Formats the namespaces for the log message.\n     */\n    formatNamespace(namespace) {\n        if (namespace && namespace.length > 0) {\n            const str = namespace.reduce((acc, mod, index) => {\n                return index === namespace.length - 1 ? `${acc}${mod}` : `${acc}${mod}/`;\n            }, '');\n            return `${str} `;\n        }\n        return '';\n    }\n}\n",
    "import CommonFormatter from './formatters/common/index.js';\nimport JsonFormatter from './formatters/json/index.js';\nimport PrettyFormatter from './formatters/pretty/index.js';\nimport StandardFormatter from './formatters/standard/standard.js';\nimport { isFirefox } from './functions/index.js';\n/**\n * All valid log terminators. These are the terminators that can be called to end a log chain.\n */\nexport const terminators = [\n    'alert',\n    'error',\n    'warn',\n    'info',\n    'fail',\n    'success',\n    'log',\n    'debug',\n    'verbose',\n    'custom',\n    'clear',\n    'clr',\n    'close',\n    'thread',\n];\n/**\n * All valid default log levels.\n */\nexport const levels = [\n    'alert',\n    'error',\n    'warn',\n    'info',\n    'fail',\n    'success',\n    'log',\n    'debug',\n    'verbose',\n];\n/**\n * Console methods that have alternative behaviors and take arguments and can be printed with a styled leader.\n */\nexport const specialMethodsWithArgsAndLeader = ['group', 'groupCollapsed'];\n/**\n * Console methods that have alternative behaviors and take arguments.\n */\nexport const specialMethodsWithArgs = [\n    'dir',\n    'dirxml',\n    'table',\n    ...specialMethodsWithArgsAndLeader,\n];\n/**\n * Methods that accept at least one argument as the first argument.\n */\nexport const methodsWithArgs = [\n    'error',\n    'warn',\n    'info',\n    'log',\n    'debug',\n    ...specialMethodsWithArgs,\n];\n/**\n * Console methods that have alternative behaviors and do not take arguments.\n */\nexport const specialMethodsWithoutArgs = ['clear', 'groupEnd'];\n/**\n * All uncommon standard methods.\n */\nexport const specialMethods = [...specialMethodsWithArgs, ...specialMethodsWithoutArgs];\n/**\n * All valid native browser methods utilized by Adze.\n */\nexport const methods = [...methodsWithArgs, ...specialMethodsWithoutArgs];\n/**\n * All valid log modifier names.\n */\nexport const modifiers = [\n    'assert',\n    'count',\n    'countClear',\n    'countReset',\n    'closeThread',\n    'dir',\n    'dirxml',\n    'dump',\n    'format',\n    'group',\n    'groupCollapsed',\n    'groupEnd',\n    'if',\n    'label',\n    'meta',\n    'namespace',\n    'silent',\n    'table',\n    'time',\n    'timeEnd',\n    'timeNow',\n    'timestamp',\n    'trace',\n    'withEmoji',\n];\n/**\n * All valid log formats. These determine the style that is emitted.\n */\nexport const formats = ['pretty', 'prettyEmoji', 'json', 'standard', 'common', 'default'];\nexport const defaultConfiguration = {\n    activeLevel: 'log',\n    cache: false,\n    cacheSize: 300,\n    dump: false,\n    format: 'pretty',\n    meta: {},\n    middleware: [],\n    showTimestamp: false,\n    silent: false,\n    withEmoji: false,\n    levels: {\n        alert: getAlertConfig(),\n        error: getErrorConfig(),\n        warn: getWarnConfig(),\n        info: getInfoConfig(),\n        fail: getFailConfig(),\n        success: getSuccessConfig(),\n        log: getLogConfig(),\n        debug: getDebugConfig(),\n        verbose: getVerboseConfig(),\n    },\n    formatters: {\n        default: PrettyFormatter,\n        pretty: PrettyFormatter,\n        standard: StandardFormatter,\n        common: CommonFormatter,\n        json: JsonFormatter,\n    },\n};\n/**\n * Default log configuration for alert logs.\n */\nexport function getAlertConfig(overrides = {}) {\n    return {\n        levelName: 'alert',\n        level: 0,\n        style: `padding-right: 24px; font-size: 12px; border-radius: 4px; background: linear-gradient(to right, #fc8585, #fc2323); color: #fff; border-color: #b70101;`,\n        terminalStyle: ['white', 'bold', 'bgRed'],\n        method: 'error',\n        emoji: '🚨',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for error logs.\n */\nexport function getErrorConfig(overrides = {}) {\n    return {\n        levelName: 'error',\n        level: 1,\n        style: `padding-right: 24px; font-size: 12px; border-radius: 4px; background: linear-gradient(to right, #fff, #ffd1d1); color: #a4000f; border-color: #e3bbbb;`,\n        terminalStyle: ['white', 'bgRed'],\n        method: 'error',\n        emoji: '🔥',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for warn logs.\n */\nexport function getWarnConfig(overrides = {}) {\n    return {\n        levelName: 'warn',\n        level: 2,\n        style: `font-size: 12px; border-radius: 4px;  background: linear-gradient(to right, #fff, #fff0a8); color: #715100; border-color: #e3d696; padding-right: ${isFirefox() ? '44px' : '30px'};`,\n        terminalStyle: ['white', 'bgYellow'],\n        method: 'warn',\n        emoji: '🔔',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for info logs.\n */\nexport function getInfoConfig(overrides = {}) {\n    return {\n        levelName: 'info',\n        level: 3,\n        style: `padding-right: 44px; font-size: 12px; border-radius: 4px; background: linear-gradient(to right, #d8ebff, #b2d7ff); color: #465464; border-color: #96b5d7;`,\n        terminalStyle: ['white', 'bgBlue'],\n        method: 'info',\n        emoji: 'ℹ️',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for fail logs.\n */\nexport function getFailConfig(overrides = {}) {\n    return {\n        levelName: 'fail',\n        level: 4,\n        style: `padding-right: 44px; font-size: 12px; border-radius: 4px; background: linear-gradient(to right, #ffe8e8, #ffd1d1); color: #a4000f; border-color: #e3bbbb;`,\n        terminalStyle: ['white', 'bgRed'],\n        method: 'info',\n        emoji: '❌',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for success logs.\n */\nexport function getSuccessConfig(overrides = {}) {\n    return {\n        levelName: 'success',\n        level: 5,\n        style: 'font-size: 12px; border-radius: 4px; padding-right: 22px; background: linear-gradient(to right, #e6f6e4, #ceedc9); color: #4e594d; border-color: #b7d1b3;',\n        terminalStyle: ['white', 'bgGreen'],\n        method: 'info',\n        emoji: '🎉',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for log logs.\n */\nexport function getLogConfig(overrides = {}) {\n    return {\n        levelName: 'log',\n        level: 6,\n        style: 'font-size: 12px; border-radius: 4px; padding-right: 51px; background: linear-gradient(to right, #ecedef, #d9dce0); color: #333435; border-color: #bfc1c5;',\n        terminalStyle: ['white', 'bgBlackBright'],\n        method: 'log',\n        emoji: '🪵',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for debug logs.\n */\nexport function getDebugConfig(overrides = {}) {\n    return {\n        levelName: 'debug',\n        level: 7,\n        style: 'font-size: 12px; padding-right: 36px; border-right: 1px solid #d9dce0; color: #465464; border-color: #999999;',\n        terminalStyle: ['white', 'bgBlack'],\n        method: 'debug',\n        emoji: '🐞',\n        ...overrides,\n    };\n}\n/**\n * Default log configuration for verbose logs.\n */\nexport function getVerboseConfig(overrides = {}) {\n    return {\n        levelName: 'verbose',\n        level: 8,\n        style: 'font-size: 12px; padding-right: 22px; color: #999999;',\n        terminalStyle: ['black', 'italic'],\n        method: 'debug',\n        emoji: '💬',\n        ...overrides,\n    };\n}\n",
    "import { defaultConfiguration as dfltCfg } from './constants.js';\n/**\n * This class is a proxy for getting configuration in the correct hierarchical order.\n */\nexport class Configuration {\n    /**\n     * The log defined configuration.\n     */\n    logCfg;\n    /**\n     * Reference to the global store configuration overrides.\n     */\n    glblCfg;\n    constructor(logCfg) {\n        this.logCfg = logCfg ?? {};\n        this.glblCfg = globalThis.$adzeGlobal?.configuration;\n    }\n    updateConfiguration(cfg) {\n        this.logCfg = cfg;\n    }\n    get activeLevel() {\n        return this.glblCfg?.activeLevel ?? this.logCfg.activeLevel ?? dfltCfg.activeLevel;\n    }\n    set activeLevel(level) {\n        this.logCfg.activeLevel = level;\n    }\n    get cache() {\n        return this.glblCfg?.cache ?? this.logCfg.cache ?? dfltCfg.cache;\n    }\n    set cache(value) {\n        this.logCfg.cache = value;\n    }\n    get cacheSize() {\n        return this.glblCfg?.cacheSize ?? this.logCfg.cacheSize ?? dfltCfg.cacheSize;\n    }\n    set cacheSize(size) {\n        this.logCfg.cacheSize = size;\n    }\n    get dump() {\n        return this.glblCfg?.dump ?? this.logCfg.dump ?? dfltCfg.dump;\n    }\n    set dump(value) {\n        this.logCfg.dump = value;\n    }\n    get meta() {\n        return { ...this.logCfg.meta, ...this.glblCfg?.meta };\n    }\n    set meta(value) {\n        this.logCfg.meta = value;\n    }\n    get silent() {\n        return this.glblCfg?.silent ?? this.logCfg.silent ?? dfltCfg.silent;\n    }\n    set silent(value) {\n        this.logCfg.silent = value;\n    }\n    get showTimestamp() {\n        return this.glblCfg?.showTimestamp ?? this.logCfg.showTimestamp ?? dfltCfg.showTimestamp;\n    }\n    set showTimestamp(value) {\n        this.logCfg.showTimestamp = value;\n    }\n    get withEmoji() {\n        return this.glblCfg?.withEmoji ?? this.logCfg.withEmoji ?? dfltCfg.withEmoji;\n    }\n    set withEmoji(value) {\n        this.logCfg.withEmoji = value;\n    }\n    get format() {\n        return this.glblCfg?.format ?? this.logCfg.format ?? dfltCfg.format;\n    }\n    set format(value) {\n        this.logCfg.format = value;\n    }\n    get levels() {\n        return { ...dfltCfg.levels, ...(this.logCfg.levels ?? {}), ...(this.glblCfg?.levels ?? {}) };\n    }\n    set levels(value) {\n        this.logCfg.levels = value;\n    }\n    get middleware() {\n        return [...(this.glblCfg?.middleware ?? []), ...(this.logCfg.middleware ?? [])];\n    }\n    set middleware(value) {\n        this.logCfg.middleware = value;\n    }\n    get filters() {\n        return this.glblCfg?.filters ?? this.logCfg.filters;\n    }\n    set filters(value) {\n        this.logCfg.filters = value;\n    }\n    get timestampFormatter() {\n        return this.glblCfg?.timestampFormatter ?? this.logCfg.timestampFormatter;\n    }\n    set timestampFormatter(value) {\n        this.logCfg.timestampFormatter = value;\n    }\n    get formatters() {\n        return {\n            ...dfltCfg.formatters,\n            ...(this.logCfg.formatters ?? {}),\n            ...(this.glblCfg?.formatters ?? {}),\n        };\n    }\n    set formatters(value) {\n        this.logCfg.formatters = value;\n    }\n    exportValues() {\n        return {\n            activeLevel: this.logCfg.activeLevel,\n            cache: this.logCfg.cache,\n            cacheSize: this.logCfg.cacheSize,\n            dump: this.logCfg.dump,\n            meta: this.logCfg.meta,\n            silent: this.logCfg.silent,\n            showTimestamp: this.logCfg.showTimestamp,\n            withEmoji: this.logCfg.withEmoji,\n            format: this.logCfg.format,\n            levels: this.logCfg.levels,\n            middleware: this.logCfg.middleware,\n            filters: this.logCfg.filters,\n            timestampFormatter: this.logCfg.timestampFormatter,\n            formatters: this.logCfg.formatters,\n        };\n    }\n}\n",
    "import { Configuration } from './configuration.js';\nimport { captureTimeNow, formatTime, hrtime, isMethodWithArgs, stacktrace, cleanMessage, isTestEnvironment, SealedLog, getGlobal, } from './functions/index.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isCallback(maybeFunction) {\n    return typeof maybeFunction === 'function';\n}\nexport default class Log {\n    /**\n     * The global context object.\n     */\n    globalStore;\n    /**\n     * The configuration for the adze log.\n     */\n    _cfg;\n    /**\n     * Incomplete log data.\n     */\n    _modifierData;\n    /**\n     * The log data object.\n     */\n    _data;\n    /**\n     * Queue up modifiers to ensure they are in the correct order when executed.\n     */\n    modifierQueue = [];\n    constructor(cfg, modifierData) {\n        this.globalStore = getGlobal(cfg);\n        this._modifierData = modifierData ?? {};\n        this._cfg = new Configuration(cfg);\n        this.doHook((m) => {\n            if (m.constructed)\n                m.constructed(this);\n        });\n    }\n    ////////////////////////////////////////////////////////\n    // Getters and Setters\n    ////////////////////////////////////////////////////////\n    get data() {\n        return this._data;\n    }\n    get modifierData() {\n        return this._modifierData;\n    }\n    get configuration() {\n        return this._cfg;\n    }\n    alert(...args) {\n        this.terminate('alert', args);\n    }\n    /**\n     * Terminates the log at the *alert* level.\n     *\n     * **Default Level = \"alert\" or 0**\n     *\n     * This level is useful for calling alert to\n     * important information and lives at the lowest level.\n     *\n     * You should use this sparingly since it's level is lower\n     * than error.\n     *\n     * This is a non-standard API.\n     */\n    static alert(...args) {\n        new this().alert(...args);\n    }\n    error(...args) {\n        this.terminate('error', args);\n    }\n    /**\n     * Terminates the log at the *error* level.\n     *\n     * **Default Level = \"error\" or 1**\n     *\n     * Use this for logging fatal errors or errors that\n     * impact functionality of your application.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/error)\n     */\n    static error(...args) {\n        new this().error(...args);\n    }\n    warn(...args) {\n        this.terminate('warn', args);\n    }\n    /**\n     * Terminates the log at the *warning* level.\n     *\n     * **Default Level = \"warn\" or 2**\n     *\n     * Use this for logging issues that may impact\n     * app performance in a less impactful way than\n     * an error.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/warn)\n     */\n    static warn(...args) {\n        new this().warn(...args);\n    }\n    info(...args) {\n        this.terminate('info', args);\n    }\n    /**\n     * Terminates the log at the *info* level.\n     *\n     * **Default Level = \"info\" or 3**\n     *\n     * Use this for logging general insights into your\n     * application. This level does not indicate any\n     * problems.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/info)\n     */\n    static info(...args) {\n        new this().info(...args);\n    }\n    fail(...args) {\n        this.terminate('fail', args);\n    }\n    /**\n     * Terminates the log at the *fail* level.\n     *\n     * **Default Level = \"fail\" or 4**\n     *\n     * Use this for logging network communication errors\n     * that do not break your application.\n     *\n     * This is a non-standard API.\n     */\n    static fail(...args) {\n        new this().fail(...args);\n    }\n    success(...args) {\n        this.terminate('success', args);\n    }\n    /**\n     * Terminates the log at the *success* level.\n     *\n     * **Default Level = \"success\" or 5**\n     *\n     * Use this for logging successful network communication.\n     *\n     * This is a non-standard API.\n     */\n    static success(...args) {\n        new this().success(...args);\n    }\n    log(...args) {\n        this.terminate('log', args);\n    }\n    /**\n     * Terminates the log at the *log* level.\n     *\n     * **Default Level = \"log\" or 6**\n     *\n     * Use this for general logging that doesn't apply\n     * to any of the lower levels.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/log)\n     */\n    static log(args_0, ...args) {\n        new this().log(...[args_0, ...args]);\n    }\n    debug(...args) {\n        this.terminate('debug', args);\n    }\n    /**\n     * Terminates the log at the *log* level.\n     *\n     * **Default Level = \"debug\" or 7**\n     *\n     * Use this for general logging that doesn't apply\n     * to any of the lower levels.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/log)\n     */\n    static debug(...args) {\n        new this().debug(...args);\n    }\n    verbose(...args) {\n        this.terminate('verbose', args);\n    }\n    /**\n     * Terminates the log at the *verbose* level.\n     *\n     * **Default Level = \"verbose\" or 8**\n     *\n     * Use this for logging extremely detailed debugging\n     * information. Use this level when the values you are\n     * logging are granular enough that they are no longer\n     * easily human readable.\n     *\n     * This is a non-standard API.\n     */\n    static verbose(...args) {\n        new this().verbose(...args);\n    }\n    /**\n     * Clears the console.\n     *\n     * This terminator simply exists as an alias for `console.clear()`.\n     */\n    clear() {\n        console.clear();\n    }\n    /**\n     * Clears the console.\n     *\n     * This terminator simply exists as an alias for `console.clear()`.\n     */\n    static clear() {\n        console.clear();\n    }\n    /**\n     * Alias for `clear()`. Clears the console.\n     *\n     * This terminator simply exists as an alias for `console.clear()`.\n     */\n    clr() {\n        console.clear();\n    }\n    /**\n     * Alias for `clear()`. Clears the console.\n     *\n     * This terminator simply exists as an alias for `console.clear()`.\n     */\n    static clr() {\n        console.clear();\n    }\n    /**\n     * Terminates the log at the provided custom log level. Custom log levels are defined within the\n     * Adze configuration object under the levels property.\n     */\n    custom(levelName, ...args) {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (!this._cfg.levels[levelName]) {\n            console.warn(new Error('Custom log level not found in configuration.'));\n            return this;\n        }\n        this.terminate(levelName, args);\n        return this;\n    }\n    /**\n     * Terminates the log at the provided custom log level. Custom log levels are defined within the\n     * Adze configuration object under the levels property.\n     */\n    static custom(levelName, ...args) {\n        return new this().custom(levelName, ...args);\n    }\n    /**\n     * Seals the configuration of a log and returns a function that\n     * constructs a new log with the same configuration.\n     *\n     * **Example:**\n     * ```javascript\n     * const sealed = adze.withEmoji.ns('sealed').label('sealed-label').seal();\n     * sealed.success('Success!'); // -> prints \"#sealed [sealed-label] Success!\"\n     * sealed.log('Another log.'); // -> prints \"#sealed [sealed-label] Another log.\"\n     * ```\n     */\n    seal(_cfg) {\n        if (_cfg)\n            this._cfg.updateConfiguration(_cfg);\n        return SealedLog((Log), this._cfg, this.modifierData, this.modifierQueue);\n    }\n    /**\n     * Seals the configuration of a log and returns a function that\n     * constructs a new log with the same configuration.\n     *\n     * **Example:**\n     * ```javascript\n     * const sealed = adze.withEmoji.ns('sealed').label('sealed-label').seal();\n     * sealed.success('Success!'); // -> prints \"#sealed [sealed-label] Success!\"\n     * sealed.log('Another log.'); // -> prints \"#sealed [sealed-label] Another log.\"\n     * ```\n     */\n    static seal(cfg) {\n        return new this().seal(cfg);\n    }\n    /**\n     * Seals the configuration of a log and returns a template string tag function.\n     *\n     * Example:\n     *\n     * ```typescript\n     * const ERR = adze.ns('foo').sealTag('error');\n     * ERR`This is an error message.`; // => prints \"Error #foo This is an error message.\"\n     * ```\n     */\n    sealTag(method, cfg) {\n        this._cfg = new Configuration({ ...this._cfg.exportValues(), ...cfg });\n        return (strings, ...values) => {\n            const message = String.raw({ raw: strings }, ...values);\n            const sealed = SealedLog((Log), this._cfg, this.modifierData, this.modifierQueue);\n            const _method = method;\n            if (isCallback(sealed[_method])) {\n                sealed[_method](message);\n            }\n        };\n    }\n    /**\n     * Seals the configuration of a log and returns a template string tag function.\n     *\n     * Example:\n     *\n     * ```typescript\n     * const ERR = adze.ns('foo').sealTag('error');\n     * ERR`This is an error message.`; // => prints \"Error #foo This is an error message.\"\n     * ```\n     */\n    static sealTag(method, cfg) {\n        return new this().sealTag(method, cfg);\n    }\n    /**\n     * Following the MDC (Mapped Diagnostic Context) pattern, this method enables you to create a\n     * thread for adding context from different scopes before finally terminating the log.\n     *\n     * In order to create a thread, this log must specify a label. The label identifies the shared\n     * context that other logs in your thread can contribute to.\n     *\n     * Example:\n     *\n     * ```typescript\n     * function add(a: number, b: number) {\n     *   const answer = a + b;\n     *   adze.label('maths').thread('added', { a, b, answer });\n     *   return answer;\n     * }\n     *\n     * function subtract(x: number, y: number) {\n     *   const answer = x - y;\n     *   adze.label('maths').thread('subtracted', { x, y, answer });\n     *   return answer;\n     * }\n     *\n     * add(1, 2);\n     * subtract(4, 3);\n     *\n     * adze.label('maths').dump.info('Results from our thread');\n     * // => prints the log with the context values from both thread logs applied.\n     * ```\n     */\n    thread(key, value) {\n        this.runModifierQueue();\n        if (this._modifierData.label) {\n            if (!this._modifierData.label.context)\n                this._modifierData.label.context = {};\n            this._modifierData.label.context = { ...this._modifierData.label.context, [key]: value };\n        }\n    }\n    /**\n     * Following the MDC (Mapped Diagnostic Context) pattern, this method enables you to create a\n     * thread for adding context from different scopes before finally terminating the log.\n     *\n     * In order to create a thread, this log must specify a label. The label identifies the shared\n     * context that other logs in your thread can contribute to.\n     *\n     * Example:\n     *\n     * ```typescript\n     * function add(a, b) {\n     *   const answer = a + b;\n     *   adze.label('foo').thread('added', { a, b, answer });\n     *   return answer;\n     * }\n     *\n     * function subtract(x, y) {\n     *   const answer = x - y;\n     *   adze.label('foo').thread('subtracted', { x, y, answer });\n     *   return answer;\n     * }\n     *\n     * add(1, 2);\n     * subtract(4, 3);\n     *\n     * adze.label('foo').dump.info('Results from our thread');\n     * // => prints the log with the context values from both thread logs applied.\n     * ```\n     */\n    static thread(key, value) {\n        new this().thread(key, value);\n    }\n    ////////////////////////////////////////////////////////\n    // Modifiers\n    ////////////////////////////////////////////////////////\n    /**\n     * Generates a log message if the provided expression is falsey.\n     */\n    assert(expression) {\n        this.modifierQueue.push([\n            'assert',\n            (data) => {\n                data.assertion = expression;\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Generates a log message if the provided expression is falsey.\n     */\n    static assert(expression) {\n        return new this().assert(expression);\n    }\n    /**\n     * Closes a thread by resetting its context.\n     */\n    get closeThread() {\n        this.modifierQueue.push([\n            'closeThread',\n            (data) => {\n                if (data.label?.context) {\n                    data.label.context = undefined;\n                }\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Closes a thread by resetting its context.\n     */\n    static get closeThread() {\n        return new this().closeThread;\n    }\n    /**\n     * Adds to the log count for log instances that share this log's label.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/count)\n     */\n    get count() {\n        this.modifierQueue.push([\n            'count',\n            (data) => {\n                if (data.label) {\n                    data.label.count = data.label.count !== undefined ? data.label.count + 1 : 1;\n                }\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Adds to the log count for log instances that share this log's label.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/count)\n     */\n    static get count() {\n        return new this().count;\n    }\n    /**\n     * Unsets the count for the log instances that share this log's label.\n     *\n     * This is a non-standard method.\n     */\n    get countClear() {\n        this.modifierQueue.push([\n            'countClear',\n            (data) => {\n                if (data.label) {\n                    delete data.label.count;\n                }\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Unsets the count for the log instances that share this log's label.\n     *\n     * This is a non-standard method.\n     */\n    static get countClear() {\n        return new this().countClear;\n    }\n    /**\n     * Resets the count for the log instances that share this log's label back to 0.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/countReset)\n     */\n    get countReset() {\n        this.modifierQueue.push([\n            'countReset',\n            (data) => {\n                if (data.label) {\n                    data.label.count = 0;\n                }\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Resets the count for the log instances that share this log's label.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/countReset)\n     */\n    static get countReset() {\n        return new this().countReset;\n    }\n    /**\n     * Instructs this log to print in the dir format. Typically this is useful\n     * for rendering deeply nested objects in the console.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/dir)\n     */\n    get dir() {\n        this.modifierQueue.push([\n            'dir',\n            (data) => {\n                data.method = 'dir';\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Instructs this log to print in the dir format. Typically this is useful\n     * for rendering deeply nested objects in the console.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/dir)\n     */\n    static get dir() {\n        return new this().dir;\n    }\n    /**\n     * Instructs this log to print in the dirxml format. Typically this is useful\n     * for rendering HTML/DOM or XML Elements in the console.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/dirxml)\n     */\n    get dirxml() {\n        this.modifierQueue.push([\n            'dirxml',\n            (data) => {\n                data.method = 'dirxml';\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Instructs this log to print in the dirxml format. Typically this is useful\n     * for rendering HTML/DOM or XML Elements in the console.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/dirxml)\n     */\n    static get dirxml() {\n        return new this().dirxml;\n    }\n    /**\n     * Instructs the log terminator to add the key/value pairs from the\n     * thread context to the console output.\n     *\n     * This is a non-standard API.\n     */\n    get dump() {\n        this.modifierQueue.push([\n            'dump',\n            (data, ctxt) => {\n                ctxt._cfg.dump = true;\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Instructs the log terminator to add the key/value pairs from the\n     * thread context to the console output.\n     *\n     * This is a non-standard API.\n     */\n    static get dump() {\n        return new this().dump;\n    }\n    /**\n     * Instructs the logger to print according to the provided format.\n     *\n     * This is a non-standard API.\n     */\n    format(format) {\n        this.modifierQueue.push([\n            'format',\n            (data, ctxt) => {\n                if (Object.keys(ctxt._cfg.formatters).includes(format)) {\n                    ctxt._cfg.format = format;\n                    return data;\n                }\n                console.warn(new Error(`Adze: Formatter \"${format}\" not found in configuration.`));\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Instructs the logger to print according to the provided format.\n     *\n     * This is a non-standard API.\n     */\n    static format(format) {\n        return new this().format(format);\n    }\n    /**\n     * Starts a log group.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/group)\n     */\n    get group() {\n        this.modifierQueue.push([\n            'group',\n            (data) => {\n                data.method = 'group';\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Starts a log group.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/group)\n     */\n    static get group() {\n        return new this().group;\n    }\n    /**\n     * Starts a log group that is collapsed by default.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/groupCollapsed)\n     */\n    get groupCollapsed() {\n        this.modifierQueue.push([\n            'groupCollapsed',\n            (data) => {\n                data.method = 'groupCollapsed';\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Starts a log group that is collapsed by default.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/groupCollapsed)\n     */\n    static get groupCollapsed() {\n        return new this().groupCollapsed;\n    }\n    /**\n     * Ends the most recently opened log group.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/groupEnd)\n     */\n    get groupEnd() {\n        this.modifierQueue.push([\n            'groupEnd',\n            (data) => {\n                data.method = 'groupEnd';\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Ends the most recently opened log group.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/groupEnd)\n     */\n    static get groupEnd() {\n        return new this().groupEnd;\n    }\n    /**\n     * Generates a log message if the provided expression is truthy.\n     *\n     * This is a non-standard API.\n     */\n    if(expression) {\n        this.modifierQueue.push([\n            'if',\n            (data) => {\n                data.if = expression;\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Generates a log message if the provided expression is truthy.\n     *\n     * This is a non-standard API.\n     */\n    static if(expression) {\n        return new this().if(expression);\n    }\n    /**\n     * DEPRECATED: Use the equivalent `if` method instead.\n     *\n     * @deprecated\n     */\n    test(expression) {\n        return this.if(expression);\n    }\n    /**\n     * DEPRECATED: Use the equivalent `if` method instead.\n     *\n     * @deprecated\n     */\n    static test(expression) {\n        return new this().if(expression);\n    }\n    /**\n     * Adds a label to the log. Label's can be used for log identification\n     * and grouping. Label's also link log instances together.\n     *\n     * This is a non-standard API, but it replaces the need to provide\n     * a label to methods that require a global identifier for tracking purposes.\n     */\n    label(name) {\n        // prepend the modifier queue\n        this.modifierQueue.unshift([\n            'label',\n            (data) => {\n                const label = this.globalStore.getLabel(name) ?? { name };\n                data.label = label;\n                this.globalStore.setLabel(name, label);\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Adds a label to the log. Label's can be used for log identification\n     * and grouping. Label's also link log instances together.\n     *\n     * This is a non-standard API, but it replaces the need to provide\n     * a label to methods that require a global identifier for tracking purposes.\n     */\n    static label(name) {\n        return new this().label(name);\n    }\n    /**\n     * Assign meta data to this log instance that is meant to be\n     * retrievable in a log listener or from a `log.data()` dump.\n     *\n     * This is a non-standard API.\n     */\n    meta(meta) {\n        this.modifierQueue.push([\n            'meta',\n            (data, ctxt) => {\n                ctxt._cfg.meta = { ...ctxt._cfg.meta, ...meta };\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Assign meta data to this log instance that is meant to be\n     * retrievable in a log listener or from a `log.data()` dump.\n     *\n     * This is a non-standard API.\n     */\n    static meta(meta) {\n        return new this().meta(meta);\n    }\n    /**\n     * Adds a namespace to the log. Namespace's are primarily useful\n     * for grouping logs together. Multiple calls to namespace are\n     * additive in nature.\n     *\n     * This is a non-standard API.\n     */\n    namespace(...namespace) {\n        this.modifierQueue.push([\n            'namespace',\n            (data) => {\n                const arr = data.namespace ?? [];\n                data.namespace = arr.length > 0 ? [...arr, ...namespace] : namespace;\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Adds a namespace to the log. Namespace's are primarily useful\n     * for grouping logs together. Multiple calls to namespace are\n     * additive in nature.\n     *\n     * This is a non-standard API.\n     */\n    static namespace(...namespace) {\n        return new this().namespace(...namespace);\n    }\n    /**\n     * Alias for the `namespace` modifier.\n     *\n     * Adds a namespace to the log. Namespace's are primarily useful\n     * for grouping logs together. Multiple calls to namespace are\n     * additive in nature.\n     *\n     * This is a non-standard API.\n     */\n    ns(...namespace) {\n        return this.namespace(...namespace);\n    }\n    /**\n     * Alias for the `namespace` modifier.\n     *\n     * Adds a namespace to the log. Namespace's are primarily useful\n     * for grouping logs together. Multiple calls to namespace are\n     * additive in nature.\n     *\n     * This is a non-standard API.\n     */\n    static ns(...namespace) {\n        return new this().namespace(...namespace);\n    }\n    /**\n     * This modifier prevents the log from printing. It can still be picked up by middleware or\n     * listeners.\n     */\n    get silent() {\n        this.modifierQueue.push([\n            'silent',\n            (data, ctxt) => {\n                ctxt._cfg.silent = true;\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * This modifier prevents the log from printing. It can still be picked up by middleware or\n     * listeners.\n     */\n    static get silent() {\n        return new this().silent;\n    }\n    /**\n     * Instructs this log to print its argument in a table format.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/table)\n     */\n    get table() {\n        this.modifierQueue.push([\n            'table',\n            (data) => {\n                data.method = 'table';\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Instructs this log to print its argument in a table format.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/table)\n     */\n    static get table() {\n        return new this().table;\n    }\n    /**\n     * Starts a timer associated with this log's *label*. This will do nothing if\n     * this log has no label.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/time).\n     */\n    get time() {\n        this.modifierQueue.push([\n            'time',\n            (data) => {\n                const timeStart = hrtime();\n                if (data.label) {\n                    data.label.timeStart = timeStart;\n                }\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Starts a timer associated with this log's *label*. This will do nothing if\n     * this log has no label.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/time).\n     */\n    static get time() {\n        return new this().time;\n    }\n    /**\n     * Stops a timer that was previously started by calling time() on a *labeled* log. Calculates the\n     * difference between the start time and when this method was called. This then\n     * modifies the log render to show the time difference. This will do nothing if the *label* does\n     * not exist.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/timeEnd).\n     */\n    get timeEnd() {\n        this.modifierQueue.push([\n            'timeEnd',\n            (data) => {\n                if (data.label?.timeStart) {\n                    data.label.timeElapsed = formatTime(hrtime(data.label.timeStart));\n                }\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Stops a timer that was previously started by calling time() on a *labeled* log. Calculates the\n     * difference between the start time and when this method was called. This then\n     * modifies the log render to show the time difference. This will do nothing if the *label* does\n     * not exist.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/timeEnd).\n     */\n    static get timeEnd() {\n        return new this().timeEnd;\n    }\n    /**\n     * Modifies the log render to show the current high-resolution real time.\n     *\n     * This is a non-standard method.\n     */\n    get timeNow() {\n        this.modifierQueue.push([\n            'timeNow',\n            (data) => {\n                data.timeNow = captureTimeNow();\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Modifies the log render to show the current high-resolution real time.\n     *\n     * This is a non-standard method.\n     */\n    static get timeNow() {\n        return new this().timeNow;\n    }\n    /**\n     * This modifier method tells the log to render a timestamp.\n     *\n     * This is a non-standard API.\n     */\n    get timestamp() {\n        this.modifierQueue.push([\n            'timestamp',\n            (data, ctxt) => {\n                ctxt._cfg.showTimestamp = true;\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * This modifier method tells the log to render a timestamp.\n     *\n     * This is a non-standard API.\n     */\n    static get timestamp() {\n        return new this().timestamp;\n    }\n    /**\n     * Prints a stacktrace along with the log. This does not use the standard \"trace\" method but\n     * derives the stacktrace from the current call stack and appends it to your log.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/trace)\n     */\n    get trace() {\n        this.modifierQueue.push([\n            'trace',\n            (data) => {\n                data.stacktrace = stacktrace();\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Prints a stacktrace along with the log. This does not use the standard \"trace\" method but\n     * derives the stacktrace from the current call stack and appends it to your log.\n     *\n     * MDN API Docs [here](https://developer.mozilla.org/en-US/docs/Web/API/Console/trace)\n     */\n    static get trace() {\n        return new this().trace;\n    }\n    /**\n     * Allows emoji's to be printed in pretty logs.\n     */\n    get withEmoji() {\n        this.modifierQueue.push([\n            'withEmoji',\n            (data, ctxt) => {\n                ctxt._cfg.withEmoji = true;\n                return data;\n            },\n        ]);\n        return this;\n    }\n    /**\n     * Allows emoji's to be printed in pretty logs.\n     */\n    static get withEmoji() {\n        return new this().withEmoji;\n    }\n    ////////////////////////////////////////////////////////\n    // Public Utility Methods\n    ////////////////////////////////////////////////////////\n    /**\n     * Prints the log to the console.\n     */\n    print(data) {\n        // Skip printing if the Adze environment is set to test.\n        if (isTestEnvironment())\n            return;\n        // Don't print if it is configured to be silent.\n        if (data.silent)\n            return;\n        // If no message, skip.\n        if (data.message.length < 1)\n            return;\n        // Only print the message with arguments if it is using a method that allows arguments.\n        if (isMethodWithArgs(data.method)) {\n            console[data.method](...data.message);\n        }\n        else {\n            console[data.method]();\n        }\n    }\n    ////////////////////////////////////////////////////////\n    // Private Methods\n    ////////////////////////////////////////////////////////\n    terminate(terminator, args) {\n        // Run the beforeTerminated middleware hooks\n        this.doHook((m) => {\n            if (m.beforeTerminated)\n                m.beforeTerminated(this, terminator, args);\n        });\n        // Run the modifier queue to modify the data object.\n        this.runModifierQueue();\n        // Get the level configuration based on the level name.\n        const level = this.getLevelConfig(terminator);\n        // Get the log formatter\n        const formatterConstructor = this.selectFormatter(this._cfg.format);\n        // Instantiate the formatter.\n        const formatter = new formatterConstructor(this._cfg, level);\n        // Generate the timestamp. Use the user configured formatter if it is set.\n        const timestamp = formatter.timestampFormatter(new Date());\n        // Create our final log data object\n        let message = cleanMessage(formatter.print(this.modifierData, timestamp, args));\n        // If dump is enabled, add the context to the message.\n        if (this._cfg.dump && this.modifierData.label?.context) {\n            message.push(this.modifierData.label.context);\n        }\n        this.doHook((m) => {\n            if (m.beforeFormatApplied) {\n                // Update the message\n                message = m.beforeFormatApplied(this, this._cfg.format, message);\n            }\n        });\n        const { activeLevel, cache, cacheSize, dump, format, meta, showTimestamp, silent, withEmoji } = this._cfg;\n        const data = {\n            activeLevel,\n            cache,\n            cacheSize,\n            dump,\n            format,\n            meta,\n            showTimestamp,\n            silent,\n            withEmoji,\n            ...level,\n            ...this._modifierData,\n            terminator,\n            args,\n            timestamp,\n            message,\n        };\n        this.doHook((m) => {\n            if (m.afterFormatApplied)\n                m.afterFormatApplied(this, this._cfg.format, message);\n        });\n        // save the data to this instance\n        this._data = data;\n        if (this._cfg.cache) {\n            this.globalStore.addLogToCache(this);\n        }\n        this.doHook((m) => {\n            if (m.beforePrint)\n                m.beforePrint(this);\n        });\n        // Print the log to the console.\n        this.print(this._data);\n        this.doHook((m) => {\n            if (m.afterTerminated)\n                m.afterTerminated(this, terminator, args);\n        });\n        // Fire all of the log listeners and pass this log instance to them.\n        this.globalStore.getListeners(level.level).forEach((listener) => {\n            listener(this);\n        });\n    }\n    /**\n     * Returns a formatter constructor based on the provided format.\n     */\n    selectFormatter(format) {\n        return this._cfg.formatters[format];\n    }\n    /**\n     * Returns the level configuration object based on the provided level name.\n     */\n    getLevelConfig(levelName) {\n        return this._cfg.levels[levelName];\n    }\n    /**\n     * Runs the modifier queue against this instance.\n     */\n    runModifierQueue() {\n        this.modifierQueue.forEach(([modName, modFunc]) => {\n            const result = modFunc(this.modifierData, this);\n            this.doHook((m) => {\n                if (m.beforeModifierApplied)\n                    m.beforeModifierApplied(this, modName, result);\n            });\n            this._modifierData = result;\n            this.doHook((m) => {\n                if (m.afterModifierApplied)\n                    m.afterModifierApplied(this, modName, result);\n            });\n        });\n    }\n    /**\n     * Execute a middleware hook.\n     */\n    doHook(cb) {\n        this._cfg.middleware?.forEach((middleware) => {\n            cb(middleware);\n        });\n    }\n}\n",
    "import { isBrowser } from './index.js';\n/**\n * Middleware abstract class that can be extended to create custom middleware.\n */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class Middleware {\n    /**\n     * The target environment for this middleware.\n     *\n     * This instructs the middleware to only load dependencies for the specified environment.\n     */\n    targetEnvironment;\n    /**\n     * The environment that the middleware is running in.\n     */\n    environment = isBrowser() ? 'browser' : 'server';\n    /**\n     * Array of asynchronous dependency loaders.\n     */\n    dependencyLoaders = [];\n    constructor(targetEnvironment) {\n        this.targetEnvironment = targetEnvironment ?? 'both';\n        if (!isBrowser() &&\n            (this.targetEnvironment === 'server' || this.targetEnvironment === 'both')) {\n            this.dependencyLoaders.push(this.loadServerDependencies());\n        }\n        if (isBrowser() &&\n            (this.targetEnvironment === 'browser' || this.targetEnvironment === 'both')) {\n            this.dependencyLoaders.push(this.loadBrowserDependencies());\n        }\n    }\n    /**\n     * Load the dependencies for this middleware.\n     */\n    async load() {\n        await Promise.all(this.dependencyLoaders);\n    }\n    /**\n     * Load dependencies for the server environment.\n     */\n    async loadServerDependencies() {\n        /* noop */\n    }\n    /**\n     * Load dependencies for the browser environment.\n     */\n    async loadBrowserDependencies() {\n        /* noop */\n    }\n}\n",
    "const styles_raw = [\n    'black',\n    'red',\n    'green',\n    'yellow',\n    'blue',\n    'magenta',\n    'cyan',\n    'white',\n    'gray',\n    'blackBright',\n    'redBright',\n    'greenBright',\n    'yellowBright',\n    'blueBright',\n    'magentaBright',\n    'cyanBright',\n    'whiteBright',\n    'bgBlack',\n    'bgRed',\n    'bgGreen',\n    'bgYellow',\n    'bgBlue',\n    'bgMagenta',\n    'bgCyan',\n    'bgWhite',\n    'bgBlackBright',\n    'bgRedBright',\n    'bgGreenBright',\n    'bgYellowBright',\n    'bgBlueBright',\n    'bgMagentaBright',\n    'bgCyanBright',\n    'bgWhiteBright',\n    'reset',\n    'bold',\n    'dim',\n    'italic',\n    'underline',\n    'inverse',\n    'hidden',\n    'strikethrough',\n];\n/**\n * Immutable array of all possible console styles.\n */\nexport const console_styles = Object.freeze(styles_raw);\n",
    "import adze from './log.js';\nexport * from './configuration.js';\nimport Formatter from './formatters/formatter.js';\nimport { setup, teardown, isBrowser, addPadding, applyStyles, formatAssert, formatCount, formatIf, formatLabel, formatNamespace, initialCaps, } from './functions/index.js';\nexport * from './middleware.js';\nexport * from './formatters/common/index.js';\nexport * from './formatters/standard/index.js';\nexport * from './formatters/json/index.js';\nimport { console_styles, } from './_types/index.js';\nexport { Formatter, addPadding, applyStyles, console_styles, formatAssert, formatCount, formatIf, formatLabel, formatNamespace, initialCaps, isBrowser, setup, teardown, };\nexport * from './constants.js';\nexport default adze;\n",
    "// Expose a tiny test hook to clear env cache in logger tests (kept internal)\n// Note: we re-export a function that clears the environment cache indirectly via getEnv\nexport const __loggerTestHooks = {\n  __noop: () => {},\n};\nimport { getEnv as getEnvironmentVar } from './utils/environment';\nimport adze, { setup } from 'adze';\n\n// ============================================================================\n// Type Definitions\n// ============================================================================\n\n/**\n * Log function signature matching Pino's API for compatibility\n */\ntype LogFn = (\n  obj: Record<string, unknown> | string | Error,\n  msg?: string,\n  ...args: unknown[]\n) => void;\n\n/**\n * Logger interface - ElizaOS standard logger API\n */\nexport interface Logger {\n  level: string;\n  trace: LogFn;\n  debug: LogFn;\n  info: LogFn;\n  warn: LogFn;\n  error: LogFn;\n  fatal: LogFn;\n  success: LogFn;\n  progress: LogFn;\n  log: LogFn;\n  clear: () => void;\n  child: (bindings: Record<string, unknown>) => Logger;\n}\n\n/**\n * Configuration for logger creation\n */\nexport interface LoggerBindings extends Record<string, unknown> {\n  level?: string;\n  namespace?: string;\n  namespaces?: string[];\n  maxMemoryLogs?: number;\n  __forceType?: 'browser' | 'node'; // For testing - forces specific environment behavior\n}\n\n/**\n * Log entry structure for in-memory storage\n */\ninterface LogEntry {\n  time: number;\n  level?: number;\n  msg: string;\n}\n\n/**\n * In-memory destination for recent logs\n */\ninterface InMemoryDestination {\n  write: (entry: LogEntry) => void;\n  clear: () => void;\n  recentLogs: () => string;\n}\n\n// ============================================================================\n// Utility Functions\n// ============================================================================\n\n/**\n * Log level priorities for filtering\n */\nconst LOG_LEVEL_PRIORITY: Record<string, number> = {\n  trace: 10,\n  verbose: 10,\n  debug: 20,\n  success: 27,\n  progress: 28,\n  log: 29,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60,\n  alert: 60,\n};\n\n/**\n * Reverse mapping from numeric level to preferred level name\n * When multiple level names have the same numeric value, we prioritize the most semantic one\n */\nconst LEVEL_TO_NAME: Record<number, string> = {\n  10: 'trace', // prefer 'trace' over 'verbose'\n  20: 'debug',\n  27: 'success',\n  28: 'progress',\n  29: 'log',\n  30: 'info',\n  40: 'warn',\n  50: 'error',\n  60: 'fatal', // prefer 'fatal' over 'alert'\n};\n\n/**\n * Check if a message should be logged based on current level\n */\nfunction shouldLog(messageLevel: string, currentLevel: string): boolean {\n  const messagePriority = LOG_LEVEL_PRIORITY[messageLevel.toLowerCase()] || 30;\n  const currentPriority = LOG_LEVEL_PRIORITY[currentLevel.toLowerCase()] || 30;\n  return messagePriority >= currentPriority;\n}\n\n/**\n * Safe JSON stringify that handles circular references\n */\nfunction safeStringify(obj: unknown): string {\n  try {\n    const seen = new WeakSet();\n    return JSON.stringify(obj, (_, value) => {\n      if (typeof value === 'object' && value !== null) {\n        if (seen.has(value)) return '[Circular]';\n        seen.add(value);\n      }\n      return value;\n    });\n  } catch {\n    return String(obj);\n  }\n}\n\n/**\n * Parse boolean from text string\n */\nfunction parseBooleanFromText(value: string | undefined | null): boolean {\n  if (!value) return false;\n  const normalized = value.toLowerCase().trim();\n  return normalized === 'true' || normalized === '1' || normalized === 'yes' || normalized === 'on';\n}\n\n// ============================================================================\n// Configuration\n// ============================================================================\n\n// Log level configuration\nconst DEFAULT_LOG_LEVEL = 'info';\nconst effectiveLogLevel = getEnvironmentVar('LOG_LEVEL') || DEFAULT_LOG_LEVEL;\n\n// Custom log levels mapping (ElizaOS to Adze)\n// Note: These are for our internal shouldLog function, not Adze's levels\nexport const customLevels: Record<string, number> = {\n  fatal: 60,\n  error: 50,\n  warn: 40,\n  info: 30,\n  log: 29,\n  progress: 28,\n  success: 27,\n  debug: 20,\n  trace: 10,\n};\n\n// Configuration flags\nconst raw = parseBooleanFromText(getEnvironmentVar('LOG_JSON_FORMAT'));\nconst showTimestamps = parseBooleanFromText(getEnvironmentVar('LOG_TIMESTAMPS') ?? 'true');\n\n// ============================================================================\n// In-Memory Log Storage\n// ============================================================================\n\n/**\n * Creates an in-memory destination for storing recent logs\n */\nfunction createInMemoryDestination(maxLogs = 100): InMemoryDestination {\n  const logs: LogEntry[] = [];\n\n  return {\n    write(entry: LogEntry): void {\n      logs.push(entry);\n      if (logs.length > maxLogs) {\n        logs.shift();\n      }\n    },\n    clear(): void {\n      logs.length = 0;\n    },\n    recentLogs(): string {\n      return logs\n        .map((entry) => {\n          const timestamp = showTimestamps ? new Date(entry.time).toISOString() : '';\n          // Convert numeric level back to string using the reverse mapping\n          const levelStr = LEVEL_TO_NAME[entry.level ?? 30] || 'info';\n          return `${timestamp} ${levelStr} ${entry.msg}`.trim();\n        })\n        .join('\\n');\n    },\n  };\n}\n\n// Global in-memory destination\nconst globalInMemoryDestination = createInMemoryDestination();\n\n// ============================================================================\n// Adze Configuration\n// ============================================================================\n\n// Configure Adze globally\n// Map ElizaOS log levels to Adze log levels\nconst getAdzeActiveLevel = () => {\n  const level = effectiveLogLevel.toLowerCase();\n  if (level === 'trace') return 'verbose';\n  if (level === 'debug') return 'debug';\n  if (level === 'log') return 'log';\n  if (level === 'info') return 'info';\n  if (level === 'warn') return 'warn';\n  if (level === 'error') return 'error';\n  if (level === 'fatal') return 'alert';\n  return 'info'; // Default to info\n};\n\nconst adzeActiveLevel = getAdzeActiveLevel();\n\n// Reusable custom level configuration - improved colors and emojis for better terminal readability\nconst customLevelConfig: Record<string, any> = {\n  alert: {\n    levelName: 'alert',\n    level: 0,\n    style: 'font-size: 12px; color: #ff0000;',\n    terminalStyle: ['bgRed' as const, 'white' as const, 'bold' as const], // Critical - keep background\n    method: 'error' as any,\n    emoji: '', // Visual scanning help\n  },\n  error: {\n    levelName: 'error',\n    level: 1,\n    style: 'font-size: 12px; color: #ff0000;',\n    terminalStyle: ['bgRed' as const, 'whiteBright' as const, 'bold' as const], // Loud and bright - white on red\n    method: 'error' as any,\n    emoji: '',\n  },\n  warn: {\n    levelName: 'warn',\n    level: 2,\n    style: 'font-size: 12px; color: #ffaa00;',\n    terminalStyle: ['bgYellow' as const, 'black' as const, 'bold' as const], // Bright but less than error - black on yellow\n    method: 'warn' as any,\n    emoji: '',\n  },\n  info: {\n    levelName: 'info',\n    level: 3,\n    style: 'font-size: 12px; color: #0099ff;',\n    terminalStyle: ['cyan' as const], // Minimal - just cyan text, no background\n    method: 'info' as any,\n    emoji: '',\n  },\n  fail: {\n    levelName: 'fail',\n    level: 4,\n    style: 'font-size: 12px; color: #ff6600;',\n    terminalStyle: ['red' as const, 'underline' as const], // Red underlined text, no background\n    method: 'error' as any,\n    emoji: '',\n  },\n  success: {\n    levelName: 'success',\n    level: 5,\n    style: 'font-size: 12px; color: #00cc00;',\n    terminalStyle: ['green' as const], // Minimal - just green text\n    method: 'log' as any,\n    emoji: '',\n  },\n  log: {\n    levelName: 'log',\n    level: 6,\n    style: 'font-size: 12px; color: #888888;',\n    terminalStyle: ['white' as const], // Minimal - just white text\n    method: 'log' as any,\n    emoji: '',\n  },\n  debug: {\n    levelName: 'debug',\n    level: 7,\n    style: 'font-size: 12px; color: #9b59b6;',\n    terminalStyle: ['gray' as const, 'dim' as const], // Dark and subtle since off by default\n    method: 'debug' as any,\n    emoji: '',\n  },\n  verbose: {\n    levelName: 'verbose',\n    level: 8,\n    style: 'font-size: 12px; color: #666666;',\n    terminalStyle: ['gray' as const, 'dim' as const, 'italic' as const], // Very subtle\n    method: 'debug' as any,\n    emoji: '',\n  },\n};\n\nconst adzeStore = setup({\n  activeLevel: adzeActiveLevel,\n  format: raw ? 'json' : 'pretty',\n  timestampFormatter: showTimestamps ? undefined : () => '',\n  withEmoji: false,\n  levels: customLevelConfig,\n});\n\n// Mirror Adze output to in-memory storage\nadzeStore.addListener('*', (log: any) => {\n  try {\n    const d = log.data;\n    const msg = Array.isArray(d?.message)\n      ? d.message.map((m: unknown) => (typeof m === 'string' ? m : safeStringify(m))).join(' ')\n      : typeof d?.message === 'string'\n        ? d.message\n        : '';\n\n    const entry: LogEntry = {\n      time: Date.now(),\n      level: typeof d?.level === 'number' ? d.level : undefined,\n      msg,\n    };\n    globalInMemoryDestination.write(entry);\n  } catch {\n    // Silent fail - don't break logging\n  }\n});\n\n// ============================================================================\n// Logger Factory\n// ============================================================================\n\n/**\n * Creates a sealed Adze logger instance with namespaces and metadata\n */\nfunction sealAdze(base: Record<string, unknown>): ReturnType<typeof adze.seal> {\n  let chain = adze as any;\n\n  // Add namespaces if provided\n  const namespaces: string[] = [];\n  if (typeof base.namespace === 'string') namespaces.push(base.namespace);\n  if (Array.isArray(base.namespaces)) namespaces.push(...(base.namespaces as string[]));\n  if (namespaces.length > 0) {\n    chain = chain.ns(...namespaces);\n  }\n\n  // Add metadata (excluding namespace properties)\n  const metaBase = { ...base };\n  delete (metaBase as any).namespace;\n  delete (metaBase as any).namespaces;\n\n  // Add required fields for JSON format if not provided\n  if (raw) {\n    // Only add defaults if user hasn't provided them\n    if (!metaBase.name) {\n      metaBase.name = 'elizaos';\n    }\n    if (!metaBase.hostname) {\n      // Get hostname in a way that works in both Node and browser\n      let hostname = 'unknown';\n      if (typeof process !== 'undefined' && process.platform) {\n        // Node.js environment\n        try {\n          const os = require('os');\n          hostname = os.hostname();\n        } catch {\n          // Fallback if os module not available\n          hostname = 'localhost';\n        }\n      } else if (typeof window !== 'undefined' && window.location) {\n        // Browser environment\n        hostname = window.location.hostname || 'browser';\n      }\n      metaBase.hostname = hostname;\n    }\n  }\n\n  // This ensures the sealed logger inherits the correct log level and styling\n  const globalConfig = {\n    activeLevel: getAdzeActiveLevel(),\n    format: raw ? 'json' : 'pretty',\n    timestampFormatter: showTimestamps ? undefined : () => '',\n    withEmoji: false,\n    levels: customLevelConfig, // Use same reusable config\n  };\n\n  return chain.meta(metaBase).seal(globalConfig);\n}\n\n/**\n * Extract configuration from bindings\n */\nfunction extractBindingsConfig(bindings: LoggerBindings | boolean): {\n  level: string;\n  base: Record<string, unknown>;\n  maxMemoryLogs?: number;\n} {\n  let level = effectiveLogLevel;\n  let base: Record<string, unknown> = {};\n  let maxMemoryLogs: number | undefined;\n\n  if (typeof bindings === 'object' && bindings !== null) {\n    if ('level' in bindings) {\n      level = bindings.level as string;\n    }\n    if ('maxMemoryLogs' in bindings && typeof bindings.maxMemoryLogs === 'number') {\n      maxMemoryLogs = bindings.maxMemoryLogs;\n    }\n\n    // Extract base bindings (excluding special properties)\n    const { level: _, maxMemoryLogs: __, ...rest } = bindings;\n    base = rest;\n  }\n\n  return { level, base, maxMemoryLogs };\n}\n\n/**\n * Creates a logger instance using Adze\n * @param bindings - Logger configuration or boolean flag\n * @returns Logger instance with ElizaOS API\n */\nfunction createLogger(bindings: LoggerBindings | boolean = false): Logger {\n  const { level, base, maxMemoryLogs } = extractBindingsConfig(bindings);\n\n  // Reset memory buffer if custom limit requested\n  if (typeof maxMemoryLogs === 'number' && maxMemoryLogs > 0) {\n    globalInMemoryDestination.clear();\n  }\n\n  // Check if we should force browser behavior (for testing)\n  const forceBrowser =\n    typeof bindings === 'object' &&\n    bindings &&\n    '__forceType' in bindings &&\n    bindings.__forceType === 'browser';\n\n  // If forcing browser mode, create a simple console-based logger\n  if (forceBrowser) {\n    const levelStr = typeof level === 'number' ? 'info' : level || effectiveLogLevel;\n    const currentLevel = levelStr.toLowerCase();\n\n    const formatArgs = (...args: unknown[]): string => {\n      return args\n        .map((arg) => {\n          if (typeof arg === 'string') return arg;\n          if (arg instanceof Error) return arg.message;\n          return safeStringify(arg);\n        })\n        .join(' ');\n    };\n\n    const logToConsole = (method: string, ...args: unknown[]): void => {\n      if (!shouldLog(method, currentLevel)) {\n        return;\n      }\n\n      const message = formatArgs(...args);\n      const consoleMethod =\n        method === 'fatal'\n          ? 'error'\n          : method === 'trace' || method === 'verbose'\n            ? 'debug'\n            : method === 'success' || method === 'progress'\n              ? 'info'\n              : method === 'log'\n                ? 'log'\n                : (console as any)[method]\n                  ? method\n                  : 'log';\n\n      if (typeof (console as any)[consoleMethod] === 'function') {\n        (console as any)[consoleMethod](message);\n      }\n    };\n\n    const adaptArgs = (\n      obj: Record<string, unknown> | string | Error,\n      msg?: string,\n      ...args: unknown[]\n    ): unknown[] => {\n      if (typeof obj === 'string') {\n        return msg !== undefined ? [obj, msg, ...args] : [obj, ...args];\n      }\n      if (obj instanceof Error) {\n        return msg !== undefined ? [obj.message, msg, ...args] : [obj.message, ...args];\n      }\n      if (msg !== undefined) {\n        return [msg, obj, ...args];\n      }\n      return [obj, ...args];\n    };\n\n    return {\n      level: currentLevel,\n      trace: (obj, msg, ...args) => logToConsole('trace', ...adaptArgs(obj, msg, ...args)),\n      debug: (obj, msg, ...args) => logToConsole('debug', ...adaptArgs(obj, msg, ...args)),\n      info: (obj, msg, ...args) => logToConsole('info', ...adaptArgs(obj, msg, ...args)),\n      warn: (obj, msg, ...args) => logToConsole('warn', ...adaptArgs(obj, msg, ...args)),\n      error: (obj, msg, ...args) => logToConsole('error', ...adaptArgs(obj, msg, ...args)),\n      fatal: (obj, msg, ...args) => logToConsole('fatal', ...adaptArgs(obj, msg, ...args)),\n      success: (obj, msg, ...args) => logToConsole('success', ...adaptArgs(obj, msg, ...args)),\n      progress: (obj, msg, ...args) => logToConsole('progress', ...adaptArgs(obj, msg, ...args)),\n      log: (obj, msg, ...args) => logToConsole('log', ...adaptArgs(obj, msg, ...args)),\n      clear: () => {\n        if (typeof console.clear === 'function') console.clear();\n      },\n      child: (childBindings: Record<string, unknown>) =>\n        createLogger({ level: currentLevel, ...base, ...childBindings, __forceType: 'browser' }),\n    };\n  }\n\n  // Create sealed Adze instance with configuration\n  const sealed = sealAdze(base);\n  const levelStr = typeof level === 'number' ? 'info' : level || effectiveLogLevel;\n  const currentLevel = levelStr.toLowerCase();\n\n  // No-op: previously captured to Sentry; removed for browser compatibility\n  const captureIfError = (_method: string, _args: unknown[]): void => {};\n\n  /**\n   * Invoke Adze method with error capture\n   */\n  const invoke = (method: string, ...args: unknown[]): void => {\n    // Check if this log level should be output\n    if (!shouldLog(method, currentLevel)) {\n      return;\n    }\n\n    // Ensure Sentry sees the semantic level name (e.g., 'fatal')\n    captureIfError(method, args);\n\n    // Capture to in-memory destination for API access (even for namespaced loggers)\n    try {\n      let msg = '';\n      if (args.length > 0) {\n        msg = args\n          .map((arg) => {\n            if (typeof arg === 'string') return arg;\n            if (arg instanceof Error) return arg.message;\n            return safeStringify(arg);\n          })\n          .join(' ');\n      }\n\n      // Include namespace in the message if present\n      if (base.namespace) {\n        msg = `#${base.namespace}  ${msg}`;\n      }\n\n      const entry: LogEntry = {\n        time: Date.now(),\n        level: LOG_LEVEL_PRIORITY[method.toLowerCase()] || LOG_LEVEL_PRIORITY.info,\n        msg,\n      };\n\n      globalInMemoryDestination.write(entry);\n    } catch {\n      // Silent fail - don't break logging\n    }\n\n    // Map Eliza methods to correct Adze invocations\n    let adzeMethod = method;\n    let adzeArgs = args;\n\n    // Normalize special cases - map our custom levels to Adze levels\n    if (method === 'fatal') {\n      // Adze uses 'alert' for fatal-level logging\n      adzeMethod = 'alert';\n    } else if (method === 'progress') {\n      // Map progress to info level with a prefix\n      adzeMethod = 'info';\n      adzeArgs = ['[PROGRESS]', ...args];\n    } else if (method === 'success') {\n      // Map success to info level with a prefix\n      adzeMethod = 'info';\n      adzeArgs = ['[SUCCESS]', ...args];\n    } else if (method === 'trace') {\n      // Map trace to verbose\n      adzeMethod = 'verbose';\n    }\n\n    try {\n      (sealed as any)[adzeMethod](...adzeArgs);\n    } catch (error) {\n      // Fallback to console if Adze fails\n      console.log(`[${method.toUpperCase()}]`, ...args);\n    }\n  };\n\n  /**\n   * Adapt ElizaOS logger API arguments to Adze format\n   */\n  const adaptArgs = (\n    obj: Record<string, unknown> | string | Error,\n    msg?: string,\n    ...args: unknown[]\n  ): unknown[] => {\n    // String first argument\n    if (typeof obj === 'string') {\n      return msg !== undefined ? [obj, msg, ...args] : [obj, ...args];\n    }\n    // Error object\n    if (obj instanceof Error) {\n      return msg !== undefined\n        ? [obj.message, { error: obj }, msg, ...args]\n        : [obj.message, { error: obj }, ...args];\n    }\n    // Object (context) - put message first if provided\n    if (msg !== undefined) {\n      return [msg, obj, ...args];\n    }\n    return [obj, ...args];\n  };\n\n  // Create log methods\n  const trace: LogFn = (obj, msg, ...args) => invoke('verbose', ...adaptArgs(obj, msg, ...args));\n  const debug: LogFn = (obj, msg, ...args) => invoke('debug', ...adaptArgs(obj, msg, ...args));\n  const info: LogFn = (obj, msg, ...args) => invoke('info', ...adaptArgs(obj, msg, ...args));\n  const warn: LogFn = (obj, msg, ...args) => invoke('warn', ...adaptArgs(obj, msg, ...args));\n  const error: LogFn = (obj, msg, ...args) => invoke('error', ...adaptArgs(obj, msg, ...args));\n  const fatal: LogFn = (obj, msg, ...args) => invoke('fatal', ...adaptArgs(obj, msg, ...args));\n  const success: LogFn = (obj, msg, ...args) => invoke('success', ...adaptArgs(obj, msg, ...args));\n  const progress: LogFn = (obj, msg, ...args) =>\n    invoke('progress', ...adaptArgs(obj, msg, ...args));\n  const logFn: LogFn = (obj, msg, ...args) => invoke('log', ...adaptArgs(obj, msg, ...args));\n\n  /**\n   * Clear console and memory buffer\n   */\n  const clear = (): void => {\n    try {\n      if (typeof console?.clear === 'function') {\n        console.clear();\n      }\n    } catch {\n      // Silent fail\n    }\n    globalInMemoryDestination.clear();\n  };\n\n  /**\n   * Create child logger with additional bindings\n   */\n  const child = (childBindings: Record<string, unknown>): Logger => {\n    return createLogger({ level: currentLevel, ...base, ...childBindings });\n  };\n\n  return {\n    level: currentLevel,\n    trace,\n    debug,\n    info,\n    warn,\n    error,\n    fatal,\n    success,\n    progress,\n    log: logFn,\n    clear,\n    child,\n  };\n}\n\n// ============================================================================\n// Exports\n// ============================================================================\n\n// Create default logger instance\nconst logger = createLogger();\n\n// Backward compatibility alias\nexport const elizaLogger = logger;\n\n// Export recent logs function\nexport const recentLogs = (): string => globalInMemoryDestination.recentLogs();\n\n// Export everything\nexport { logger, createLogger };\nexport default logger;\n",
    "import { z } from 'zod';\nimport type { Character } from '../types/agent';\n\n// UUID validation schema\nconst uuidSchema = z\n  .string()\n  .regex(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i, 'Invalid UUID format');\n\n// Message content schema matching the Content interface\nconst contentSchema = z\n  .object({\n    text: z.string().optional(),\n    thought: z.string().optional(),\n    actions: z.array(z.string()).optional(),\n    providers: z.array(z.string()).optional(),\n    source: z.string().optional(),\n    target: z.string().optional(),\n    url: z.string().optional(),\n    inReplyTo: uuidSchema.optional(),\n    attachments: z.array(z.any()).optional(),\n    channelType: z.string().optional(),\n  })\n  .passthrough(); // Allow additional properties\n\n// MessageExample schema\nconst messageExampleSchema = z.object({\n  name: z.string(),\n  content: contentSchema,\n});\n\n// DirectoryItem schema\nconst directoryItemSchema = z.object({\n  directory: z.string(),\n  shared: z.boolean().optional(),\n});\n\n// Knowledge item can be a string, object with path, or DirectoryItem\nconst knowledgeItemSchema = z.union([\n  z.string(),\n  z.object({\n    path: z.string(),\n    shared: z.boolean().optional(),\n  }),\n  directoryItemSchema,\n]);\n\n// TemplateType schema - can be string or function (we'll validate as string for JSON)\nconst templateTypeSchema = z.union([\n  z.string(),\n  z.function().optional(), // Functions won't be in JSON but allowed in runtime\n]);\n\n// Style configuration schema\nconst styleSchema = z\n  .object({\n    all: z.array(z.string()).optional(),\n    chat: z.array(z.string()).optional(),\n    post: z.array(z.string()).optional(),\n  })\n  .optional();\n\n// Settings schema - flexible object\nconst settingsSchema = z.record(z.union([z.string(), z.boolean(), z.number(), z.any()])).optional();\n\n// Secrets schema\nconst secretsSchema = z.record(z.union([z.string(), z.boolean(), z.number()])).optional();\n\n// Main Character schema\nexport const characterSchema = z\n  .object({\n    id: uuidSchema.optional(),\n    name: z.string().min(1, 'Character name is required'),\n    username: z.string().optional(),\n    system: z.string().optional(),\n    templates: z.record(templateTypeSchema).optional(),\n    bio: z.union([z.string(), z.array(z.string())]),\n    messageExamples: z.array(z.array(messageExampleSchema)).optional(),\n    postExamples: z.array(z.string()).optional(),\n    topics: z.array(z.string()).optional(),\n    adjectives: z.array(z.string()).optional(),\n    knowledge: z.array(knowledgeItemSchema).optional(),\n    plugins: z.array(z.string()).optional(),\n    settings: settingsSchema,\n    secrets: secretsSchema,\n    style: styleSchema,\n  })\n  .strict(); // Only allow known properties\n\n// Validation result type\nexport interface CharacterValidationResult {\n  success: boolean;\n  data?: Character;\n  error?: {\n    message: string;\n    issues?: z.ZodIssue[];\n  };\n}\n\n/**\n * Safely validates character data using Zod schema\n * @param data - Raw character data to validate\n * @returns Validation result with success flag and either data or error\n */\nexport function validateCharacter(data: unknown): CharacterValidationResult {\n  const result = characterSchema.safeParse(data);\n\n  if (result.success) {\n    return {\n      success: true,\n      data: result.data as Character,\n    };\n  }\n\n  return {\n    success: false,\n    error: {\n      message: `Character validation failed: ${result.error.message}`,\n      issues: result.error.issues,\n    },\n  };\n}\n\n/**\n * Safely parses JSON string and validates as character\n * @param jsonString - JSON string to parse and validate\n * @returns Validation result with success flag and either data or error\n */\nexport function parseAndValidateCharacter(jsonString: string): CharacterValidationResult {\n  try {\n    const parsed = JSON.parse(jsonString);\n    return validateCharacter(parsed);\n  } catch (error) {\n    return {\n      success: false,\n      error: {\n        message: `Invalid JSON: ${error instanceof Error ? error.message : 'Unknown JSON parsing error'}`,\n      },\n    };\n  }\n}\n\n/**\n * Type guard to check if data is a valid Character\n * @param data - Data to check\n * @returns True if data is a valid Character\n */\nexport function isValidCharacter(data: unknown): data is Character {\n  return validateCharacter(data).success;\n}\n",
    "/**\n * Browser and Node.js compatible buffer abstraction\n * This module provides a unified interface for buffer operations\n * that works in both browser and Node.js environments.\n *\n * In browsers, we use Uint8Array as a Buffer replacement.\n * In Node.js, we use the native Buffer.\n */\n\n/**\n * Type representing a buffer-like object that works in both environments\n */\nexport type BufferLike = Buffer | Uint8Array;\n\n/**\n * Check if we're in a Node.js environment with Buffer support\n */\nfunction hasNativeBuffer(): boolean {\n  return typeof Buffer !== 'undefined' && typeof Buffer.from === 'function';\n}\n\n/**\n * Convert a hex string to a buffer-like object\n * @param hex - The hexadecimal string to convert\n * @returns A BufferLike object\n */\nexport function fromHex(hex: string): BufferLike {\n  // Clean the hex string to remove non-hex characters\n  const cleanHex = hex.replace(/[^0-9a-fA-F]/g, '');\n\n  if (hasNativeBuffer()) {\n    // Use native Buffer in Node.js\n    return Buffer.from(cleanHex, 'hex');\n  }\n\n  // Browser implementation using Uint8Array\n  const bytes = new Uint8Array(cleanHex.length / 2);\n\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = parseInt(cleanHex.substr(i * 2, 2), 16);\n  }\n\n  return bytes;\n}\n\n/**\n * Convert a string to a buffer-like object\n * @param str - The string to convert\n * @param encoding - The encoding to use (default: 'utf8')\n * @returns A BufferLike object\n */\nexport function fromString(\n  str: string,\n  encoding: 'utf8' | 'utf-8' | 'base64' = 'utf8'\n): BufferLike {\n  if (hasNativeBuffer()) {\n    // Use native Buffer in Node.js\n    const enc = encoding === 'utf-8' ? 'utf8' : encoding;\n    return Buffer.from(str, enc as BufferEncoding);\n  }\n\n  // Browser implementation\n  if (encoding === 'base64') {\n    // Decode base64 string\n    const binaryString = atob(str);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n  }\n\n  // UTF-8 encoding using TextEncoder (standard browser API)\n  const encoder = new TextEncoder();\n  return encoder.encode(str);\n}\n\n/**\n * Convert a buffer-like object to a hexadecimal string\n * @param buffer - The buffer to convert\n * @returns A hexadecimal string\n */\nexport function toHex(buffer: BufferLike): string {\n  if (hasNativeBuffer() && Buffer.isBuffer(buffer)) {\n    // Use native Buffer method in Node.js\n    return buffer.toString('hex');\n  }\n\n  // Browser implementation\n  const bytes = buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer);\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    const byte = bytes[i].toString(16);\n    hex += byte.length === 1 ? '0' + byte : byte;\n  }\n  return hex;\n}\n\n/**\n * Convert a buffer-like object to a string\n * @param buffer - The buffer to convert\n * @param encoding - The encoding to use (default: 'utf8')\n * @returns A string\n */\nexport function toString(\n  buffer: BufferLike,\n  encoding: 'utf8' | 'utf-8' | 'base64' | 'hex' = 'utf8'\n): string {\n  if (hasNativeBuffer() && Buffer.isBuffer(buffer)) {\n    // Use native Buffer method in Node.js\n    const enc = encoding === 'utf-8' ? 'utf8' : encoding;\n    return buffer.toString(enc as BufferEncoding);\n  }\n\n  const bytes = buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer);\n\n  // Handle different encodings\n  if (encoding === 'hex') {\n    return toHex(bytes);\n  }\n\n  if (encoding === 'base64') {\n    // Convert to base64\n    let binaryString = '';\n    for (let i = 0; i < bytes.length; i++) {\n      binaryString += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binaryString);\n  }\n\n  // UTF-8 decoding using TextDecoder (standard browser API)\n  const decoder = new TextDecoder();\n  return decoder.decode(bytes);\n}\n\n/**\n * Check if an object is a Buffer or buffer-like object\n * @param obj - The object to check\n * @returns True if the object is buffer-like\n */\nexport function isBuffer(obj: any): obj is BufferLike {\n  if (!obj) {\n    return false;\n  }\n\n  if (hasNativeBuffer() && Buffer.isBuffer(obj)) {\n    return true;\n  }\n\n  // Check for Uint8Array or similar typed arrays\n  return (\n    obj instanceof Uint8Array ||\n    obj instanceof ArrayBuffer ||\n    (typeof obj === 'object' &&\n      obj.buffer instanceof ArrayBuffer &&\n      typeof obj.byteLength === 'number' &&\n      !Array.isArray(obj))\n  );\n}\n\n/**\n * Create a buffer of a specific size filled with zeros\n * @param size - The size of the buffer\n * @returns A BufferLike object\n */\nexport function alloc(size: number): BufferLike {\n  if (hasNativeBuffer()) {\n    return Buffer.alloc(size);\n  }\n\n  return new Uint8Array(size);\n}\n\n/**\n * Create a buffer from an array of bytes\n * @param bytes - Array of byte values\n * @returns A BufferLike object\n */\nexport function fromBytes(bytes: number[] | Uint8Array): BufferLike {\n  if (hasNativeBuffer()) {\n    return Buffer.from(bytes);\n  }\n\n  return new Uint8Array(bytes);\n}\n\n/**\n * Concatenate multiple buffers\n * @param buffers - Array of buffers to concatenate\n * @returns A new BufferLike object\n */\nexport function concat(buffers: BufferLike[]): BufferLike {\n  if (hasNativeBuffer() && buffers.every((b) => Buffer.isBuffer(b))) {\n    return Buffer.concat(buffers as Buffer[]);\n  }\n\n  // Calculate total length\n  let totalLength = 0;\n  for (const buffer of buffers) {\n    totalLength += buffer.length;\n  }\n\n  // Create result buffer\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n\n  for (const buffer of buffers) {\n    const bytes = buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer);\n    result.set(bytes, offset);\n    offset += bytes.length;\n  }\n\n  return result;\n}\n\n/**\n * Slice a buffer to create a new buffer\n * @param buffer - The buffer to slice\n * @param start - Start index\n * @param end - End index (optional)\n * @returns A new BufferLike object\n */\nexport function slice(buffer: BufferLike, start: number, end?: number): BufferLike {\n  if (hasNativeBuffer() && Buffer.isBuffer(buffer)) {\n    return buffer.slice(start, end);\n  }\n\n  const bytes = buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer);\n  return bytes.slice(start, end);\n}\n\n/**\n * Compare two buffers for equality\n * @param a - First buffer\n * @param b - Second buffer\n * @returns True if buffers are equal\n */\nexport function equals(a: BufferLike, b: BufferLike): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  const bytesA = a instanceof Uint8Array ? a : new Uint8Array(a);\n  const bytesB = b instanceof Uint8Array ? b : new Uint8Array(b);\n\n  for (let i = 0; i < bytesA.length; i++) {\n    if (bytesA[i] !== bytesB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Get the byte length of a buffer\n * @param buffer - The buffer\n * @returns The byte length\n */\nexport function byteLength(buffer: BufferLike): number {\n  return buffer.length;\n}\n\n/**\n * Create a random buffer of specified size\n * @param size - The size of the buffer\n * @returns A BufferLike object filled with random bytes\n */\nexport function randomBytes(size: number): BufferLike {\n  if (hasNativeBuffer()) {\n    // In Node.js, use crypto.randomBytes if available\n    try {\n      const crypto = require('crypto');\n      return crypto.randomBytes(size);\n    } catch {\n      // Fall back to manual generation\n    }\n  }\n\n  // Browser implementation using crypto.getRandomValues\n  const bytes = new Uint8Array(size);\n\n  if (typeof globalThis !== 'undefined' && globalThis.crypto && globalThis.crypto.getRandomValues) {\n    globalThis.crypto.getRandomValues(bytes);\n  } else {\n    // Fallback: less secure random generation\n    for (let i = 0; i < size; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n  }\n\n  return bytes;\n}\n\n// Export a namespace-like object for compatibility\nexport const BufferUtils = {\n  fromHex,\n  fromString,\n  fromBytes,\n  toHex,\n  toString,\n  isBuffer,\n  alloc,\n  concat,\n  slice,\n  equals,\n  byteLength,\n  randomBytes,\n};\n\n// Export type for use in other modules\nexport type { BufferLike as Buffer };\n",
    "/**\n * Server health check utilities for waiting for servers to be ready\n */\n\nexport interface ServerHealthOptions {\n  port: number;\n  endpoint?: string;\n  maxWaitTime?: number;\n  pollInterval?: number;\n  requestTimeout?: number;\n  host?: string;\n  protocol?: 'http' | 'https';\n}\n\n/**\n * Wait for server to be ready by polling health endpoint\n * @param options - Configuration options for server health check\n */\nexport async function waitForServerReady(options: ServerHealthOptions): Promise<void> {\n  const {\n    port,\n    endpoint = '/api/agents',\n    maxWaitTime = 30000, // 30 seconds default\n    pollInterval = 1000, // 1 second\n    requestTimeout = 2000, // 2 seconds\n    host = 'localhost',\n    protocol = 'http',\n  } = options;\n\n  const url = `${protocol}://${host}:${port}${endpoint}`;\n  const startTime = Date.now();\n\n  while (Date.now() - startTime < maxWaitTime) {\n    let controller: AbortController | undefined;\n    let timeoutId: NodeJS.Timeout | undefined;\n\n    try {\n      controller = new AbortController();\n      timeoutId = setTimeout(() => {\n        if (controller) {\n          controller.abort();\n        }\n      }, requestTimeout);\n\n      const response = await fetch(url, {\n        signal: controller.signal,\n      });\n\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = undefined;\n      }\n\n      if (response.ok) {\n        // Server is ready, give it one more second to stabilize\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n        return;\n      }\n    } catch (error) {\n      // Server not ready yet, continue polling\n    } finally {\n      // Ensure cleanup happens even if there's an exception\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, pollInterval));\n  }\n\n  throw new Error(`Server failed to become ready at ${url} within ${maxWaitTime}ms`);\n}\n\n/**\n * Simple ping check for server availability (no stabilization wait)\n * @param options - Configuration options for server ping\n */\nexport async function pingServer(options: ServerHealthOptions): Promise<boolean> {\n  const {\n    port,\n    endpoint = '/api/agents',\n    requestTimeout = 2000,\n    host = 'localhost',\n    protocol = 'http',\n  } = options;\n\n  const url = `${protocol}://${host}:${port}${endpoint}`;\n  let controller: AbortController | undefined;\n  let timeoutId: NodeJS.Timeout | undefined;\n\n  try {\n    controller = new AbortController();\n    timeoutId = setTimeout(() => {\n      if (controller) {\n        controller.abort();\n      }\n    }, requestTimeout);\n\n    const response = await fetch(url, {\n      signal: controller.signal,\n    });\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n    }\n\n    return response.ok;\n  } catch (error) {\n    return false;\n  } finally {\n    // Ensure cleanup happens even if there's an exception\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n}\n",
    "/**\n * ElizaOS data directory paths configuration\n * This module provides a unified interface for accessing data directory paths\n * that can be customized via environment variables.\n */\n\nimport path from 'node:path';\n\n/**\n * Interface for ElizaOS paths configuration\n */\nexport interface ElizaPathsConfig {\n  dataDir: string;\n  databaseDir: string;\n  charactersDir: string;\n  generatedDir: string;\n  uploadsAgentsDir: string;\n  uploadsChannelsDir: string;\n}\n\n/**\n * ElizaOS paths management class\n * Provides centralized access to all ElizaOS data directory paths\n */\nclass ElizaPaths {\n  private cache: Map<string, string> = new Map();\n\n  /**\n   * Get the base data directory\n   */\n  getDataDir(): string {\n    const cached = this.cache.get('dataDir');\n    if (cached) return cached;\n\n    const dir = process.env.ELIZA_DATA_DIR || path.join(process.cwd(), '.eliza');\n    this.cache.set('dataDir', dir);\n    return dir;\n  }\n\n  /**\n   * Get the database directory (backward compatible with PGLITE_DATA_DIR)\n   */\n  getDatabaseDir(): string {\n    const cached = this.cache.get('databaseDir');\n    if (cached) return cached;\n\n    const dir =\n      process.env.ELIZA_DATABASE_DIR ||\n      process.env.PGLITE_DATA_DIR ||\n      path.join(this.getDataDir(), '.elizadb');\n    this.cache.set('databaseDir', dir);\n    return dir;\n  }\n\n  /**\n   * Get the characters storage directory\n   */\n  getCharactersDir(): string {\n    const cached = this.cache.get('charactersDir');\n    if (cached) return cached;\n\n    const dir =\n      process.env.ELIZA_DATA_DIR_CHARACTERS || path.join(this.getDataDir(), 'data', 'characters');\n    this.cache.set('charactersDir', dir);\n    return dir;\n  }\n\n  /**\n   * Get the AI-generated content directory\n   */\n  getGeneratedDir(): string {\n    const cached = this.cache.get('generatedDir');\n    if (cached) return cached;\n\n    const dir =\n      process.env.ELIZA_DATA_DIR_GENERATED || path.join(this.getDataDir(), 'data', 'generated');\n    this.cache.set('generatedDir', dir);\n    return dir;\n  }\n\n  /**\n   * Get the agent uploads directory\n   */\n  getUploadsAgentsDir(): string {\n    const cached = this.cache.get('uploadsAgentsDir');\n    if (cached) return cached;\n\n    const dir =\n      process.env.ELIZA_DATA_DIR_UPLOADS_AGENTS ||\n      path.join(this.getDataDir(), 'data', 'uploads', 'agents');\n    this.cache.set('uploadsAgentsDir', dir);\n    return dir;\n  }\n\n  /**\n   * Get the channel uploads directory\n   */\n  getUploadsChannelsDir(): string {\n    const cached = this.cache.get('uploadsChannelsDir');\n    if (cached) return cached;\n\n    const dir =\n      process.env.ELIZA_DATA_DIR_UPLOADS_CHANNELS ||\n      path.join(this.getDataDir(), 'data', 'uploads', 'channels');\n    this.cache.set('uploadsChannelsDir', dir);\n    return dir;\n  }\n\n  /**\n   * Get all paths as a configuration object\n   */\n  getAllPaths(): ElizaPathsConfig {\n    return {\n      dataDir: this.getDataDir(),\n      databaseDir: this.getDatabaseDir(),\n      charactersDir: this.getCharactersDir(),\n      generatedDir: this.getGeneratedDir(),\n      uploadsAgentsDir: this.getUploadsAgentsDir(),\n      uploadsChannelsDir: this.getUploadsChannelsDir(),\n    };\n  }\n\n  /**\n   * Clear the cache (useful for testing)\n   */\n  clearCache(): void {\n    this.cache.clear();\n  }\n}\n\n/**\n * Singleton instance of the ElizaPaths class\n */\nlet pathsInstance: ElizaPaths | null = null;\n\n/**\n * Get the singleton ElizaPaths instance\n */\nexport function getElizaPaths(): ElizaPaths {\n  if (!pathsInstance) {\n    pathsInstance = new ElizaPaths();\n  }\n  return pathsInstance;\n}\n\n/**\n * Convenience function to get the data directory\n */\nexport function getDataDir(): string {\n  return getElizaPaths().getDataDir();\n}\n\n/**\n * Convenience function to get the database directory\n */\nexport function getDatabaseDir(): string {\n  return getElizaPaths().getDatabaseDir();\n}\n\n/**\n * Convenience function to get the characters directory\n */\nexport function getCharactersDir(): string {\n  return getElizaPaths().getCharactersDir();\n}\n\n/**\n * Convenience function to get the generated content directory\n */\nexport function getGeneratedDir(): string {\n  return getElizaPaths().getGeneratedDir();\n}\n\n/**\n * Convenience function to get the agent uploads directory\n */\nexport function getUploadsAgentsDir(): string {\n  return getElizaPaths().getUploadsAgentsDir();\n}\n\n/**\n * Convenience function to get the channel uploads directory\n */\nexport function getUploadsChannelsDir(): string {\n  return getElizaPaths().getUploadsChannelsDir();\n}\n\n/**\n * Convenience function to get all paths\n */\nexport function getAllElizaPaths(): ElizaPathsConfig {\n  return getElizaPaths().getAllPaths();\n}\n\n/**\n * Reset the singleton instance (mainly for testing)\n */\nexport function resetPaths(): void {\n  if (pathsInstance) {\n    pathsInstance.clearCache();\n  }\n  pathsInstance = null;\n}\n",
    "import { names, uniqueNamesGenerator } from 'unique-names-generator';\nimport type { Action, ActionExample } from './types';\n\n/**\n * Composes a set of example conversations based on provided actions and a specified count.\n * It randomly selects examples from the provided actions and formats them with generated names.\n *\n * @param actionsData - An array of `Action` objects from which to draw examples.\n * @param count - The number of examples to generate.\n * @returns A string containing formatted examples of conversations.\n */\nexport const composeActionExamples = (actionsData: Action[], count: number): string => {\n  // Handle edge cases\n  if (!actionsData.length || count <= 0) {\n    return '';\n  }\n\n  // Filter out actions without examples\n  const actionsWithExamples = actionsData.filter(\n    (action) => action.examples && Array.isArray(action.examples) && action.examples.length > 0\n  );\n\n  // If no actions have examples, return empty string\n  if (!actionsWithExamples.length) {\n    return '';\n  }\n\n  // Create a working copy of the examples\n  const examplesCopy: ActionExample[][][] = actionsWithExamples.map((action) => [\n    ...(action.examples || []),\n  ]);\n\n  const selectedExamples: ActionExample[][] = [];\n\n  // Keep track of actions that still have examples\n  let availableActionIndices = examplesCopy\n    .map((examples, index) => (examples.length > 0 ? index : -1))\n    .filter((index) => index !== -1);\n\n  // Select examples until we reach the count or run out of examples\n  while (selectedExamples.length < count && availableActionIndices.length > 0) {\n    // Randomly select an action\n    const randomIndex = Math.floor(Math.random() * availableActionIndices.length);\n    const actionIndex = availableActionIndices[randomIndex];\n    const examples = examplesCopy[actionIndex];\n\n    // Select a random example from this action\n    const exampleIndex = Math.floor(Math.random() * examples.length);\n    selectedExamples.push(examples.splice(exampleIndex, 1)[0]);\n\n    // Remove action if it has no more examples\n    if (examples.length === 0) {\n      availableActionIndices.splice(randomIndex, 1);\n    }\n  }\n\n  // Format the selected examples\n  return formatSelectedExamples(selectedExamples);\n};\n\n/**\n * Formats selected example conversations with random names.\n */\nconst formatSelectedExamples = (examples: ActionExample[][]): string => {\n  const MAX_NAME_PLACEHOLDERS = 5;\n\n  return examples\n    .map((example) => {\n      // Generate random names for this example\n      const randomNames = Array.from({ length: MAX_NAME_PLACEHOLDERS }, () =>\n        uniqueNamesGenerator({ dictionaries: [names] })\n      );\n\n      // Format the conversation\n      const conversation = example\n        .map((message) => {\n          // Build the base message - only include the text, no action info\n          let messageText = `${message.name}: ${message.content.text}`;\n\n          // Replace name placeholders\n          for (let i = 0; i < randomNames.length; i++) {\n            messageText = messageText.replaceAll(`{{name${i + 1}}}`, randomNames[i]);\n          }\n\n          return messageText;\n        })\n        .join('\\n');\n\n      return `\\n${conversation}`;\n    })\n    .join('\\n');\n};\n\n/**\n * Formats the names of the provided actions into a comma-separated string.\n * @param actions - An array of `Action` objects from which to extract names.\n * @returns A comma-separated string of action names.\n */\nexport function formatActionNames(actions: Action[]): string {\n  if (!actions?.length) return '';\n\n  // Create a shuffled copy instead of mutating the original array\n  return [...actions]\n    .sort(() => Math.random() - 0.5)\n    .map((action) => action.name)\n    .join(', ');\n}\n\n/**\n * Formats the provided actions into a detailed string listing each action's name and description.\n * @param actions - An array of `Action` objects to format.\n * @returns A detailed string of actions, including names and descriptions.\n */\nexport function formatActions(actions: Action[]): string {\n  if (!actions?.length) return '';\n\n  // Create a shuffled copy without mutating the original\n  return [...actions]\n    .sort(() => Math.random() - 0.5)\n    .map((action) => `- **${action.name}**: ${action.description || 'No description available'}`)\n    .join('\\n');\n}\n",
    "import type {\n  Agent,\n  Component,\n  Entity,\n  IDatabaseAdapter,\n  Log,\n  Memory,\n  MemoryMetadata,\n  Participant,\n  Relationship,\n  Room,\n  Task,\n  UUID,\n  World,\n} from './types';\n\n/**\n * An abstract class representing a database adapter for managing various entities\n * like entities, memories, entities, goals, and rooms.\n */\n/**\n * Database adapter class to be extended by individual database adapters.\n *\n * @template DB - The type of the database instance.\n * @abstract\n * implements IDatabaseAdapter\n */\nexport abstract class DatabaseAdapter<DB = unknown> implements IDatabaseAdapter {\n  /**\n   * The database instance.\n   */\n  db!: DB;\n\n  /**\n   * Initialize the database adapter.\n   * @returns A Promise that resolves when initialization is complete.\n   */\n  abstract initialize(config?: any): Promise<void>;\n\n  /**\n   * Initialize the database adapter.\n   * @returns A Promise that resolves when initialization is complete.\n   */\n  abstract init(): Promise<void>;\n\n  /**\n   * Run database migrations\n   * @param migrationsPaths Optional array of paths to migration folders\n   * @returns A Promise that resolves when migrations are complete.\n   */\n  abstract runMigrations(migrationsPaths?: string[]): Promise<void>;\n\n  /**\n   * Check if the database connection is ready.\n   * @returns A Promise that resolves to true if the database is ready, false otherwise.\n   */\n  abstract isReady(): Promise<boolean>;\n\n  /**\n   * Optional close method for the database adapter.\n   * @returns A Promise that resolves when closing is complete.\n   */\n  abstract close(): Promise<void>;\n\n  /**\n   * Retrieves a connection to the database.\n   * @returns A Promise that resolves to the database connection.\n   */\n  abstract getConnection(): Promise<unknown>;\n\n  /**\n   * Retrieves an account by its ID.\n   * @param entityIds The UUIDs of the user account to retrieve.\n   * @returns A Promise that resolves to the Entity object or null if not found.\n   */\n  abstract getEntitiesByIds(entityIds: UUID[]): Promise<Entity[] | null>;\n\n  abstract getEntitiesForRoom(roomId: UUID, includeComponents?: boolean): Promise<Entity[]>;\n\n  /**\n   * Creates a new entities in the database.\n   * @param entities The entity objects to create.\n   * @returns A Promise that resolves when the account creation is complete.\n   */\n  abstract createEntities(entities: Entity[]): Promise<boolean>;\n\n  /**\n   * Updates an existing entity in the database.\n   * @param entity The entity object with updated properties.\n   * @returns A Promise that resolves when the account update is complete.\n   */\n  abstract updateEntity(entity: Entity): Promise<void>;\n\n  /**\n   * Retrieves a single component by entity ID and type.\n   * @param entityId The UUID of the entity the component belongs to\n   * @param type The type identifier for the component\n   * @param worldId Optional UUID of the world the component belongs to\n   * @param sourceEntityId Optional UUID of the source entity\n   * @returns Promise resolving to the Component if found, null otherwise\n   */\n  abstract getComponent(\n    entityId: UUID,\n    type: string,\n    worldId?: UUID,\n    sourceEntityId?: UUID\n  ): Promise<Component | null>;\n\n  /**\n   * Retrieves all components for an entity.\n   * @param entityId The UUID of the entity to get components for\n   * @param worldId Optional UUID of the world to filter components by\n   * @param sourceEntityId Optional UUID of the source entity to filter by\n   * @returns Promise resolving to array of Component objects\n   */\n  abstract getComponents(\n    entityId: UUID,\n    worldId?: UUID,\n    sourceEntityId?: UUID\n  ): Promise<Component[]>;\n\n  /**\n   * Creates a new component in the database.\n   * @param component The component object to create\n   * @returns Promise resolving to true if creation was successful\n   */\n  abstract createComponent(component: Component): Promise<boolean>;\n\n  /**\n   * Updates an existing component in the database.\n   * @param component The component object with updated properties\n   * @returns Promise that resolves when the update is complete\n   */\n  abstract updateComponent(component: Component): Promise<void>;\n\n  /**\n   * Deletes a component from the database.\n   * @param componentId The UUID of the component to delete\n   * @returns Promise that resolves when the deletion is complete\n   */\n  abstract deleteComponent(componentId: UUID): Promise<void>;\n\n  /**\n   * Retrieves memories based on the specified parameters.\n   * @param params An object containing parameters for the memory retrieval.\n   * @returns A Promise that resolves to an array of Memory objects.\n   */\n  abstract getMemories(params: {\n    entityId?: UUID;\n    agentId?: UUID;\n    count?: number;\n    unique?: boolean;\n    tableName: string;\n    start?: number;\n    end?: number;\n    roomId?: UUID;\n    worldId?: UUID;\n  }): Promise<Memory[]>;\n\n  abstract getMemoriesByRoomIds(params: {\n    roomIds: UUID[];\n    tableName: string;\n    limit?: number;\n  }): Promise<Memory[]>;\n\n  abstract getMemoryById(id: UUID): Promise<Memory | null>;\n\n  /**\n   * Retrieves multiple memories by their IDs\n   * @param memoryIds Array of UUIDs of the memories to retrieve\n   * @param tableName Optional table name to filter memories by type\n   * @returns Promise resolving to array of Memory objects\n   */\n  abstract getMemoriesByIds(memoryIds: UUID[], tableName?: string): Promise<Memory[]>;\n\n  /**\n   * Retrieves cached embeddings based on the specified query parameters.\n   * @param params An object containing parameters for the embedding retrieval.\n   * @returns A Promise that resolves to an array of objects containing embeddings and levenshtein scores.\n   */\n  abstract getCachedEmbeddings({\n    query_table_name,\n    query_threshold,\n    query_input,\n    query_field_name,\n    query_field_sub_name,\n    query_match_count,\n  }: {\n    query_table_name: string;\n    query_threshold: number;\n    query_input: string;\n    query_field_name: string;\n    query_field_sub_name: string;\n    query_match_count: number;\n  }): Promise<\n    {\n      embedding: number[];\n      levenshtein_score: number;\n    }[]\n  >;\n\n  /**\n   * Logs an event or action with the specified details.\n   * @param params An object containing parameters for the log entry.\n   * @returns A Promise that resolves when the log entry has been saved.\n   */\n  abstract log(params: {\n    body: { [key: string]: unknown };\n    entityId: UUID;\n    roomId: UUID;\n    type: string;\n  }): Promise<void>;\n\n  /**\n   * Retrieves logs based on the specified parameters.\n   * @param params An object containing parameters for the log retrieval.\n   * @returns A Promise that resolves to an array of Log objects.\n   */\n  abstract getLogs(params: {\n    entityId: UUID;\n    roomId?: UUID;\n    type?: string;\n    count?: number;\n    offset?: number;\n  }): Promise<Log[]>;\n\n  /**\n   * Deletes a log from the database.\n   * @param logId The UUID of the log to delete.\n   * @returns A Promise that resolves when the log has been deleted.\n   */\n  abstract deleteLog(logId: UUID): Promise<void>;\n\n  /**\n   * Searches for memories based on embeddings and other specified parameters.\n   * @param params An object containing parameters for the memory search.\n   * @returns A Promise that resolves to an array of Memory objects.\n   */\n  abstract searchMemories(params: {\n    tableName: string;\n    embedding: number[];\n    match_threshold?: number;\n    count?: number;\n    unique?: boolean;\n    query?: string;\n    roomId?: UUID;\n    worldId?: UUID;\n    entityId?: UUID;\n  }): Promise<Memory[]>;\n\n  /**\n   * Creates a new memory in the database.\n   * @param memory The memory object to create.\n   * @param tableName The table where the memory should be stored.\n   * @param unique Indicates if the memory should be unique.\n   * @returns A Promise that resolves when the memory has been created.\n   */\n  abstract createMemory(memory: Memory, tableName: string, unique?: boolean): Promise<UUID>;\n\n  /**\n   * Updates an existing memory in the database.\n   * @param memory The memory object with updated content and optional embedding\n   * @returns Promise resolving to boolean indicating success\n   */\n  abstract updateMemory(\n    memory: Partial<Memory> & { id: UUID; metadata?: MemoryMetadata }\n  ): Promise<boolean>;\n\n  /**\n   * Removes a specific memory from the database.\n   * @param memoryId The UUID of the memory to remove.\n   * @returns A Promise that resolves when the memory has been removed.\n   */\n  abstract deleteMemory(memoryId: UUID): Promise<void>;\n\n  /**\n   * Removes multiple memories from the database in a single batch operation.\n   * @param memoryIds An array of UUIDs of the memories to remove.\n   * @returns A Promise that resolves when all memories have been removed.\n   */\n  abstract deleteManyMemories(memoryIds: UUID[]): Promise<void>;\n\n  /**\n   * Removes all memories associated with a specific room.\n   * @param roomId The UUID of the room whose memories should be removed.\n   * @param tableName The table from which the memories should be removed.\n   * @returns A Promise that resolves when all memories have been removed.\n   */\n  abstract deleteAllMemories(roomId: UUID, tableName: string): Promise<void>;\n\n  /**\n   * Counts the number of memories in a specific room.\n   * @param roomId The UUID of the room for which to count memories.\n   * @param unique Specifies whether to count only unique memories.\n   * @param tableName Optional table name to count memories from.\n   * @returns A Promise that resolves to the number of memories.\n   */\n  abstract countMemories(roomId: UUID, unique?: boolean, tableName?: string): Promise<number>;\n\n  /**\n   * Retrieves a world by its ID.\n   * @param id The UUID of the world to retrieve.\n   * @returns A Promise that resolves to the World object or null if not found.\n   */\n  abstract getWorld(id: UUID): Promise<World | null>;\n\n  /**\n   * Retrieves all worlds for an agent.\n   * @returns A Promise that resolves to an array of World objects.\n   */\n  abstract getAllWorlds(): Promise<World[]>;\n\n  /**\n   * Creates a new world in the database.\n   * @param world The world object to create.\n   * @returns A Promise that resolves to the UUID of the created world.\n   */\n  abstract createWorld(world: World): Promise<UUID>;\n\n  /**\n   * Updates an existing world in the database.\n   * @param world The world object with updated properties.\n   * @returns A Promise that resolves when the world has been updated.\n   */\n  abstract updateWorld(world: World): Promise<void>;\n\n  /**\n   * Removes a specific world from the database.\n   * @param id The UUID of the world to remove.\n   * @returns A Promise that resolves when the world has been removed.\n   */\n  abstract removeWorld(id: UUID): Promise<void>;\n\n  /**\n   * Retrieves the room ID for a given room, if it exists.\n   * @param roomIds The UUIDs of the rooms to retrieve.\n   * @returns A Promise that resolves to the room ID or null if not found.\n   */\n  abstract getRoomsByIds(roomIds: UUID[]): Promise<Room[] | null>;\n\n  /**\n   * Retrieves all rooms for a given world.\n   * @param worldId The UUID of the world to retrieve rooms for.\n   * @returns A Promise that resolves to an array of Room objects.\n   */\n  abstract getRoomsByWorld(worldId: UUID): Promise<Room[]>;\n\n  /**\n   * Creates new rooms in the database.\n   * @param rooms Array of Room objects to create.\n   * @returns A Promise that resolves to the UUIDs of the created rooms.\n   */\n  abstract createRooms(rooms: Room[]): Promise<UUID[]>;\n\n  /**\n   * Updates a specific room in the database.\n   * @param room The room object with updated properties.\n   * @returns A Promise that resolves when the room has been updated.\n   */\n  abstract updateRoom(room: Room): Promise<void>;\n\n  /**\n   * Removes a specific room from the database.\n   * @param roomId The UUID of the room to remove.\n   * @returns A Promise that resolves when the room has been removed.\n   */\n  abstract deleteRoom(roomId: UUID): Promise<void>;\n\n  /**\n   * Retrieves room IDs for which a specific user is a participant.\n   * @param entityId The UUID of the user.\n   * @returns A Promise that resolves to an array of room IDs.\n   */\n  abstract getRoomsForParticipant(entityId: UUID): Promise<UUID[]>;\n\n  /**\n   * Retrieves room IDs for which specific users are participants.\n   * @param userIds An array of UUIDs of the users.\n   * @returns A Promise that resolves to an array of room IDs.\n   */\n  abstract getRoomsForParticipants(userIds: UUID[]): Promise<UUID[]>;\n\n  /**\n   * Adds users as a participant to a specific room.\n   * @param entityIds The UUIDs of the users to add as a participant.\n   * @param roomId The UUID of the room to which the user will be added.\n   * @returns A Promise that resolves to a boolean indicating success or failure.\n   */\n  abstract addParticipantsRoom(entityIds: UUID[], roomId: UUID): Promise<boolean>;\n\n  /**\n   * Removes a user as a participant from a specific room.\n   * @param entityId The UUID of the user to remove as a participant.\n   * @param roomId The UUID of the room from which the user will be removed.\n   * @returns A Promise that resolves to a boolean indicating success or failure.\n   */\n  abstract removeParticipant(entityId: UUID, roomId: UUID): Promise<boolean>;\n\n  /**\n   * Retrieves participants associated with a specific account.\n   * @param entityId The UUID of the account.\n   * @returns A Promise that resolves to an array of Participant objects.\n   */\n  abstract getParticipantsForEntity(entityId: UUID): Promise<Participant[]>;\n\n  /**\n   * Retrieves participants for a specific room.\n   * @param roomId The UUID of the room for which to retrieve participants.\n   * @returns A Promise that resolves to an array of UUIDs representing the participants.\n   */\n  abstract getParticipantsForRoom(roomId: UUID): Promise<UUID[]>;\n\n  abstract getParticipantUserState(\n    roomId: UUID,\n    entityId: UUID\n  ): Promise<'FOLLOWED' | 'MUTED' | null>;\n\n  abstract setParticipantUserState(\n    roomId: UUID,\n    entityId: UUID,\n    state: 'FOLLOWED' | 'MUTED' | null\n  ): Promise<void>;\n\n  /**\n   * Creates a new relationship between two users.\n   * @param params Object containing the relationship details including entity IDs, agent ID, optional tags and metadata\n   * @returns A Promise that resolves to a boolean indicating success or failure of the creation.\n   */\n  abstract createRelationship(params: {\n    sourceEntityId: UUID;\n    targetEntityId: UUID;\n    tags?: string[];\n    metadata?: Record<string, unknown>;\n  }): Promise<boolean>;\n\n  /**\n   * Retrieves a relationship between two users if it exists.\n   * @param params Object containing the entity IDs and agent ID\n   * @returns A Promise that resolves to the Relationship object or null if not found.\n   */\n  abstract getRelationship(params: {\n    sourceEntityId: UUID;\n    targetEntityId: UUID;\n  }): Promise<Relationship | null>;\n\n  /**\n   * Retrieves all relationships for a specific user.\n   * @param params Object containing the user ID, agent ID and optional tags to filter by\n   * @returns A Promise that resolves to an array of Relationship objects.\n   */\n  abstract getRelationships(params: { entityId: UUID; tags?: string[] }): Promise<Relationship[]>;\n\n  /**\n   * Updates an existing relationship between two users.\n   * @param params Object containing the relationship details to update including entity IDs, agent ID, optional tags and metadata\n   * @returns A Promise that resolves to a boolean indicating success or failure of the update.\n   */\n  abstract updateRelationship(params: {\n    sourceEntityId: UUID;\n    targetEntityId: UUID;\n    tags?: string[];\n    metadata?: Record<string, unknown>;\n  }): Promise<void>;\n\n  /**\n   * Retrieves an agent by its ID.\n   * @param agentId The UUID of the agent to retrieve.\n   * @returns A Promise that resolves to the Agent object or null if not found.\n   */\n  abstract getAgent(agentId: UUID): Promise<Agent | null>;\n\n  /**\n   * Retrieves all agents from the database.\n   * @returns A Promise that resolves to an array of Agent objects.\n   */\n  abstract getAgents(): Promise<Partial<Agent>[]>;\n\n  /**\n   * Creates a new agent in the database.\n   * @param agent The agent object to create.\n   * @returns A Promise that resolves to a boolean indicating success or failure of the creation.\n   */\n  abstract createAgent(agent: Partial<Agent>): Promise<boolean>;\n\n  /**\n   * Updates an existing agent in the database.\n   * @param agentId The UUID of the agent to update.\n   * @param agent The agent object with updated properties.\n   * @returns A Promise that resolves to a boolean indicating success or failure of the update.\n   */\n  abstract updateAgent(agentId: UUID, agent: Partial<Agent>): Promise<boolean>;\n\n  /**\n   * Deletes an agent from the database.\n   * @param agentId The UUID of the agent to delete.\n   * @returns A Promise that resolves to a boolean indicating success or failure of the deletion.\n   */\n  abstract deleteAgent(agentId: UUID): Promise<boolean>;\n\n  /**\n   * Ensures an embedding dimension exists in the database.\n   * @param dimension The dimension to ensure exists.\n   * @returns A Promise that resolves when the embedding dimension has been ensured to exist.\n   */\n  abstract ensureEmbeddingDimension(dimension: number): Promise<void>;\n\n  /**\n   * Retrieves a cached value by key from the database.\n   * @param key The key to look up in the cache\n   * @returns Promise resolving to the cached string value\n   */\n  abstract getCache<T>(key: string): Promise<T | undefined>;\n\n  /**\n   * Sets a value in the cache with the given key.\n   * @param key The key to store the value under\n   * @param value The value to cache\n   * @returns Promise resolving to true if the cache was set successfully\n   */\n  abstract setCache<T>(key: string, value: T): Promise<boolean>;\n\n  /**\n   * Deletes a value from the cache by key.\n   * @param key The key to delete from the cache\n   * @returns Promise resolving to true if the value was successfully deleted\n   */\n  abstract deleteCache(key: string): Promise<boolean>;\n\n  /**\n   * Creates a new task instance in the database.\n   * @param task The task object to create\n   * @returns Promise resolving to the UUID of the created task\n   */\n  abstract createTask(task: Task): Promise<UUID>;\n\n  /**\n   * Retrieves tasks based on specified parameters.\n   * @param params Object containing optional roomId and tags to filter tasks\n   * @returns Promise resolving to an array of Task objects\n   */\n  abstract getTasks(params: { roomId?: UUID; tags?: string[]; entityId?: UUID }): Promise<Task[]>;\n\n  /**\n   * Retrieves a specific task by its ID.\n   * @param id The UUID of the task to retrieve\n   * @returns Promise resolving to the Task object if found, null otherwise\n   */\n  abstract getTask(id: UUID): Promise<Task | null>;\n\n  /**\n   * Retrieves a specific task by its name.\n   * @param name The name of the task to retrieve\n   * @returns Promise resolving to the Task object if found, null otherwise\n   */\n  abstract getTasksByName(name: string): Promise<Task[]>;\n\n  /**\n   * Updates an existing task in the database.\n   * @param id The UUID of the task to update\n   * @param task Partial Task object containing the fields to update\n   * @returns Promise resolving when the update is complete\n   */\n  abstract updateTask(id: UUID, task: Partial<Task>): Promise<void>;\n\n  /**\n   * Deletes a task from the database.\n   * @param id The UUID of the task to delete\n   * @returns Promise resolving when the deletion is complete\n   */\n  abstract deleteTask(id: UUID): Promise<void>;\n\n  abstract getMemoriesByWorldId(params: {\n    worldId: UUID;\n    count?: number;\n    tableName?: string;\n  }): Promise<Memory[]>;\n\n  abstract deleteRoomsByWorldId(worldId: UUID): Promise<void>;\n}\n",
    "export const shouldRespondTemplate = `<task>Decide on behalf of {{agentName}} whether they should respond to the message, ignore it or stop the conversation.</task>\n\n<providers>\n{{providers}}\n</providers>\n\n<instructions>Decide if {{agentName}} should respond to or interact with the conversation.\nIf the message is directed at or relevant to {{agentName}}, respond with RESPOND action.\nIf a user asks {{agentName}} to be quiet, respond with STOP action.\nIf {{agentName}} should ignore the message, respond with IGNORE action.</instructions>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n  <name>{{agentName}}</name>\n  <reasoning>Your reasoning here</reasoning>\n  <action>RESPOND | IGNORE | STOP</action>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\n\nexport const messageHandlerTemplate = `<task>Generate dialog and actions for the character {{agentName}}.</task>\n\n<providers>\n{{providers}}\n</providers>\n\n<instructions>\nWrite a thought and plan for {{agentName}} and decide what actions to take. Also include the providers that {{agentName}} will use to have the right context for responding and acting, if any.\n\nIMPORTANT ACTION ORDERING RULES:\n- Actions are executed in the ORDER you list them - the order MATTERS!\n- REPLY should come FIRST to acknowledge the user's request before executing other actions\n- Common patterns:\n  - For requests requiring tool use: REPLY,CALL_MCP_TOOL (acknowledge first, then gather info)\n  - For task execution: REPLY,SEND_MESSAGE or REPLY,EVM_SWAP_TOKENS (acknowledge first, then do the task)\n  - For multi-step operations: REPLY,ACTION1,ACTION2 (acknowledge first, then complete all steps)\n- REPLY is used to acknowledge and inform the user about what you're going to do\n- Follow-up actions execute the actual tasks after acknowledgment\n- Use IGNORE only when you should not respond at all\n- If you use IGNORE, do not include any other actions. IGNORE should be used alone when you should not respond or take any actions.\n\nIMPORTANT PROVIDER SELECTION RULES:\n- Only include providers if they are needed to respond accurately.\n- If the message mentions images, photos, pictures, attachments, or visual content, OR if you see \"(Attachments:\" in the conversation, you MUST include \"ATTACHMENTS\" in your providers list\n- If the message asks about or references specific people, include \"ENTITIES\" in your providers list  \n- If the message asks about relationships or connections between people, include \"RELATIONSHIPS\" in your providers list\n- If the message asks about facts or specific information, include \"FACTS\" in your providers list\n- If the message asks about the environment or world context, include \"WORLD\" in your providers list\n- If no additional context is needed, you may leave the providers list empty.\n\nIMPORTANT CODE BLOCK FORMATTING RULES:\n- If {{agentName}} includes code examples, snippets, or multi-line code in the response, ALWAYS wrap the code with \\`\\`\\` fenced code blocks (specify the language if known, e.g., \\`\\`\\`python).\n- ONLY use fenced code blocks for actual code. Do NOT wrap non-code text, instructions, or single words in fenced code blocks.\n- If including inline code (short single words or function names), use single backticks (\\`) as appropriate.\n- This ensures the user sees clearly formatted and copyable code when relevant.\n\nFirst, think about what you want to do next and plan your actions. Then, write the next message and include the actions you plan to take.\n</instructions>\n\n<keys>\n\"thought\" should be a short description of what the agent is thinking about and planning.\n\"actions\" should be a comma-separated list of the actions {{agentName}} plans to take based on the thought, IN THE ORDER THEY SHOULD BE EXECUTED (if none, use IGNORE, if simply responding with text, use REPLY)\n\"providers\" should be a comma-separated list of the providers that {{agentName}} will use to have the right context for responding and acting (NEVER use \"IGNORE\" as a provider - use specific provider names like ATTACHMENTS, ENTITIES, FACTS, KNOWLEDGE, etc.)\n\"text\" should be the text of the next message for {{agentName}} which they will send to the conversation.\n</keys>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n    <thought>Your thought here</thought>\n    <actions>ACTION1,ACTION2</actions>\n    <providers>PROVIDER1,PROVIDER2</providers>\n    <text>Your response text here</text>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\n\nexport const postCreationTemplate = `# Task: Create a post in the voice and style and perspective of {{agentName}} @{{twitterUserName}}.\n\nExample task outputs:\n1. A post about the importance of AI in our lives\n<response>\n  <thought>I am thinking about writing a post about the importance of AI in our lives</thought>\n  <post>AI is changing the world and it is important to understand how it works</post>\n  <imagePrompt>A futuristic cityscape with flying cars and people using AI to do things</imagePrompt>\n</response>\n\n2. A post about dogs\n<response>\n  <thought>I am thinking about writing a post about dogs</thought>\n  <post>Dogs are man's best friend and they are loyal and loving</post>\n  <imagePrompt>A dog playing with a ball in a park</imagePrompt>\n</response>\n\n3. A post about finding a new job\n<response>\n  <thought>Getting a job is hard, I bet there's a good tweet in that</thought>\n  <post>Just keep going!</post>\n  <imagePrompt>A person looking at a computer screen with a job search website</imagePrompt>\n</response>\n\n{{providers}}\n\nWrite a post that is {{adjective}} about {{topic}} (without mentioning {{topic}} directly), from the perspective of {{agentName}}. Do not add commentary or acknowledge this request, just write the post.\nYour response should be 1, 2, or 3 sentences (choose the length at random).\nYour response should not contain any questions. Brief, concise statements only. The total character count MUST be less than 280. No emojis. Use \\\\n\\\\n (double spaces) between statements if there are multiple statements in your response.\n\nYour output should be formatted in XML like this:\n<response>\n  <thought>Your thought here</thought>\n  <post>Your post text here</post>\n  <imagePrompt>Optional image prompt here</imagePrompt>\n</response>\n\nThe \"post\" field should be the post you want to send. Do not including any thinking or internal reflection in the \"post\" field.\nThe \"imagePrompt\" field is optional and should be a prompt for an image that is relevant to the post. It should be a single sentence that captures the essence of the post. ONLY USE THIS FIELD if it makes sense that the post would benefit from an image.\nThe \"thought\" field should be a short description of what the agent is thinking about before responding, including a brief justification for the response. Includate an explanation how the post is relevant to the topic but unique and different than other posts.\n\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.`;\n\nexport const booleanFooter = 'Respond with only a YES or a NO.';\n\nexport const imageDescriptionTemplate = `<task>Analyze the provided image and generate a comprehensive description with multiple levels of detail.</task>\n\n<instructions>\nCarefully examine the image and provide:\n1. A concise, descriptive title that captures the main subject or scene\n2. A brief summary description (1-2 sentences) highlighting the key elements\n3. An extensive, detailed description that covers all visible elements, composition, lighting, colors, mood, and any other relevant details\n\nBe objective and descriptive. Focus on what you can actually see in the image rather than making assumptions about context or meaning.\n</instructions>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n  <title>A concise, descriptive title for the image</title>\n  <description>A brief 1-2 sentence summary of the key elements in the image</description>\n  <text>An extensive, detailed description covering all visible elements, composition, lighting, colors, mood, setting, objects, people, activities, and any other relevant details you can observe in the image</text>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\n\nexport const multiStepDecisionTemplate = `<task>\nDetermine the next step the assistant should take in this conversation to help the user reach their goal.\n</task>\n\n{{recentMessages}}\n\n# Multi-Step Workflow\n\nIn each step, decide:\n\n1. **Which providers (if any)** should be called to gather necessary data.\n2. **Which action (if any)** should be executed after providers return.\n3. Decide whether the task is complete. If so, set \\`isFinish: true\\`. Do not select the \\`REPLY\\` action; replies are handled separately after task completion.\n\nYou can select **multiple providers** and at most **one action** per step.\n\nIf the task is fully resolved and no further steps are needed, mark the step as \\`isFinish: true\\`.\n\n---\n\n{{actionsWithDescriptions}}\n\n{{providersWithDescriptions}}\n\nThese are the actions or data provider calls that have already been used in this run. Use this to avoid redundancy and guide your next move.\n\n{{actionResults}}\n\n<keys>\n\"thought\" Clearly explain your reasoning for the selected providers and/or action, and how this step contributes to resolving the user's request.\n\"action\"  Name of the action to execute after providers return (can be null if no action is needed).\n\"providers\" List of provider names to call in this step (can be empty if none are needed).\n\"isFinish\" Set to true only if the task is fully complete.\n</keys>\n\n⚠️ IMPORTANT: Do **not** mark the task as \\`isFinish: true\\` immediately after calling an action like. Wait for the action to complete before deciding the task is finished.\n\n<output>\n<response>\n  <thought>Your thought here</thought>\n  <action>ACTION</action>\n  <providers>PROVIDER1,PROVIDER2</providers>\n  <isFinish>true | false</isFinish>\n</response>\n</output>`;\n\nexport const multiStepSummaryTemplate = `<task>\nSummarize what the assistant has done so far and provide a final response to the user based on the completed steps.\n</task>\n\n# Context Information\n{{bio}}\n\n---\n\n{{system}}\n\n---\n\n{{messageDirections}}\n\n# Conversation Summary\nBelow is the user’s original request and conversation so far:\n{{recentMessages}}\n\n# Execution Trace\nHere are the actions taken by the assistant to fulfill the request:\n{{actionResults}}\n\n# Assistant’s Last Reasoning Step\n{{recentMessage}}\n\n# Instructions\n\n - Review the execution trace and last reasoning step carefully\n\n - Your final output MUST be in this XML format:\n<output>\n<response>\n  <thought>Your thought here</thought>\n  <text>Your final message to the user</text>\n</response>\n</output>\n`;\n",
    "// File: /swarm/shared/ownership/core.ts\n// Updated to use world metadata instead of cache\n\nimport { createUniqueUuid } from './entities';\nimport { logger } from './logger';\nimport { type IAgentRuntime, Role, type World, type UUID } from './types';\n\n/**\n * Represents the state of server ownership, including a mapping of server IDs to their respective World objects.\n */\n/**\n * Interface representing the ownership state of servers.\n * @property {Object.<string, World>} servers - The servers and their corresponding worlds, where the key is the server ID and the value is the World object.\n */\nexport interface ServerOwnershipState {\n  servers: {\n    [serverId: string]: World;\n  };\n}\n\n/**\n * Gets a user's role from world metadata\n */\n/**\n * Retrieve the server role of a specified user entity within a given server.\n *\n * @param {IAgentRuntime} runtime - The runtime object containing necessary configurations and services.\n * @param {string} entityId - The unique identifier of the user entity.\n * @param {string} serverId - The unique identifier of the server.\n * @returns {Promise<Role>} The role of the user entity within the server, resolved as a Promise.\n */\nexport async function getUserServerRole(\n  runtime: IAgentRuntime,\n  entityId: string,\n  serverId: string\n): Promise<Role> {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n\n  if (!world || !world.metadata?.roles) {\n    return Role.NONE;\n  }\n\n  if (world.metadata.roles[entityId as UUID]) {\n    return world.metadata.roles[entityId as UUID] as Role;\n  }\n\n  // Also check original ID format\n  if (world.metadata.roles[entityId as UUID]) {\n    return world.metadata.roles[entityId as UUID] as Role;\n  }\n\n  return Role.NONE;\n}\n\n/**\n * Finds a server where the given user is the owner\n */\nexport async function findWorldsForOwner(\n  runtime: IAgentRuntime,\n  entityId: string\n): Promise<World[] | null> {\n  if (!entityId) {\n    logger.error('User ID is required to find server');\n    return null;\n  }\n\n  // Get all worlds for this agent\n  const worlds = await runtime.getAllWorlds();\n\n  if (!worlds || worlds.length === 0) {\n    logger.info('No worlds found for this agent');\n    return null;\n  }\n\n  const ownerWorlds: World[] = [];\n  // Find world where the user is the owner\n  for (const world of worlds) {\n    if (world.metadata?.ownership?.ownerId === entityId) {\n      ownerWorlds.push(world);\n    }\n  }\n\n  return ownerWorlds.length ? ownerWorlds : null;\n}\n",
    "import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n",
    "import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n",
    "import { randomUUID } from 'crypto';\nexport default { randomUUID };\n",
    "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n",
    "// Implementation of BM25 and Porter2 stemming\n// https://github.com/eilvelia/porter2.js\n// https://www.npmjs.com/package/fast-bm25\n\n// The MIT License\n\n// Copyright (c) 2024 eilvelia <hi@eilvelia.cat>\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n// MIT License\n\n// Copyright (c) 2024 Vivek Patel <me@patelvivek.dev>.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Checks if the character code represents a vowel (a, e, i, o, u, y).\n * @param char - The character code.\n * @returns True if the character is a vowel, false otherwise.\n */\nconst isV = (char: number): boolean => {\n  switch (char) {\n    case 97:\n    case 101:\n    case 105:\n    case 111:\n    case 117:\n    case 121:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Checks if the character code is 'w', 'x', 'y', or a vowel.\n * Used in determining short syllables.\n * @param char - The character code.\n * @returns True if the character is w, x, y, or a vowel, false otherwise.\n */\nconst isWxy = (char: number): boolean => {\n  switch (char) {\n    case 97:\n    case 101:\n    case 105:\n    case 111:\n    case 117:\n    case 121:\n    case 119:\n    case 120:\n    case 89:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Checks if the character code is one of the valid endings for Step 1c ('li' rule).\n * Valid endings: c, d, e, g, h, k, m, n, r, t.\n * @param char - The character code.\n * @returns True if the character is a valid 'li' ending, false otherwise.\n */\nconst isValidLi = (char: number): boolean => {\n  switch (char) {\n    case 99:\n    case 100:\n    case 101:\n    case 103:\n    case 104:\n    case 107:\n    case 109:\n    case 110:\n    case 114:\n    case 116:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Checks if the character code represents a \"double\" consonant sound\n * (bb, dd, ff, gg, mm, nn, pp, rr, tt).\n * @param char - The character code.\n * @returns True if the character forms a double consonant, false otherwise.\n */\nconst isDouble = (char: number): boolean => {\n  switch (char) {\n    case 98:\n    case 100:\n    case 102:\n    case 103:\n    case 109:\n    case 110:\n    case 112:\n    case 114:\n    case 116:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Checks if a word ends in a short syllable.\n * A short syllable is defined as:\n * 1. A vowel followed by a non-vowel at the end of the word. (e.g., \"hop\")\n * 2. A vowel followed by a non-vowel followed by a non-vowel ('w', 'x', 'y' excluded). (e.g., \"trap\")\n * @param w - Array of character codes representing the word.\n * @param len - The current effective length of the word being considered.\n * @returns True if the word ends in a short syllable, false otherwise.\n */\nconst isShortV = (w: number[], len: number): boolean => {\n  // backwardmode: ( non-v_WXY v non-v ) or ( non-v v atlimit )\n  return (\n    len >= 2 &&\n    isV(w[len - 2]) &&\n    ((len === 2 && !isV(w[len - 1])) || (len >= 3 && !isV(w[len - 3]) && !isWxy(w[len - 1])))\n  );\n};\n\n// #endregion Porter2 Stemmer Helper Functions\n\n// #region Porter2 Stemmer Algorithm\n\n/**\n * Stems a given word using the Porter2 (Snowball English) stemming algorithm.\n *\n * The algorithm works in several steps, applying suffix stripping rules based on\n * regions R1 and R2 within the word.\n * - R1: The region after the first non-vowel following a vowel.\n * - R2: The region after the first non-vowel following a vowel in R1.\n *\n * The steps generally involve:\n * 1. Handling plurals and past participles (-s, -es, -ed, -ing).\n * 2. Turning terminal 'y' to 'i' if there is another vowel in the stem.\n * 3. Mapping double suffixes to single ones (e.g., -ization to -ize).\n * 4. Dealing with suffixes like -full, -ness, etc.\n * 5. Removing suffixes like -ant, -ence, etc.\n * 6. Removing a final -e.\n *\n * @param word - The word to be stemmed.\n * @returns The stemmed version of the word.\n */\nconst stem = (word: string): string => {\n  if (word.length < 3) return word;\n  // exception1\n  if (word.length <= 6) {\n    switch (word) {\n      case 'ski':\n        return 'ski';\n      case 'skies':\n        return 'sky';\n      case 'dying':\n        return 'die';\n      case 'lying':\n        return 'lie';\n      case 'tying':\n        return 'tie';\n      // special -LY cases\n      case 'idly':\n        return 'idl';\n      case 'gently':\n        return 'gentl';\n      case 'ugly':\n        return 'ugli';\n      case 'early':\n        return 'earli';\n      case 'only':\n        return 'onli';\n      case 'singly':\n        return 'singl';\n      // invariant forms\n      case 'sky':\n      case 'news':\n      case 'howe':\n      // not plural forms\n      case 'atlas':\n      case 'cosmos':\n      case 'bias':\n      case 'andes':\n        return word;\n    }\n  }\n  const initialOffset = word.charCodeAt(0) === 39 /* ' */ ? 1 : 0;\n  let l = word.length - initialOffset;\n  const w = new Array<number>(l);\n  let yFound = false;\n  for (let i = 0; i < l; ++i) {\n    const ch = word.charCodeAt(i + initialOffset);\n    if (ch === 121 && (i === 0 || isV(w[i - 1]))) {\n      yFound = true;\n      w[i] = 89;\n      continue;\n    }\n    w[i] = ch;\n  }\n  if (w[l - 1] === 39 /* ' */) --l;\n  if (l >= 2 && w[l - 2] === 39 /* ' */ && w[l - 1] === 115 /* s */) l -= 2;\n  // mark_regions\n  let rv = 0;\n  // rv is the position after the first vowel\n  while (rv < l && !isV(w[rv])) ++rv;\n  if (rv < l) ++rv;\n  let r1 = rv;\n  if (\n    l >= 5 &&\n    ((w[0] === 103 && w[1] === 101 && w[2] === 110 && w[3] === 101 && w[4] === 114) || // gener\n      (w[0] === 97 && w[1] === 114 && w[2] === 115 && w[3] === 101 && w[4] === 110)) // arsen\n  )\n    r1 = 5;\n  else if (\n    l >= 6 &&\n    w[0] === 99 && // c\n    w[1] === 111 && // o\n    w[2] === 109 && // m\n    w[3] === 109 && // m\n    w[4] === 117 && // u\n    w[5] === 110 // n\n  )\n    // commun\n    r1 = 6;\n  else {\n    // > R1 is the region after the first non-vowel following a vowel,\n    // > or the end of the word if there is no such non-vowel.\n    while (r1 < l && isV(w[r1])) ++r1;\n    if (r1 < l) ++r1;\n  }\n  // > R2 is the region after the first non-vowel following a vowel in R1,\n  // > or the end of the word if there is no such non-vowel.\n  let r2 = r1;\n  while (r2 < l && !isV(w[r2])) ++r2;\n  while (r2 < l && isV(w[r2])) ++r2;\n  if (r2 < l) ++r2;\n  // Step_1a\n  if (l >= 3) {\n    if (w[l - 1] === 115) {\n      // s\n      if (l >= 4 && w[l - 2] === 101 && w[l - 3] === 115 && w[l - 4] === 115)\n        // sses\n        l -= 2; // sses -> ss\n      else if (w[l - 2] === 101 && w[l - 3] === 105)\n        // ies\n        l -= l >= 5 ? 2 : 1; // ies\n      else if (w[l - 2] !== 117 && w[l - 2] !== 115 && rv < l - 1)\n        // us ss -> <nothing>; s -> \"delete if the preceding word part\n        // contains a vowel not immediately before the s\"\n        l -= 1;\n    } else if (w[l - 1] === 100 && w[l - 2] === 101 && w[l - 3] === 105) l -= l >= 5 ? 2 : 1; // ied\n  }\n  // exception2\n  if (\n    (l === 6 &&\n      ((w[0] === 105 && // i\n        w[1] === 110 && // n\n        w[2] === 110 && // n\n        w[3] === 105 && // i\n        w[4] === 110 && // n\n        w[5] === 103) || // g (inning)\n        (w[0] === 111 && // o\n          w[1] === 117 && // u\n          w[2] === 116 && // t\n          w[3] === 105 && // i\n          w[4] === 110 && // n\n          w[5] === 103) || // g (outing)\n        (w[0] === 101 && // e\n          w[1] === 120 && // x\n          w[2] === 99 && // c\n          w[3] === 101 && // e\n          w[4] === 101 && // e\n          w[5] === 100))) || // d (exceed)\n    (l === 7 &&\n      ((w[0] === 99 && // c\n        w[1] === 97 && // a\n        w[2] === 110 && // n\n        w[3] === 110 && // n\n        w[4] === 105 && // i\n        w[5] === 110 && // n\n        w[6] === 103) || // g (canning)\n        (w[0] === 104 && // h\n          w[1] === 101 && // e\n          w[2] === 114 && // r\n          w[3] === 114 && // r\n          w[4] === 105 && // i\n          w[5] === 110 && // n\n          w[6] === 103) || // g (herring)\n        (w[0] === 101 && // e\n          w[1] === 97 && // a\n          w[2] === 114 && // r\n          w[3] === 114 && // r\n          w[4] === 105 && // i\n          w[5] === 110 && // n\n          w[6] === 103) || // g (earring)\n        (w[0] === 112 && // p\n          w[1] === 114 && // r\n          w[2] === 111 && // o\n          w[3] === 99 && // c\n          w[4] === 101 && // e\n          w[5] === 101 && // e\n          w[6] === 100) || // d (proceed)\n        (w[0] === 115 && // s\n          w[1] === 117 && // u\n          w[2] === 99 && // c\n          w[3] === 99 && // c\n          w[4] === 101 && // e\n          w[5] === 101 && // e\n          w[6] === 100))) // d (succeed)\n  ) {\n    let exp2Out = '';\n    for (let i = 0; i < l; ++i) exp2Out += String.fromCharCode(w[i]);\n    return exp2Out;\n  }\n  // Step_1b\n  let ll =\n    // l (length) without the -ly ending\n    l >= 2 && w[l - 1] === 121 && w[l - 2] === 108 ? l - 2 : l;\n  if (ll >= 3) {\n    if (w[ll - 3] === 101 && w[ll - 2] === 101 && w[ll - 1] === 100) {\n      // eed\n      if (ll >= r1 + 3) l = ll - 1; // eed eedly -> ee (if in R1)\n    } else {\n      // ll without: ed edly ing ingly (-1 if not found)\n      if (w[ll - 2] === 101 && w[ll - 1] === 100)\n        ll -= 2; // ed\n      else if (w[ll - 3] === 105 && w[ll - 2] === 110 && w[ll - 1] === 103)\n        ll -= 3; // ing\n      else ll = -1;\n      if (ll >= 0 && rv <= ll) {\n        l = ll;\n        if (l >= 2) {\n          if (\n            (w[l - 1] === 116 && w[l - 2] === 97) || // at\n            (w[l - 1] === 108 && w[l - 2] === 98) || // bl\n            (w[l - 1] === 122 && w[l - 2] === 105) // iz\n          ) {\n            // at -> ate   bl -> ble   iz -> ize\n            w[l] = 101;\n            ++l;\n          } else if (w[l - 2] === w[l - 1] && isDouble(w[l - 1])) {\n            --l;\n          } else if (r1 >= l && isShortV(w, l)) {\n            // <shortv> -> e\n            w[l] = 101;\n            ++l;\n          }\n        }\n      }\n    }\n  }\n  // Step_1c\n  if (l >= 3 && (w[l - 1] === 89 || w[l - 1] === 121) && !isV(w[l - 2])) w[l - 1] = 105; // i\n  // Step_2\n  if (l >= r1 + 2) {\n    switch (w[l - 1]) {\n      case 108: // l\n        if (\n          l >= r1 + 6 &&\n          w[l - 2] === 97 && // a\n          w[l - 3] === 110 && // n\n          w[l - 4] === 111 && // o\n          w[l - 5] === 105 && // i\n          w[l - 6] === 116 // t (tional)\n        ) {\n          if (l >= 7 && w[l - 7] === 97) {\n            // a (ational)\n            if (l >= r1 + 7) {\n              // ational -> ate\n              l -= 4;\n              w[l - 1] = 101; // e\n            }\n          } else {\n            l -= 2; // tional -> tion\n          }\n        }\n        break;\n      case 110: // n\n        if (\n          l >= r1 + 5 &&\n          w[l - 2] === 111 && // o\n          w[l - 3] === 105 && // i\n          w[l - 4] === 116 && // t\n          w[l - 5] === 97 // a (ation)\n        ) {\n          if (l >= 7 && w[l - 6] === 122 && w[l - 7] === 105) {\n            // iz (ization)\n            if (l >= r1 + 7) {\n              // ization -> ize\n              l -= 4;\n              w[l - 1] = 101; // e\n            }\n          } else {\n            // ation -> ate\n            l -= 2;\n            w[l - 1] = 101; // e\n          }\n        }\n        break;\n      case 114: // r\n        if (l >= r1 + 4) {\n          if (w[l - 2] === 101) {\n            // e (er)\n            if (w[l - 3] === 122 && w[l - 4] === 105) --l; // izer -> ize\n          } else if (w[l - 2] === 111) {\n            // o (or)\n            if (w[l - 3] === 116 && w[l - 4] === 97) {\n              // ator\n              --l;\n              w[l - 1] = 101; // e\n            }\n          }\n        }\n        break;\n      case 115: // s\n        if (\n          l >= r1 + 7 &&\n          w[l - 2] === 115 && // s\n          w[l - 3] === 101 && // e\n          w[l - 4] === 110 && // n (ness)\n          ((w[l - 5] === 108 && w[l - 6] === 117 && w[l - 7] === 102) || // fulness\n            (w[l - 5] === 115 && w[l - 6] === 117 && w[l - 7] === 111) || // ousness\n            (w[l - 5] === 101 && w[l - 6] === 118 && w[l - 7] === 105)) // iveness\n        ) {\n          l -= 4; // fulness -> ful   ousness -> ous   iveness -> ive\n        }\n        break;\n      case 109: // m\n        if (\n          l >= r1 + 5 &&\n          w[l - 2] === 115 && // s\n          w[l - 3] === 105 && // i\n          w[l - 4] === 108 && // l\n          w[l - 5] === 97 // a (alism)\n        )\n          l -= 3; // alism -> al\n        break;\n      case 105: // i\n        if (w[l - 2] === 99) {\n          // c (ic)\n          if (l >= r1 + 4 && (w[l - 4] === 101 || w[l - 4] === 97) && w[l - 3] === 110) {\n            // enci anci\n            w[l - 1] = 101; // enci -> ence   anci -> ance\n          }\n        } else if (w[l - 2] === 103) {\n          // g (gi)\n          if (l >= r1 + 3 && l >= 4 && w[l - 2] === 103 && w[l - 3] === 111 && w[l - 4] === 108)\n            // logi\n            --l; // ogi -> og (if preceded by l)\n        } else if (w[l - 2] === 116) {\n          // t (ti)\n          if (l >= r1 + 5 && w[l - 3] === 105) {\n            // iti\n            if (w[l - 4] === 108) {\n              // liti\n              if (l >= 6 && w[l - 5] === 105 && w[l - 6] === 98) {\n                // biliti\n                if (l >= r1 + 6) {\n                  // biliti -> ble\n                  l -= 3;\n                  w[l - 2] = 108; // l\n                  w[l - 1] = 101; // e\n                }\n              } else if (w[l - 4] === 108 && w[l - 5] === 97) {\n                // aliti\n                l -= 3; // aliti -> al\n              }\n            } else if (w[l - 4] === 118 && w[l - 5] === 105) {\n              // iviti\n              // iviti -> ive\n              l -= 2;\n              w[l - 1] = 101; // e\n            }\n          }\n        } else if (w[l - 2] === 108 && l >= 3) {\n          // l (li)\n          if (w[l - 3] === 98) {\n            // bli\n            if (l >= 4 && w[l - 4] === 97) {\n              // abli\n              if (l >= r1 + 4) w[l - 1] = 101; // abli -> able\n            } else if (l >= r1 + 3) {\n              w[l - 1] = 101; // bli -> ble\n            }\n          } else {\n            // Remove li\n            if (w[l - 3] === 108) {\n              // lli\n              if (l >= 5 && w[l - 4] === 117 && w[l - 5] === 102) {\n                // fulli\n                if (l >= r1 + 5) l -= 2; // fulli -> ful\n              } else if (l >= r1 + 4 && w[l - 4] === 97) {\n                // alli\n                l -= 2; // alli -> al\n              }\n            } else if (w[l - 3] === 115) {\n              // sli\n              if (l >= 6 && w[l - 4] === 115 && w[l - 5] === 101 && w[l - 6] === 108) {\n                // lessli\n                if (l >= r1 + 6) l -= 2; // lessli -> less\n              } else if (l >= r1 + 5 && w[l - 4] === 117 && w[l - 5] === 111) {\n                // ousli\n                l -= 2; // ousli -> ous\n              }\n            } else if (l >= 5 && w[l - 3] === 116 && w[l - 4] === 110 && w[l - 5] === 101) {\n              // entli\n              if (l >= r1 + 5) l -= 2; // entli -> ent\n            } else if (isValidLi(w[l - 3])) {\n              l -= 2;\n            }\n          }\n        }\n    }\n  }\n  // Step_3\n  if (l >= r1 + 3) {\n    switch (w[l - 1]) {\n      case 108: // l\n        if (w[l - 3] === 99) {\n          // cal\n          if (l >= r1 + 4 && w[l - 4] === 105 && w[l - 2] === 97) l -= 2; // ical -> ic\n        } else if (w[l - 3] === 102) {\n          // ful\n          if (w[l - 2] === 117) l -= 3; // ful -> <delete>\n        } else if (w[l - 3] === 110) {\n          // nal\n          if (\n            l >= r1 + 6 &&\n            w[l - 2] === 97 && // a\n            w[l - 4] === 111 && // o\n            w[l - 5] === 105 && // i\n            w[l - 6] === 116 // t (tional)\n          ) {\n            if (l >= 7 && w[l - 7] === 97) {\n              // ational\n              if (l >= r1 + 7) {\n                // ational -> ate\n                l -= 4;\n                w[l - 1] = 101; // e\n              }\n            } else {\n              l -= 2; // tional -> tion\n            }\n          }\n        }\n        break;\n      case 101: // e\n        if (w[l - 2] === 122) {\n          // ze\n          if (l >= r1 + 5 && w[l - 3] === 105 && w[l - 4] === 108 && w[l - 5] === 97) l -= 3; // alize -> al\n        } else if (w[l - 2] === 116) {\n          // te\n          if (l >= r1 + 5 && w[l - 3] === 97 && w[l - 4] === 99 && w[l - 5] === 105) l -= 3; // icate -> ic\n        } else if (w[l - 2] === 118) {\n          // ve\n          if (l >= r2 + 5 && w[l - 3] === 105 && w[l - 4] === 116 && w[l - 5] === 97) l -= 5; // ative -> <delete> (if in R2)\n        }\n        break;\n      case 105: // i\n        if (\n          l >= r1 + 5 &&\n          w[l - 2] === 116 && // t\n          w[l - 3] === 105 && // i\n          w[l - 4] === 99 && // c\n          w[l - 5] === 105 // i (iciti)\n        )\n          l -= 3; // iciti -> ic\n        break;\n      case 115: // s\n        if (l >= r1 + 4 && w[l - 2] === 115 && w[l - 3] === 101 && w[l - 4] === 110) l -= 4; // ness -> <delete>\n    }\n  }\n  // Step_4\n  if (l >= r2 + 2) {\n    switch (w[l - 1]) {\n      case 110: // n\n        if (\n          l >= r2 + 3 &&\n          w[l - 2] === 111 && // o\n          w[l - 3] === 105 && // i (ion)\n          (w[l - 4] === 115 || w[l - 4] === 116) // s or t\n        )\n          l -= 3; // ion -> <delete> (if preceded by s or t)\n        break;\n      case 108: // l\n        if (w[l - 2] === 97) l -= 2; // al\n        break;\n      case 114: // r\n        if (w[l - 2] === 101) l -= 2; // er\n        break;\n      case 99: // c\n        if (w[l - 2] === 105) l -= 2; // ic\n        break;\n      case 109: // m\n        if (l >= r2 + 3 && w[l - 2] === 115 && w[l - 3] === 105) l -= 3; // ism\n        break;\n      case 105: // i\n        if (l >= r2 + 3 && w[l - 2] === 116 && w[l - 3] === 105) l -= 3; // iti\n        break;\n      case 115: // s\n        if (l >= r2 + 3 && w[l - 2] === 117 && w[l - 3] === 111) l -= 3; // ous\n        break;\n      case 116: // t\n        if (l >= r2 + 3 && w[l - 2] === 110) {\n          // nt\n          if (w[l - 3] === 97) {\n            // ant\n            l -= 3; // ant\n          } else if (w[l - 3] === 101) {\n            // ent\n            if (l >= 4 && w[l - 4] === 109) {\n              // ment\n              if (l >= 5 && w[l - 5] === 101) {\n                // ement\n                if (l >= r2 + 5) l -= 5; // ement\n              } else if (l >= r2 + 4) {\n                l -= 4; // ment\n              }\n            } else {\n              l -= 3; // ent\n            }\n          }\n        }\n        break;\n      case 101: // e\n        if (w[l - 2] === 99) {\n          // ce\n          if (l >= r2 + 4 && w[l - 3] === 110 && (w[l - 4] === 97 || w[l - 4] === 101)) l -= 4; // ance  ence\n        } else if (w[l - 2] === 108) {\n          // le\n          if (l >= r2 + 4 && w[l - 3] === 98 && (w[l - 4] === 97 || w[l - 4] === 105)) l -= 4; // able  ible\n        } else if (w[l - 2] === 116) {\n          // te\n          if (l >= r2 + 3 && w[l - 3] === 97) l -= 3; // ate\n        } else if (l >= r2 + 3 && (w[l - 2] === 118 || w[l - 2] === 122) && w[l - 3] === 105) {\n          // ive ize\n          l -= 3; // ive  ize\n        }\n    }\n  }\n  // Step_5\n  if (\n    l >= r1 + 1 && // r1 is >= 1\n    ((l >= r2 + 1 && w[l - 1] === 108 && w[l - 2] === 108) || // ll\n      (w[l - 1] === 101 && (l >= r2 + 1 || !isShortV(w, l - 1)))) // e\n  )\n    --l;\n  let out = '';\n  if (yFound) {\n    for (let i = 0; i < l; ++i) {\n      out += String.fromCharCode(w[i] === 89 ? 121 : w[i]); // Y -> y\n    }\n  } else {\n    for (let i = 0; i < l; ++i) out += String.fromCharCode(w[i]);\n  }\n  return out;\n};\n\n// #endregion Porter2 Stemmer Algorithm\n\n// src/constants.ts\nconst DEFAULT_OPTIONS = {\n  k1: 1.2,\n  b: 0.75,\n  minLength: 2,\n  stopWords: /* @__PURE__ */ new Set<string>([\n    'a',\n    'an',\n    'and',\n    'are',\n    'as',\n    'at',\n    'be',\n    'by',\n    'for',\n    'from',\n    'has',\n    'he',\n    'in',\n    'is',\n    'it',\n    'its',\n    'of',\n    'on',\n    'that',\n    'the',\n    'to',\n    'was',\n    'were',\n    'will',\n    'with',\n  ]),\n  stemming: false,\n  stemWords: (word: string): string => word,\n};\n\n/**\n * Interface for tokenization statistics.\n */\ninterface TokenizationStats {\n  /** Number of words in the original text before any processing. */\n  originalWordCount: number;\n  /** Number of words removed because they were identified as stop words. */\n  stopWordsRemoved: number;\n  /** Number of words that were stemmed (only if stemming is enabled). */\n  stemmedWords: number;\n  /** Time taken for tokenization in milliseconds. */\n  processingTimeMs: number;\n}\n\n/**\n * Interface for the result of tokenization.\n */\ninterface TokenizationResult {\n  /** Array of processed tokens (words). */\n  tokens: string[];\n  /** Optional statistics about the tokenization process. */\n  stats?: TokenizationStats;\n}\n\n/**\n * Interface for stemming rules.\n */\ninterface StemmingRule {\n  /** A RegExp pattern or string to match suffixes. */\n  pattern: RegExp | string;\n  /** The replacement string or function. */\n  replacement: string | ((substring: string, ...args: any[]) => string);\n  /** Optional minimum measure (complexity) of the word stem for the rule to apply. */\n  minMeasure?: number;\n}\n\n/**\n * Options for configuring the Tokenizer.\n */\ninterface TokenizerOptions {\n  /** A set of words to be ignored during tokenization. Defaults to an empty set. */\n  stopWords?: Set<string>;\n  /** The minimum length for a token to be kept. Defaults to 2. Numeric tokens are always kept. */\n  minLength?: number;\n  /** Whether to apply stemming to tokens. Defaults to false. */\n  stemming?: boolean;\n  /** Custom stemming rules to apply before the default Porter2 stemmer. Defaults to an empty array. */\n  stemmingRules?: StemmingRule[];\n}\n\n/**\n * Flexible text tokenizer with support for stop words, minimum token length,\n * Unicode normalization, and optional Porter2 stemming with custom rules.\n */\nclass Tokenizer {\n  /** Set of stop words to ignore. */\n  readonly stopWords: Set<string>;\n  /** Minimum length of tokens to keep. */\n  readonly minLength: number;\n  /** Flag indicating if stemming is enabled. */\n  readonly stemming: boolean;\n  /** Custom stemming rules. */\n  readonly stemmingRules: {\n    pattern: RegExp;\n    replacement: string | ((substring: string, ...args: any[]) => string);\n    minMeasure?: number;\n  }[];\n\n  /** Default options for the Tokenizer. */\n  static readonly DEFAULT_OPTIONS: Required<TokenizerOptions> = {\n    stopWords: /* @__PURE__ */ new Set<string>(),\n    minLength: 2,\n    stemming: false,\n    stemmingRules: [],\n  };\n\n  /**\n   * Creates a new tokenizer instance.\n   * @param options - Tokenization options including stop words, min length, stemming, and custom rules.\n   */\n  constructor(options: TokenizerOptions = {}) {\n    const mergedOptions = { ...Tokenizer.DEFAULT_OPTIONS, ...options };\n    this.stopWords = mergedOptions.stopWords;\n    this.minLength = mergedOptions.minLength;\n    this.stemming = mergedOptions.stemming;\n    // Ensure all rule patterns are RegExp objects\n    this.stemmingRules = mergedOptions.stemmingRules.map((rule) => ({\n      ...rule,\n      pattern: typeof rule.pattern === 'string' ? new RegExp(rule.pattern) : rule.pattern,\n    }));\n  }\n\n  /**\n   * Tokenizes input text into an array of processed terms.\n   * Steps:\n   * 1. Cleans the text (lowercase, normalize, remove punctuation/symbols).\n   * 2. Splits the text into potential tokens.\n   * 3. Filters tokens based on `minLength` and `stopWords`.\n   * 4. Applies stemming if `stemming` is true (custom rules first, then Porter2).\n   * 5. Optionally calculates statistics.\n   *\n   * @param text - The input text string to tokenize.\n   * @param includeStats - If true, returns tokenization statistics along with tokens. Defaults to false.\n   * @returns A `TokenizationResult` object containing the array of tokens and optional stats.\n   * @throws {Error} If the input text is null, undefined, or empty.\n   */\n  tokenize(text: string, includeStats = false): TokenizationResult {\n    if (!text) {\n      throw new Error('Input text cannot be null or empty');\n    }\n    const startTime = Date.now();\n    const originalWords = text.split(/\\s+/).filter((word) => word.length > 0);\n    const cleaned = this.cleanText(text);\n    const tokens = cleaned\n      .split(/\\s+/)\n      .filter((token) => this.isValidToken(token))\n      .map((token) => (this.stemming ? this.stemWord(token) : token));\n    const stats: TokenizationStats = includeStats\n      ? {\n          originalWordCount: originalWords.length,\n          stopWordsRemoved: originalWords.length - tokens.length, // This might be incorrect if stemming changes token count\n          stemmedWords: this.stemming ? tokens.length : 0,\n          processingTimeMs: Date.now() - startTime,\n        }\n      : {\n          originalWordCount: 0,\n          stopWordsRemoved: 0,\n          stemmedWords: 0,\n          processingTimeMs: 0,\n        };\n    return { tokens, stats };\n  }\n\n  /**\n   * Cleans and normalizes text for tokenization.\n   * - Converts to lowercase.\n   * - Normalizes Unicode characters (NFKD).\n   * - Removes control characters and zero-width spaces.\n   * - Removes diacritical marks (accents).\n   * - Removes emojis and pictographs.\n   * - Removes common symbols (™, ®, ©, ℠, ‼).\n   * - Replaces Unicode punctuation with spaces.\n   * - Removes characters not matching basic Latin, CJK, Hangul, or whitespace.\n   * - Collapses multiple spaces into single spaces.\n   * - Trims leading/trailing whitespace.\n   *\n   * @param text - Input text to clean.\n   * @returns Cleaned and normalized text, ready for splitting into tokens.\n   *\n   * @example\n   * cleanText(\"Hello, World™!\") // \"hello world\"\n   * cleanText(\"héllo 👋\") // \"hello\"\n   * cleanText(\"Hello 世界!\") // \"hello 世界\"\n   * cleanText(\"I'm don't\") // \"i'm don't\" (apostrophes kept by replacing punctuation with space)\n   * cleanText(\"test©2023\") // \"test 2023\"\n   */\n  cleanText(text: string): string {\n    return text\n      .toLowerCase()\n      .normalize('NFKD')\n      .replace(/[\\u0000-\\u001F\\u007F-\\u009F\\u200B-\\u200D\\uFEFF]/g, '') // Control characters & zero-width spaces\n      .replace(/[\\u0300-\\u036f]/g, '') // Diacritical marks\n      .replace(/[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/gu, '') // Emojis and pictographs\n      .replace(/[™®©℠‼]/g, '') // Common symbols\n      .replace(/[\\p{P}]/gu, ' ') // Unicode punctuation to space\n      .replace(/[^a-z0-9\\u3040-\\u30FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uAC00-\\uD7AF\\s]/gu, ' ') // Keep only latin, cjk, hangul, numbers, whitespace\n      .replace(/\\s+/g, ' ') // Collapse multiple spaces\n      .trim();\n  }\n\n  /**\n   * Checks if a token is valid (meets `minLength` criteria and is not a stop word).\n   * Numeric tokens are always considered valid regardless of length.\n   * @param token - The token string to validate.\n   * @returns `true` if the token is valid, `false` otherwise.\n   */\n  isValidToken(token: string): boolean {\n    const isNumeric = /^\\d+$/.test(token);\n    return (token.length >= this.minLength || isNumeric) && !this.stopWords.has(token);\n  }\n\n  /**\n   * Applies stemming to a single word.\n   * First, tries to apply custom stemming rules defined in `stemmingRules`.\n   * If no custom rule matches, applies the default Porter2 stemming algorithm.\n   * Words shorter than 3 characters are not stemmed.\n   * @param word - The word to stem.\n   * @returns The stemmed word.\n   */\n  stemWord(word: string): string {\n    if (word.length < 3) return word;\n    let customRuleApplied = false;\n    let stemmed = word;\n    for (const rule of this.stemmingRules) {\n      const match = stemmed.match(rule.pattern);\n      if (match) {\n        if (\n          !rule.minMeasure ||\n          this.measure(stemmed.substring(0, match.index)) >= rule.minMeasure\n        ) {\n          // Apply replacement\n          if (typeof rule.replacement === 'string') {\n            stemmed = stemmed.replace(rule.pattern, rule.replacement);\n          } else {\n            // If replacement is a function, it might need more specific arguments based on its definition.\n            // Assuming it takes the matched substring and potentially other match groups.\n            stemmed = stemmed.replace(rule.pattern, (...args) =>\n              (rule.replacement as Function)(...args)\n            );\n          }\n          customRuleApplied = true; // Mark that a custom rule was (potentially) applied\n          // Depending on stemming strategy, might want to break or continue applying rules\n        }\n      }\n    }\n    // If a custom rule was applied and modified the word, return it.\n    // Otherwise, or if custom rules are meant to precede default stemming, apply Porter2.\n    if (customRuleApplied && stemmed !== word) return stemmed; // Return if custom rule changed the word\n\n    // Fallback to Porter2 if no custom rule applied or if custom rules are pre-processing\n    return stem(stemmed); // Apply Porter2 to the (potentially already custom-stemmed) word\n  }\n\n  /**\n   * Checks if the character at a given index in a word is a consonant.\n   * Treats 'y' as a consonant if it's the first letter or follows a consonant.\n   * @param word - The word string.\n   * @param i - The index of the character to check.\n   * @returns `true` if the character is a consonant, `false` otherwise.\n   */\n  isConsonant(word: string, i: number): boolean {\n    const char = word[i];\n    if ('aeiou'.includes(char)) return false;\n    return char !== 'y' || (i === 0 ? true : !this.isConsonant(word, i - 1));\n  }\n\n  /**\n   * Calculates the \"measure\" of a word stem (approximates syllable count).\n   * The measure (m) is the number of times a sequence of vowels is followed by a\n   * sequence of consonants (VC). Used in some stemming rules.\n   * Example: measure(\"tree\") = 0, measure(\"trouble\") = 1, measure(\"private\") = 2\n   * @param word - The word (or stem) to measure.\n   * @returns The measure (m) of the word.\n   */\n  measure(word: string): number {\n    let m = 0;\n    let vowelSeen = false;\n    for (let i = 0; i < word.length; i++) {\n      if (this.isConsonant(word, i)) {\n        if (vowelSeen) {\n          m++;\n          vowelSeen = false;\n        }\n      } else {\n        vowelSeen = true;\n      }\n    }\n    return m;\n  }\n}\n\n/**\n * BM25 Options Interface.\n * Extends TokenizerOptions and adds BM25 specific parameters.\n */\ninterface BM25Options extends TokenizerOptions {\n  /**\n   * Term frequency saturation parameter (k1). Controls how quickly term frequency\n   * saturates. Higher values mean TF contributes more significantly even for high counts.\n   * Typical values are between 1.2 and 2.0. Default: 1.2.\n   */\n  k1?: number;\n  /**\n   * Document length normalization parameter (b). Controls the influence of document\n   * length. 0 means no length normalization, 1 means full normalization.\n   * Typical values are around 0.75. Default: 0.75.\n   */\n  b?: number;\n  /**\n   * A dictionary defining boost factors for specific document fields.\n   * Terms found in fields with higher boost factors will contribute more to the score.\n   * Example: `{ title: 2, body: 1 }`. Default: `{}` (no boosts).\n   */\n  fieldBoosts?: { [key: string]: number };\n}\n\n/**\n * Represents a search result item.\n */\ninterface SearchResult {\n  /** The index of the matching document in the original document array. */\n  index: number;\n  /** The BM25 relevance score for the document. Higher scores indicate better relevance. */\n  score: number;\n  /** The actual document object (optional, depends on how results are retrieved). */\n  doc?: any; // Consider using a generic <T> for BM25 class if docs are typed\n}\n\n/**\n * Implements the Okapi BM25 (Best Matching 25) ranking function for information retrieval.\n *\n * BM25 ranks documents based on the query terms appearing in each document,\n * considering term frequency (TF) and inverse document frequency (IDF).\n * It improves upon basic TF-IDF by incorporating:\n * - Term Frequency Saturation (k1): Prevents overly frequent terms from dominating the score.\n * - Document Length Normalization (b): Penalizes documents that are longer than average,\n *   assuming longer documents are more likely to contain query terms by chance.\n *\n * Key Components:\n * - Tokenizer: Processes text into terms (words), handles stop words and stemming.\n * - Document Indexing: Stores document lengths, term frequencies per document,\n *   and overall document frequency for each term.\n * - IDF Calculation: Measures the informativeness of a term based on how many documents contain it.\n * - Scoring: Combines TF, IDF, document length, and parameters k1/b to calculate relevance.\n */\nexport class BM25 {\n  /** Term frequency saturation parameter (k1). */\n  readonly termFrequencySaturation: number; // k1\n  /** Document length normalization factor (b). */\n  readonly lengthNormalizationFactor: number; // b\n  /** Tokenizer instance used for processing text. */\n  readonly tokenizer: Tokenizer;\n  /** Array storing the length (number of tokens, adjusted by field boosts) of each document. */\n  documentLengths: Uint32Array;\n  /** Average length of all documents in the index. */\n  averageDocLength: number;\n  /** Map from term (string) to its unique integer index. */\n  termToIndex: Map<string, number>;\n  /** Array storing the document frequency (number of docs containing the term) for each term index. */\n  documentFrequency: Uint32Array; // DF for each term index\n  /** Map from term index to another map storing `docIndex: termFrequencyInDoc`. */\n  termFrequencies: Map<number, Map<number, number>>; // TermIndex -> { DocIndex -> TF }\n  /** Boost factors for different fields within documents. */\n  readonly fieldBoosts: { [key: string]: number };\n  /** Array storing the original documents added to the index. */\n  documents: any[]; // Consider using a generic <T>\n\n  /**\n   * Creates a new BM25 search instance.\n   * @param docs - Optional array of initial documents (objects with string fields) to index.\n   * @param options - Configuration options for BM25 parameters (k1, b), tokenizer (stopWords, stemming, minLength), and field boosts.\n   */\n  constructor(docs?: any[], options: BM25Options = {}) {\n    const opts = { ...DEFAULT_OPTIONS, ...options };\n    this.termFrequencySaturation = opts.k1!; // Non-null assertion as DEFAULT_OPTIONS provides it\n    this.lengthNormalizationFactor = opts.b!; // Non-null assertion\n    this.tokenizer = new Tokenizer(opts);\n    this.fieldBoosts = opts.fieldBoosts || {};\n\n    // Initialize index structures\n    this.documents = [];\n    this.documentLengths = new Uint32Array(0);\n    this.termToIndex = new Map<string, number>();\n    this.documentFrequency = new Uint32Array(0); // Will be sized later\n    this.averageDocLength = 0;\n    this.termFrequencies = new Map<number, Map<number, number>>(); // TermIndex -> { DocIndex -> TF }\n\n    // Index initial documents if provided\n    if (docs && docs.length > 0) {\n      this.documents = [...docs]; // Store original documents\n      const { documentLengths, termToIndex, documentFrequency, averageDocLength, termFrequencies } =\n        this.processDocuments(docs);\n      // Assign processed data to instance properties\n      this.documentLengths = documentLengths;\n      this.termToIndex = termToIndex;\n      this.documentFrequency = documentFrequency;\n      this.averageDocLength = averageDocLength;\n      this.termFrequencies = termFrequencies;\n    }\n  }\n\n  /**\n   * Processes an array of documents to build the initial index structures.\n   * Calculates document lengths, term frequencies, document frequencies, and average document length.\n   * @param docs - Array of documents to process.\n   * @returns An object containing the calculated index data.\n   * @internal\n   */\n  private processDocuments(docs: any[]): {\n    documentLengths: Uint32Array;\n    termToIndex: Map<string, number>;\n    documentFrequency: Uint32Array;\n    averageDocLength: number;\n    termFrequencies: Map<number, Map<number, number>>;\n  } {\n    const numDocs = docs.length;\n    const documentLengths = new Uint32Array(numDocs);\n    const termToIndex = new Map<string, number>();\n    const termDocs = new Map<string, Set<number>>(); // Temp map: Term -> Set<DocIndex>\n    const termFrequencies = new Map<number, Map<number, number>>(); // TermIndex -> { DocIndex -> TF }\n    let totalDocLength = 0;\n    let nextTermIndex = 0;\n\n    docs.forEach((doc, docIndex) => {\n      let currentDocLength = 0;\n      const docTermFrequencies = new Map<number, number>(); // TermIndex -> TF for this doc\n\n      // Iterate through fields of the document\n      Object.entries(doc).forEach(([field, content]) => {\n        if (typeof content !== 'string') return; // Skip non-string fields\n\n        const fieldBoost = this.fieldBoosts[field] || 1;\n        const { tokens } = this.tokenizer.tokenize(content);\n        const fieldLength = tokens.length * fieldBoost;\n        currentDocLength += fieldLength;\n\n        // Calculate term frequencies within this field/doc\n        tokens.forEach((term) => {\n          // Assign index to new terms\n          if (!termToIndex.has(term)) {\n            termToIndex.set(term, nextTermIndex++);\n          }\n          const termIndexVal = termToIndex.get(term)!;\n\n          // Track which documents contain the term\n          if (!termDocs.has(term)) {\n            termDocs.set(term, new Set<number>());\n          }\n          termDocs.get(term)!.add(docIndex);\n\n          // Increment frequency for this term in this document\n          const currentFreq = docTermFrequencies.get(termIndexVal) || 0;\n          docTermFrequencies.set(termIndexVal, currentFreq + fieldBoost); // TF weighted by boost\n        });\n      });\n\n      // Store the calculated length for this document\n      documentLengths[docIndex] = currentDocLength;\n      totalDocLength += currentDocLength;\n\n      // Merge this document's term frequencies into the main structure\n      docTermFrequencies.forEach((freq, termIndexVal) => {\n        if (!termFrequencies.has(termIndexVal)) {\n          termFrequencies.set(termIndexVal, new Map<number, number>());\n        }\n        termFrequencies.get(termIndexVal)!.set(docIndex, freq);\n      });\n    });\n\n    // Calculate document frequency (DF) for each term\n    const documentFrequency = new Uint32Array(termToIndex.size);\n    termDocs.forEach((docsSet, term) => {\n      const termIndexVal = termToIndex.get(term)!;\n      documentFrequency[termIndexVal] = docsSet.size;\n    });\n\n    return {\n      documentLengths,\n      termToIndex,\n      documentFrequency,\n      averageDocLength: numDocs > 0 ? totalDocLength / numDocs : 0,\n      termFrequencies,\n    };\n  }\n\n  /**\n   * Recalculates the average document length based on the current `documentLengths`.\n   * @internal\n   */\n  private recalculateAverageLength(): void {\n    if (this.documentLengths.length === 0) {\n      this.averageDocLength = 0;\n      return;\n    }\n    // Use the typed array's reduce method for type safety and performance\n    const totalLength = this.documentLengths.reduce((sum, len) => sum + len, 0);\n    this.averageDocLength = totalLength / this.documentLengths.length;\n  }\n\n  /**\n   * Searches the indexed documents for a given query string using the BM25 ranking formula.\n   *\n   * @param query - The search query text.\n   * @param topK - The maximum number of top-scoring results to return. Defaults to 10.\n   * @returns An array of `SearchResult` objects, sorted by descending BM25 score.\n   */\n  search(query: string, topK = 10): SearchResult[] {\n    const { tokens: queryTokens } = this.tokenizer.tokenize(query); // Tokenize the query\n    const scores = new Float32Array(this.documentLengths.length).fill(0); // Initialize scores to 0\n\n    // Accumulate scores for each document based on query terms\n    queryTokens.forEach((term) => {\n      const termIndex = this.termToIndex.get(term);\n      // Ignore terms not found in the index\n      if (termIndex === undefined) return;\n\n      const idf = this.calculateIdf(termIndex);\n      // Skip terms with non-positive IDF (e.g., term in all docs)\n      if (idf <= 0) return;\n\n      const termFreqsInDocs = this.termFrequencies.get(termIndex); // Map<DocIndex, TF>\n      if (!termFreqsInDocs) return; // Should not happen if termIndex exists, but check anyway\n\n      // Iterate over documents containing this term\n      termFreqsInDocs.forEach((tf, docIndex) => {\n        const docLength = this.documentLengths[docIndex];\n\n        // --- BM25 Term Score Calculation ---\n        // Normalizes TF based on document length and saturation parameters.\n        const numerator = tf * (this.termFrequencySaturation + 1);\n        const denominator =\n          tf +\n          this.termFrequencySaturation *\n            (1 -\n              this.lengthNormalizationFactor +\n              (this.lengthNormalizationFactor * docLength) / this.averageDocLength);\n\n        // Add the weighted score (IDF * normalized TF) for this term to the document's total score\n        scores[docIndex] += idf * (numerator / denominator);\n      });\n    });\n\n    // --- Result Generation ---\n    // Create result objects, filter out zero scores, sort, and take top K\n    return Array.from({ length: scores.length }, (_, i) => ({\n      index: i,\n      score: scores[i],\n      // Optionally add: doc: this.getDocument(i) // If you want the full doc in results\n    }))\n      .filter((result) => result.score > 0) // Keep only documents with positive scores\n      .sort((a, b) => b.score - a.score) // Sort by score descending\n      .slice(0, topK); // Limit to topK results\n  }\n\n  /**\n   * Searches for an exact phrase within the indexed documents.\n   * Ranks documents containing the exact sequence of tokens higher.\n   * Note: This is a basic implementation. More sophisticated phrase search might consider proximity.\n   *\n   * @param phrase - The exact phrase to search for.\n   * @param topK - The maximum number of results to return. Defaults to 10.\n   * @returns An array of `SearchResult` objects, sorted by score, for documents containing the phrase.\n   */\n  searchPhrase(phrase: string, topK = 10): SearchResult[] {\n    const { tokens: phraseTokens } = this.tokenizer.tokenize(phrase); // Tokenize the phrase\n    if (phraseTokens.length === 0) return []; // Cannot search for empty phrase\n\n    // --- Find Candidate Documents ---\n    // Start with documents containing the *first* term, then intersect with subsequent terms.\n    let candidateDocs: Set<number> | null = null;\n\n    for (const term of phraseTokens) {\n      const termIndex = this.termToIndex.get(term);\n      if (termIndex === undefined) return []; // Phrase cannot exist if any term is missing\n\n      const docsContainingTermIter = this.termFrequencies.get(termIndex)?.keys();\n      if (!docsContainingTermIter) return []; // Should not happen, but check\n\n      const currentTermDocs = new Set(docsContainingTermIter);\n\n      if (candidateDocs === null) {\n        // First term initializes the candidates\n        candidateDocs = currentTermDocs;\n      } else {\n        // Intersect: Keep only documents present in both sets\n        candidateDocs = new Set(\n          [...candidateDocs].filter((docIdx: number) => currentTermDocs.has(docIdx))\n        );\n      }\n\n      // If intersection becomes empty, the phrase cannot exist\n      if (candidateDocs.size === 0) return [];\n    }\n\n    if (candidateDocs === null || candidateDocs.size === 0) return []; // No candidates found\n\n    // --- Verify Phrase Occurrence and Score ---\n    const scores = new Map<number, number>(); // Map<DocIndex, Score>\n\n    candidateDocs.forEach((docIndex) => {\n      const doc = this.getDocument(docIndex); // Get the original document content\n      let phraseFoundInDoc = false;\n\n      // Check each field for the phrase\n      Object.entries(doc).forEach(([field, content]) => {\n        if (typeof content !== 'string' || phraseFoundInDoc) return; // Skip non-strings or if already found\n\n        const fieldBoost = this.fieldBoosts[field] || 1;\n        // Tokenize the field content using the same settings\n        const { tokens: docTokens } = this.tokenizer.tokenize(content);\n\n        // Simple sliding window check for the exact phrase sequence\n        for (let i = 0; i <= docTokens.length - phraseTokens.length; i++) {\n          let match = true;\n          for (let j = 0; j < phraseTokens.length; j++) {\n            if (docTokens[i + j] !== phraseTokens[j]) {\n              match = false;\n              break;\n            }\n          }\n          if (match) {\n            // Phrase found! Calculate score for this document based on the phrase terms\n            const phraseScoreVal = this.calculatePhraseScore(phraseTokens, docIndex) * fieldBoost;\n            scores.set(docIndex, (scores.get(docIndex) || 0) + phraseScoreVal);\n            phraseFoundInDoc = true; // Only score once per doc even if phrase repeats\n            break; // Move to next document once found in this one\n          }\n        }\n      });\n    });\n\n    // --- Format and Sort Results ---\n    return Array.from(scores.entries())\n      .map(([index, score]) => ({ index, score }))\n      .sort((a, b) => b.score - a.score) // Sort by score descending\n      .slice(0, topK); // Limit results\n  }\n\n  /**\n   * Calculates a BM25-like score for a sequence of phrase tokens within a specific document.\n   * Sums the individual BM25 scores of the terms in the phrase for that document.\n   * @param phraseTokens - The tokenized phrase.\n   * @param docIndex - The index of the document to score against.\n   * @returns The calculated phrase score for the document.\n   * @internal\n   */\n  private calculatePhraseScore(phraseTokens: string[], docIndex: number): number {\n    return phraseTokens.reduce((currentScore, term) => {\n      const termIndex = this.termToIndex.get(term);\n      // Ignore terms not in index (shouldn't happen if candidate selection worked)\n      if (termIndex === undefined) return currentScore;\n\n      const idf = this.calculateIdf(termIndex);\n      const tf = this.termFrequencies.get(termIndex)?.get(docIndex) || 0;\n      const docLength = this.documentLengths[docIndex];\n\n      // Calculate the BM25 contribution of this single term\n      const numerator = tf * (this.termFrequencySaturation + 1);\n      const denominator =\n        tf +\n        this.termFrequencySaturation *\n          (1 -\n            this.lengthNormalizationFactor +\n            (this.lengthNormalizationFactor * docLength) / this.averageDocLength);\n\n      // Add IDF * normalized TF to the total phrase score\n      return currentScore + idf * (numerator / denominator);\n    }, 0); // Start score at 0\n  }\n\n  /**\n   * Adds a single new document to the index.\n   * Updates all internal index structures incrementally.\n   * Note: For adding many documents, `addDocumentsParallel` is generally more efficient.\n   *\n   * @param doc - The document object (with string fields) to add.\n   * @throws {Error} If the document is null or undefined.\n   */\n  async addDocument(doc: any): Promise<void> {\n    if (!doc) throw new Error('Document cannot be null');\n\n    const docIndex = this.documentLengths.length; // Index for the new document\n\n    // --- Update Document List and Lengths ---\n    this.documents.push(doc);\n    // Resize documentLengths array (simple append)\n    const newDocLengths = new Uint32Array(docIndex + 1);\n    newDocLengths.set(this.documentLengths, 0); // Copy old lengths\n    // Calculate length later...\n    this.documentLengths = newDocLengths; // Assign temporarily\n\n    let currentDocLength = 0;\n    const docTermFrequencies = new Map<number, number>(); // TermIndex -> TF for this new doc\n\n    // --- Process Fields and Tokens ---\n    Object.entries(doc).forEach(([field, content]) => {\n      if (typeof content !== 'string') return;\n\n      const fieldBoost = this.fieldBoosts[field] || 1;\n      const { tokens } = this.tokenizer.tokenize(content);\n      currentDocLength += tokens.length * fieldBoost;\n\n      // Process each token in the field\n      tokens.forEach((term) => {\n        let termIndexVal: number;\n        // Add term to index if new\n        if (!this.termToIndex.has(term)) {\n          termIndexVal = this.termToIndex.size;\n          this.termToIndex.set(term, termIndexVal);\n\n          // Ensure documentFrequency array is large enough\n          if (this.documentFrequency.length <= termIndexVal) {\n            const oldDf = this.documentFrequency;\n            // Grow exponentially, ensure it's at least termIndex + 1\n            const newSize = Math.max(termIndexVal + 1, oldDf.length * 2 || 1); // Ensure newSize is at least 1 if oldDf.length is 0\n            this.documentFrequency = new Uint32Array(newSize);\n            this.documentFrequency.set(oldDf, 0);\n          }\n          // Initialize DF for new term (will be incremented below)\n          this.documentFrequency[termIndexVal] = 0;\n        } else {\n          termIndexVal = this.termToIndex.get(term)!;\n        }\n\n        // Increment frequency for this term in this new document\n        const currentFreq = docTermFrequencies.get(termIndexVal) || 0;\n        docTermFrequencies.set(termIndexVal, currentFreq + fieldBoost); // Weighted TF\n      });\n    });\n\n    // --- Update Global Structures ---\n    // Set the calculated length for the new document\n    this.documentLengths[docIndex] = currentDocLength;\n\n    // Add this document's term frequencies to the main map and update DF\n    docTermFrequencies.forEach((freq, termIndexVal) => {\n      // Add TF entry\n      if (!this.termFrequencies.has(termIndexVal)) {\n        this.termFrequencies.set(termIndexVal, new Map<number, number>());\n      }\n      this.termFrequencies.get(termIndexVal)!.set(docIndex, freq);\n\n      // Increment document frequency for the term\n      // Ensure termIndexVal is within bounds of documentFrequency before incrementing\n      if (termIndexVal < this.documentFrequency.length) {\n        this.documentFrequency[termIndexVal]++;\n      } else {\n        // This case should ideally not be reached if array was resized correctly\n        console.error(\n          `Error: termIndexVal ${termIndexVal} is out of bounds for documentFrequency (length ${this.documentFrequency.length}). This indicates an issue with array resizing or term indexing.`\n        );\n      }\n    });\n\n    // Recalculate average document length\n    this.recalculateAverageLength(); // Efficiently update average\n  }\n\n  /**\n   * Calculates the Inverse Document Frequency (IDF) for a given term index.\n   * Uses the BM25 IDF formula: log(1 + (N - n + 0.5) / (n + 0.5))\n   * where N is the total number of documents and n is the number of documents\n   * containing the term. The +1 smooths the logarithm.\n   *\n   * @param termIndex - The integer index of the term.\n   * @returns The IDF score for the term. Returns 0 if the term is not found or has 0 DF.\n   */\n  calculateIdf(termIndex: number): number {\n    // Ensure termIndex is valid\n    if (termIndex < 0 || termIndex >= this.documentFrequency.length) {\n      return 0; // Term not in index or index out of bounds\n    }\n\n    const docFreq = this.documentFrequency[termIndex]; // n: number of docs containing the term\n    // If term appears in 0 documents or more docs than exist (error state), return 0 IDF.\n    if (docFreq <= 0 || docFreq > this.documentLengths.length) {\n      return 0;\n    }\n\n    const N = this.documentLengths.length; // Total number of documents\n    const numerator = N - docFreq + 0.5;\n    const denominator = docFreq + 0.5;\n\n    // Adding 1 inside the log ensures IDF is always non-negative.\n    return Math.log(1 + numerator / denominator);\n  }\n\n  /**\n   * Retrieves the term frequency (TF) for a specific term in a specific document.\n   * @param termIndex - The integer index of the term.\n   * @param docIndex - The index of the document.\n   * @returns The term frequency, or 0 if the term is not in the document or indices are invalid.\n   */\n  getTermFrequency(termIndex: number, docIndex: number): number {\n    return this.termFrequencies.get(termIndex)?.get(docIndex) || 0;\n  }\n\n  /**\n   * Retrieves the original document object stored at a given index.\n   * @param index - The index of the document to retrieve.\n   * @returns The document object.\n   * @throws {Error} If the index is out of bounds.\n   */\n  getDocument(index: number): any {\n    // Consider using a generic <T>\n    if (index < 0 || index >= this.documents.length) {\n      throw new Error(`Document index ${index} out of bounds (0-${this.documents.length - 1})`);\n    }\n    return this.documents[index];\n  }\n\n  /**\n   * Clears all indexed documents and resets the BM25 instance to its initial state.\n   */\n  clearDocuments(): void {\n    this.documents = [];\n    this.documentLengths = new Uint32Array(0);\n    this.termToIndex.clear();\n    this.documentFrequency = new Uint32Array(0);\n    this.averageDocLength = 0;\n    this.termFrequencies.clear();\n  }\n\n  /**\n   * Gets the total number of documents currently indexed.\n   * @returns The document count.\n   */\n  getDocumentCount(): number {\n    return this.documents.length;\n  }\n\n  /**\n   * Adds multiple documents sequentially by calling `addDocument` for each.\n   * This method processes documents sequentially in the main thread.\n   * @param docs - An array of documents to add.\n   */\n  async addDocuments(docs: any[]): Promise<void[]> {\n    // Allow Promise<void> return type\n    // Using Promise.all to potentially run additions concurrently if addDocument becomes async\n    // Although the current addDocument is sync, this structure allows future flexibility.\n    return Promise.all(docs.map((doc) => this.addDocument(doc)));\n    // Note: If addDocument remains purely synchronous, a simple forEach would also work:\n    // docs.forEach(doc => this.addDocument(doc));\n  }\n}\n",
    "import { v4 as uuidv4 } from 'uuid';\n\n// Interface for working memory entries\ninterface WorkingMemoryEntry {\n  actionName: string;\n  result: ActionResult;\n  timestamp: number;\n}\nimport { createUniqueUuid } from './entities';\nimport { getNumberEnv } from './utils/environment';\nimport { BufferUtils } from './utils/buffer';\nimport { decryptSecret, getSalt, safeReplacer } from './index';\nimport { createLogger } from './logger';\nimport {\n  ChannelType,\n  EventType,\n  ModelType,\n  MODEL_SETTINGS,\n  type Content,\n  type MemoryMetadata,\n  type Character,\n  type Action,\n  type Evaluator,\n  type Provider,\n  type HandlerCallback,\n  type IDatabaseAdapter,\n  type Entity,\n  type Room,\n  type World,\n  type SendHandlerFunction,\n  type TargetInfo,\n  type ModelParamsMap,\n  type ModelResultMap,\n  type ModelTypeName,\n  type Plugin,\n  type Route,\n  type UUID,\n  type Service,\n  type ServiceTypeName,\n  type State,\n  type TaskWorker,\n  type Agent,\n  type Log,\n  type Participant,\n  type Relationship,\n  type Task,\n  type Memory,\n  type ModelHandler,\n  type RuntimeSettings,\n  type Component,\n  IAgentRuntime,\n  type ActionResult,\n  type ActionContext,\n} from './types';\n\nimport { BM25 } from './search';\nimport { stringToUuid } from './utils';\n\nconst environmentSettings: RuntimeSettings = {};\n\nexport class Semaphore {\n  private permits: number;\n  private waiting: Array<() => void> = [];\n  constructor(count: number) {\n    this.permits = count;\n  }\n  async acquire(): Promise<void> {\n    if (this.permits > 0) {\n      this.permits -= 1;\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      this.waiting.push(resolve);\n    });\n  }\n  release(): void {\n    this.permits += 1;\n    const nextResolve = this.waiting.shift();\n    if (nextResolve && this.permits > 0) {\n      this.permits -= 1;\n      nextResolve();\n    }\n  }\n}\n\ntype ServiceResolver = (service: Service) => void;\n\nexport class AgentRuntime implements IAgentRuntime {\n  readonly #conversationLength = 32 as number;\n  readonly agentId: UUID;\n  readonly character: Character;\n  public adapter!: IDatabaseAdapter;\n  readonly actions: Action[] = [];\n  readonly evaluators: Evaluator[] = [];\n  readonly providers: Provider[] = [];\n  readonly plugins: Plugin[] = [];\n  private isInitialized = false;\n  events: Map<string, ((params: any) => Promise<void>)[]> = new Map();\n  stateCache = new Map<\n    UUID,\n    {\n      values: { [key: string]: any };\n      data: { [key: string]: any };\n      text: string;\n    }\n  >();\n  readonly fetch = fetch;\n  services = new Map<ServiceTypeName, Service[]>();\n  private serviceTypes = new Map<ServiceTypeName, (typeof Service)[]>();\n  models = new Map<string, ModelHandler[]>();\n  routes: Route[] = [];\n  private taskWorkers = new Map<string, TaskWorker>();\n  private sendHandlers = new Map<string, SendHandlerFunction>();\n  private eventHandlers: Map<string, ((data: any) => void)[]> = new Map();\n\n  // A map of all plugins available to the runtime, keyed by name, for dependency resolution.\n  private allAvailablePlugins = new Map<string, Plugin>();\n  // The initial list of plugins specified by the character configuration.\n  private characterPlugins: Plugin[] = [];\n\n  public logger;\n  private settings: RuntimeSettings;\n  private servicesInitQueue = new Set<typeof Service>();\n  private servicePromiseHandles = new Map<string, ServiceResolver>(); // write\n  private servicePromises = new Map<string, Promise<Service>>(); // read\n  public initPromise;\n  private initResolver: ((value?: unknown) => void) | undefined;\n  private currentRunId?: UUID; // Track the current run ID\n  private currentActionContext?: {\n    // Track current action execution context\n    actionName: string;\n    actionId: UUID;\n    prompts: Array<{\n      modelType: string;\n      prompt: string;\n      timestamp: number;\n    }>;\n  };\n  private maxWorkingMemoryEntries: number = 50; // Default value, can be overridden\n\n  constructor(opts: {\n    conversationLength?: number;\n    agentId?: UUID;\n    character?: Character;\n    plugins?: Plugin[];\n    fetch?: typeof fetch;\n    adapter?: IDatabaseAdapter;\n    settings?: RuntimeSettings;\n    events?: { [key: string]: ((params: any) => void)[] };\n    allAvailablePlugins?: Plugin[];\n  }) {\n    this.agentId =\n      opts.character?.id ??\n      opts?.agentId ??\n      stringToUuid(opts.character?.name ?? uuidv4() + opts.character?.username);\n    this.character = opts.character as Character;\n\n    this.initPromise = new Promise((resolve) => {\n      this.initResolver = resolve;\n    });\n\n    // Create the logger with namespace only - level is handled globally from env\n    this.logger = createLogger({\n      namespace: this.character?.name,\n    });\n\n    this.#conversationLength = opts.conversationLength ?? this.#conversationLength;\n    if (opts.adapter) {\n      this.registerDatabaseAdapter(opts.adapter);\n    }\n    this.fetch = (opts.fetch as typeof fetch) ?? this.fetch;\n    this.settings = opts.settings ?? environmentSettings;\n\n    this.plugins = []; // Initialize plugins as an empty array\n    this.characterPlugins = opts?.plugins ?? []; // Store the original character plugins\n\n    if (opts.allAvailablePlugins) {\n      for (const plugin of opts.allAvailablePlugins) {\n        if (plugin?.name) {\n          this.allAvailablePlugins.set(plugin.name, plugin);\n        }\n      }\n    }\n\n    this.logger.debug(`Success: Agent ID: ${this.agentId}`);\n    this.currentRunId = undefined; // Initialize run ID tracker\n\n    // Set max working memory entries from settings or environment\n    if (opts.settings?.MAX_WORKING_MEMORY_ENTRIES) {\n      this.maxWorkingMemoryEntries = parseInt(opts.settings.MAX_WORKING_MEMORY_ENTRIES, 10) || 50;\n    } else {\n      this.maxWorkingMemoryEntries = getNumberEnv('MAX_WORKING_MEMORY_ENTRIES', 50) as number;\n    }\n  }\n\n  /**\n   * Create a new run ID for tracking a sequence of model calls\n   */\n  createRunId(): UUID {\n    return uuidv4() as UUID;\n  }\n\n  /**\n   * Start a new run for tracking prompts\n   */\n  startRun(): UUID {\n    this.currentRunId = this.createRunId();\n    return this.currentRunId;\n  }\n\n  /**\n   * End the current run\n   */\n  endRun(): void {\n    this.currentRunId = undefined;\n  }\n\n  /**\n   * Get the current run ID (creates one if it doesn't exist)\n   */\n  getCurrentRunId(): UUID {\n    if (!this.currentRunId) {\n      this.currentRunId = this.createRunId();\n    }\n    return this.currentRunId;\n  }\n\n  async registerPlugin(plugin: Plugin): Promise<void> {\n    if (!plugin?.name) {\n      // Ensure plugin and plugin.name are defined\n      const errorMsg = 'Plugin or plugin name is undefined';\n      this.logger.error(`*** registerPlugin: ${errorMsg}`);\n      throw new Error(`*** registerPlugin: ${errorMsg}`);\n    }\n\n    // Check if a plugin with the same name is already registered.\n    const existingPlugin = this.plugins.find((p) => p.name === plugin.name);\n    if (existingPlugin) {\n      this.logger.warn(\n        `${this.character.name}(${this.agentId}) - Plugin ${plugin.name} is already registered. Skipping re-registration.`\n      );\n      return; // Do not proceed further with other registration steps\n    }\n\n    // Add the plugin to the runtime's list of active plugins\n    (this.plugins as Plugin[]).push(plugin);\n    this.logger.debug(\n      `Success: Plugin ${plugin.name} added to active plugins for ${this.character.name}(${this.agentId}).`\n    );\n\n    if (plugin.init) {\n      try {\n        await plugin.init(plugin.config || {}, this);\n        this.logger.debug(`Success: Plugin ${plugin.name} initialized successfully`);\n      } catch (error) {\n        // Check if the error is related to missing API keys\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        if (\n          errorMessage.includes('API key') ||\n          errorMessage.includes('environment variables') ||\n          errorMessage.includes('Invalid plugin configuration')\n        ) {\n          console.warn(`Plugin ${plugin.name} requires configuration. ${errorMessage}`);\n          console.warn(\n            'Please check your environment variables and ensure all required API keys are set.'\n          );\n          console.warn('You can set these in your .env file.');\n        } else {\n          throw error;\n        }\n      }\n    }\n    if (plugin.adapter) {\n      this.logger.debug(`Registering database adapter for plugin ${plugin.name}`);\n      this.registerDatabaseAdapter(plugin.adapter);\n    }\n    if (plugin.actions) {\n      for (const action of plugin.actions) {\n        this.registerAction(action);\n      }\n    }\n    if (plugin.evaluators) {\n      for (const evaluator of plugin.evaluators) {\n        this.registerEvaluator(evaluator);\n      }\n    }\n    if (plugin.providers) {\n      for (const provider of plugin.providers) {\n        this.registerProvider(provider);\n      }\n    }\n    if (plugin.models) {\n      for (const [modelType, handler] of Object.entries(plugin.models)) {\n        this.registerModel(\n          modelType as ModelTypeName,\n          handler as (params: any) => Promise<any>,\n          plugin.name,\n          plugin?.priority\n        );\n      }\n    }\n    if (plugin.routes) {\n      for (const route of plugin.routes) {\n        // namespace plugin name infront of paths\n        const routePath = route.path.startsWith('/') ? route.path : `/${route.path}`;\n        this.routes.push({ ...route, path: '/' + plugin.name + routePath });\n      }\n    }\n    if (plugin.events) {\n      for (const [eventName, eventHandlers] of Object.entries(plugin.events)) {\n        for (const eventHandler of eventHandlers) {\n          this.registerEvent(eventName, eventHandler);\n        }\n      }\n    }\n    if (plugin.services) {\n      for (const service of plugin.services) {\n        // ensure we have a promise, so when it's actually loaded via registerService,\n        // we can trigger the loading of service dependencies\n        if (!this.servicePromises.has(service.serviceType)) {\n          this._createServiceResolver(service.serviceType as ServiceTypeName);\n        }\n\n        if (this.isInitialized) {\n          await this.registerService(service);\n        } else {\n          this.servicesInitQueue.add(service);\n        }\n      }\n    }\n  }\n\n  getAllServices(): Map<ServiceTypeName, Service[]> {\n    return this.services;\n  }\n\n  async stop() {\n    this.logger.debug(`runtime::stop - character ${this.character.name}`);\n    for (const [serviceName, services] of this.services) {\n      this.logger.debug(`runtime::stop - requesting service stop for ${serviceName}`);\n      for (const service of services) {\n        await service.stop();\n      }\n    }\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) {\n      this.logger.warn('Agent already initialized');\n      return;\n    }\n    const pluginRegistrationPromises: Promise<void>[] = [];\n\n    // The resolution is now expected to happen in the CLI layer (e.g., startAgent)\n    // The runtime now accepts a pre-resolved, ordered list of plugins.\n    const pluginsToLoad = this.characterPlugins;\n\n    for (const plugin of pluginsToLoad) {\n      if (plugin) {\n        pluginRegistrationPromises.push(this.registerPlugin(plugin));\n      }\n    }\n    await Promise.all(pluginRegistrationPromises);\n\n    if (!this.adapter) {\n      this.logger.error(\n        'Database adapter not initialized. Make sure @elizaos/plugin-sql is included in your plugins.'\n      );\n      throw new Error(\n        'Database adapter not initialized. The SQL plugin (@elizaos/plugin-sql) is required for agent initialization. Please ensure it is included in your character configuration.'\n      );\n    }\n    try {\n      await this.adapter.init();\n\n      // Run migrations for all loaded plugins\n      this.logger.info('Running plugin migrations...');\n      await this.runPluginMigrations();\n      this.logger.info('Plugin migrations completed.');\n\n      const existingAgent = await this.ensureAgentExists(this.character as Partial<Agent>);\n      if (!existingAgent) {\n        const errorMsg = `Agent ${this.character.name} does not exist in database after ensureAgentExists call`;\n        throw new Error(errorMsg);\n      }\n\n      // No need to transform agent's own ID\n      let agentEntity = await this.getEntityById(this.agentId);\n\n      if (!agentEntity) {\n        const created = await this.createEntity({\n          id: this.agentId,\n          names: [this.character.name],\n          metadata: {},\n          agentId: existingAgent.id!,\n        });\n        if (!created) {\n          const errorMsg = `Failed to create entity for agent ${this.agentId}`;\n          throw new Error(errorMsg);\n        }\n\n        agentEntity = await this.getEntityById(this.agentId);\n        if (!agentEntity) throw new Error(`Agent entity not found for ${this.agentId}`);\n\n        this.logger.debug(`Success: Agent entity created successfully for ${this.character.name}`);\n      }\n    } catch (error: any) {\n      const errorMsg = error instanceof Error ? error.message : String(error);\n      this.logger.error(`Failed to create agent entity: ${errorMsg}`);\n      throw error;\n    }\n    try {\n      // Room creation and participant setup\n      const room = await this.getRoom(this.agentId);\n      if (!room) {\n        await this.createRoom({\n          id: this.agentId,\n          name: this.character.name,\n          source: 'elizaos',\n          type: ChannelType.SELF,\n          channelId: this.agentId,\n          serverId: this.agentId,\n          worldId: this.agentId,\n        });\n      }\n      const participants = await this.adapter.getParticipantsForRoom(this.agentId);\n      if (!participants.includes(this.agentId)) {\n        const added = await this.addParticipant(this.agentId, this.agentId);\n        if (!added) {\n          const errorMsg = `Failed to add agent ${this.agentId} as participant to its own room`;\n          throw new Error(errorMsg);\n        }\n        this.logger.debug(`Agent ${this.character.name} linked to its own room successfully`);\n      }\n    } catch (error: any) {\n      const errorMsg = error instanceof Error ? error.message : String(error);\n      this.logger.error(`Failed to add agent as participant: ${errorMsg}`);\n      throw error;\n    }\n    const embeddingModel = this.getModel(ModelType.TEXT_EMBEDDING);\n    if (!embeddingModel) {\n      this.logger.warn(\n        `[AgentRuntime][${this.character.name}] No TEXT_EMBEDDING model registered. Skipping embedding dimension setup.`\n      );\n    } else {\n      await this.ensureEmbeddingDimension();\n    }\n    for (const service of this.servicesInitQueue) {\n      await this.registerService(service);\n    }\n    this.isInitialized = true;\n    if (this.initResolver) {\n      this.initResolver(); // resolve initPromise\n    }\n  }\n\n  async runPluginMigrations(): Promise<void> {\n    const drizzle = (this.adapter as any)?.db;\n    if (!drizzle) {\n      this.logger.warn('Drizzle instance not found on adapter, skipping plugin migrations.');\n      return;\n    }\n\n    const pluginsWithSchemas = this.plugins.filter((p) => p.schema);\n    this.logger.info(`Found ${pluginsWithSchemas.length} plugins with schemas to migrate.`);\n\n    for (const p of pluginsWithSchemas) {\n      if (p.schema) {\n        this.logger.info(`Running migrations for plugin: ${p.name}`);\n        try {\n          // You might need a more generic way to run migrations if they are not all Drizzle-based\n          // For now, assuming a function on the adapter or a utility function\n          if (this.adapter && 'runMigrations' in this.adapter) {\n            await (this.adapter as any).runMigrations(p.schema, p.name);\n            this.logger.info(`Successfully migrated plugin: ${p.name}`);\n          }\n        } catch (error) {\n          this.logger.error(\n            error instanceof Error ? error : new Error(String(error)),\n            `Failed to migrate plugin ${p.name}`\n          );\n          // Decide if you want to throw or continue\n        }\n      }\n    }\n  }\n\n  async getConnection(): Promise<unknown> {\n    // Updated return type\n    if (!this.adapter) {\n      throw new Error('Database adapter not registered');\n    }\n    return this.adapter.getConnection();\n  }\n\n  setSetting(key: string, value: string | boolean | null | any, secret = false) {\n    if (secret) {\n      if (!this.character.secrets) {\n        this.character.secrets = {};\n      }\n      this.character.secrets[key] = value;\n    } else {\n      if (!this.character.settings) {\n        this.character.settings = {};\n      }\n      this.character.settings[key] = value;\n    }\n  }\n\n  getSetting(key: string): string | boolean | null | any {\n    const value =\n      this.character.secrets?.[key] ||\n      this.character.settings?.[key] ||\n      (typeof this.character.settings === 'object' &&\n        this.character.settings !== null &&\n        'secrets' in this.character.settings &&\n        (this.character.settings as Record<string, any>).secrets?.[key]) ||\n      this.settings[key];\n    const decryptedValue = decryptSecret(value, getSalt());\n    if (decryptedValue === 'true') return true;\n    if (decryptedValue === 'false') return false;\n    return decryptedValue || null;\n  }\n\n  getConversationLength() {\n    return this.#conversationLength;\n  }\n\n  registerDatabaseAdapter(adapter: IDatabaseAdapter) {\n    if (this.adapter) {\n      this.logger.warn(\n        'Database adapter already registered. Additional adapters will be ignored. This may lead to unexpected behavior.'\n      );\n    } else {\n      this.adapter = adapter;\n      this.logger.debug('Success: Database adapter registered successfully.');\n    }\n  }\n\n  registerProvider(provider: Provider) {\n    this.providers.push(provider);\n    this.logger.debug(`Success: Provider ${provider.name} registered successfully.`);\n  }\n\n  registerAction(action: Action) {\n    if (this.actions.find((a) => a.name === action.name)) {\n      this.logger.warn(\n        `${this.character.name}(${this.agentId}) - Action ${action.name} already exists. Skipping registration.`\n      );\n    } else {\n      try {\n        this.actions.push(action);\n        this.logger.success(\n          `${this.character.name}(${this.agentId}) - Action ${action.name} registered successfully.`\n        );\n      } catch (e) {\n        console.error('Error registering action', e);\n      }\n    }\n  }\n\n  registerEvaluator(evaluator: Evaluator) {\n    this.evaluators.push(evaluator);\n  }\n\n  // Helper functions for immutable action plan updates\n  private updateActionPlan<T>(plan: T, updates: Partial<T>): T {\n    return { ...plan, ...updates };\n  }\n\n  private updateActionStep<T, S>(\n    plan: T & { steps: S[] },\n    index: number,\n    stepUpdates: Partial<S>\n  ): T & { steps: S[] } {\n    // Add bounds checking\n    if (!plan.steps || index < 0 || index >= plan.steps.length) {\n      this.logger.warn(\n        `Invalid step index: ${index} for plan with ${plan.steps?.length || 0} steps`\n      );\n      return plan;\n    }\n    return {\n      ...plan,\n      steps: plan.steps.map((step: S, i: number) =>\n        i === index ? { ...step, ...stepUpdates } : step\n      ),\n    };\n  }\n\n  async processActions(\n    message: Memory,\n    responses: Memory[],\n    state?: State,\n    callback?: HandlerCallback\n  ): Promise<void> {\n    // Determine if we have multiple actions to execute\n    const allActions: string[] = [];\n    for (const response of responses) {\n      if (response.content?.actions && response.content.actions.length > 0) {\n        allActions.push(...response.content.actions);\n      }\n    }\n\n    const hasMultipleActions = allActions.length > 1;\n    const parentRunId = this.getCurrentRunId();\n    const runId = this.createRunId();\n\n    // Create action plan if multiple actions\n    let actionPlan: {\n      runId: UUID;\n      totalSteps: number;\n      currentStep: number;\n      steps: Array<{\n        action: string;\n        status: 'pending' | 'completed' | 'failed';\n        result?: ActionResult;\n        error?: string;\n      }>;\n      thought: string;\n      startTime: number;\n    } | null = null;\n\n    if (hasMultipleActions) {\n      // Extract thought from response content\n      const thought =\n        responses[0]?.content?.thought ||\n        `Executing ${allActions.length} actions: ${allActions.join(', ')}`;\n\n      actionPlan = {\n        runId,\n        totalSteps: allActions.length,\n        currentStep: 0,\n        steps: allActions.map((action) => ({\n          action,\n          status: 'pending' as const,\n        })),\n        thought,\n        startTime: Date.now(),\n      };\n    }\n\n    let actionIndex = 0;\n\n    for (const response of responses) {\n      if (!response.content?.actions || response.content.actions.length === 0) {\n        this.logger.warn('No action found in the response content.');\n        continue;\n      }\n      const actions = response.content.actions;\n\n      // Initialize action results array for this run\n      const actionResults: ActionResult[] = [];\n      let accumulatedState = state;\n\n      function normalizeAction(actionString: string) {\n        return actionString.toLowerCase().replace(/_/g, '');\n      }\n      this.logger.debug(`Found actions: ${this.actions.map((a) => normalizeAction(a.name))}`);\n\n      for (const responseAction of actions) {\n        // Update current step in plan immutably\n        if (actionPlan) {\n          actionPlan = this.updateActionPlan(actionPlan, { currentStep: actionIndex + 1 });\n        }\n\n        // Compose state with previous action results and plan\n        accumulatedState = await this.composeState(message, [\n          'RECENT_MESSAGES',\n          'ACTION_STATE', // This will include the action plan\n        ]);\n\n        // Add action plan to state if it exists\n        if (actionPlan && accumulatedState.data) {\n          accumulatedState.data.actionPlan = actionPlan;\n          accumulatedState.data.actionResults = actionResults;\n        }\n\n        this.logger.debug(`Success: Calling action: ${responseAction}`);\n        const normalizedResponseAction = normalizeAction(responseAction);\n\n        // First try exact match\n        let action = this.actions.find(\n          (a: { name: string }) => normalizeAction(a.name) === normalizedResponseAction\n        );\n\n        if (!action) {\n          // Then try fuzzy matching\n          action = this.actions.find(\n            (a: { name: string }) =>\n              normalizeAction(a.name).includes(normalizedResponseAction) ||\n              normalizedResponseAction.includes(normalizeAction(a.name))\n          );\n        }\n\n        if (action) {\n          this.logger.debug(`Success: Found action: ${action?.name}`);\n        } else {\n          this.logger.debug('Attempting to find action in similes.');\n          for (const _action of this.actions) {\n            // First try exact match in similes\n            const exactSimileMatch = _action.similes?.find(\n              (simile) => normalizeAction(simile) === normalizedResponseAction\n            );\n\n            if (exactSimileMatch) {\n              action = _action;\n              this.logger.debug(`Success: Action found in similes (exact match): ${action.name}`);\n              break;\n            }\n\n            // Then try fuzzy match in similes\n            const fuzzySimileMatch = _action.similes?.find(\n              (simile) =>\n                normalizeAction(simile).includes(normalizedResponseAction) ||\n                normalizedResponseAction.includes(normalizeAction(simile))\n            );\n\n            if (fuzzySimileMatch) {\n              action = _action;\n              this.logger.debug(`Success: Action found in similes (fuzzy match): ${action.name}`);\n              break;\n            }\n          }\n        }\n        if (!action) {\n          const errorMsg = `No action found for: ${responseAction}`;\n          this.logger.error(errorMsg);\n\n          // Update plan with error immutably\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: 'failed',\n              error: errorMsg,\n            });\n          }\n\n          const actionMemory: Memory = {\n            id: uuidv4() as UUID,\n            entityId: message.entityId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            content: {\n              thought: errorMsg,\n              source: 'auto',\n              type: 'action_result',\n              actionName: responseAction,\n              actionStatus: 'failed',\n              runId,\n            },\n          };\n          await this.createMemory(actionMemory, 'messages');\n          actionIndex++;\n          continue;\n        }\n        if (!action.handler) {\n          this.logger.error(`Action ${action.name} has no handler.`);\n\n          // Update plan with error immutably\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: 'failed',\n              error: 'No handler',\n            });\n          }\n\n          actionIndex++;\n          continue;\n        }\n        try {\n          this.logger.debug(`Executing handler for action: ${action.name}`);\n\n          // Start tracking this action's execution\n          const actionId = uuidv4() as UUID;\n          this.currentActionContext = {\n            actionName: action.name,\n            actionId,\n            prompts: [],\n          };\n\n          // Create action context with plan information\n          const actionContext: ActionContext = {\n            previousResults: actionResults,\n            getPreviousResult: (actionName: string) => {\n              return actionResults.find((r) => r.data?.actionName === actionName);\n            },\n          };\n\n          // Add plan information to options if multiple actions\n          const options: { [key: string]: unknown } = {\n            context: actionContext,\n          };\n\n          if (actionPlan) {\n            options.actionPlan = {\n              totalSteps: actionPlan.totalSteps,\n              currentStep: actionPlan.currentStep,\n              steps: actionPlan.steps,\n              thought: actionPlan.thought,\n            };\n          }\n\n          try {\n            this.logger.debug(`Creating action start message for: ${action.name}`);\n            await this.emitEvent(EventType.ACTION_STARTED, {\n              messageId: actionId,\n              roomId: message.roomId,\n              world: message.worldId,\n              content: {\n                text: `Executing action: ${action.name}`,\n                actions: [action.name],\n                actionStatus: 'executing',\n                actionId: actionId,\n                runId: runId,\n                type: 'agent_action',\n                thought: actionPlan?.thought,\n                source: message.content?.source, // Include original message source\n              },\n            });\n          } catch (error) {\n            this.logger.error('Failed to create action start message:', String(error));\n          }\n\n          let storedCallbackData: { content: Content; files?: any }[] = [];\n\n          const storageCallback = async (response: Content, files?: any) => {\n            storedCallbackData.push({ content: response, files });\n            return [];\n          };\n\n          // Execute action with context\n          const result = await action.handler(\n            this,\n            message,\n            accumulatedState,\n            options,\n            storageCallback,\n            responses\n          );\n\n          // Handle backward compatibility for void, null, true, false returns\n          const isLegacyReturn =\n            result === undefined || result === null || typeof result === 'boolean';\n\n          // Only create ActionResult if we have a proper result\n          let actionResult: ActionResult | null = null;\n\n          if (!isLegacyReturn) {\n            // Ensure we have an ActionResult with required success field\n            if (\n              typeof result === 'object' &&\n              result !== null &&\n              ('values' in result || 'data' in result || 'text' in result)\n            ) {\n              // Ensure success field exists with default true\n              actionResult = {\n                ...result,\n                success: 'success' in result ? result.success : true, // Default to true if not specified\n              } as ActionResult;\n            } else {\n              actionResult = {\n                success: true, // Default success for legacy results\n                data: {\n                  actionName: action.name,\n                  legacyResult: result,\n                },\n              };\n            }\n\n            actionResults.push(actionResult);\n\n            // Merge returned values into state\n            if (actionResult.values) {\n              accumulatedState = {\n                ...accumulatedState,\n                values: { ...accumulatedState.values, ...actionResult.values },\n                data: {\n                  ...(accumulatedState.data || {}),\n                  actionResults: [...(accumulatedState.data?.actionResults || []), actionResult],\n                  actionPlan,\n                },\n              };\n            }\n\n            // Store in working memory (in state data) with cleanup\n            if (actionResult && accumulatedState.data) {\n              if (!accumulatedState.data.workingMemory) accumulatedState.data.workingMemory = {};\n\n              // Add new entry first, then clean up if we exceed the limit\n              const memoryKey = `action_${responseAction}_${uuidv4()}`;\n              const memoryEntry: WorkingMemoryEntry = {\n                actionName: action.name,\n                result: actionResult,\n                timestamp: Date.now(),\n              };\n              accumulatedState.data.workingMemory[memoryKey] = memoryEntry;\n\n              // Clean up old entries if we now exceed the limit\n              const entries = Object.entries(accumulatedState.data.workingMemory);\n              if (entries.length > this.maxWorkingMemoryEntries) {\n                // Sort by timestamp (newest first) and keep only the most recent entries\n                const sorted = entries.sort((a, b) => {\n                  const entryA = a[1] as WorkingMemoryEntry | null;\n                  const entryB = b[1] as WorkingMemoryEntry | null;\n                  const timestampA = entryA?.timestamp ?? 0;\n                  const timestampB = entryB?.timestamp ?? 0;\n                  return timestampB - timestampA;\n                });\n                // Keep exactly maxWorkingMemoryEntries entries (including the new one we just added)\n                accumulatedState.data.workingMemory = Object.fromEntries(\n                  sorted.slice(0, this.maxWorkingMemoryEntries)\n                );\n              }\n            }\n\n            // Update plan with success immutably\n            if (actionPlan && actionPlan.steps[actionIndex]) {\n              actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n                status: 'completed',\n                result: actionResult,\n              });\n            }\n          }\n\n          try {\n            const isSuccess = actionResult?.success !== false;\n            const statusText = isSuccess ? 'completed' : 'failed';\n\n            await this.emitEvent(EventType.ACTION_COMPLETED, {\n              messageId: actionId,\n              roomId: message.roomId,\n              world: message.worldId,\n              content: {\n                text: `Action ${action.name} ${statusText}`,\n                actions: [action.name],\n                actionStatus: statusText,\n                actionId: actionId,\n                type: 'agent_action',\n                actionResult: actionResult,\n                source: message.content?.source, // Include original message source\n              },\n            });\n          } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            this.logger.error(\n              `Failed to emit ACTION_COMPLETED event for action ${action.name} (${actionId}): ${errorMessage}`\n            );\n            // Don't re-throw as this shouldn't block action execution completion,\n            // but ensure the error is visible for debugging\n          }\n\n          if (callback) {\n            for (const data of storedCallbackData) {\n              await callback(data.content, data.files);\n            }\n          }\n\n          // Store action result as memory\n          const actionMemory: Memory = {\n            id: actionId,\n            entityId: this.agentId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            content: {\n              text: actionResult?.text || `Executed action: ${action.name}`,\n              source: 'action',\n              type: 'action_result',\n              actionName: action.name,\n              actionStatus: actionResult?.success ? 'completed' : 'failed',\n              actionResult: isLegacyReturn ? { legacy: result } : actionResult,\n              runId,\n              ...(actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought,\n              }),\n            },\n            metadata: {\n              type: 'action_result',\n              actionName: action.name,\n              runId,\n              parentRunId,\n              actionId,\n              ...(actionPlan && {\n                totalSteps: actionPlan.totalSteps,\n                currentStep: actionPlan.currentStep,\n              }),\n            },\n          };\n          await this.createMemory(actionMemory, 'messages');\n\n          this.logger.debug(\n            `Action ${action.name} completed`,\n            JSON.stringify({\n              isLegacyReturn,\n              result: isLegacyReturn ? result : undefined,\n              hasValues: actionResult ? !!actionResult.values : false,\n              hasData: actionResult ? !!actionResult.data : false,\n              hasText: actionResult ? !!actionResult.text : false,\n            })\n          );\n\n          // log to database with collected prompts\n          await this.adapter.log({\n            entityId: message.entityId,\n            roomId: message.roomId,\n            type: 'action',\n            body: {\n              action: action.name,\n              actionId,\n              message: message.content.text,\n              messageId: message.id,\n              state: accumulatedState,\n              responses,\n              result: isLegacyReturn ? { legacy: result } : actionResult,\n              isLegacyReturn,\n              prompts: this.currentActionContext?.prompts || [],\n              promptCount: this.currentActionContext?.prompts.length || 0,\n              runId,\n              parentRunId,\n              ...(actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought,\n              }),\n            },\n          });\n\n          // Clear action context\n          this.currentActionContext = undefined;\n        } catch (error: any) {\n          const errorMessage = error instanceof Error ? error.message : String(error);\n          this.logger.error(error);\n\n          // Update plan with error using immutable pattern\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: 'failed',\n              error: errorMessage,\n            });\n          }\n\n          // Clear action context on error\n          this.currentActionContext = undefined;\n\n          // Create error result\n          const errorResult: ActionResult = {\n            success: false, // Required field\n            data: {\n              actionName: action.name,\n              error: errorMessage,\n              errorObject: error,\n            },\n          };\n          actionResults.push(errorResult);\n\n          const actionMemory: Memory = {\n            id: uuidv4() as UUID,\n            content: {\n              thought: errorMessage,\n              source: 'auto',\n              type: 'action_result',\n              actionName: action.name,\n              actionStatus: 'failed',\n              error: errorMessage,\n              runId,\n              ...(actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought,\n              }),\n            },\n            entityId: this.agentId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            metadata: {\n              type: 'action_result',\n              actionName: action.name,\n              runId,\n              parentRunId,\n              error: true,\n              ...(actionPlan && {\n                totalSteps: actionPlan.totalSteps,\n                currentStep: actionPlan.currentStep,\n              }),\n            },\n          };\n          await this.createMemory(actionMemory, 'messages');\n\n          // Decide whether to continue or abort\n          // For now, only abort on critical errors\n          if (error?.critical || error?.code === 'CRITICAL_ERROR') {\n            throw error;\n          }\n        }\n\n        actionIndex++;\n      }\n\n      // Store accumulated results for evaluators and providers\n      if (message.id) {\n        this.stateCache.set(`${message.id}_action_results`, {\n          values: { actionResults },\n          data: { actionResults, actionPlan },\n          text: JSON.stringify(actionResults),\n        });\n      }\n    }\n  }\n\n  async evaluate(\n    message: Memory,\n    state: State,\n    didRespond?: boolean,\n    callback?: HandlerCallback,\n    responses?: Memory[]\n  ) {\n    const evaluatorPromises = this.evaluators.map(async (evaluator: Evaluator) => {\n      if (!evaluator.handler) {\n        return null;\n      }\n      if (!didRespond && !evaluator.alwaysRun) {\n        return null;\n      }\n      const result = await evaluator.validate(this, message, state);\n      if (result) {\n        return evaluator;\n      }\n      return null;\n    });\n    const evaluators = (await Promise.all(evaluatorPromises)).filter(Boolean) as Evaluator[];\n    if (evaluators.length === 0) {\n      return [];\n    }\n    state = await this.composeState(message, ['RECENT_MESSAGES', 'EVALUATORS']);\n    await Promise.all(\n      evaluators.map(async (evaluator) => {\n        if (evaluator.handler) {\n          await evaluator.handler(this, message, state, {}, callback, responses);\n          this.adapter.log({\n            entityId: message.entityId,\n            roomId: message.roomId,\n            type: 'evaluator',\n            body: {\n              evaluator: evaluator.name,\n              messageId: message.id,\n              message: message.content.text,\n              state,\n              runId: this.getCurrentRunId(),\n            },\n          });\n        }\n      })\n    );\n    return evaluators;\n  }\n\n  // highly SQL optimized queries\n  async ensureConnections(\n    entities: any[],\n    rooms: any[],\n    source: string,\n    world: any\n  ): Promise<void> {\n    // guards\n    if (!entities) {\n      console.trace();\n      this.logger.error('ensureConnections - no entities');\n      return;\n    }\n    if (!rooms || rooms.length === 0) {\n      console.trace();\n      this.logger.error('ensureConnections - no rooms');\n      return;\n    }\n\n    // Create/ensure the world exists for this server\n    await this.ensureWorldExists({ ...world, agentId: this.agentId });\n\n    const firstRoom = rooms[0];\n\n    // Helper function for chunking arrays\n    const chunkArray = (arr: any[], size: number) =>\n      arr.reduce((chunks: any[][], item: any, i: number) => {\n        if (i % size === 0) chunks.push([]);\n        chunks[chunks.length - 1].push(item);\n        return chunks;\n      }, []);\n\n    // Step 1: Create all rooms FIRST (before adding any participants)\n    const roomIds = rooms.map((r: any) => r.id);\n    const roomExistsCheck = await this.getRoomsByIds(roomIds);\n    const roomsIdExists = roomExistsCheck?.map((r: any) => r.id);\n    const roomsToCreate = roomIds.filter((id: any) => !roomsIdExists?.includes(id));\n\n    const rf = {\n      worldId: world.id,\n      serverId: world.serverId,\n      source,\n      agentId: this.agentId,\n    };\n\n    if (roomsToCreate.length) {\n      this.logger.debug(\n        'runtime/ensureConnections - create',\n        roomsToCreate.length.toLocaleString(),\n        'rooms'\n      );\n      const roomObjsToCreate = rooms\n        .filter((r: any) => roomsToCreate.includes(r.id))\n        .map((r: any) => ({ ...r, ...rf }));\n      await this.createRooms(roomObjsToCreate);\n    }\n\n    // Step 2: Create all entities\n    const entityIds = entities.map((e: any) => e.id);\n    const entityExistsCheck = await this.adapter.getEntitiesByIds(entityIds);\n    const entitiesToUpdate = entityExistsCheck?.map((e: any) => e.id);\n    const entitiesToCreate = entities.filter((e: any) => !entitiesToUpdate?.includes(e.id));\n\n    const r = {\n      roomId: firstRoom.id,\n      channelId: firstRoom.channelId,\n      type: firstRoom.type,\n    };\n    const wf = {\n      worldId: world.id,\n      serverId: world.serverId,\n    };\n\n    if (entitiesToCreate.length) {\n      this.logger.debug(\n        'runtime/ensureConnections - creating',\n        entitiesToCreate.length.toLocaleString(),\n        'entities...'\n      );\n      const ef = {\n        ...r,\n        ...wf,\n        source,\n        agentId: this.agentId,\n      };\n      const entitiesToCreateWFields = entitiesToCreate.map((e: any) => ({ ...e, ...ef }));\n      // pglite doesn't like over 10k records\n      const batches = chunkArray(entitiesToCreateWFields, 5000);\n      for (const batch of batches) {\n        await this.createEntities(batch);\n      }\n    }\n\n    // Step 3: Now add all participants (rooms and entities must exist by now)\n    // Always add the agent to the first room\n    await this.ensureParticipantInRoom(this.agentId, firstRoom.id);\n\n    // Add all entities to the first room\n    const entityIdsInFirstRoom = await this.getParticipantsForRoom(firstRoom.id);\n    const entityIdsInFirstRoomFiltered = entityIdsInFirstRoom.filter(Boolean);\n    const missingIdsInRoom = entityIds.filter(\n      (id: any) => !entityIdsInFirstRoomFiltered.includes(id)\n    );\n\n    if (missingIdsInRoom.length) {\n      this.logger.debug(\n        'runtime/ensureConnections - Missing',\n        missingIdsInRoom.length.toLocaleString(),\n        'connections in',\n        firstRoom.id\n      );\n      // pglite handle this at over 10k records fine though\n      const batches = chunkArray(missingIdsInRoom, 5000);\n      for (const batch of batches) {\n        await this.addParticipantsRoom(batch, firstRoom.id);\n      }\n    }\n\n    this.logger.success(`Success: Successfully connected world`);\n  }\n\n  async ensureConnection({\n    entityId,\n    roomId,\n    worldId,\n    worldName,\n    userName,\n    name,\n    source,\n    type,\n    channelId,\n    serverId,\n    userId,\n    metadata,\n  }: {\n    entityId: UUID;\n    roomId: UUID;\n    worldId: UUID;\n    worldName?: string;\n    userName?: string;\n    name?: string;\n    source?: string;\n    type?: ChannelType;\n    channelId?: string;\n    serverId?: string;\n    userId?: UUID;\n    metadata?: Record<string, any>;\n  }) {\n    if (!worldId && serverId) {\n      worldId = createUniqueUuid(this, serverId);\n    }\n    const names = [name, userName].filter(Boolean) as string[];\n    const entityMetadata = {\n      [source!]: {\n        id: userId,\n        name: name,\n        userName: userName,\n      },\n    };\n    try {\n      // First check if the entity exists\n      const entity = await this.getEntityById(entityId);\n\n      if (!entity) {\n        try {\n          const success = await this.createEntity({\n            id: entityId,\n            names,\n            metadata: entityMetadata,\n            agentId: this.agentId,\n          });\n          if (success) {\n            this.logger.debug(\n              `Created new entity ${entityId} for user ${name || userName || 'unknown'}`\n            );\n          } else {\n            throw new Error(`Failed to create entity ${entityId}`);\n          }\n        } catch (error: any) {\n          if (error.message?.includes('duplicate key') || error.code === '23505') {\n            this.logger.debug(\n              `Entity ${entityId} exists in database but not for this agent. This is normal in multi-agent setups.`\n            );\n          } else {\n            throw error;\n          }\n        }\n      } else {\n        await this.adapter.updateEntity({\n          id: entityId,\n          names: [...new Set([...(entity.names || []), ...names])].filter(Boolean) as string[],\n          metadata: {\n            ...entity.metadata,\n            [source!]: {\n              ...(entity.metadata?.[source!] as Record<string, any>),\n              id: userId,\n              name: name,\n              userName: userName,\n            },\n          },\n          agentId: this.agentId,\n        });\n      }\n      await this.ensureWorldExists({\n        id: worldId,\n        name: worldName || serverId ? `World for server ${serverId}` : `World for room ${roomId}`,\n        agentId: this.agentId,\n        serverId: serverId || 'default',\n        metadata,\n      });\n      await this.ensureRoomExists({\n        id: roomId,\n        name: name || 'default',\n        source: source || 'default',\n        type: type || ChannelType.DM,\n        channelId,\n        serverId,\n        worldId,\n      });\n      try {\n        await this.ensureParticipantInRoom(entityId, roomId);\n      } catch (error: any) {\n        if (error.message?.includes('not found')) {\n          const added = await this.addParticipant(entityId, roomId);\n          if (!added) {\n            throw new Error(`Failed to add participant ${entityId} to room ${roomId}`);\n          }\n          this.logger.debug(`Added participant ${entityId} to room ${roomId} directly`);\n        } else {\n          throw error;\n        }\n      }\n      await this.ensureParticipantInRoom(this.agentId, roomId);\n\n      this.logger.debug(`Success: Successfully connected entity ${entityId} in room ${roomId}`);\n    } catch (error) {\n      this.logger.error(\n        `Failed to ensure connection: ${error instanceof Error ? error.message : String(error)}`\n      );\n      throw error;\n    }\n  }\n\n  async ensureParticipantInRoom(entityId: UUID, roomId: UUID) {\n    // Make sure entity exists in database before adding as participant\n    const entity = await this.getEntityById(entityId);\n\n    // If entity is not found but it's not the agent itself, we might still want to proceed\n    // This can happen when an entity exists in the database but isn't associated with this agent\n    if (!entity && entityId !== this.agentId) {\n      this.logger.warn(\n        `Entity ${entityId} not directly accessible to agent ${this.agentId}. Will attempt to add as participant anyway.`\n      );\n    } else if (!entity && entityId === this.agentId) {\n      throw new Error(`Agent entity ${entityId} not found, cannot add as participant.`);\n    } else if (!entity) {\n      throw new Error(`User entity ${entityId} not found, cannot add as participant.`);\n    }\n    const participants = await this.adapter.getParticipantsForRoom(roomId);\n    if (!participants.includes(entityId)) {\n      // Add participant using the ID\n      const added = await this.addParticipant(entityId, roomId);\n\n      if (!added) {\n        throw new Error(`Failed to add participant ${entityId} to room ${roomId}`);\n      }\n      if (entityId === this.agentId) {\n        this.logger.debug(`Agent ${this.character.name} linked to room ${roomId} successfully.`);\n      } else {\n        this.logger.debug(`User ${entityId} linked to room ${roomId} successfully.`);\n      }\n    }\n  }\n\n  async removeParticipant(entityId: UUID, roomId: UUID): Promise<boolean> {\n    return await this.adapter.removeParticipant(entityId, roomId);\n  }\n\n  async getParticipantsForEntity(entityId: UUID): Promise<Participant[]> {\n    return await this.adapter.getParticipantsForEntity(entityId);\n  }\n\n  async getParticipantsForRoom(roomId: UUID): Promise<UUID[]> {\n    return await this.adapter.getParticipantsForRoom(roomId);\n  }\n\n  async addParticipant(entityId: UUID, roomId: UUID): Promise<boolean> {\n    return await this.adapter.addParticipantsRoom([entityId], roomId);\n  }\n\n  async addParticipantsRoom(entityIds: UUID[], roomId: UUID): Promise<boolean> {\n    return await this.adapter.addParticipantsRoom(entityIds, roomId);\n  }\n\n  /**\n   * Ensure the existence of a world.\n   */\n  async ensureWorldExists({ id, name, serverId, metadata }: World) {\n    const world = await this.getWorld(id);\n    if (!world) {\n      this.logger.debug(\n        'Creating world:',\n        JSON.stringify({\n          id,\n          name,\n          serverId,\n          agentId: this.agentId,\n        })\n      );\n      await this.adapter.createWorld({\n        id,\n        name,\n        agentId: this.agentId,\n        serverId: serverId || 'default',\n        metadata,\n      });\n      this.logger.debug(`World ${id} created successfully.`);\n    }\n  }\n\n  async ensureRoomExists({ id, name, source, type, channelId, serverId, worldId, metadata }: Room) {\n    if (!worldId) throw new Error('worldId is required');\n    const room = await this.getRoom(id);\n    if (!room) {\n      await this.createRoom({\n        id,\n        name,\n        agentId: this.agentId,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId,\n        metadata,\n      });\n      this.logger.debug(`Room ${id} created successfully.`);\n    }\n  }\n\n  async composeState(\n    message: Memory,\n    includeList: string[] | null = null,\n    onlyInclude = false,\n    skipCache = false\n  ): Promise<State> {\n    const filterList = onlyInclude ? includeList : null;\n    const emptyObj = {\n      values: {},\n      data: {},\n      text: '',\n    } as State;\n    const cachedState =\n      skipCache || !message.id ? emptyObj : (await this.stateCache.get(message.id)) || emptyObj;\n    const providerNames = new Set<string>();\n    if (filterList && filterList.length > 0) {\n      filterList.forEach((name) => providerNames.add(name));\n    } else {\n      this.providers\n        .filter((p) => !p.private && !p.dynamic)\n        .forEach((p) => providerNames.add(p.name));\n    }\n    if (!filterList && includeList && includeList.length > 0) {\n      includeList.forEach((name) => providerNames.add(name));\n    }\n    const providersToGet = Array.from(\n      new Set(this.providers.filter((p) => providerNames.has(p.name)))\n    ).sort((a, b) => (a.position || 0) - (b.position || 0));\n    const providerData = await Promise.all(\n      providersToGet.map(async (provider) => {\n        const start = Date.now();\n        try {\n          const result = await provider.get(this, message, cachedState);\n          const duration = Date.now() - start;\n\n          // only need to inform if it's taking a long time\n          if (duration > 100) {\n            this.logger.debug(`${provider.name} Provider took ${duration}ms to respond`);\n          }\n          return {\n            ...result,\n            providerName: provider.name,\n          };\n        } catch (error: any) {\n          console.error('provider error', provider.name, error);\n          return { values: {}, text: '', data: {}, providerName: provider.name };\n        }\n      })\n    );\n    const currentProviderResults = { ...(cachedState.data?.providers || {}) };\n    for (const freshResult of providerData) {\n      currentProviderResults[freshResult.providerName] = freshResult;\n    }\n    const orderedTexts: string[] = [];\n    for (const provider of providersToGet) {\n      const result = currentProviderResults[provider.name];\n      if (result && result.text && result.text.trim() !== '') {\n        orderedTexts.push(result.text);\n      }\n    }\n    const providersText = orderedTexts.join('\\n');\n    const aggregatedStateValues = { ...(cachedState.values || {}) };\n    for (const provider of providersToGet) {\n      const providerResult = currentProviderResults[provider.name];\n      if (providerResult && providerResult.values && typeof providerResult.values === 'object') {\n        Object.assign(aggregatedStateValues, providerResult.values);\n      }\n    }\n    for (const providerName in currentProviderResults) {\n      if (!providersToGet.some((p) => p.name === providerName)) {\n        const providerResult = currentProviderResults[providerName];\n        if (providerResult && providerResult.values && typeof providerResult.values === 'object') {\n          Object.assign(aggregatedStateValues, providerResult.values);\n        }\n      }\n    }\n    const newState = {\n      values: {\n        ...aggregatedStateValues,\n        providers: providersText,\n      },\n      data: {\n        ...(cachedState.data || {}),\n        providers: currentProviderResults,\n      },\n      text: providersText,\n    } as State;\n    if (message.id) {\n      this.stateCache.set(message.id, newState);\n    }\n    return newState;\n  }\n\n  getService<T extends Service = Service>(serviceName: ServiceTypeName | string): T | null {\n    const serviceInstances = this.services.get(serviceName as ServiceTypeName);\n    if (!serviceInstances || serviceInstances.length === 0) {\n      // it's not a warn, a plugin might just not be installed\n      this.logger.debug(`Service ${serviceName} not found`);\n      return null;\n    }\n    return serviceInstances[0] as T;\n  }\n\n  /**\n   * Type-safe service getter that ensures the correct service type is returned\n   * @template T - The expected service class type\n   * @param serviceName - The service type name\n   * @returns The service instance with proper typing, or null if not found\n   */\n  getTypedService<T extends Service = Service>(serviceName: ServiceTypeName | string): T | null {\n    return this.getService<T>(serviceName);\n  }\n\n  /**\n   * Get all services of a specific type\n   * @template T - The expected service class type\n   * @param serviceName - The service type name\n   * @returns Array of service instances with proper typing\n   */\n  getServicesByType<T extends Service = Service>(serviceName: ServiceTypeName | string): T[] {\n    const serviceInstances = this.services.get(serviceName as ServiceTypeName);\n    if (!serviceInstances || serviceInstances.length === 0) {\n      this.logger.debug(`No services found for type ${serviceName}`);\n      return [];\n    }\n    return serviceInstances as T[];\n  }\n\n  /**\n   * Get all registered service types\n   * @returns Array of registered service type names\n   */\n  getRegisteredServiceTypes(): ServiceTypeName[] {\n    return Array.from(this.services.keys());\n  }\n\n  /**\n   * Check if a service type is registered\n   * @param serviceType - The service type to check\n   * @returns true if the service is registered\n   */\n  hasService(serviceType: ServiceTypeName | string): boolean {\n    const serviceInstances = this.services.get(serviceType as ServiceTypeName);\n    return serviceInstances !== undefined && serviceInstances.length > 0;\n  }\n\n  async registerService(serviceDef: typeof Service): Promise<void> {\n    const serviceType = serviceDef.serviceType as ServiceTypeName;\n    if (!serviceType) {\n      this.logger.warn(\n        `Service ${serviceDef.name} is missing serviceType. Please define a static serviceType property.`\n      );\n      return;\n    }\n    this.logger.debug(\n      `${this.character.name}(${this.agentId}) - Registering service:`,\n      serviceType\n    );\n\n    try {\n      const serviceInstance = await serviceDef.start(this);\n\n      // Initialize arrays if they don't exist\n      if (!this.services.has(serviceType)) {\n        this.services.set(serviceType, []);\n      }\n      if (!this.serviceTypes.has(serviceType)) {\n        this.serviceTypes.set(serviceType, []);\n      }\n\n      // Add the service to the arrays\n      this.services.get(serviceType)!.push(serviceInstance);\n      this.serviceTypes.get(serviceType)!.push(serviceDef);\n\n      // inform everyone that's waiting for this service, that it's now available\n      // removes the need for polling and timers\n      const resolve = this.servicePromiseHandles.get(serviceType);\n      if (resolve) {\n        resolve(serviceInstance);\n      } else {\n        this.logger.debug(\n          `${this.character.name} - Service ${serviceType} has no servicePromiseHandle`\n        );\n      }\n\n      if (typeof (serviceDef as any).registerSendHandlers === 'function') {\n        (serviceDef as any).registerSendHandlers(this, serviceInstance);\n      }\n      this.logger.debug(\n        `${this.character.name}(${this.agentId}) - Service ${serviceType} registered successfully`\n      );\n    } catch (error: any) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      this.logger.error(\n        `${this.character.name}(${this.agentId}) - Failed to register service ${serviceType}: ${errorMessage}`\n      );\n      throw error;\n    }\n  }\n\n  /// ensures servicePromises & servicePromiseHandles for a serviceType\n  private _createServiceResolver(serviceType: ServiceTypeName) {\n    // consider this in the future iterations\n    // const { promise, resolve, reject } = Promise.withResolvers<T>();\n    let resolver: ServiceResolver | undefined;\n    this.servicePromises.set(\n      serviceType,\n      new Promise<Service>((resolve) => {\n        resolver = resolve;\n      })\n    );\n    if (!resolver) {\n      throw new Error(`Failed to create resolver for service ${serviceType}`);\n    }\n    this.servicePromiseHandles.set(serviceType, resolver);\n    return this.servicePromises.get(serviceType)!;\n  }\n\n  /// returns a promise that's resolved once this service is loaded\n  getServiceLoadPromise(serviceType: ServiceTypeName): Promise<Service> {\n    // if this.isInitialized then the this p will exist and already be resolved\n    let p = this.servicePromises.get(serviceType);\n    if (!p) {\n      // not initialized or registered yet, registerPlugin is already smart enough to check to see if we make it here\n      p = this._createServiceResolver(serviceType);\n    }\n    return p;\n  }\n\n  registerModel(\n    modelType: ModelTypeName,\n    handler: (params: any) => Promise<any>,\n    provider: string,\n    priority?: number\n  ) {\n    const modelKey = typeof modelType === 'string' ? modelType : ModelType[modelType];\n    if (!this.models.has(modelKey)) {\n      this.models.set(modelKey, []);\n    }\n\n    const registrationOrder = Date.now();\n    this.models.get(modelKey)?.push({\n      handler,\n      provider,\n      priority: priority || 0,\n      registrationOrder,\n    });\n    this.models.get(modelKey)?.sort((a, b) => {\n      if ((b.priority || 0) !== (a.priority || 0)) {\n        return (b.priority || 0) - (a.priority || 0);\n      }\n      return (a.registrationOrder || 0) - (b.registrationOrder || 0);\n    });\n  }\n\n  getModel(\n    modelType: ModelTypeName,\n    provider?: string\n  ): ((runtime: IAgentRuntime, params: any) => Promise<any>) | undefined {\n    const modelKey = typeof modelType === 'string' ? modelType : ModelType[modelType];\n    const models = this.models.get(modelKey);\n    if (!models?.length) {\n      return undefined;\n    }\n    if (provider) {\n      const modelWithProvider = models.find((m) => m.provider === provider);\n      if (modelWithProvider) {\n        this.logger.debug(\n          `[AgentRuntime][${this.character.name}] Using model ${modelKey} from provider ${provider}`\n        );\n        return modelWithProvider.handler;\n      } else {\n        this.logger.warn(\n          `[AgentRuntime][${this.character.name}] No model found for provider ${provider}`\n        );\n      }\n    }\n\n    // Return highest priority handler (first in array after sorting)\n    this.logger.debug(\n      `[AgentRuntime][${this.character.name}] Using model ${modelKey} from provider ${models[0].provider}`\n    );\n    return models[0].handler;\n  }\n\n  /**\n   * Retrieves model configuration settings from character settings with support for\n   * model-specific overrides and default fallbacks.\n   *\n   * Precedence order (highest to lowest):\n   * 1. Model-specific settings (e.g., TEXT_SMALL_TEMPERATURE)\n   * 2. Default settings (e.g., DEFAULT_TEMPERATURE)\n   * 3. Legacy settings for backwards compatibility (e.g., MODEL_TEMPERATURE)\n   *\n   * @param modelType The specific model type to get settings for\n   * @returns Object containing model parameters if they exist, or null if no settings are configured\n   */\n  private getModelSettings(modelType?: ModelTypeName): Record<string, number> | null {\n    const modelSettings: Record<string, number> = {};\n\n    // Helper to get a setting value with fallback chain\n    const getSettingWithFallback = (\n      param: 'MAX_TOKENS' | 'TEMPERATURE' | 'FREQUENCY_PENALTY' | 'PRESENCE_PENALTY',\n      legacyKey: string\n    ): number | null => {\n      // Try model-specific setting first\n      if (modelType) {\n        const modelSpecificKey = `${modelType}_${param}`;\n        const modelValue = this.getSetting(modelSpecificKey);\n        if (modelValue !== null && modelValue !== undefined) {\n          const numValue = Number(modelValue);\n          if (!isNaN(numValue)) {\n            return numValue;\n          }\n          // If model-specific value exists but is invalid, continue to fallbacks\n        }\n      }\n\n      // Fall back to default setting\n      const defaultKey = `DEFAULT_${param}`;\n      const defaultValue = this.getSetting(defaultKey);\n      if (defaultValue !== null && defaultValue !== undefined) {\n        const numValue = Number(defaultValue);\n        if (!isNaN(numValue)) {\n          return numValue;\n        }\n        // If default value exists but is invalid, continue to legacy\n      }\n\n      // Fall back to legacy setting for backwards compatibility\n      const legacyValue = this.getSetting(legacyKey);\n      if (legacyValue !== null && legacyValue !== undefined) {\n        const numValue = Number(legacyValue);\n        if (!isNaN(numValue)) {\n          return numValue;\n        }\n      }\n\n      return null;\n    };\n\n    // Get settings with proper fallback chain\n    const maxTokens = getSettingWithFallback('MAX_TOKENS', MODEL_SETTINGS.MODEL_MAX_TOKEN);\n    const temperature = getSettingWithFallback('TEMPERATURE', MODEL_SETTINGS.MODEL_TEMPERATURE);\n    const frequencyPenalty = getSettingWithFallback(\n      'FREQUENCY_PENALTY',\n      MODEL_SETTINGS.MODEL_FREQ_PENALTY\n    );\n    const presencePenalty = getSettingWithFallback(\n      'PRESENCE_PENALTY',\n      MODEL_SETTINGS.MODEL_PRESENCE_PENALTY\n    );\n\n    // Add settings if they exist\n    if (maxTokens !== null) modelSettings.maxTokens = maxTokens;\n    if (temperature !== null) modelSettings.temperature = temperature;\n    if (frequencyPenalty !== null) modelSettings.frequencyPenalty = frequencyPenalty;\n    if (presencePenalty !== null) modelSettings.presencePenalty = presencePenalty;\n\n    // Return null if no settings were configured\n    return Object.keys(modelSettings).length > 0 ? modelSettings : null;\n  }\n\n  async useModel<T extends ModelTypeName, R = ModelResultMap[T]>(\n    modelType: T,\n    params: Omit<ModelParamsMap[T], 'runtime'> | any,\n    provider?: string\n  ): Promise<R> {\n    const modelKey = typeof modelType === 'string' ? modelType : ModelType[modelType];\n    const promptContent =\n      params?.prompt ||\n      params?.input ||\n      (Array.isArray(params?.messages) ? JSON.stringify(params.messages) : null);\n    const model = this.getModel(modelKey, provider);\n    if (!model) {\n      const errorMsg = `No handler found for delegate type: ${modelKey}`;\n      throw new Error(errorMsg);\n    }\n\n    // Log input parameters (keep debug log if useful)\n    this.logger.debug(\n      `[useModel] ${modelKey} input: ` +\n        JSON.stringify(params, safeReplacer(), 2).replace(/\\\\n/g, '\\n')\n    );\n    let paramsWithRuntime: any;\n    if (\n      params === null ||\n      params === undefined ||\n      typeof params !== 'object' ||\n      Array.isArray(params) ||\n      BufferUtils.isBuffer(params)\n    ) {\n      paramsWithRuntime = params;\n    } else {\n      // Include model settings from character configuration if available\n      const modelSettings = this.getModelSettings(modelKey);\n\n      if (modelSettings) {\n        // Apply model settings if configured\n        paramsWithRuntime = {\n          ...modelSettings, // Apply model settings first (includes defaults and model-specific)\n          ...params, // Then apply specific params (allowing overrides)\n          runtime: this,\n        };\n      } else {\n        // No model settings configured, use params as-is\n        paramsWithRuntime = {\n          ...params,\n          runtime: this,\n        };\n      }\n    }\n    const startTime =\n      typeof performance !== 'undefined' && typeof performance.now === 'function'\n        ? performance.now()\n        : Date.now();\n    try {\n      const response = await model(this, paramsWithRuntime);\n      const elapsedTime =\n        (typeof performance !== 'undefined' && typeof performance.now === 'function'\n          ? performance.now()\n          : Date.now()) - startTime;\n\n      // Log timing / response (keep debug log if useful)\n      this.logger.debug(\n        `[useModel] ${modelKey} output (took ${Number(elapsedTime.toFixed(2)).toLocaleString()}ms):`,\n        Array.isArray(response)\n          ? `${JSON.stringify(response.slice(0, 5))}...${JSON.stringify(response.slice(-5))} (${\n              response.length\n            } items)`\n          : JSON.stringify(response, safeReplacer(), 2).replace(/\\\\n/g, '\\n')\n      );\n\n      // Log all prompts except TEXT_EMBEDDING to track agent behavior\n      if (modelKey !== ModelType.TEXT_EMBEDDING && promptContent) {\n        // If we're in an action context, collect the prompt\n        if (this.currentActionContext) {\n          this.currentActionContext.prompts.push({\n            modelType: modelKey,\n            prompt: promptContent,\n            timestamp: Date.now(),\n          });\n        }\n      }\n\n      // Keep the existing model logging for backward compatibility\n      this.adapter.log({\n        entityId: this.agentId,\n        roomId: this.agentId,\n        body: {\n          modelType,\n          modelKey,\n          params: {\n            ...(typeof params === 'object' && !Array.isArray(params) && params ? params : {}),\n            prompt: promptContent,\n          },\n          prompt: promptContent,\n          runId: this.getCurrentRunId(),\n          timestamp: Date.now(),\n          executionTime: elapsedTime,\n          provider: provider || this.models.get(modelKey)?.[0]?.provider || 'unknown',\n          actionContext: this.currentActionContext\n            ? {\n                actionName: this.currentActionContext.actionName,\n                actionId: this.currentActionContext.actionId,\n              }\n            : undefined,\n          response:\n            Array.isArray(response) && response.every((x) => typeof x === 'number')\n              ? '[array]'\n              : response,\n        },\n        type: `useModel:${modelKey}`,\n      });\n\n      return response as R;\n    } catch (error: any) {\n      throw error;\n    }\n  }\n\n  registerEvent(event: string, handler: (params: any) => Promise<void>) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)?.push(handler);\n  }\n\n  getEvent(event: string): ((params: any) => Promise<void>)[] | undefined {\n    return this.events.get(event);\n  }\n\n  // probably should be <T> typed for params\n  async emitEvent(event: string | string[], params: any) {\n    const events = Array.isArray(event) ? event : [event];\n    for (const eventName of events) {\n      const eventHandlers = this.events.get(eventName);\n      if (!eventHandlers) {\n        continue;\n      }\n      try {\n        let paramsWithRuntime = { runtime: this };\n        if (typeof params === 'object' && params) {\n          paramsWithRuntime = { ...params, ...paramsWithRuntime };\n        }\n        await Promise.all(eventHandlers.map((handler) => handler(paramsWithRuntime)));\n      } catch (error) {\n        this.logger.error(`Error during emitEvent for ${eventName} (handler execution): ${error}`);\n        // throw error; // Re-throw if necessary\n      }\n    }\n  }\n\n  async ensureEmbeddingDimension() {\n    this.logger.debug(`[AgentRuntime][${this.character.name}] Starting ensureEmbeddingDimension`);\n\n    if (!this.adapter) {\n      throw new Error(\n        `[AgentRuntime][${this.character.name}] Database adapter not initialized before ensureEmbeddingDimension`\n      );\n    }\n    try {\n      const model = this.getModel(ModelType.TEXT_EMBEDDING);\n      if (!model) {\n        throw new Error(\n          `[AgentRuntime][${this.character.name}] No TEXT_EMBEDDING model registered`\n        );\n      }\n\n      this.logger.debug(`[AgentRuntime][${this.character.name}] Getting embedding dimensions`);\n      const embedding = await this.useModel(ModelType.TEXT_EMBEDDING, null);\n      if (!embedding || !embedding.length) {\n        throw new Error(`[AgentRuntime][${this.character.name}] Invalid embedding received`);\n      }\n\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Setting embedding dimension: ${embedding.length}`\n      );\n      await this.adapter.ensureEmbeddingDimension(embedding.length);\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Successfully set embedding dimension`\n      );\n    } catch (error) {\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Error in ensureEmbeddingDimension: ${error}`\n      );\n      throw error;\n    }\n  }\n\n  registerTaskWorker(taskHandler: TaskWorker): void {\n    if (this.taskWorkers.has(taskHandler.name)) {\n      this.logger.warn(\n        `Task definition ${taskHandler.name} already registered. Will be overwritten.`\n      );\n    }\n    this.taskWorkers.set(taskHandler.name, taskHandler);\n  }\n\n  getTaskWorker(name: string): TaskWorker | undefined {\n    return this.taskWorkers.get(name);\n  }\n\n  get db(): any {\n    return this.adapter.db;\n  }\n  async init(): Promise<void> {\n    await this.adapter.init();\n  }\n  async close(): Promise<void> {\n    await this.adapter.close();\n  }\n  async getAgent(agentId: UUID): Promise<Agent | null> {\n    return await this.adapter.getAgent(agentId);\n  }\n  async getAgents(): Promise<Partial<Agent>[]> {\n    return await this.adapter.getAgents();\n  }\n  async createAgent(agent: Partial<Agent>): Promise<boolean> {\n    return await this.adapter.createAgent(agent);\n  }\n  async updateAgent(agentId: UUID, agent: Partial<Agent>): Promise<boolean> {\n    return await this.adapter.updateAgent(agentId, agent);\n  }\n  async deleteAgent(agentId: UUID): Promise<boolean> {\n    return await this.adapter.deleteAgent(agentId);\n  }\n  async ensureAgentExists(agent: Partial<Agent>): Promise<Agent> {\n    if (!agent.name) {\n      throw new Error('Agent name is required');\n    }\n\n    const agents = await this.adapter.getAgents();\n    const existingAgentId = agents.find((a) => a.name === agent.name)?.id;\n\n    if (existingAgentId) {\n      // Update the agent on restart with the latest character configuration\n      const updatedAgent = {\n        ...agent,\n        id: existingAgentId,\n        updatedAt: Date.now(),\n      };\n\n      await this.adapter.updateAgent(existingAgentId, updatedAgent);\n      const existingAgent = await this.adapter.getAgent(existingAgentId);\n\n      if (!existingAgent) {\n        throw new Error(`Failed to retrieve agent after update: ${existingAgentId}`);\n      }\n\n      this.logger.debug(`Updated existing agent ${agent.name} on restart`);\n      return existingAgent;\n    }\n\n    // Create new agent if it doesn't exist\n    const newAgent: Agent = {\n      ...agent,\n      id: stringToUuid(agent.name),\n    } as Agent;\n\n    const created = await this.adapter.createAgent(newAgent);\n    if (!created) {\n      throw new Error(`Failed to create agent: ${agent.name}`);\n    }\n\n    this.logger.debug(`Created new agent ${agent.name}`);\n    return newAgent;\n  }\n  async getEntityById(entityId: UUID): Promise<Entity | null> {\n    const entities = await this.adapter.getEntitiesByIds([entityId]);\n    if (!entities?.length) return null;\n    return entities[0];\n  }\n\n  async getEntitiesByIds(entityIds: UUID[]): Promise<Entity[] | null> {\n    return await this.adapter.getEntitiesByIds(entityIds);\n  }\n  async getEntitiesForRoom(roomId: UUID, includeComponents?: boolean): Promise<Entity[]> {\n    return await this.adapter.getEntitiesForRoom(roomId, includeComponents);\n  }\n  async createEntity(entity: Entity): Promise<boolean> {\n    if (!entity.agentId) {\n      entity.agentId = this.agentId;\n    }\n    return await this.createEntities([entity]);\n  }\n\n  async createEntities(entities: Entity[]): Promise<boolean> {\n    entities.forEach((e) => {\n      e.agentId = this.agentId;\n    });\n    return await this.adapter.createEntities(entities);\n  }\n\n  async updateEntity(entity: Entity): Promise<void> {\n    await this.adapter.updateEntity(entity);\n  }\n  async getComponent(\n    entityId: UUID,\n    type: string,\n    worldId?: UUID,\n    sourceEntityId?: UUID\n  ): Promise<Component | null> {\n    return await this.adapter.getComponent(entityId, type, worldId, sourceEntityId);\n  }\n  async getComponents(entityId: UUID, worldId?: UUID, sourceEntityId?: UUID): Promise<Component[]> {\n    return await this.adapter.getComponents(entityId, worldId, sourceEntityId);\n  }\n  async createComponent(component: Component): Promise<boolean> {\n    return await this.adapter.createComponent(component);\n  }\n  async updateComponent(component: Component): Promise<void> {\n    await this.adapter.updateComponent(component);\n  }\n  async deleteComponent(componentId: UUID): Promise<void> {\n    await this.adapter.deleteComponent(componentId);\n  }\n  async addEmbeddingToMemory(memory: Memory): Promise<Memory> {\n    if (memory.embedding) {\n      return memory;\n    }\n    const memoryText = memory.content.text;\n    if (!memoryText) {\n      throw new Error('Cannot generate embedding: Memory content is empty');\n    }\n    try {\n      memory.embedding = await this.useModel(ModelType.TEXT_EMBEDDING, {\n        text: memoryText,\n      });\n    } catch (error: any) {\n      this.logger.error('Failed to generate embedding:', error);\n      memory.embedding = await this.useModel(ModelType.TEXT_EMBEDDING, null);\n    }\n    return memory;\n  }\n\n  async queueEmbeddingGeneration(\n    memory: Memory,\n    priority: 'high' | 'normal' | 'low' = 'normal'\n  ): Promise<void> {\n    // Skip if memory is null or undefined\n    if (!memory) {\n      return;\n    }\n\n    // Skip if memory already has embeddings\n    if (memory.embedding) {\n      return;\n    }\n\n    // Skip if no text content\n    if (!memory.content?.text) {\n      this.logger.debug('Skipping embedding generation for memory without text content');\n      return;\n    }\n\n    // Emit event for async embedding generation\n    await this.emitEvent(EventType.EMBEDDING_GENERATION_REQUESTED, {\n      runtime: this,\n      memory,\n      priority,\n      source: 'runtime',\n      retryCount: 0,\n      maxRetries: 3,\n      runId: this.getCurrentRunId(),\n    });\n  }\n  async getMemories(params: {\n    entityId?: UUID;\n    agentId?: UUID;\n    roomId?: UUID;\n    count?: number;\n    unique?: boolean;\n    tableName: string;\n    start?: number;\n    end?: number;\n  }): Promise<Memory[]> {\n    return await this.adapter.getMemories(params);\n  }\n  async getAllMemories(): Promise<Memory[]> {\n    const tables = ['memories', 'messages', 'facts', 'documents'];\n    const allMemories: Memory[] = [];\n\n    for (const tableName of tables) {\n      try {\n        const memories = await this.adapter.getMemories({\n          agentId: this.agentId,\n          tableName,\n          count: 10000, // Get a large number to fetch all\n        });\n        allMemories.push(...memories);\n      } catch (error) {\n        // Continue with other tables if one fails\n        this.logger.debug(`Failed to get memories from table ${tableName}: ${error}`);\n      }\n    }\n\n    return allMemories;\n  }\n  async getMemoryById(id: UUID): Promise<Memory | null> {\n    return await this.adapter.getMemoryById(id);\n  }\n  async getMemoriesByIds(ids: UUID[], tableName?: string): Promise<Memory[]> {\n    return await this.adapter.getMemoriesByIds(ids, tableName);\n  }\n  async getMemoriesByRoomIds(params: {\n    tableName: string;\n    roomIds: UUID[];\n    limit?: number;\n  }): Promise<Memory[]> {\n    return await this.adapter.getMemoriesByRoomIds(params);\n  }\n\n  async getCachedEmbeddings(params: {\n    query_table_name: string;\n    query_threshold: number;\n    query_input: string;\n    query_field_name: string;\n    query_field_sub_name: string;\n    query_match_count: number;\n  }): Promise<{ embedding: number[]; levenshtein_score: number }[]> {\n    return await this.adapter.getCachedEmbeddings(params);\n  }\n  async log(params: {\n    body: { [key: string]: unknown };\n    entityId: UUID;\n    roomId: UUID;\n    type: string;\n  }): Promise<void> {\n    await this.adapter.log(params);\n  }\n  async searchMemories(params: {\n    embedding: number[];\n    query?: string;\n    match_threshold?: number;\n    count?: number;\n    roomId?: UUID;\n    unique?: boolean;\n    worldId?: UUID;\n    entityId?: UUID;\n    tableName: string;\n  }): Promise<Memory[]> {\n    const memories = await this.adapter.searchMemories(params);\n    if (params.query) {\n      const rerankedMemories = await this.rerankMemories(params.query, memories);\n      return rerankedMemories;\n    }\n    return memories;\n  }\n  async rerankMemories(query: string, memories: Memory[]): Promise<Memory[]> {\n    const docs = memories.map((memory) => ({\n      title: memory.id,\n      content: memory.content.text,\n    }));\n    const bm25 = new BM25(docs);\n    const results = bm25.search(query, memories.length);\n    return results.map((result) => memories[result.index]);\n  }\n  async createMemory(memory: Memory, tableName: string, unique?: boolean): Promise<UUID> {\n    if (unique !== undefined) memory.unique = unique;\n    return await this.adapter.createMemory(memory, tableName, unique);\n  }\n  async updateMemory(\n    memory: Partial<Memory> & { id: UUID; metadata?: MemoryMetadata }\n  ): Promise<boolean> {\n    return await this.adapter.updateMemory(memory);\n  }\n  async deleteMemory(memoryId: UUID): Promise<void> {\n    await this.adapter.deleteMemory(memoryId);\n  }\n  async deleteManyMemories(memoryIds: UUID[]): Promise<void> {\n    await this.adapter.deleteManyMemories(memoryIds);\n  }\n  async clearAllAgentMemories(): Promise<void> {\n    this.logger.info(`Clearing all memories for agent ${this.character.name} (${this.agentId})`);\n\n    const allMemories = await this.getAllMemories();\n    const memoryIds = allMemories\n      .map((memory) => memory.id)\n      .filter((id): id is UUID => id !== undefined);\n\n    if (memoryIds.length === 0) {\n      this.logger.info('No memories found to delete');\n      return;\n    }\n\n    this.logger.info(`Found ${memoryIds.length} memories to delete`);\n    await this.adapter.deleteManyMemories(memoryIds);\n\n    this.logger.info(`Successfully cleared all ${memoryIds.length} memories for agent`);\n  }\n  async deleteAllMemories(roomId: UUID, tableName: string): Promise<void> {\n    await this.adapter.deleteAllMemories(roomId, tableName);\n  }\n  async countMemories(roomId: UUID, unique?: boolean, tableName?: string): Promise<number> {\n    return await this.adapter.countMemories(roomId, unique, tableName);\n  }\n  async getLogs(params: {\n    entityId: UUID;\n    roomId?: UUID;\n    type?: string;\n    count?: number;\n    offset?: number;\n  }): Promise<Log[]> {\n    return await this.adapter.getLogs(params);\n  }\n  async deleteLog(logId: UUID): Promise<void> {\n    await this.adapter.deleteLog(logId);\n  }\n  async createWorld(world: World): Promise<UUID> {\n    return await this.adapter.createWorld(world);\n  }\n  async getWorld(id: UUID): Promise<World | null> {\n    return await this.adapter.getWorld(id);\n  }\n  async removeWorld(worldId: UUID): Promise<void> {\n    await this.adapter.removeWorld(worldId);\n  }\n  async getAllWorlds(): Promise<World[]> {\n    return await this.adapter.getAllWorlds();\n  }\n  async updateWorld(world: World): Promise<void> {\n    await this.adapter.updateWorld(world);\n  }\n  async getRoom(roomId: UUID): Promise<Room | null> {\n    const rooms = await this.adapter.getRoomsByIds([roomId]);\n    if (!rooms?.length) return null;\n    return rooms[0];\n  }\n\n  async getRoomsByIds(roomIds: UUID[]): Promise<Room[] | null> {\n    return await this.adapter.getRoomsByIds(roomIds);\n  }\n  async createRoom({ id, name, source, type, channelId, serverId, worldId }: Room): Promise<UUID> {\n    if (!worldId) throw new Error('worldId is required');\n    const res = await this.adapter.createRooms([\n      {\n        id,\n        name,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId,\n      },\n    ]);\n    if (!res.length) throw new Error('Failed to create room');\n    return res[0];\n  }\n\n  async createRooms(rooms: Room[]): Promise<UUID[]> {\n    return await this.adapter.createRooms(rooms);\n  }\n\n  async deleteRoom(roomId: UUID): Promise<void> {\n    await this.adapter.deleteRoom(roomId);\n  }\n  async deleteRoomsByWorldId(worldId: UUID): Promise<void> {\n    await this.adapter.deleteRoomsByWorldId(worldId);\n  }\n  async updateRoom(room: Room): Promise<void> {\n    await this.adapter.updateRoom(room);\n  }\n  async getRoomsForParticipant(entityId: UUID): Promise<UUID[]> {\n    return await this.adapter.getRoomsForParticipant(entityId);\n  }\n  async getRoomsForParticipants(userIds: UUID[]): Promise<UUID[]> {\n    return await this.adapter.getRoomsForParticipants(userIds);\n  }\n\n  // deprecate this one\n  async getRooms(worldId: UUID): Promise<Room[]> {\n    return await this.adapter.getRoomsByWorld(worldId);\n  }\n\n  async getRoomsByWorld(worldId: UUID): Promise<Room[]> {\n    return await this.adapter.getRoomsByWorld(worldId);\n  }\n  async getParticipantUserState(\n    roomId: UUID,\n    entityId: UUID\n  ): Promise<'FOLLOWED' | 'MUTED' | null> {\n    return await this.adapter.getParticipantUserState(roomId, entityId);\n  }\n  async setParticipantUserState(\n    roomId: UUID,\n    entityId: UUID,\n    state: 'FOLLOWED' | 'MUTED' | null\n  ): Promise<void> {\n    await this.adapter.setParticipantUserState(roomId, entityId, state);\n  }\n  async createRelationship(params: {\n    sourceEntityId: UUID;\n    targetEntityId: UUID;\n    tags?: string[];\n    metadata?: { [key: string]: any };\n  }): Promise<boolean> {\n    return await this.adapter.createRelationship(params);\n  }\n  async updateRelationship(relationship: Relationship): Promise<void> {\n    await this.adapter.updateRelationship(relationship);\n  }\n  async getRelationship(params: {\n    sourceEntityId: UUID;\n    targetEntityId: UUID;\n  }): Promise<Relationship | null> {\n    return await this.adapter.getRelationship(params);\n  }\n  async getRelationships(params: { entityId: UUID; tags?: string[] }): Promise<Relationship[]> {\n    return await this.adapter.getRelationships(params);\n  }\n  async getCache<T>(key: string): Promise<T | undefined> {\n    return await this.adapter.getCache<T>(key);\n  }\n  async setCache<T>(key: string, value: T): Promise<boolean> {\n    return await this.adapter.setCache<T>(key, value);\n  }\n  async deleteCache(key: string): Promise<boolean> {\n    return await this.adapter.deleteCache(key);\n  }\n  async createTask(task: Task): Promise<UUID> {\n    return await this.adapter.createTask(task);\n  }\n  async getTasks(params: { roomId?: UUID; tags?: string[]; entityId?: UUID }): Promise<Task[]> {\n    return await this.adapter.getTasks(params);\n  }\n  async getTask(id: UUID): Promise<Task | null> {\n    return await this.adapter.getTask(id);\n  }\n  async getTasksByName(name: string): Promise<Task[]> {\n    return await this.adapter.getTasksByName(name);\n  }\n  async updateTask(id: UUID, task: Partial<Task>): Promise<void> {\n    await this.adapter.updateTask(id, task);\n  }\n  async deleteTask(id: UUID): Promise<void> {\n    await this.adapter.deleteTask(id);\n  }\n  on(event: string, callback: (data: any) => void): void {\n    if (!this.eventHandlers.has(event)) {\n      this.eventHandlers.set(event, []);\n    }\n    this.eventHandlers.get(event)?.push(callback);\n  }\n  off(event: string, callback: (data: any) => void): void {\n    if (!this.eventHandlers.has(event)) {\n      return;\n    }\n    const handlers = this.eventHandlers.get(event)!;\n    const index = handlers.indexOf(callback);\n    if (index !== -1) {\n      handlers.splice(index, 1);\n    }\n  }\n  emit(event: string, data: any): void {\n    if (!this.eventHandlers.has(event)) {\n      return;\n    }\n    for (const handler of this.eventHandlers.get(event)!) {\n      handler(data);\n    }\n  }\n  async sendControlMessage(params: {\n    roomId: UUID;\n    action: 'enable_input' | 'disable_input';\n    target?: string;\n  }): Promise<void> {\n    try {\n      const { roomId, action, target } = params;\n      const controlMessage = {\n        type: 'control',\n        payload: {\n          action,\n          target,\n        },\n        roomId,\n      };\n      await this.emitEvent('CONTROL_MESSAGE', {\n        runtime: this,\n        message: controlMessage,\n        source: 'agent',\n      });\n\n      this.logger.debug(`Sent control message: ${action} to room ${roomId}`);\n    } catch (error) {\n      this.logger.error(`Error sending control message: ${error}`);\n    }\n  }\n  registerSendHandler(source: string, handler: SendHandlerFunction): void {\n    if (this.sendHandlers.has(source)) {\n      this.logger.warn(`Send handler for source '${source}' already registered. Overwriting.`);\n    }\n    this.sendHandlers.set(source, handler);\n    this.logger.info(`Registered send handler for source: ${source}`);\n  }\n  async sendMessageToTarget(target: TargetInfo, content: Content): Promise<void> {\n    const handler = this.sendHandlers.get(target.source);\n    if (!handler) {\n      const errorMsg = `No send handler registered for source: ${target.source}`;\n      this.logger.error(errorMsg);\n      // Optionally throw or just log the error\n      throw new Error(errorMsg);\n    }\n    try {\n      await handler(this, target, content);\n    } catch (error: any) {\n      this.logger.error(`Error executing send handler for source ${target.source}:`, error);\n      throw error; // Re-throw error after logging and tracing\n    }\n  }\n  async getMemoriesByWorldId(params: {\n    worldId: UUID;\n    count?: number;\n    tableName?: string;\n  }): Promise<Memory[]> {\n    return await this.adapter.getMemoriesByWorldId(params);\n  }\n  async runMigrations(migrationsPaths?: string[]): Promise<void> {\n    if (this.adapter && 'runMigrations' in this.adapter) {\n      await (this.adapter as any).runMigrations(migrationsPaths);\n    } else {\n      this.logger.warn('Database adapter does not support migrations.');\n    }\n  }\n\n  async isReady(): Promise<boolean> {\n    if (!this.adapter) {\n      throw new Error('Database adapter not registered');\n    }\n    return await this.adapter.isReady();\n  }\n}\n",
    "// @ts-ignore\nimport crypto from 'crypto-browserify';\nimport { createUniqueUuid } from './entities';\nimport { getEnv } from './utils/environment';\nimport { BufferUtils } from './utils/buffer';\nimport { logger } from './logger';\nimport type {\n  Character,\n  IAgentRuntime,\n  OnboardingConfig,\n  Setting,\n  World,\n  WorldSettings,\n} from './types';\n\n/**\n * Creates a Setting object from a configSetting object by omitting the 'value' property.\n *\n * @param {Omit<Setting, 'value'>} configSetting - The configSetting object to create the Setting from.\n * @returns {Setting} A new Setting object created from the provided configSetting object.\n */\nexport function createSettingFromConfig(configSetting: Omit<Setting, 'value'>): Setting {\n  return {\n    name: configSetting.name,\n    description: configSetting.description,\n    usageDescription: configSetting.usageDescription || '',\n    value: null,\n    required: configSetting.required,\n    validation: configSetting.validation || undefined,\n    public: configSetting.public || false,\n    secret: configSetting.secret || false,\n    dependsOn: configSetting.dependsOn || [],\n    onSetAction: configSetting.onSetAction || undefined,\n    visibleIf: configSetting.visibleIf || undefined,\n  };\n}\n\n// Cache for salt value with TTL\ninterface SaltCache {\n  value: string;\n  timestamp: number;\n}\n\nlet saltCache: SaltCache | null = null;\nlet saltErrorLogged = false;\nconst SALT_CACHE_TTL_MS = 5 * 60 * 1000; // 5 minutes TTL\n\n/**\n * Gets the salt for the agent.\n *\n * @returns {string} The salt for the agent.\n */\nexport function getSalt(): string {\n  // Always read current env first to detect changes\n  const currentEnvSalt = getEnv('SECRET_SALT', 'secretsalt') || 'secretsalt';\n  const now = Date.now();\n\n  // Return cached value only if still valid AND matches current env\n  if (saltCache !== null) {\n    const cacheFresh = now - saltCache.timestamp < SALT_CACHE_TTL_MS;\n    if (cacheFresh && saltCache.value === currentEnvSalt) {\n      return saltCache.value;\n    }\n  }\n\n  if (currentEnvSalt === 'secretsalt' && !saltErrorLogged) {\n    logger.warn('SECRET_SALT is not set or using default value');\n    saltErrorLogged = true;\n  }\n\n  // Update cache with latest env-derived salt\n  saltCache = {\n    value: currentEnvSalt,\n    timestamp: now,\n  };\n\n  return currentEnvSalt;\n}\n\n/**\n * Clears the salt cache - useful for tests or when environment changes\n */\nexport function clearSaltCache(): void {\n  saltCache = null;\n  saltErrorLogged = false;\n}\n\n/**\n * Common encryption function for string values\n * @param {string} value - The string value to encrypt\n * @param {string} salt - The salt to use for encryption\n * @returns {string} - The encrypted value in 'iv:encrypted' format\n */\nexport function encryptStringValue(value: string, salt: string): string {\n  // Check if value is undefined or null\n  if (value === undefined || value === null) {\n    logger.debug('Attempted to encrypt undefined or null value');\n    return value; // Return the value as is (undefined or null)\n  }\n\n  if (typeof value === 'boolean' || typeof value === 'number') {\n    logger.debug('Value is a boolean or number, returning as is');\n    return value;\n  }\n\n  if (typeof value !== 'string') {\n    logger.debug(`Value is not a string (type: ${typeof value}), returning as is`);\n    return value;\n  }\n\n  // Check if value is already encrypted (has the format \"iv:encrypted\")\n  const parts = value.split(':');\n  if (parts.length === 2) {\n    try {\n      // Try to parse the first part as hex to see if it's already encrypted\n      const possibleIv = BufferUtils.fromHex(parts[0]);\n      if (possibleIv.length === 16) {\n        // Value is likely already encrypted, return as is\n        logger.debug('Value appears to be already encrypted, skipping re-encryption');\n        return value;\n      }\n    } catch (e) {\n      // Not a valid hex string, proceed with encryption\n    }\n  }\n\n  // Create key and iv from the salt\n  const key = crypto.createHash('sha256').update(salt).digest().slice(0, 32);\n  const iv = BufferUtils.randomBytes(16);\n\n  // Encrypt the value\n  const cipher = crypto.createCipheriv('aes-256-cbc', key, iv);\n  let encrypted = cipher.update(value, 'utf8', 'hex');\n  encrypted += cipher.final('hex');\n\n  // Store IV with the encrypted value so we can decrypt it later\n  return `${BufferUtils.toHex(iv)}:${encrypted}`;\n}\n\n/**\n * Common decryption function for string values\n * @param {string} value - The encrypted value in 'iv:encrypted' format\n * @param {string} salt - The salt to use for decryption\n * @returns {string} - The decrypted string value\n */\nexport function decryptStringValue(value: string, salt: string): string {\n  try {\n    // Check if value is undefined or null\n    if (value === undefined || value === null) {\n      //logger.debug('Attempted to decrypt undefined or null value');\n      return value; // Return the value as is (undefined or null)\n    }\n\n    if (typeof value === 'boolean' || typeof value === 'number') {\n      //logger.debug('Value is a boolean or number, returning as is');\n      return value;\n    }\n    if (typeof value !== 'string') {\n      logger.debug(`Value is not a string (type: ${typeof value}), returning as is`);\n      return value;\n    }\n\n    // Split the IV and encrypted value\n    const parts = value.split(':');\n    if (parts.length !== 2) {\n      /*\n      logger.debug(\n        `Invalid encrypted value format - expected 'iv:encrypted', returning original value`\n      );\n      */\n      return value; // Return the original value without decryption\n    }\n\n    const iv = BufferUtils.fromHex(parts[0]);\n    const encrypted = parts[1];\n\n    // Verify IV length\n    if (iv.length !== 16) {\n      if (iv.length) {\n        logger.debug(`Invalid IV length (${iv.length}) - expected 16 bytes`);\n      }\n      return value; // Return the original value without decryption\n    }\n\n    // Create key from the salt\n    const key = crypto.createHash('sha256').update(salt).digest().slice(0, 32);\n\n    // Decrypt the value\n    const decipher = crypto.createDecipheriv('aes-256-cbc', key, iv);\n    let decrypted = decipher.update(encrypted, 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n\n    return decrypted;\n  } catch (error) {\n    logger.error(`Error decrypting value: ${error}`);\n    // Return the encrypted value on error\n    return value;\n  }\n}\n\n/**\n * Applies salt to the value of a setting\n * Only applies to secret settings with string values\n */\nexport function saltSettingValue(setting: Setting, salt: string): Setting {\n  const settingCopy = { ...setting };\n\n  // Only encrypt string values in secret settings\n  if (setting.secret === true && typeof setting.value === 'string' && setting.value) {\n    settingCopy.value = encryptStringValue(setting.value, salt);\n  }\n\n  return settingCopy;\n}\n\n/**\n * Removes salt from the value of a setting\n * Only applies to secret settings with string values\n */\nexport function unsaltSettingValue(setting: Setting, salt: string): Setting {\n  const settingCopy = { ...setting };\n\n  // Only decrypt string values in secret settings\n  if (setting.secret === true && typeof setting.value === 'string' && setting.value) {\n    settingCopy.value = decryptStringValue(setting.value, salt);\n  }\n\n  return settingCopy;\n}\n\n/**\n * Applies salt to all settings in a WorldSettings object\n */\nexport function saltWorldSettings(worldSettings: WorldSettings, salt: string): WorldSettings {\n  const saltedSettings: WorldSettings = {};\n\n  for (const [key, setting] of Object.entries(worldSettings)) {\n    saltedSettings[key] = saltSettingValue(setting, salt);\n  }\n\n  return saltedSettings;\n}\n\n/**\n * Removes salt from all settings in a WorldSettings object\n */\nexport function unsaltWorldSettings(worldSettings: WorldSettings, salt: string): WorldSettings {\n  const unsaltedSettings: WorldSettings = {};\n\n  for (const [key, setting] of Object.entries(worldSettings)) {\n    unsaltedSettings[key] = unsaltSettingValue(setting, salt);\n  }\n\n  return unsaltedSettings;\n}\n\n/**\n * Updates settings state in world metadata\n */\nexport async function updateWorldSettings(\n  runtime: IAgentRuntime,\n  serverId: string,\n  worldSettings: WorldSettings\n): Promise<boolean> {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n\n  if (!world) {\n    logger.error(`No world found for server ${serverId}`);\n    return false;\n  }\n\n  // Initialize metadata if it doesn't exist\n  if (!world.metadata) {\n    world.metadata = {};\n  }\n\n  // Apply salt to settings before saving\n  const salt = getSalt();\n  const saltedSettings = saltWorldSettings(worldSettings, salt);\n\n  // Update settings state\n  world.metadata.settings = saltedSettings;\n\n  // Save updated world\n  await runtime.updateWorld(world);\n\n  return true;\n}\n\n/**\n * Gets settings state from world metadata\n */\nexport async function getWorldSettings(\n  runtime: IAgentRuntime,\n  serverId: string\n): Promise<WorldSettings | null> {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n\n  if (!world || !world.metadata?.settings) {\n    return null;\n  }\n\n  // Get settings from metadata\n  const saltedSettings = world.metadata.settings as WorldSettings;\n\n  // Remove salt from settings before returning\n  const salt = getSalt();\n  return unsaltWorldSettings(saltedSettings, salt);\n}\n\n/**\n * Initializes settings configuration for a server\n */\nexport async function initializeOnboarding(\n  runtime: IAgentRuntime,\n  world: World,\n  config: OnboardingConfig\n): Promise<WorldSettings | null> {\n  // Check if settings state already exists\n  if (world.metadata?.settings) {\n    logger.info(`Onboarding state already exists for server ${world.serverId}`);\n    // Get settings from metadata and remove salt\n    const saltedSettings = world.metadata.settings as WorldSettings;\n    const salt = getSalt();\n    return unsaltWorldSettings(saltedSettings, salt);\n  }\n\n  // Create new settings state\n  const worldSettings: WorldSettings = {};\n\n  // Initialize settings from config\n  if (config.settings) {\n    for (const [key, configSetting] of Object.entries(config.settings)) {\n      worldSettings[key] = createSettingFromConfig(configSetting);\n    }\n  }\n\n  // Save settings state to world metadata\n  if (!world.metadata) {\n    world.metadata = {};\n  }\n\n  // No need to salt here as the settings are just initialized with null values\n  world.metadata.settings = worldSettings;\n\n  await runtime.updateWorld(world);\n\n  logger.info(`Initialized settings config for server ${world.serverId}`);\n  return worldSettings;\n}\n\n/**\n * Encrypts sensitive data in a Character object\n * @param {Character} character - The character object to encrypt secrets for\n * @returns {Character} - A copy of the character with encrypted secrets\n */\nexport function encryptedCharacter(character: Character): Character {\n  // Create a deep copy to avoid modifying the original\n  const encryptedChar = JSON.parse(JSON.stringify(character));\n  const salt = getSalt();\n\n  // Encrypt character.settings.secrets if it exists\n  if (encryptedChar.settings?.secrets) {\n    encryptedChar.settings.secrets = encryptObjectValues(encryptedChar.settings.secrets, salt);\n  }\n\n  // Encrypt character.secrets if it exists\n  if (encryptedChar.secrets) {\n    encryptedChar.secrets = encryptObjectValues(encryptedChar.secrets, salt);\n  }\n\n  return encryptedChar;\n}\n\n/**\n * Decrypts sensitive data in a Character object\n * @param {Character} character - The character object with encrypted secrets\n * @param {IAgentRuntime} runtime - The runtime information needed for salt generation\n * @returns {Character} - A copy of the character with decrypted secrets\n */\nexport function decryptedCharacter(character: Character, _runtime: IAgentRuntime): Character {\n  // Create a deep copy to avoid modifying the original\n  const decryptedChar = JSON.parse(JSON.stringify(character));\n  const salt = getSalt();\n\n  // Decrypt character.settings.secrets if it exists\n  if (decryptedChar.settings?.secrets) {\n    decryptedChar.settings.secrets = decryptObjectValues(decryptedChar.settings.secrets, salt);\n  }\n\n  // Decrypt character.secrets if it exists\n  if (decryptedChar.secrets) {\n    decryptedChar.secrets = decryptObjectValues(decryptedChar.secrets, salt);\n  }\n\n  return decryptedChar;\n}\n\n/**\n * Helper function to encrypt all string values in an object\n * @param {Record<string, any>} obj - Object with values to encrypt\n * @param {string} salt - The salt to use for encryption\n * @returns {Record<string, any>} - Object with encrypted values\n */\nexport function encryptObjectValues(obj: Record<string, any>, salt: string): Record<string, any> {\n  const result: Record<string, any> = {};\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === 'string' && value) {\n      result[key] = encryptStringValue(value, salt);\n    } else {\n      result[key] = value;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Helper function to decrypt all string values in an object\n * @param {Record<string, any>} obj - Object with encrypted values\n * @param {string} salt - The salt to use for decryption\n * @returns {Record<string, any>} - Object with decrypted values\n */\nexport function decryptObjectValues(obj: Record<string, any>, salt: string): Record<string, any> {\n  const result: Record<string, any> = {};\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === 'string' && value) {\n      result[key] = decryptStringValue(value, salt);\n    } else {\n      result[key] = value;\n    }\n  }\n\n  return result;\n}\n\nexport { decryptStringValue as decryptSecret };\n",
    "import { Service } from './types';\nimport type { IAgentRuntime, ServiceTypeName } from './types';\n\n/**\n * Service builder class that provides type-safe service creation\n * with automatic type inference\n */\nexport class ServiceBuilder<TService extends Service = Service> {\n  protected serviceType: ServiceTypeName | string;\n  protected startFn!: (runtime: IAgentRuntime) => Promise<TService>;\n  protected stopFn?: () => Promise<void>;\n  protected description: string;\n\n  constructor(serviceType: ServiceTypeName | string) {\n    this.serviceType = serviceType;\n    this.description = '';\n  }\n\n  /**\n   * Set the service description\n   */\n  withDescription(description: string): this {\n    this.description = description;\n    return this;\n  }\n\n  /**\n   * Set the start function for the service\n   */\n  withStart(startFn: (runtime: IAgentRuntime) => Promise<TService>): this {\n    this.startFn = startFn;\n    return this;\n  }\n\n  /**\n   * Set the stop function for the service\n   */\n  withStop(stopFn: () => Promise<void>): this {\n    this.stopFn = stopFn;\n    return this;\n  }\n\n  /**\n   * Build the service class with all configured properties\n   */\n  build(): new (runtime?: IAgentRuntime) => TService {\n    const serviceType = this.serviceType;\n    const description = this.description;\n    const startFn = this.startFn;\n    const stopFn = this.stopFn;\n\n    // Create a dynamic class with the configured properties\n    return class extends (Service as any) {\n      static serviceType = serviceType;\n      capabilityDescription = description;\n\n      static async start(runtime: IAgentRuntime): Promise<Service> {\n        if (!startFn) {\n          throw new Error(`Start function not defined for service ${serviceType}`);\n        }\n        return startFn(runtime);\n      }\n\n      async stop(): Promise<void> {\n        if (stopFn) {\n          await stopFn();\n        }\n      }\n    } as any;\n  }\n}\n\n/**\n * Create a type-safe service builder\n * @param serviceType - The service type name\n * @returns A new ServiceBuilder instance\n */\nexport function createService<TService extends Service = Service>(\n  serviceType: ServiceTypeName | string\n): ServiceBuilder<TService> {\n  return new ServiceBuilder<TService>(serviceType);\n}\n\n/**\n * Type-safe service definition helper\n */\nexport interface ServiceDefinition<T extends Service = Service> {\n  serviceType: ServiceTypeName;\n  description: string;\n  start: (runtime: IAgentRuntime) => Promise<T>;\n  stop?: () => Promise<void>;\n}\n\n/**\n * Define a service with type safety\n */\nexport function defineService<T extends Service = Service>(\n  definition: ServiceDefinition<T>\n): new (runtime?: IAgentRuntime) => T {\n  return createService<T>(definition.serviceType)\n    .withDescription(definition.description)\n    .withStart(definition.start)\n    .withStop(definition.stop || (() => Promise.resolve()))\n    .build();\n}\n",
    "import { stringToUuid } from './index';\nimport { logger } from './logger';\nimport { composePrompt, parseKeyValueXml } from './utils';\nimport {\n  type Entity,\n  type IAgentRuntime,\n  type Memory,\n  ModelType,\n  type Relationship,\n  type State,\n  type UUID,\n} from './types';\n\n/**\n * Template for resolving entity name within a conversation context.\n *\n * @type {string}\n */\n/**\n * Entity Resolution Template for resolving entity names based on context and recent messages.\n *\n * Contains placeholders for message sender, agent, entities in the room, and recent messages.\n * Provides instructions for analyzing the context and resolving entity references.\n *\n * @return {string} entityResolutionTemplate - The template for resolving entity names with detailed instructions.\n */\nconst entityResolutionTemplate = `# Task: Resolve Entity Name\nMessage Sender: {{senderName}} (ID: {{senderId}})\nAgent: {{agentName}} (ID: {{agentId}})\n\n# Entities in Room:\n{{#if entitiesInRoom}}\n{{entitiesInRoom}}\n{{/if}}\n\n{{recentMessages}}\n\n# Instructions:\n1. Analyze the context to identify which entity is being referenced\n2. Consider special references like \"me\" (the message sender) or \"you\" (agent the message is directed to)\n3. Look for usernames/handles in standard formats (e.g. @username, user#1234)\n4. Consider context from recent messages for pronouns and references\n5. If multiple matches exist, use context to disambiguate\n6. Consider recent interactions and relationship strength when resolving ambiguity\n\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nReturn an XML response with:\n<response>\n  <entityId>exact-id-if-known-otherwise-null</entityId>\n  <type>EXACT_MATCH | USERNAME_MATCH | NAME_MATCH | RELATIONSHIP_MATCH | AMBIGUOUS | UNKNOWN</type>\n  <matches>\n    <match>\n      <name>matched-name</name>\n      <reason>why this entity matches</reason>\n    </match>\n  </matches>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.`;\n\n/**\n * Get recent interactions between a source entity and candidate entities in a specific room.\n *\n * @param {IAgentRuntime} runtime - The runtime context for the agent.\n * @param {UUID} sourceEntityId - The ID of the source entity initiating interactions.\n * @param {Entity[]} candidateEntities - The list of candidate entities to evaluate interactions with.\n * @param {UUID} roomId - The ID of the room where interactions are taking place.\n * @param {Relationship[]} relationships - The relationships between the entities involved.\n * @returns {Promise<{ entity: Entity; interactions: Memory[]; count: number }[]>} - An array of objects containing the entity, recent interactions, and interaction count.\n */\nasync function getRecentInteractions(\n  runtime: IAgentRuntime,\n  sourceEntityId: UUID,\n  candidateEntities: Entity[],\n  roomId: UUID,\n  relationships: Relationship[]\n): Promise<{ entity: Entity; interactions: Memory[]; count: number }[]> {\n  const results: Array<{ entity: Entity; interactions: Memory[]; count: number }> = [];\n\n  // Get recent messages from the room - just for context\n  const recentMessages = await runtime.getMemories({\n    tableName: 'messages',\n    roomId,\n    count: 20, // Reduced from 100 since we only need context\n  });\n\n  for (const entity of candidateEntities) {\n    const interactions: Memory[] = [];\n    let interactionScore = 0;\n\n    // First get direct replies using inReplyTo\n    const directReplies = recentMessages.filter(\n      (msg) =>\n        (msg.entityId === sourceEntityId && msg.content.inReplyTo === entity.id) ||\n        (msg.entityId === entity.id && msg.content.inReplyTo === sourceEntityId)\n    );\n\n    interactions.push(...directReplies);\n\n    // Get relationship strength from metadata\n    const relationship = relationships.find(\n      (rel) =>\n        (rel.sourceEntityId === sourceEntityId && rel.targetEntityId === entity.id) ||\n        (rel.targetEntityId === sourceEntityId && rel.sourceEntityId === entity.id)\n    );\n\n    if (relationship?.metadata?.interactions) {\n      interactionScore = relationship.metadata.interactions as number;\n    }\n\n    // Add bonus points for recent direct replies\n    interactionScore += directReplies.length;\n\n    // Keep last few messages for context\n    const uniqueInteractions = [...new Set(interactions)];\n    results.push({\n      entity,\n      interactions: uniqueInteractions.slice(-5), // Only keep last 5 messages for context\n      count: Math.round(interactionScore),\n    });\n  }\n\n  // Sort by interaction score descending\n  return results.sort((a, b) => b.count - a.count);\n}\n\n/**\n * Finds an entity by name in the given runtime environment.\n *\n * @param {IAgentRuntime} runtime - The agent runtime environment.\n * @param {Memory} message - The memory message containing relevant information.\n * @param {State} state - The current state of the system.\n * @returns {Promise<Entity | null>} A promise that resolves to the found entity or null if not found.\n */\nexport async function findEntityByName(\n  runtime: IAgentRuntime,\n  message: Memory,\n  state: State\n): Promise<Entity | null> {\n  const room = state.data.room ?? (await runtime.getRoom(message.roomId));\n  if (!room) {\n    logger.warn('Room not found for entity search');\n    return null;\n  }\n\n  const world = room.worldId ? await runtime.getWorld(room.worldId) : null;\n\n  // Get all entities in the room with their components\n  const entitiesInRoom = await runtime.getEntitiesForRoom(room.id, true);\n\n  // Filter components for each entity based on permissions\n  const filteredEntities = await Promise.all(\n    entitiesInRoom.map(async (entity) => {\n      if (!entity.components) return entity;\n\n      // Get world roles if we have a world\n      const worldRoles = world?.metadata?.roles || {};\n\n      // Filter components based on permissions\n      entity.components = entity.components.filter((component) => {\n        // 1. Pass if sourceEntityId matches the requesting entity\n        if (component.sourceEntityId === message.entityId) return true;\n\n        // 2. Pass if sourceEntityId is an owner/admin of the current world\n        if (world && component.sourceEntityId) {\n          const sourceRole = worldRoles[component.sourceEntityId];\n          if (sourceRole === 'OWNER' || sourceRole === 'ADMIN') return true;\n        }\n\n        // 3. Pass if sourceEntityId is the agentId\n        if (component.sourceEntityId === runtime.agentId) return true;\n\n        // Filter out components that don't meet any criteria\n        return false;\n      });\n\n      return entity;\n    })\n  );\n\n  // Get relationships for the message sender\n  const relationships = await runtime.getRelationships({\n    entityId: message.entityId,\n  });\n\n  // Get entities from relationships\n  const relationshipEntities = await Promise.all(\n    relationships.map(async (rel) => {\n      const entityId =\n        rel.sourceEntityId === message.entityId ? rel.targetEntityId : rel.sourceEntityId;\n      return runtime.getEntityById(entityId);\n    })\n  );\n\n  // Filter out nulls and combine with room entities\n  const allEntities = [\n    ...filteredEntities,\n    ...relationshipEntities.filter((e): e is Entity => e !== null),\n  ];\n\n  // Get interaction strength data for relationship entities\n  const interactionData = await getRecentInteractions(\n    runtime,\n    message.entityId,\n    allEntities,\n    room.id,\n    relationships\n  );\n\n  // Compose context for LLM\n  const prompt = composePrompt({\n    state: {\n      roomName: room.name || room.id,\n      worldName: world?.name || 'Unknown',\n      entitiesInRoom: JSON.stringify(filteredEntities, null, 2),\n      entityId: message.entityId,\n      senderId: message.entityId,\n    },\n    template: entityResolutionTemplate,\n  });\n\n  // Use LLM to analyze and resolve the entity\n  const result = await runtime.useModel(ModelType.TEXT_SMALL, {\n    prompt,\n    stopSequences: [],\n  });\n\n  // Parse LLM response\n  const resolution = parseKeyValueXml(result);\n  if (!resolution) {\n    logger.warn('Failed to parse entity resolution result');\n    return null;\n  }\n\n  // If we got an exact entity ID match\n  if (resolution.type === 'EXACT_MATCH' && resolution.entityId) {\n    const entity = await runtime.getEntityById(resolution.entityId as UUID);\n    if (entity) {\n      // Filter components again for the returned entity\n      if (entity.components) {\n        const worldRoles = world?.metadata?.roles || {};\n        entity.components = entity.components.filter((component) => {\n          if (component.sourceEntityId === message.entityId) return true;\n          if (world && component.sourceEntityId) {\n            const sourceRole = worldRoles[component.sourceEntityId];\n            if (sourceRole === 'OWNER' || sourceRole === 'ADMIN') return true;\n          }\n          if (component.sourceEntityId === runtime.agentId) return true;\n          return false;\n        });\n      }\n      return entity;\n    }\n  }\n\n  // For username/name/relationship matches, search through all entities\n  // Handle matches - parseKeyValueXml returns nested structures differently\n  let matchesArray: any[] = [];\n  if (resolution.matches?.match) {\n    // Normalize to array\n    matchesArray = Array.isArray(resolution.matches.match)\n      ? resolution.matches.match\n      : [resolution.matches.match];\n  }\n\n  if (matchesArray.length > 0 && matchesArray[0]?.name) {\n    const matchName = matchesArray[0].name.toLowerCase();\n\n    // Find matching entity by username/handle in components or by name\n    const matchingEntity = allEntities.find((entity) => {\n      // Check names\n      if (entity.names.some((n) => n.toLowerCase() === matchName)) return true;\n\n      // Check components for username/handle match\n      return entity.components?.some(\n        (c) =>\n          (c.data.username as string)?.toLowerCase() === matchName ||\n          (c.data.handle as string)?.toLowerCase() === matchName\n      );\n    });\n\n    if (matchingEntity) {\n      // If this is a relationship match, sort by interaction strength\n      if (resolution.type === 'RELATIONSHIP_MATCH') {\n        const interactionInfo = interactionData.find((d) => d.entity.id === matchingEntity.id);\n        if (interactionInfo && interactionInfo.count > 0) {\n          return matchingEntity;\n        }\n      } else {\n        return matchingEntity;\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Function to create a unique UUID based on the runtime and base user ID.\n *\n * @param {RuntimeContext} runtime - The runtime context object.\n * @param {UUID|string} baseUserId - The base user ID to use in generating the UUID.\n * @returns {UUID} - The unique UUID generated based on the runtime and base user ID.\n */\nexport const createUniqueUuid = (runtime: IAgentRuntime, baseUserId: UUID | string): UUID => {\n  // If the base user ID is the agent ID, return it directly\n  if (baseUserId === runtime.agentId) {\n    return runtime.agentId;\n  }\n\n  // Use a deterministic approach to generate a new UUID based on both IDs\n  // This creates a unique ID for each user+agent combination while still being deterministic\n  const combinedString = `${baseUserId}:${runtime.agentId}`;\n\n  // Create a namespace UUID (version 5) from the combined string\n  return stringToUuid(combinedString);\n};\n\n/**\n * Get details for a list of entities.\n */\n/**\n * Retrieves entity details for a specific room from the database.\n *\n * @param {Object} params - The input parameters\n * @param {IAgentRuntime} params.runtime - The Agent Runtime instance\n * @param {UUID} params.roomId - The ID of the room to retrieve entity details for\n * @returns {Promise<Array>} - A promise that resolves to an array of unique entity details\n */\nexport async function getEntityDetails({\n  runtime,\n  roomId,\n}: {\n  runtime: IAgentRuntime;\n  roomId: UUID;\n}) {\n  // Parallelize the two async operations\n  const [room, roomEntities] = await Promise.all([\n    runtime.getRoom(roomId),\n    runtime.getEntitiesForRoom(roomId, true),\n  ]);\n\n  // Use a Map for uniqueness checking while processing entities\n  const uniqueEntities = new Map();\n\n  // Process entities in a single pass\n  for (const entity of roomEntities) {\n    if (uniqueEntities.has(entity.id)) continue;\n\n    // Merge component data more efficiently\n    const allData = {};\n    for (const component of entity.components || []) {\n      Object.assign(allData, component.data);\n    }\n\n    // Process merged data\n    const mergedData: Record<string, any> = {};\n    for (const [key, value] of Object.entries(allData)) {\n      if (!mergedData[key]) {\n        mergedData[key] = value;\n        continue;\n      }\n\n      if (Array.isArray(mergedData[key]) && Array.isArray(value)) {\n        // Use Set for deduplication in arrays\n        mergedData[key] = [...new Set([...mergedData[key], ...value])];\n      } else if (typeof mergedData[key] === 'object' && typeof value === 'object') {\n        mergedData[key] = { ...mergedData[key], ...value };\n      }\n    }\n\n    // Create the entity details\n    uniqueEntities.set(entity.id, {\n      id: entity.id,\n      name: room?.source\n        ? (entity.metadata[room.source] as { name?: string })?.name || entity.names[0]\n        : entity.names[0],\n      names: entity.names,\n      data: JSON.stringify({ ...mergedData, ...entity.metadata }),\n    });\n  }\n\n  return Array.from(uniqueEntities.values());\n}\n\n/**\n * Format entities into a string\n * @param entities - list of entities\n * @returns string\n */\n/**\n * Format the given entities into a string representation.\n *\n * @param {Object} options - The options object.\n * @param {Entity[]} options.entities - The list of entities to format.\n * @returns {string} A formatted string representing the entities.\n */\nexport function formatEntities({ entities }: { entities: Entity[] }) {\n  const entityStrings = entities.map((entity: Entity) => {\n    const header = `\"${entity.names.join('\" aka \"')}\"\\nID: ${entity.id}${entity.metadata && Object.keys(entity.metadata).length > 0 ? `\\nData: ${JSON.stringify(entity.metadata)}\\n` : '\\n'}`;\n    return header;\n  });\n  return entityStrings.join('\\n');\n}\n",
    "/**\n * Node.js-specific entry point for @elizaos/core\n *\n * This file exports all modules including Node.js-specific functionality.\n * This is the full API surface of the core package.\n */\n\n// Export everything from types\nexport * from './types';\n\n// Export utils first to avoid circular dependency issues\nexport * from './utils';\n\n// Export schemas\nexport * from './schemas/character';\n\n// Export all utilities (including Node-specific ones)\nexport * from './utils/environment';\nexport * from './utils/buffer';\nexport * from './utils/server-health';\nexport * from './utils/paths';\n\n// Export all core modules\nexport * from './actions';\nexport * from './database';\nexport * from './entities';\nexport * from './logger';\nexport * from './prompts';\nexport * from './roles';\nexport * from './runtime';\nexport * from './settings';\nexport * from './services';\nexport * from './search';\n\n// Node-specific exports\nexport const isBrowser = false;\nexport const isNode = true;\n"
  ],
  "mappings": "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AU,UAAS,WAAU,UAAS,YAAW,YAAW,SAAQ,UAAS,SAAQ,UAAS,SAAQ,QAAO,SAAQ,WAAU,UAAS,SAAQ,UAAS,WAAU,aAAY,YAAW,YAAW,UAAS,YAAW,WAAU,YAAW,WAAU,SAAQ,UAAS,UAAS,aAAY,aAAY,UAAS,QAAO,SAAQ,SAAQ,UAAS,UAAS,SAAQ,SAAQ,UAAS,SAAQ,WAAU,WAAU,SAAQ,eAAc,WAAU,WAAU,OAAM,UAAS,SAAQ,UAAS,SAAQ,WAAU,UAAS,SAAQ,WAAU,OAAM,UAAS,SAAQ,WAAU,YAAW,QAAO,UAAS,UAAS,WAAU,WAAU,SAAQ,UAAS,SAAQ,WAAU,SAAQ,WAAU,WAAU,WAAU,UAAS,UAAS,UAAS,SAAQ,WAAU,QAAO,WAAU,SAAQ,UAAS,UAAS,WAAU,WAAU,SAAQ,QAAO,SAAQ,SAAQ,SAAQ,WAAU,SAAQ,UAAS,UAAS,YAAW,WAAU,UAAS,WAAU,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,UAAS,UAAS,WAAU,WAAU,WAAU,WAAU,YAAW,SAAQ,UAAS,UAAS,WAAU,YAAW,SAAQ,UAAS,WAAU,YAAW,aAAY,aAAY,YAAW,YAAW,UAAS,cAAa,WAAU,WAAU,WAAU,UAAS,QAAO,SAAQ,cAAa,UAAS,WAAU,YAAW,UAAS,WAAU,WAAU,YAAW,YAAW,aAAY,WAAU,YAAW,YAAW,SAAQ,UAAS,SAAQ,UAAS,YAAW,WAAU,SAAQ,QAAO,SAAQ,SAAQ,YAAW,SAAQ,QAAO,SAAQ,QAAO,aAAY,aAAY,aAAY,cAAa,UAAS,SAAQ,UAAS,aAAY,SAAQ,YAAW,QAAO,YAAW,SAAQ,aAAY,aAAY,SAAQ,UAAS,YAAW,aAAY,aAAY,SAAQ,UAAS,YAAW,YAAW,WAAU,YAAW,WAAU,SAAQ,aAAY,QAAO,SAAQ,UAAS,YAAW,UAAS,UAAS,WAAU,YAAW,QAAO,QAAO,SAAQ,WAAU,SAAQ,UAAS,WAAU,WAAU,WAAU,UAAS,QAAO,QAAO,UAAS,WAAU,WAAU,YAAW,aAAY,aAAY,YAAW,aAAY,SAAQ,SAAQ,UAAS,WAAU,UAAS,WAAU,WAAU,SAAQ,SAAQ,SAAQ,QAAO,UAAS,WAAU,WAAU,UAAS,WAAU,aAAY,UAAS,UAAS,UAAS,YAAW,YAAW,WA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AAU,UAAS,YAAW,aAAY,QAAO,WAAU,WAAU,WAAU,SAAQ,UAAS,YAAW,SAAQ,cAAa,SAAQ,UAAS,SAAQ,QAAO,WAAU,WAAU,WAAU,YAAW,aAAY,QAAO,UAAS,WAAU,WAAU,WAAU,UAAS,UAAS,WAAU,WAAU,SAAQ,QAAO,SAAQ,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,QAAO,YAAW,YAAW,WAAU,YAAW,YAAW,YAAW,WAAU,UAAS,SAAQ,UAAS,UAAS,SAAQ,WAAU,UAAS,QAAO,QAAO,OAAM,QAAO,SAAQ,UAAS,SAAQ,OAAM,UAAS,SAAQ,SAAQ,OAAM,SAAQ,UAAS,WAAU,SAAQ,SAAQ,UAAS,YAAW,SAAQ,SAAQ,UAAS,SAAQ,UAAS,YAAW,UAAS,WAAU,YAAW,SAAQ,UAAS,SAAQ,QAAO,SAAQ,SAAQ,SAAQ,UAAS,UAAS,QAAO,SAAQ,YAAW,QAAO,SAAQ,UAAS,YAAW,UAAS,UAAS,OAAM,QAAO,UAAS,SAAQ,OAAM,QAAO,SAAQ,QAAO,OAAM,QAAO,WAAU,QAAO,OAAM,QAAO,QAAO,SAAQ,SAAQ,UAAS,UAAS,SAAQ,QAAO,UAAS,OAAM,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,aAAY,UAAS,UAAS,SAAQ,SAAQ,UAAS,WAAU,aAAY,aAAY,WAAU,YAAW,YAAW,WAAU,SAAQ,SAAQ,SAAQ,SAAQ,WAAU,YAAW,YAAW,SAAQ,WAAU,WAAU,YAAW,QAAO,YAAW,YAAW,UAAS,QAAO,UAAS,WAAU,SAAQ,YAAW,aAAY,cAAa,SAAQ,UAAS,UAAS,SAAQ,SAAQ,YAAW,aAAY,QAAO,QAAO,QAAO,YAAW,QAAO,SAAQ,UAAS,WAAU,QAAO,SAAQ,WAAU,QAAO,SAAQ,UAAS,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,WAAU,SAAQ,QAAO,WAAU,QAAO,SAAQ,SAAQ,QAAO,SAAQ,YAAW,WAAU,QAAO,QAAO,UAAS,UAAS,UAAS,UAAS,QAAO,SAAQ,UAAS,UAAS,UAAS,UAAS,MAAK,OAAM,UAAS,UAAS,UAAS,UAAS,WAAU,WAAU,WAAU,WAAU,SAAQ,UAAS,SAAQ,UAAS,UAAS,WAAU,SAAQ,SAAQ,UAAS,WAAU,QAAO,WAAU,YAAW,WAAU,YAAW,aAAY,YAAW,SAAQ,QAAO,SAAQ,QAAO,SAAQ,WAAU,SAAQ,UAAS,YAAW,QAAO,UAAS,cAAa,UAAS,aAAY,WAAU,WAAU,QAAO,QAAO,SAAQ,SAAQ,UAAS,UAAS,SAAQ,QAAO,SAAQ,SAAQ,UAAS,QAAO,cAAa,cAAa,UAAS,WAAU,WAAU,QAAO,YAAW,WAAU,aAAY,SAAQ,QAAO,QAAO,WAAU,QAAO,aAAY,QAAO,SAAQ,QAAO,QAAO,SAAQ,UAAS,UAAS,WAAU,WAAU,SAAQ,UAAS,YAAW,cAAa,SAAQ,WAAU,WAAU,YAAW,YAAW,WAAU,SAAQ,QAAO,QAAO,SAAQ,QAAO,UAAS,WAAU,WAAU,UAAS,QAAO,WAAU,UAAS,YAAW,YAAW,OAAM,WAAU,aAAY,aAAY,cAAa,cAAa,UAAS,UAAS,OAAM,WAAU,WAAU,WAAU,UAAS,QAAO,QAAO,SAAQ,UAAS,SAAQ,QAAO,OAAM,QAAO,SAAQ,aAAY,OAAM,SAAQ,SAAQ,UAAS,OAAM,aAAY,WAAU,UAAS,SAAQ,YAAW,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,QAAO,SAAQ,UAAS,UAAS,SAAQ,UAAS,WAAU,QAAO,UAAS,YAAW,YAAW,QAAO,SAAQ,UAAS,OAAM,UAAS,QAAO,WAAU,UAAS,SAAQ,SAAQ,UAAS,YAAW,UAAS,WAAU,YAAW,UAAS,WAAU,YAAW,WAAU,UAAS,WAAU,UAAS,UAAS,WAAU,WAAU,cAAa,cAAa,QAAO,YAAW,YAAW,cAAa,SAAQ,OAAM,SAAQ,UAAS,UAAS,WAAU,YAAW,QAAO,UAAS,SAAQ,UAAS,WAAU,QAAO,SAAQ,UAAS,YAAW,YAAW,SAAQ,aAAY,OAAM,QAAO,SAAQ,YAAW,SAAQ,YAAW,YAAW,aAAY,aAAY,YAAW,YAAW,SAAQ,UAAS,WAAU,UAAS,WAAU,YAAW,UAAS,UAAS,WAAU,UAAS,SAAQ,UAAS,WAAU,UAAS,QAAO,QAAO,YAAW,WAAU,aAAY,YAAW,aAAY,aAAY,aAAY,YAAW,SAAQ,WAAU,UAAS,UAAS,WAAU,UAAS,UAAS,QAAO,SAAQ,UAAS,WAAU,UAAS,YAAW,aAAY,cAAa,cAAa,SAAQ,UAAS,UAAS,YAAW,UAAS,UAAS,cAAa,UAAS,UAAS,SAAQ,UAAS,SAAQ,QAAO,SAAQ,WAAU,YAAW,YAAW,aAAY,aAAY,cAAa,WAAU,QAAO,OAAM,QAAO,QAAO,QAAO,UAAS,WAAU,UAAS,YAAW,SAAQ,SAAQ,aAAY,OAAM,QAAO,SAAQ,SAAQ,SAAQ,WAAU,WAAU,UAAS,SAAQ,QAAO,QAAO,UAAS,aAAY,WAAU,SAAQ,SAAQ,SAAQ,UAAS,YAAW,SAAQ,YAAW,YAAW,UAAS,cAAa,cAAa,YAAW,YAAW,aAAY,aAAY,WAAU,aAAY,cAAa,cAAa,WAAU,YAAW,YAAW,WAAU,aAAY,SAAQ,cAAa,QAAO,YAAW,YAAW,aAAY,WAAU,YAAW,WAAU,SAAQ,UAAS,YAAW,SAAQ,QAAO,SAAQ,SAAQ,UAAS,WAAU,YAAW,YAAW,aAAY,SAAQ,YAAW,SAAQ,WAAU,UAAS,QAAO,YAAW,YAAW,cAAa,cAAa,SAAQ,aAAY,QAAO,UAAS,SAAQ,WAAU,UAAS,YAAW,SAAQ,QAAO,WAAU,WAAU,UAAS,SAAQ,UAAS,YAAW,SAAQ,WAAU,YAAW,SAAQ,WAAU,UAAS,UAAS,WAAU,WAAU,YAAW,UAAS,aAAY,YAAW,UAAS,QAAO,SAAQ,UAAS,SAAQ,QAAO,UAAS,WAAU,SAAQ,UAAS,WAAU,WAAU,SAAQ,UAAS,YAAW,YAAW,SAAQ,QAAO,UAAS,UAAS,WAAU,QAAO,UAAS,SAAQ,aAAY,SAAQ,UAAS,UAAS,WAAU,SAAQ,SAAQ,UAAS,UAAS,SAAQ,UAAS,YAAW,QAAO,UAAS,UAAS,SAAQ,SAAQ,UAAS,YAAW,SAAQ,UAAS,WAAU,UAAS,UAAS,SAAQ,YAAW,WAAU,aAAY,aAAY,UAAS,aAAY,OAAM,YAAW,eAAc,aAAY,UAAS,WAAU,OAAM,WAAU,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,QAAO,aAAY,aAAY,aAAY,WAAU,YAAW,YAAW,UAAS,WAAU,UAAS,WAAU,WAAU,QAAO,WAAU,UAAS,SAAQ,UAAS,UAAS,SAAQ,WAAU,WAAU,SAAQ,QAAO,SAAQ,YAAW,UAAS,SAAQ,UAAS,SAAQ,QAAO,SAAQ,UAAS,SAAQ,UAAS,UAAS,SAAQ,SAAQ,WAAU,UAAS,SAAQ,UAAS,YAAW,YAAW,WAAU,SAAQ,UAAS,WAAU,YAAW,aAAY,aAAY,WAAU,YAAW,SAAQ,UAAS,SAAQ,UAAS,SAAQ,SAAQ,WAAU,QAAO,SAAQ,SAAQ,UAAS,QAAO,UAAS,WAAU,UAAS,WAAU,QAAO,SAAQ,SAAQ,UAAS,WAAU,WAAU,SAAQ,mBAAkB,UAAS,UAAS,WAAU,SAAQ,SAAQ,SAAQ,WAAU,SAAQ,SAAQ,YAAW,SAAQ,UAAS,YAAW,aAAY,aAAY,aAAY,aAAY,UAAS,WAAU,WAAU,YAAW,YAAW,SAAQ,UAAS,UAAS,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,aAAY,cAAa,SAAQ,cAAa,cAAa,SAAQ,WAAU,YAAW,SAAQ,SAAQ,UAAS,SAAQ,cAAa,aAAY,SAAQ,SAAQ,WAAU,QAAO,WAAU,YAAW,aAAY,SAAQ,YAAW,aAAY,aAAY,cAAa,cAAa,SAAQ,UAAS,SAAQ,QAAO,OAAM,UAAS,WAAU,WAAU,SAAQ,UAAS,UAAS,UAAS,UAAS,SAAQ,SAAQ,QAAO,QAAO,QAAO,QAAO,SAAQ,SAAQ,UAAS,UAAS,UAAS,WAAU,WAAU,OAAM,UAAS,QAAO,WAAU,UAAS,QAAO,QAAO,YAAW,YAAW,QAAO,YAAW,YAAW,SAAQ,UAAS,WAAU,QAAO,WAAU,YAAW,QAAO,WAAU,OAAM,SAAQ,SAAQ,SAAQ,QAAO,SAAQ,QAAO,OAAM,UAAS,aAAY,YAAW,YAAW,WAAU,YAAW,WAAU,WAAU,QAAO,UAAS,QAAO,SAAQ,QAAO,SAAQ,UAAS,QAAO,UAAS,SAAQ,OAAM,UAAS,WAAU,WAAU,WAAU,YAAW,YAAW,YAAW,SAAQ,UAAS,WAAU,WAAU,cAAa,eAAc,SAAQ,UAAS,UAAS,aAAY,cAAa,aAAY,cAAa,eAAc,eAAc,aAAY,aAAY,UAAS,WAAU,WAAU,QAAO,QAAO,SAAQ,UAAS,SAAQ,QAAO,SAAQ,UAAS,UAAS,OAAM,QAAO,UAAS,UAAS,SAAQ,QAAO,UAAS,YAAW,UAAS,SAAQ,UAAS,WAAU,WAAU,UAAS,WAAU,WAAU,SAAQ,UAAS,WAAU,WAAU,UAAS,SAAQ,SAAQ,UAAS,SAAQ,WAAU,UAAS,UAAS,SAAQ,UAAS,SAAQ,SAAQ,UAAS,YAAW,SAAQ,QAAO,YAAW,YAAW,cAAa,cAAa,WAAU,UAAS,WAAU,WAAU,SAAQ,UAAS,SAAQ,WAAU,UAAS,QAAO,SAAQ,SAAQ,YAAW,YAAW,UAAS,WAAU,UAAS,UAAS,aAAY,WAAU,YAAW,WAAU,UAAS,SAAQ,UAAS,WAAU,UAAS,SAAQ,OAAM,QAAO,SAAQ,WAAU,QAAO,UAAS,WAAU,WAAU,YAAW,WAAU,UAAS,QAAO,SAAQ,UAAS,YAAW,SAAQ,WAAU,UAAS,YAAW,YAAW,WAAU,SAAQ,WAAU,QAAO,QAAO,YAAW,UAAS,YAAW,YAAW,WAAU,SAAQ,YAAW,QAAO,SAAQ,YAAW,YAAW,aAAY,YAAW,SAAQ,YAAW,SAAQ,WAAU,UAAS,WAAU,SAAQ,SAAQ,UAAS,WAAU,QAAO,WAAU,WAAU,YAAW,WAAU,WAAU,SAAQ,WAAU,UAAS,SAAQ,SAAQ,MAAK,UAAS,WAAU,QAAO,SAAQ,SAAQ,UAAS,SAAQ,UAAS,UAAS,WAAU,SAAQ,QAAO,SAAQ,UAAS,QAAO,SAAQ,UAAS,WAAU,YAAW,WAAU,YAAW,SAAQ,QAAO,SAAQ,QAAO,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,WAAU,UAAS,WAAU,WAAU,SAAQ,QAAO,WAAU,YAAW,SAAQ,WAAU,YAAW,UAAS,SAAQ,QAAO,SAAQ,UAAS,UAAS,WAAU,QAAO,SAAQ,UAAS,QAAO,SAAQ,UAAS,UAAS,QAAO,SAAQ,SAAQ,WAAU,UAAS,WAAU,YAAW,SAAQ,QAAO,SAAQ,UAAS,SAAQ,YAAW,SAAQ,UAAS,YAAW,WAAU,aAAY,aAAY,SAAQ,QAAO,SAAQ,YAAW,QAAO,WAAU,OAAM,QAAO,SAAQ,UAAS,SAAQ,YAAW,QAAO,WAAU,SAAQ,WAAU,QAAO,SAAQ,UAAS,WAAU,QAAO,SAAQ,UAAS,SAAQ,QAAO,SAAQ,WAAU,WAAU,WAAU,YAAW,YAAW,SAAQ,YAAW,UAAS,WAAU,YAAW,YAAW,UAAS,UAAS,WAAU,UAAS,QAAO,WAAU,SAAQ,SAAQ,UAAS,WAAU,WAAU,WAAU,SAAQ,SAAQ,SAAQ,QAAO,SAAQ,OAAM,QAAO,SAAQ,SAAQ,UAAS,WAAU,WAAU,YAAW,QAAO,YAAW,QAAO,WAAU,QAAO,SAAQ,UAAS,UAAS,WAAU,WAAU,SAAQ,SAAQ,UAAS,UAAS,WAAU,YAAW,WAAU,SAAQ,SAAQ,SAAQ,QAAO,aAAY,WAAU,YAAW,QAAO,SAAQ,SAAQ,SAAQ,UAAS,QAAO,SAAQ,SAAQ,SAAQ,YAAW,SAAQ,UAAS,UAAS,YAAW,UAAS,WAAU,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,YAAW,YAAW,SAAQ,UAAS,UAAS,SAAQ,SAAQ,UAAS,UAAS,YAAW,YAAW,UAAS,SAAQ,UAAS,UAAS,SAAQ,QAAO,SAAQ,WAAU,SAAQ,SAAQ,QAAO,aAAY,UAAS,SAAQ,UAAS,UAAS,OAAM,QAAO,WAAU,QAAO,SAAQ,YAAW,YAAW,SAAQ,QAAO,SAAQ,aAAY,aAAY,YAAW,SAAQ,aAAY,aAAY,YAAW,SAAQ,UAAS,YAAW,WAAU,YAAW,WAAU,YAAW,SAAQ,UAAS,QAAO,SAAQ,UAAS,UAAS,WAAU,WAAU,UAAS,WAAU,WAAU,YAAW,SAAQ,UAAS,YAAW,WAAU,QAAO,SAAQ,OAAM,UAAS,QAAO,SAAQ,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,UAAS,SAAQ,UAAS,UAAS,WAAU,WAAU,SAAQ,YAAW,UAAS,SAAQ,SAAQ,UAAS,UAAS,SAAQ,QAAO,WAAU,YAAW,SAAQ,UAAS,WAAU,UAAS,SAAQ,WAAU,UAAS,UAAS,UAAS,WAAU,SAAQ,UAAS,SAAQ,UAAS,SAAQ,MAAK,QAAO,QAAO,SAAQ,YAAW,WAAU,SAAQ,OAAM,aAAY,aAAY,YAAW,YAAW,aAAY,UAAS,SAAQ,UAAS,SAAQ,SAAQ,OAAM,QAAO,UAAS,SAAQ,QAAO,UAAS,UAAS,SAAQ,QAAO,WAAU,YAAW,UAAS,WAAU,WAAU,UAAS,WAAU,UAAS,OAAM,SAAQ,UAAS,SAAQ,UAAS,UAAS,SAAQ,WAAU,YAAW,aAAY,aAAY,OAAM,QAAO,SAAQ,WAAU,WAAU,QAAO,WAAU,SAAQ,WAAU,QAAO,SAAQ,UAAS,UAAS,SAAQ,QAAO,WAAU,UAAS,UAAS,WAAU,WAAU,UAAS,WAAU,WAAU,UAAS,YAAW,WAAU,YAAW,YAAW,UAAS,WAAU,UAAS,WAAU,aAAY,WAAU,YAAW,QAAO,QAAO,SAAQ,SAAQ,UAAS,UAAS,OAAM,WAAU,WAAU,SAAQ,SAAQ,SAAQ,QAAO,WAAU,YAAW,SAAQ,UAAS,QAAO,SAAQ,QAAO,WAAU,SAAQ,QAAO,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,QAAO,WAAU,QAAO,UAAS,UAAS,UAAS,WAAU,QAAO,WAAU,YAAW,SAAQ,WAAU,WAAU,WAAU,SAAQ,YAAW,UAAS,YAAW,SAAQ,UAAS,WAAU,UAAS,YAAW,UAAS,WAAU,WAAU,YAAW,YAAW,SAAQ,aAAY,WAAU,UAAS,UAAS,UAAS,WAAU,WAAU,UAAS,WAAU,WAAU,SAAQ,SAAQ,UAAS,OAAM,QAAO,WAAU,SAAQ,UAAS,UAAS,WAAU,UAAS,QAAO,OAAM,UAAS,WAAU,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,SAAQ,QAAO,SAAQ,UAAS,SAAQ,UAAS,UAAS,QAAO,SAAQ,UAAS,SAAQ,QAAO,SAAQ,WAAU,SAAQ,SAAQ,UAAS,UAAS,WAAU,UAAS,SAAQ,WAAU,SAAQ,YAAW,SAAQ,YAAW,UAAS,WAAU,WAAU,YAAW,YAAW,SAAQ,UAAS,UAAS,SAAQ,UAAS,SAAQ,SAAQ,QAAO,UAAS,WAAU,WAAU,WAAU,WAAU,SAAQ,SAAQ,UAAS,SAAQ,QAAO,SAAQ,UAAS,SAAQ,QAAO,SAAQ,UAAS,OAAM,QAAO,SAAQ,SAAQ,UAAS,UAAS,OAAM,UAAS,SAAQ,UAAS,SAAQ,SAAQ,QAAO,SAAQ,SAAQ,OAAM,QAAO,SAAQ,SAAQ,SAAQ,UAAS,WAAU,UAAS,UAAS,SAAQ,SAAQ,WAAU,UAAS,WAAU,SAAQ,QAAO,UAAS,OAAM,QAAO,QAAO,SAAQ,SAAQ,UAAS,WAAU,WAAU,UAAS,SAAQ,SAAQ,UAAS,SAAQ,WAAU,QAAO,UAAS,WAAU,UAAS,UAAS,SAAQ,QAAO,QAAO,YAAW,WAAU,QAAO,WAAU,WAAU,SAAQ,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,QAAO,SAAQ,OAAM,QAAO,SAAQ,UAAS,SAAQ,UAAS,QAAO,OAAM,QAAO,YAAW,WAAU,WAAU,UAAS,SAAQ,UAAS,QAAO,SAAQ,QAAO,UAAS,UAAS,SAAQ,QAAO,SAAQ,QAAO,SAAQ,SAAQ,UAAS,QAAO,UAAS,WAAU,WAAU,WAAU,WAAU,SAAQ,UAAS,WAAU,WAAU,SAAQ,UAAS,UAAS,WAAU,WAAU,WAAU,QAAO,SAAQ,YAAW,YAAW,SAAQ,WAAU,WAAU,WAAU,UAAS,UAAS,SAAQ,SAAQ,YAAW,YAAW,SAAQ,UAAS,UAAS,SAAQ,QAAO,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,OAAM,WAAU,UAAS,UAAS,aAAY,YAAW,MAAK,QAAO,QAAO,SAAQ,WAAU,SAAQ,YAAW,UAAS,WAAU,WAAU,UAAS,WAAU,UAAS,UAAS,SAAQ,YAAW,QAAO,YAAW,UAAS,UAAS,SAAQ,SAAQ,QAAO,UAAS,QAAO,QAAO,WAAU,WAAU,WAAU,WAAU,QAAO,OAAM,QAAO,SAAQ,SAAQ,OAAM,SAAQ,SAAQ,UAAS,WAAU,WAAU,WAAU,WAAU,SAAQ,SAAQ,WAAU,UAAS,WAAU,QAAO,SAAQ,SAAQ,UAAS,WAAU,YAAW,UAAS,WAAU,YAAW,UAAS,SAAQ,OAAM,SAAQ,WAAU,SAAQ,QAAO,YAAW,WAAU,aAAY,SAAQ,UAAS,SAAQ,SAAQ,aAAY,aAAY,YAAW,YAAW,WAAU,YAAW,YAAW,WAAU,WAAU,WAAU,WAAU,SAAQ,UAAS,UAAS,WAAU,QAAO,OAAM,UAAS,OAAM,SAAQ,WAAU,YAAW,aAAY,aAAY,UAAS,SAAQ,UAAS,SAAQ,UAAS,WAAU,QAAO,UAAS,SAAQ,aAAY,QAAO,SAAQ,UAAS,UAAS,YAAW,QAAO,WAAU,UAAS,SAAQ,UAAS,WAAU,WAAU,WAAU,YAAW,YAAW,YAAW,WAAU,WAAU,UAAS,SAAQ,WAAU,WAAU,QAAO,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,QAAO,WAAU,WAAU,YAAW,YAAW,YAAW,cAAa,cAAa,aAAY,SAAQ,UAAS,UAAS,WAAU,YAAW,SAAQ,UAAS,SAAQ,UAAS,WAAU,SAAQ,YAAW,WAAU,YAAW,aAAY,aAAY,cAAa,cAAa,cAAa,cAAa,aAAY,WAAU,SAAQ,YAAW,WAAU,UAAS,YAAW,SAAQ,UAAS,UAAS,SAAQ,UAAS,WAAU,cAAa,SAAQ,QAAO,SAAQ,UAAS,UAAS,WAAU,WAAU,YAAW,YAAW,WAAU,aAAY,YAAW,UAAS,WAAU,SAAQ,aAAY,gBAAe,YAAW,eAAc,UAAS,WAAU,YAAW,aAAY,YAAW,YAAW,YAAW,UAAS,UAAS,WAAU,WAAU,YAAW,WAAU,SAAQ,UAAS,WAAU,UAAS,cAAa,SAAQ,UAAS,WAAU,WAAU,UAAS,WAAU,UAAS,QAAO,SAAQ,SAAQ,SAAQ,UAAS,YAAW,WAAU,SAAQ,WAAU,SAAQ,WAAU,WAAU,UAAS,WAAU,WAAU,WAAU,UAAS,UAAS,WAAU,SAAQ,UAAS,SAAQ,SAAQ,UAAS,SAAQ,UAAS,UAAS,YAAW,YAAW,UAAS,YAAW,UAAS,aAAY,SAAQ,YAAW,eAAc,UAAS,UAAS,YAAW,SAAQ,WAAU,UAAS,WAAU,WAAU,SAAQ,YAAW,QAAO,SAAQ,WAAU,YAAW,YAAW,aAAY,YAAW,aAAY,YAAW,UAAS,SAAQ,WAAU,WAAU,aAAY,WAAU,aAAY,YAAW,SAAQ,UAAS,SAAQ,WAAU,YAAW,YAAW,WAAU,WAAU,SAAQ,UAAS,SAAQ,QAAO,SAAQ,UAAS,SAAQ,SAAQ,WAAU,YAAW,WAAU,WAAU,WAAU,WAAU,YAAW,SAAQ,SAAQ,OAAM,QAAO,SAAQ,UAAS,QAAO,OAAM,YAAW,QAAO,QAAO,SAAQ,UAAS,WAAU,SAAQ,YAAW,OAAM,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,UAAS,WAAU,aAAY,OAAM,OAAM,QAAO,WAAU,WAAU,WAAU,YAAW,UAAS,SAAQ,UAAS,WAAU,YAAW,UAAS,WAAU,WAAU,UAAS,aAAY,cAAa,aAAY,YAAW,WAAU,WAAU,UAAS,WAAU,SAAQ,SAAQ,aAAY,UAAS,WAAU,aAAY,YAAW,SAAQ,WAAU,WAAU,UAAS,WAAU,UAAS,UAAS,SAAQ,YAAW,SAAQ,UAAS,SAAQ,YAAW,aAAY,WAAU,YAAW,UAAS,WAAU,WAAU,SAAQ,WAAU,QAAO,SAAQ,SAAQ,WAAU,WAAU,SAAQ,UAAS,YAAW,YAAW,UAAS,aAAY,WAAU,YAAW,WAAU,WAAU,WAAU,SAAQ,UAAS,SAAQ,QAAO,OAAM,WAAU,YAAW,cAAa,cAAa,aAAY,UAAS,UAAS,WAAU,aAAY,aAAY,WAAU,YAAW,SAAQ,UAAS,SAAQ,SAAQ,UAAS,YAAW,WAAU,aAAY,WAAU,OAAM,WAAU,WAAU,UAAS,YAAW,aAAY,SAAQ,SAAQ,aAAY,UAAS,aAAY,SAAQ,UAAS,QAAO,OAAM,QAAO,SAAQ,SAAQ,WAAU,WAAU,WAAU,SAAQ,eAAc,SAAQ,SAAQ,UAAS,WAAU,SAAQ,SAAQ,WAAU,QAAO,WAAU,aAAY,aAAY,SAAQ,WAAU,aAAY,YAAW,WAAU,WAAU,UAAS,WAAU,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,SAAQ,WAAU,YAAW,aAAY,WAAU,SAAQ,SAAQ,QAAO,UAAS,SAAQ,UAAS,SAAQ,SAAQ,QAAO,SAAQ,UAAS,UAAS,WAAU,QAAO,UAAS,UAAS,UAAS,WAAU,aAAY,YAAW,UAAS,SAAQ,WAAU,SAAQ,WAAU,SAAQ,SAAQ,WAAU,UAAS,QAAO,aAAY,SAAQ,UAAS,UAAS,UAAS,YAAW,QAAO,SAAQ,WAAU,UAAS,WAAU,SAAQ,WAAU,SAAQ,SAAQ,UAAS,WAAU,UAAS,UAAS,QAAO,UAAS,UAAS,SAAQ,UAAS,UAAS,QAAO,SAAQ,UAAS,OAAM,QAAO,WAAU,SAAQ,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,WAAU,QAAO,UAAS,UAAS,YAAW,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,SAAQ,QAAO,QAAO,UAAS,OAAM,QAAO,UAAS,WAAU,WAAU,YAAW,YAAW,WAAU,WAAU,YAAW,YAAW,YAAW,aAAY,SAAQ,SAAQ,SAAQ,QAAO,SAAQ,QAAO,SAAQ,SAAQ,SAAQ,UAAS,UAAS,SAAQ,SAAQ,QAAO,SAAQ,SAAQ,UAAS,SAAQ,WAAU,UAAS,QAAO,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,SAAQ,UAAS,UAAS,SAAQ,SAAQ,SAAQ,UAAS,WAAU,YAAW,SAAQ,UAAS,SAAQ,SAAQ,UAAS,UAAS,WAAU,aAAY,UAAS,YAAW,YAAW,WAAU,YAAW,QAAO,QAAO,SAAQ,UAAS,aAAY,WAAU,QAAO,WAAU,WAAU,YAAW,YAAW,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,QAAO,SAAQ,SAAQ,QAAO,WAAU,SAAQ,UAAS,UAAS,WAAU,UAAS,SAAQ,QAAO,UAAS,SAAQ,UAAS,QAAO,QAAO,SAAQ,QAAO,SAAQ,SAAQ,UAAS,QAAO,SAAQ,UAAS,UAAS,UAAS,UAAS,UAAS,SAAQ,SAAQ,UAAS,SAAQ,WAAU,SAAQ,SAAQ,WAAU,SAAQ,UAAS,YAAW,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,OAAM,UAAS,QAAO,QAAO,WAAU,SAAQ,YAAW,UAAS,UAAS,QAAO,SAAQ,QAAO,QAAO,SAAQ,UAAS,WAAU,WAAU,UAAS,UAAS,SAAQ,QAAO,QAAO,WAAU,WAAU,WAAU,WAAU,OAAM,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,UAAS,UAAS,QAAO,QAAO,UAAS,YAAW,QAAO,WAAU,WAAU,WAAU,WAAU,WAAU,QAAO,SAAQ,UAAS,OAAM,UAAS,YAAW,WAAU,SAAQ,UAAS,SAAQ,WAAU,UAAS,SAAQ,SAAQ,WAAU,YAAW,OAAM,YAAW,WAAU,WAAU,YAAW,YAAW,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,YAAW,YAAW,SAAQ,UAAS,WAAU,WAAU,WAAU,SAAQ,SAAQ,SAAQ,SAAQ,UAAS,UAAS,YAAW,OAAM,UAAS,SAAQ,UAAS,SAAQ,OAAM,YAAW,YAAW,SAAQ,UAAS,SAAQ,QAAO,UAAS,QAAO,SAAQ,QAAO,SAAQ,SAAQ,SAAQ,WAAU,SAAQ,UAAS,OAAM,QAAO,SAAQ,WAAU,cAAa,YAAW,cAAa,cAAa,WAAU,WAAU,WAAU,SAAQ,UAAS,UAAS,QAAO,WAAU,YAAW,YAAW,cAAa,UAAS,YAAW,WAAU,WAAU,UAAS,aAAY,UAAS,UAAS,YAAW,WAAU,WAAU,UAAS,OAAM,QAAO,YAAW,aAAY,UAAS,SAAQ,SAAQ,SAAQ,SAAQ,aAAY,QAAO,SAAQ,UAAS,QAAO,UAAS,aAAY,aAAY,WAAU,OAAM,YAAW,SAAQ,SAAQ,QAAO,WAAU,WAAU,WAAU,SAAQ,UAAS,YAAW,aAAY,YAAW,WAAU,UAAS,WAAU,YAAW,OAAM,UAAS,OAAM,QAAO,WAAU,YAAW,aAAY,SAAQ,SAAQ,SAAQ,SAAQ,SAAQ,UAAS,UAAS,WAAU,QAAO,SAAQ,UAAS,WAAU,SAAQ,UAAS,SAAQ,SAAQ,QAAO,SAAQ,UAAS,WAAU,SAAQ,YAAW,UAAS,WAAU,SAAQ,SAAQ,SAAQ,OAAM,WAAU,QAAO,SAAQ,WAAU,YAAW,OAAM,QAAO,YAAW,QAAO,UAAS,WAAU,WAAU,UAAS,WAAU,YAAW,OAAM,SAAQ,SAAQ,SAAQ,SAAQ,SAAQ,SAAQ,UAAS,UAAS,UAAS,SAAQ,SAAQ,SAAQ,QAAO,QAAO,SAAQ,UAAS,UAAS,QAAO,SAAQ,UAAS,WAAU,SAAQ,UAAS,QAAO,SAAQ,UAAS,OAAM,SAAQ,QAAO,SAAQ,SAAQ,UAAS,WAAU,WAAU,WAAU,SAAQ,UAAS,UAAS,SAAQ,SAAQ,UAAS,SAAQ,WAAU,UAAS,QAAO,SAAQ,QAAO,SAAQ,UAAS,SAAQ,QAAO,SAAQ,QAAO,QAAO,QAAO,QAAO,WAAU,QAAO,UAAS,QAAO,SAAQ,UAAS,UAAS,SAAQ,UAAS,UAAS,SAAQ,UAAS,UAAS,WAAU,WAAU,SAAQ,UAAS,WAAU,YAAW,aAAY,aAAY,WAAU,QAAO,SAAQ,QAAO,WAAU,YAAW,YAAW,YAAW,QAAO,QAAO,SAAQ,UAAS,QAAO,UAAS,UAAS,WAAU,QAAO,QAAO,WAAU,SAAQ,UAAS,SAAQ,SAAQ,WAAU,UAAS,SAAQ,WAAU,QAAO,QAAO,SAAQ,QAAO,OAAM,QAAO,WAAU,aAAY,aAAY,YAAW,WAAU,WAAU,YAAW,aAAY,aAAY,YAAW,WAAU,YAAW,YAAW,YAAW,UAAS,WAAU,WAAU,QAAO,WAAU,YAAW,YAAW,WAAU,WAAU,YAAW,WAAU,WAAU,aAAY,aAAY,YAAW,aAAY,UAAS,WAAU,WAAU,YAAW,SAAQ,UAAS,UAAS,UAAS,YAAW,QAAO,OAAM,QAAO,UAAS,UAAS,UAAS,WAAU,WAAU,QAAO,SAAQ,UAAS,QAAO,OAAM,WAAU,WAAU,YAAW,WAAU,WAAU,QAAO,UAAS,WAAU,WAAU,UAAS,WAAU,QAAO,SAAQ,SAAQ,UAAS,QAAO,WAAU,QAAO,WAAU,YAAW,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,QAAO,UAAS,UAAS,SAAQ,WAAU,SAAQ,QAAO,WAAU,SAAQ,SAAQ,UAAS,OAAM,WAAU,UAAS,SAAQ,UAAS,SAAQ,YAAW,aAAY,UAAS,UAAS,UAAS,OAAM,YAAW,UAAS,WAAU,SAAQ,SAAQ,SAAQ,UAAS,UAAS,SAAQ,UAAS,YAAW,YAAW,QAAO,YAAW,WAAU,SAAQ,YAAW,SAAQ,UAAS,UAAS,WAAU,QAAO,UAAS,UAAS,UAAS,UAAS,SAAQ,YAAW,UAAS,WAAU,UAAS,SAAQ,WAAU,YAAW,QAAO,SAAQ,QAAO,QAAO,UAAS,UAAS,aAAY,SAAQ,SAAQ,UAAS,WAAU,UAAS,SAAQ,SAAQ,SAAQ,QAAO,WAAU,UAAS,UAAS,QAAO,UAAS,UAAS,UAAS,UAAS,SAAQ,UAAS,WAAU,aAAY,WAAU,WAAU,UAAS,SAAQ,SAAQ,UAAS,UAAS,WAAU,WAAU,WAAU,UAAS,UAAS,WAAU,SAAQ,UAAS,SAAQ,UAAS,WAAU,SAAQ,UAAS,YAAW,YAAW,YAAW,UAAS,WAAU,WAAU,UAAS,SAAQ,UAAS,SAAQ,UAAS,WAAU,QAAO,UAAS,WAAU,WAAU,YAAW,UAAS,UAAS,QAAO,SAAQ,UAAS,YAAW,WAAU,UAAS,WAAU,UAAS,kBAAiB,WAAU,QAAO,SAAQ,WAAU,UAAS,UAAS,UAAS,UAAS,SAAQ,WAAU,UAAS,WAAU,UAAS,SAAQ,QAAO,UAAS,SAAQ,UAAS,WAAU,YAAW,YAAW,UAAS,WAAU,UAAS,UAAS,UAAS,SAAQ,QAAO,SAAQ,WAAU,YAAW,YAAW,WAAU,YAAW,YAAW,aAAY,SAAQ,UAAS,OAAM,UAAS,SAAQ,UAAS,SAAQ,WAAU,WAAU,WAAU,UAAS,SAAQ,WAAU,WAAU,WAAU,WAAU,YAAW,UAAS,QAAO,UAAS,SAAQ,WAAU,UAAS,UAAS,UAAS,UAAS,aAAY,WAAU,UAAS,WAAU,SAAQ,WAAU,UAAS,UAAS,UAAS,SAAQ,UAAS,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,UAAS,WAAU,SAAQ,SAAQ,UAAS,SAAQ,UAAS,UAAS,aAAY,UAAS,WAAU,SAAQ,UAAS,UAAS,SAAQ,UAAS,UAAS,SAAQ,WAAU,QAAO,UAAS,YAAW,WAAU,SAAQ,SAAQ,YAAW,YAAW,YAAW,UAAS,WAAU,UAAS,UAAS,YAAW,YAAW,aAAY,cAAa,aAAY,UAAS,WAAU,YAAW,UAAS,WAAU,WAAU,YAAW,SAAQ,UAAS,WAAU,UAAS,OAAM,WAAU,SAAQ,QAAO,QAAO,SAAQ,YAAW,SAAQ,UAAS,aAAY,UAAS,WAAU,YAAW,WAAU,WAAU,QAAO,SAAQ,QAAO,UAAS,WAAU,WAAU,WAAU,QAAO,SAAQ,QAAO,SAAQ,UAAS,WAAU,WAAU,SAAQ,SAAQ,WAAU,UAAS,UAAS,WAAU,YAAW,SAAQ,UAAS,YAAW,SAAQ,UAAS,WAAU,SAAQ,SAAQ,UAAS,UAAS,UAAS,YAAW,SAAQ,SAAQ,UAAS,SAAQ,UAAS,WAAU,WAAU,UAAS,QAAO,UAAS,SAAQ,WAAU,SAAQ,UAAS,SAAQ,WAAU,SAAQ,QAAO,SAAQ,UAAS,SAAQ,UAAS,QAAO,SAAQ,aAAY,SAAQ,SAAQ,QAAO,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,QAAO,WAAU,YAAW,SAAQ,UAAS,UAAS,OAAM,SAAQ,SAAQ,UAAS,SAAQ,QAAO,SAAQ,SAAQ,WAAU,WAAU,QAAO,UAAS,UAAS,YAAW,YAAW,WAAU,QAAO,WAAU,SAAQ,SAAQ,UAAS,WAAU,SAAQ,UAAS,WAAU,SAAQ,QAAO,SAAQ,SAAQ,UAAS,SAAQ,UAAS,QAAO,YAAW,SAAQ,UAAS,UAAS,QAAO,YAAW,aAAY,WAAU,WAAU,aAAY,aAAY,YAAW,WAAU,QAAO,WAAU,YAAW,aAAY,aAAY,SAAQ,WAAU,WAAU,QAAO,WAAU,YAAW,WAAU,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,UAAS,SAAQ,OAAM,QAAO,SAAQ,UAAS,SAAQ,YAAW,QAAO,QAAO,WAAU,YAAW,WAAU,QAAO,SAAQ,QAAO,SAAQ,QAAO,QAAO,SAAQ,YAAW,QAAO,YAAW,YAAW,QAAO,SAAQ,UAAS,SAAQ,QAAO,SAAQ,SAAQ,QAAO,SAAQ,SAAQ,WAAU,SAAQ,QAAO,SAAQ,UAAS,QAAO,QAAO,QAAO,UAAS,UAAS,SAAQ,UAAS,SAAQ,UAAS,SAAQ,WAAU,UAAS,UAAS,SAAQ,SAAQ,UAAS,UAAS,QAAO,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,UAAS,SAAQ,SAAQ,WAAU,SAAQ,SAAQ,QAAO,SAAQ,QAAO,OAAM,QAAO,UAAS,UAAS,eAAc,UAAS,SAAQ,OAAM,QAAO,UAAS,UAAS,UAAS,YAAW,YAAW,OAAM,OAAM,WAAU,WAAU,QAAO,UAAS,YAAW,UAAS,WAAU,YAAW,aAAY,aAAY,UAAS,WAAU,WAAU,UAAS,WAAU,UAAS,UAAS,SAAQ,UAAS,SAAQ,SAAQ,SAAQ,OAAM,SAAQ,WAAU,SAAQ,SAAQ,SAAQ,UAAS,SAAQ,SAAQ,QAAO,SAAQ,UAAS,U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f,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA,MAChB,IAAI,MAAM,KAAK;AAAA,MACf,IAAI,MAAM,OAAO;AAAA,MACjB,IAAI,KAAK,EAAE,KAAK;AAAA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AK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,G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K,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KA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I;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACrD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IACpD;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IACrD;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACpD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,EACvD;AAAA,EAEA,IAAI,KAAK;AAAA,IACP;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACrD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IACpD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;A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F;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK;AAAA,MACH,KAAK;AAAA,MACL,QAAQ;AAAA,QACN;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;;;;ECzwBA,IAAI,SAA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AAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAClC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,MAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MACpC,KAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;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",
  "debugId": "919E5D09308269D664756E2164756E21",
  "names": []
}