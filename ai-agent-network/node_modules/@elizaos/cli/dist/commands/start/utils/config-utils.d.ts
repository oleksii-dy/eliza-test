import { RuntimeSettings } from '@elizaos/core';
/**
 * Load environment configuration for runtime
 *
 * Loads environment variables from the project's .env file and returns them as runtime settings.
 */
export declare function loadEnvConfig(): Promise<RuntimeSettings>;
/**
 * Validates if a character has secrets configured
 * @param character - Character configuration object
 * @returns boolean - true if character has secrets, false otherwise
 */
export declare function hasCharacterSecrets(character: any): boolean;
/**
 * Ensures character has a settings object
 * @param character - Character configuration object
 */
export declare function ensureCharacterSettings(character: any): void;
/**
 * Loads secrets from local .env file
 * @returns Promise<Record<string, string> | null> - env vars or null if no .env found
 */
export declare function loadLocalEnvSecrets(): Promise<Record<string, string> | null>;
/**
 * Sets default secrets from local .env if character doesn't have any
 * @param character - Character configuration object
 * @returns Promise<boolean> - true if secrets were added, false otherwise
 */
export declare function setDefaultSecretsFromEnv(character: any): Promise<boolean>;
//# sourceMappingURL=config-utils.d.ts.map