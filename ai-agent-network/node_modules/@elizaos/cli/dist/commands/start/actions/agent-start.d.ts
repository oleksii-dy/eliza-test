import { type Character, type IAgentRuntime, type Plugin } from '@elizaos/core';
import { AgentServer } from '@elizaos/server';
import { AgentStartOptions } from '../types';
/**
 * Start an agent with the given configuration
 *
 * Creates and initializes an agent runtime with plugins, handles dependency resolution, runs database migrations, and registers the agent with the server.
 */
export declare function startAgent(character: Character, server: AgentServer, init?: (runtime: IAgentRuntime) => Promise<void>, plugins?: (Plugin | string)[], options?: AgentStartOptions): Promise<IAgentRuntime>;
/**
 * Stop an agent and unregister it from the server
 */
export declare function stopAgent(runtime: IAgentRuntime, server: AgentServer): Promise<void>;
//# sourceMappingURL=agent-start.d.ts.map